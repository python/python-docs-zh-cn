# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2025
# 宋彥筠, 2025
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.13\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-05-16 14:58+0000\n"
"PO-Revision-Date: 2025-05-08 05:09+0000\n"
"Last-Translator: 宋彥筠, 2025\n"
"Language-Team: Chinese (China) (https://app.transifex.com/python-doc/teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../deprecations/pending-removal-in-3.15.rst:2
msgid "Pending Removal in Python 3.15"
msgstr "Python 3.15 中的待移除功能"

#: ../../deprecations/pending-removal-in-3.15.rst:4
msgid "The import system:"
msgstr "导入系统："

#: ../../deprecations/pending-removal-in-3.15.rst:6
msgid ""
"Setting :attr:`~module.__cached__` on a module while failing to set "
":attr:`__spec__.cached <importlib.machinery.ModuleSpec.cached>` is "
"deprecated. In Python 3.15, :attr:`!__cached__` will cease to be set or take"
" into consideration by the import system or standard library. (:gh:`97879`)"
msgstr ""
"当设置 :attr:`__spec__.cached <importlib.machinery.ModuleSpec.cached>` "
"失败时在模块上设置 :attr:`~module.__cached__` 的做法已被弃用。 在 Python 3.15 "
"中，:attr:`!__cached__` 将不会再被导入系统或标准库纳入考虑。 (:gh:`97879`)"

#: ../../deprecations/pending-removal-in-3.15.rst:11
msgid ""
"Setting :attr:`~module.__package__` on a module while failing to set "
":attr:`__spec__.parent <importlib.machinery.ModuleSpec.parent>` is "
"deprecated. In Python 3.15, :attr:`!__package__` will cease to be set or "
"take into consideration by the import system or standard library. "
"(:gh:`97879`)"
msgstr ""
"当设备 :attr:`__spec__.parent <importlib.machinery.ModuleSpec.parent>` "
"失败时在模块上设置 :attr:`~module.__package__` 的做法已被弃用。 在 Python 3.15 "
"中，:attr:`!__package__` 将不会再被导入系统或标准库纳入考虑。 (:gh:`97879`)"

#: ../../deprecations/pending-removal-in-3.15.rst:16
msgid ":mod:`ctypes`:"
msgstr ":mod:`ctypes`:"

#: ../../deprecations/pending-removal-in-3.15.rst:18
msgid ""
"The undocumented :func:`!ctypes.SetPointerType` function has been deprecated"
" since Python 3.13."
msgstr "未写入文档的 :func:`!ctypes.SetPointerType` 函数自 Python 3.13 起已被弃用。"

#: ../../deprecations/pending-removal-in-3.15.rst:21
msgid ":mod:`http.server`:"
msgstr ":mod:`http.server`:"

#: ../../deprecations/pending-removal-in-3.15.rst:23
msgid ""
"The obsolete and rarely used :class:`~http.server.CGIHTTPRequestHandler` has"
" been deprecated since Python 3.13. No direct replacement exists. *Anything*"
" is better than CGI to interface a web server with a request handler."
msgstr ""
"过时且很少被使用的 :class:`~http.server.CGIHTTPRequestHandler` 自 Python 3.13 起已被弃用。 "
"不存在直接的替代品。 对于建立带有请求处理器的 Web 服务程序来说 *任何东西* 都比 CGI 要好。"

#: ../../deprecations/pending-removal-in-3.15.rst:29
msgid ""
"The :option:`!--cgi` flag to the :program:`python -m http.server` command-"
"line interface has been deprecated since Python 3.13."
msgstr ""
"用于 :program:`python -m http.server` 命令行界面的 :option:`!--cgi` 旗标自 Python 3.13 "
"起已被弃用。"

#: ../../deprecations/pending-removal-in-3.15.rst:32
msgid ":mod:`importlib`:"
msgstr ":mod:`importlib`:"

#: ../../deprecations/pending-removal-in-3.15.rst:34
msgid "``load_module()`` method: use ``exec_module()`` instead."
msgstr "``load_module()`` 方法：改用 ``exec_module()``。"

#: ../../deprecations/pending-removal-in-3.15.rst:36
msgid ":class:`locale`:"
msgstr ":class:`locale`:"

#: ../../deprecations/pending-removal-in-3.15.rst:38
msgid ""
"The :func:`~locale.getdefaultlocale` function has been deprecated since "
"Python 3.11. Its removal was originally planned for Python 3.13 "
"(:gh:`90817`), but has been postponed to Python 3.15. Use "
":func:`~locale.getlocale`, :func:`~locale.setlocale`, and "
":func:`~locale.getencoding` instead. (Contributed by Hugo van Kemenade in "
":gh:`111187`.)"
msgstr ""
":func:`~locale.getdefaultlocale` 函数自 Python 3.11 起已被弃用。 最初计划在 Python 3.13 "
"中移除它 (:gh:`90817`)，但已被推迟至 Python 3.15。 请改用 :func:`~locale.getlocale`, "
":func:`~locale.setlocale` 和 :func:`~locale.getencoding`。 （由 Hugo van "
"Kemenade 在 :gh:`111187` 中贡献。）"

#: ../../deprecations/pending-removal-in-3.15.rst:46
msgid ":mod:`pathlib`:"
msgstr ":mod:`pathlib`:"

#: ../../deprecations/pending-removal-in-3.15.rst:48
msgid ""
":meth:`.PurePath.is_reserved` has been deprecated since Python 3.13. Use "
":func:`os.path.isreserved` to detect reserved paths on Windows."
msgstr ""
":meth:`.PurePath.is_reserved` 自 Python 3.13 起已被弃用。 请使用 "
":func:`os.path.isreserved` 来检测 Windows 上的保留路径。"

#: ../../deprecations/pending-removal-in-3.15.rst:52
msgid ":mod:`platform`:"
msgstr ":mod:`platform`:"

#: ../../deprecations/pending-removal-in-3.15.rst:54
msgid ""
":func:`~platform.java_ver` has been deprecated since Python 3.13. This "
"function is only useful for Jython support, has a confusing API, and is "
"largely untested."
msgstr ""
":func:`~platform.java_ver` 自 Python 3.13 起已被弃用。 此函数仅对 Jython 支持有用，具有令人困惑的 "
"API，并且大部分未经测试。"

#: ../../deprecations/pending-removal-in-3.15.rst:58
msgid ":mod:`sysconfig`:"
msgstr ":mod:`sysconfig`:"

#: ../../deprecations/pending-removal-in-3.15.rst:60
msgid ""
"The *check_home* argument of :func:`sysconfig.is_python_build` has been "
"deprecated since Python 3.12."
msgstr ""
":func:`sysconfig.is_python_build` 的 *check_home* 参数自 Python 3.12 起已被弃用。"

#: ../../deprecations/pending-removal-in-3.15.rst:63
msgid ":mod:`threading`:"
msgstr ":mod:`threading`:"

#: ../../deprecations/pending-removal-in-3.15.rst:65
msgid ""
":func:`~threading.RLock` will take no arguments in Python 3.15. Passing any "
"arguments has been deprecated since Python 3.14, as the  Python version does"
" not permit any arguments, but the C version allows any number of positional"
" or keyword arguments, ignoring every argument."
msgstr ""
"在 Python 3.15 中 :func:`~threading.RLock` 将不再接受参数。 传入参数的做法自 Python 3.14 "
"起已被弃用，因为 Python 版本不接受任何参数，而 C 版本允许任意数量的位置或关键字参数，但会忽略所有参数。"

#: ../../deprecations/pending-removal-in-3.15.rst:71
msgid ":mod:`types`:"
msgstr ":mod:`types`:"

#: ../../deprecations/pending-removal-in-3.15.rst:73
msgid ""
":class:`types.CodeType`: Accessing :attr:`~codeobject.co_lnotab` was "
"deprecated in :pep:`626` since 3.10 and was planned to be removed in 3.12, "
"but it only got a proper :exc:`DeprecationWarning` in 3.12. May be removed "
"in 3.15. (Contributed by Nikita Sobolev in :gh:`101866`.)"
msgstr ""
":class:`types.CodeType`: 访问 :attr:`~codeobject.co_lnotab` 的做法自 3.10 起已根据 "
":pep:`626` 被弃用并曾计划在 3.12 中移除，但在 3.12 中实际仅设置了 :exc:`DeprecationWarning`。 可能会在"
" 3.15 中移除。 （由 Nikita Sobolev 在 :gh:`101866` 中贡献。）"

#: ../../deprecations/pending-removal-in-3.15.rst:80
msgid ":mod:`typing`:"
msgstr ":mod:`typing`:"

#: ../../deprecations/pending-removal-in-3.15.rst:82
msgid ""
"The undocumented keyword argument syntax for creating "
":class:`~typing.NamedTuple` classes (e.g. ``Point = NamedTuple(\"Point\", "
"x=int, y=int)``) has been deprecated since Python 3.13. Use the class-based "
"syntax or the functional syntax instead."
msgstr ""
"未写入文档的用于创建 :class:`~typing.NamedTuple` 类的关键字参数语法 (例如 ``Point = "
"NamedTuple(\"Point\", x=int, y=int)``) 自 Python 3.13 起已被弃用。 请改用基于类的语法或函数语法。"

#: ../../deprecations/pending-removal-in-3.15.rst:88
msgid ""
"When using the functional syntax of :class:`~typing.TypedDict`\\s, failing "
"to pass a value to the *fields* parameter (``TD = TypedDict(\"TD\")``) or "
"passing ``None`` (``TD = TypedDict(\"TD\", None)``) has been deprecated "
"since Python 3.13. Use ``class TD(TypedDict): pass`` or ``TD = "
"TypedDict(\"TD\", {})`` to create a TypedDict with zero field."
msgstr ""
"在使用 :class:`~typing.TypedDict` 的函数式语法时，如果没有给 fields 参数传值（如 ``TD = "
"TypedDict(\"TD\")``）或传入 ``None``（如 ``TD = TypedDict(\"TD\", None)``），该用法自 "
"Python 3.13 起被弃用。如果要创建空字段的 TypedDict，应当改用 ``class TD(TypedDict): pass``或 "
"``TD = TypedDict(\"TD\", {})`` 语法。"

#: ../../deprecations/pending-removal-in-3.15.rst:95
msgid ""
"The :func:`typing.no_type_check_decorator` decorator function has been "
"deprecated since Python 3.13. After eight years in the :mod:`typing` module,"
" it has yet to be supported by any major type checker."
msgstr ""
":func:`typing.no_type_check_decorator` 装饰器自 Python 3.13 起已被弃用。 存在于 "
":mod:`typing` 模块八年之后，它仍未被任何主要类型检查器所支持。"

#: ../../deprecations/pending-removal-in-3.15.rst:100
msgid ":mod:`wave`:"
msgstr ":mod:`wave`:"

#: ../../deprecations/pending-removal-in-3.15.rst:102
msgid ""
"The :meth:`~wave.Wave_read.getmark`, :meth:`!setmark`, and "
":meth:`~wave.Wave_read.getmarkers` methods of the :class:`~wave.Wave_read` "
"and :class:`~wave.Wave_write` classes have been deprecated since Python "
"3.13."
msgstr ""
":class:`~wave.Wave_read` 和 :class:`~wave.Wave_write` 类的 "
":meth:`~wave.Wave_read.getmark`, :meth:`!setmark` 和 "
":meth:`~wave.Wave_read.getmarkers` 方法自 Python 3.13 起已被弃用。"
