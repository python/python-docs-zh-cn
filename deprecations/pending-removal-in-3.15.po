# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2025
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.12\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-07-25 16:03+0000\n"
"PO-Revision-Date: 2025-07-18 19:57+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2025\n"
"Language-Team: Chinese (China) (https://app.transifex.com/python-doc/teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../deprecations/pending-removal-in-3.15.rst:2
msgid "Pending Removal in Python 3.15"
msgstr "Python 3.15 中的待移除功能"

#: ../../deprecations/pending-removal-in-3.15.rst:4
msgid ""
":class:`http.server.CGIHTTPRequestHandler` will be removed along with its "
"related ``--cgi`` flag to ``python -m http.server``.  It was obsolete and "
"rarely used.  No direct replacement exists.  *Anything* is better than CGI "
"to interface a web server with a request handler."
msgstr ""
":class:`http.server.CGIHTTPRequestHandler` 将同 ``python -m http.server`` "
"中与其相关的 ``--cgi`` 旗标一起被移除。 它已经过时并且很少被使用。 不存在直接的替代品。 对于建立 Web "
"服务器与请求处理器的接口的任务来说 *任何东西* 都比 CGI 要好。"

#: ../../deprecations/pending-removal-in-3.15.rst:9
msgid ":mod:`importlib`:"
msgstr ":mod:`importlib`:"

#: ../../deprecations/pending-removal-in-3.15.rst:11
msgid "``load_module()`` method: use ``exec_module()`` instead."
msgstr "``load_module()`` 方法：改用 ``exec_module()``。"

#: ../../deprecations/pending-removal-in-3.15.rst:13
msgid ""
":class:`locale`: :func:`locale.getdefaultlocale` was deprecated in Python "
"3.11 and originally planned for removal in Python 3.13 (:gh:`90817`), but "
"removal has been postponed to Python 3.15. Use :func:`locale.setlocale`, "
":func:`locale.getencoding` and :func:`locale.getlocale` instead. "
"(Contributed by Hugo van Kemenade in :gh:`111187`.)"
msgstr ""
":class:`locale`: :func:`locale.getdefaultlocale` 在 Python 3.11 中已被弃用并且原计划在 "
"Python 3.13 中移除 (:gh:`90817`)，但移除时间已被推迟至 Python 3.15。 请改用 "
":func:`locale.setlocale`, :func:`locale.getencoding` 和 "
":func:`locale.getlocale`。 （由 Hugo van Kemenade 在 :gh:`111187` 中贡献。）"

#: ../../deprecations/pending-removal-in-3.15.rst:20
msgid ""
":mod:`pathlib`: :meth:`pathlib.PurePath.is_reserved` is deprecated and "
"scheduled for removal in Python 3.15. From Python 3.13 onwards, use "
"``os.path.isreserved`` to detect reserved paths on Windows."
msgstr ""
":mod:`pathlib`：:meth:`pathlib.PurePath.is_reserved` 已被弃用，并计划在 Python 3.15 "
"中移除。从 Python 3.13 起，请在 Windows 上使用``os.path.isreserved`` 检测保留路径。"

#: ../../deprecations/pending-removal-in-3.15.rst:25
msgid ""
":mod:`platform`: :func:`~platform.java_ver` is deprecated and will be "
"removed in 3.15. It was largely untested, had a confusing API, and was only "
"useful for Jython support. (Contributed by Nikita Sobolev in :gh:`116349`.)"
msgstr ""
":mod:`platform`: :func:`~platform.java_ver` 已被弃用并将在 3.15 中移除。 "
"它几乎未经测试，具有令人困惑的 API，并且仅适用于 Jython 支持。 （由 Nikita Sobolev 在 :gh:`116349` 中贡献。）"

#: ../../deprecations/pending-removal-in-3.15.rst:31
msgid ":mod:`sysconfig`:"
msgstr ":mod:`sysconfig`:"

#: ../../deprecations/pending-removal-in-3.15.rst:33
msgid ""
"The *check_home* argument of :func:`sysconfig.is_python_build` has been "
"deprecated since Python 3.12."
msgstr ""
":func:`sysconfig.is_python_build` 的 *check_home* 参数自 Python 3.12 起已被弃用。"

#: ../../deprecations/pending-removal-in-3.15.rst:36
msgid ""
":mod:`threading`: Passing any arguments to :func:`threading.RLock` is now "
"deprecated. C version allows any numbers of args and kwargs, but they are "
"just ignored. Python version does not allow any arguments. All arguments "
"will be removed from :func:`threading.RLock` in Python 3.15. (Contributed by"
" Nikita Sobolev in :gh:`102029`.)"
msgstr ""
":mod:`threading`: 向 :func:`threading.RLock` 传入任意参数的做法现已被弃用。 C 版本允许任意数量的 args"
" 和 kwargs，但它们都会被忽略。 Python 版本不允许任何参数。 在 Python 3.15 中将从 "
":func:`threading.RLock` 移除所有参数。 （由 Nikita Sobolev 在 :gh:`102029` 中贡献。）"

#: ../../deprecations/pending-removal-in-3.15.rst:43
msgid ":class:`typing.NamedTuple`:"
msgstr ":class:`typing.NamedTuple`:"

#: ../../deprecations/pending-removal-in-3.15.rst:45
msgid ""
"The undocumented keyword argument syntax for creating :class:`!NamedTuple` "
"classes (``NT = NamedTuple(\"NT\", x=int)``) is deprecated, and will be "
"disallowed in 3.15. Use the class-based syntax or the functional syntax "
"instead."
msgstr ""
"创建 :class:`!NamedTuple` 类 (``NT = NamedTuple(\"NT\", x=int)``) "
"的关键字参数语法从未写入文档且已被弃用，并将在 3.15 中被禁止。 请改用基于类的语法或函数语法。"

#: ../../deprecations/pending-removal-in-3.15.rst:49
msgid ":mod:`types`:"
msgstr ":mod:`types`:"

#: ../../deprecations/pending-removal-in-3.15.rst:51
msgid ""
":class:`types.CodeType`: Accessing :attr:`~codeobject.co_lnotab` was "
"deprecated in :pep:`626` since 3.10 and was planned to be removed in 3.12, "
"but it only got a proper :exc:`DeprecationWarning` in 3.12. May be removed "
"in 3.15. (Contributed by Nikita Sobolev in :gh:`101866`.)"
msgstr ""
":class:`types.CodeType`: 访问 :attr:`~codeobject.co_lnotab` 的做法自 3.10 起已根据 "
":pep:`626` 被弃用并曾计划在 3.12 中移除，但在 3.12 中实际仅设置了 :exc:`DeprecationWarning`。 可能会在"
" 3.15 中移除。 （由 Nikita Sobolev 在 :gh:`101866` 中贡献。）"

#: ../../deprecations/pending-removal-in-3.15.rst:58
msgid ":mod:`typing`:"
msgstr ":mod:`typing`:"

#: ../../deprecations/pending-removal-in-3.15.rst:60
msgid ""
"When using the functional syntax to create a :class:`!NamedTuple` class, "
"failing to pass a value to the *fields* parameter (``NT = "
"NamedTuple(\"NT\")``) is deprecated. Passing ``None`` to the *fields* "
"parameter (``NT = NamedTuple(\"NT\", None)``) is also deprecated. Both will "
"be disallowed in Python 3.15. To create a :class:`!NamedTuple` class with 0 "
"fields, use ``class NT(NamedTuple): pass`` or ``NT = NamedTuple(\"NT\", "
"[])``."
msgstr ""
"当使用函数式语法创建 :class:`!NamedTuple` 类时，不向 *fields* 形参传值的做法 (``NT = "
"NamedTuple(\"NT\")``) 已被弃用。 将 ``None`` 传给 *fields* 形参的做法 (``NT = "
"NamedTuple(\"NT\", None)``) 也已被弃用。 两者都将在 Python 3.15 中被禁止。 要创建拥有 0 个字段的 "
":class:`!NamedTuple` 类，请使用 ``class NT(NamedTuple): pass`` 或 ``NT = "
"NamedTuple(\"NT\", [])``。"

#: ../../deprecations/pending-removal-in-3.15.rst:67
msgid ""
":class:`typing.TypedDict`: When using the functional syntax to create a "
":class:`!TypedDict` class, failing to pass a value to the *fields* parameter"
" (``TD = TypedDict(\"TD\")``) is deprecated. Passing ``None`` to the "
"*fields* parameter (``TD = TypedDict(\"TD\", None)``) is also deprecated. "
"Both will be disallowed in Python 3.15. To create a :class:`!TypedDict` "
"class with 0 fields, use ``class TD(TypedDict): pass`` or ``TD = "
"TypedDict(\"TD\", {})``."
msgstr ""
":class:`typing.TypedDict`: 当使用函数语法创建 :class:`!TypedDict` 类时，不向 *fields* 形参传值"
" (``TD = TypedDict(\"TD\")``) 的行为已被弃用。 将 ``None`` 传给 *fields* 形参 (``TD = "
"TypedDict(\"TD\", None)``) 的行为也已被弃用。 两者都将在 Python 3.15 中被禁止。 要创建拥有 0 个字段的 "
":class:`!TypedDict` 类，请使用 ``class TD(TypedDict): pass`` 或 ``TD = "
"TypedDict(\"TD\", {})``。"

#: ../../deprecations/pending-removal-in-3.15.rst:74
msgid ""
":mod:`wave`: Deprecate the ``getmark()``, ``setmark()`` and ``getmarkers()``"
" methods of the :class:`wave.Wave_read` and :class:`wave.Wave_write` "
"classes. They will be removed in Python 3.15. (Contributed by Victor Stinner"
" in :gh:`105096`.)"
msgstr ""
":mod:`wave`: 已弃用 :class:`wave.Wave_read` 和 :class:`wave.Wave_write` 类的 "
"``getmark()``, ``setmark()`` 和 ``getmarkers()`` 方法。 它们将在 Python 3.15 中被移除。 "
"（由 Victor Stinner 在 :gh:`105096` 中贡献。）"
