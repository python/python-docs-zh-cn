# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2025
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.12\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-07-25 16:03+0000\n"
"PO-Revision-Date: 2025-07-18 19:57+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2025\n"
"Language-Team: Chinese (China) (https://app.transifex.com/python-doc/teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../deprecations/index.rst:2
msgid "Deprecations"
msgstr "弃用"

#: ../../deprecations/pending-removal-in-3.13.rst:2
msgid "Pending Removal in Python 3.13"
msgstr "计划在 Python 3.13 中移除"

#: ../../deprecations/pending-removal-in-3.13.rst:4
msgid "Modules (see :pep:`594`):"
msgstr "模块 (参见 :pep:`594`):"

#: ../../deprecations/pending-removal-in-3.13.rst:6
msgid ":mod:`aifc`"
msgstr ":mod:`aifc`"

#: ../../deprecations/pending-removal-in-3.13.rst:7
msgid ":mod:`audioop`"
msgstr ":mod:`audioop`"

#: ../../deprecations/pending-removal-in-3.13.rst:8
msgid ":mod:`cgi`"
msgstr ":mod:`cgi`"

#: ../../deprecations/pending-removal-in-3.13.rst:9
msgid ":mod:`cgitb`"
msgstr ":mod:`cgitb`"

#: ../../deprecations/pending-removal-in-3.13.rst:10
msgid ":mod:`chunk`"
msgstr ":mod:`chunk`"

#: ../../deprecations/pending-removal-in-3.13.rst:11
msgid ":mod:`crypt`"
msgstr ":mod:`crypt`"

#: ../../deprecations/pending-removal-in-3.13.rst:12
msgid ":mod:`imghdr`"
msgstr ":mod:`imghdr`"

#: ../../deprecations/pending-removal-in-3.13.rst:13
msgid ":mod:`mailcap`"
msgstr ":mod:`mailcap`"

#: ../../deprecations/pending-removal-in-3.13.rst:14
msgid ":mod:`msilib`"
msgstr ":mod:`msilib`"

#: ../../deprecations/pending-removal-in-3.13.rst:15
msgid ":mod:`nis`"
msgstr ":mod:`nis`"

#: ../../deprecations/pending-removal-in-3.13.rst:16
msgid ":mod:`nntplib`"
msgstr ":mod:`nntplib`"

#: ../../deprecations/pending-removal-in-3.13.rst:17
msgid ":mod:`ossaudiodev`"
msgstr ":mod:`ossaudiodev`"

#: ../../deprecations/pending-removal-in-3.13.rst:18
msgid ":mod:`pipes`"
msgstr ":mod:`pipes`"

#: ../../deprecations/pending-removal-in-3.13.rst:19
msgid ":mod:`sndhdr`"
msgstr ":mod:`sndhdr`"

#: ../../deprecations/pending-removal-in-3.13.rst:20
msgid ":mod:`spwd`"
msgstr ":mod:`spwd`"

#: ../../deprecations/pending-removal-in-3.13.rst:21
msgid ":mod:`sunau`"
msgstr ":mod:`sunau`"

#: ../../deprecations/pending-removal-in-3.13.rst:22
msgid ":mod:`telnetlib`"
msgstr ":mod:`telnetlib`"

#: ../../deprecations/pending-removal-in-3.13.rst:23
msgid ":mod:`uu`"
msgstr ":mod:`uu`"

#: ../../deprecations/pending-removal-in-3.13.rst:24
msgid ":mod:`xdrlib`"
msgstr ":mod:`xdrlib`"

#: ../../deprecations/pending-removal-in-3.13.rst:26
msgid "Other modules:"
msgstr "其他模块："

#: ../../deprecations/pending-removal-in-3.13.rst:28
msgid ":mod:`!lib2to3`, and the :program:`2to3` program (:gh:`84540`)"
msgstr ":mod:`!lib2to3`，以及 :program:`2to3` 程序 (:gh:`84540`)"

#: ../../deprecations/pending-removal-in-3.13.rst:30
msgid "APIs:"
msgstr "API:"

#: ../../deprecations/pending-removal-in-3.13.rst:32
msgid ":class:`!configparser.LegacyInterpolation` (:gh:`90765`)"
msgstr ":class:`!configparser.LegacyInterpolation` (:gh:`90765`)"

#: ../../deprecations/pending-removal-in-3.13.rst:33
msgid "``locale.resetlocale()`` (:gh:`90817`)"
msgstr "``locale.resetlocale()`` (:gh:`90817`)"

#: ../../deprecations/pending-removal-in-3.13.rst:34
msgid ":meth:`!turtle.RawTurtle.settiltangle` (:gh:`50096`)"
msgstr ":meth:`!turtle.RawTurtle.settiltangle` (:gh:`50096`)"

#: ../../deprecations/pending-removal-in-3.13.rst:35
msgid ":func:`!unittest.findTestCases` (:gh:`50096`)"
msgstr ":func:`!unittest.findTestCases` (:gh:`50096`)"

#: ../../deprecations/pending-removal-in-3.13.rst:36
msgid ":func:`!unittest.getTestCaseNames` (:gh:`50096`)"
msgstr ":func:`!unittest.getTestCaseNames` (:gh:`50096`)"

#: ../../deprecations/pending-removal-in-3.13.rst:37
msgid ":func:`!unittest.makeSuite` (:gh:`50096`)"
msgstr ":func:`!unittest.makeSuite` (:gh:`50096`)"

#: ../../deprecations/pending-removal-in-3.13.rst:38
msgid ":meth:`!unittest.TestProgram.usageExit` (:gh:`67048`)"
msgstr ":meth:`!unittest.TestProgram.usageExit` (:gh:`67048`)"

#: ../../deprecations/pending-removal-in-3.13.rst:39
msgid ":class:`!webbrowser.MacOSX` (:gh:`86421`)"
msgstr ":class:`!webbrowser.MacOSX` (:gh:`86421`)"

#: ../../deprecations/pending-removal-in-3.13.rst:40
msgid ":class:`classmethod` descriptor chaining (:gh:`89519`)"
msgstr ":class:`classmethod` 描述器串联 (:gh:`89519`)"

#: ../../deprecations/pending-removal-in-3.13.rst:41
msgid ":mod:`importlib.resources` deprecated methods:"
msgstr ":mod:`importlib.resources` 中已弃用的方法："

#: ../../deprecations/pending-removal-in-3.13.rst:43
msgid "``contents()``"
msgstr "``contents()``"

#: ../../deprecations/pending-removal-in-3.13.rst:44
msgid "``is_resource()``"
msgstr "``is_resource()``"

#: ../../deprecations/pending-removal-in-3.13.rst:45
msgid "``open_binary()``"
msgstr "``open_binary()``"

#: ../../deprecations/pending-removal-in-3.13.rst:46
msgid "``open_text()``"
msgstr "``open_text()``"

#: ../../deprecations/pending-removal-in-3.13.rst:47
msgid "``path()``"
msgstr "``path()``"

#: ../../deprecations/pending-removal-in-3.13.rst:48
msgid "``read_binary()``"
msgstr "``read_binary()``"

#: ../../deprecations/pending-removal-in-3.13.rst:49
msgid "``read_text()``"
msgstr "``read_text()``"

#: ../../deprecations/pending-removal-in-3.13.rst:51
msgid ""
"Use :func:`importlib.resources.files` instead.  Refer to `importlib-"
"resources: Migrating from Legacy <https://importlib-"
"resources.readthedocs.io/en/latest/using.html#migrating-from-legacy>`_ "
"(:gh:`106531`)"
msgstr ""
"改用 :func:`importlib.resources.files`。 参见 `importlib-resources: Migrating "
"from Legacy <https://importlib-"
"resources.readthedocs.io/en/latest/using.html#migrating-from-legacy>`_ "
"(:gh:`106531`)"

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:2
#: ../../deprecations/pending-removal-in-3.14.rst:2
msgid "Pending Removal in Python 3.14"
msgstr "计划在 Python 3.14 中移除"

#: ../../deprecations/pending-removal-in-3.14.rst:4
msgid ""
":mod:`argparse`: The *type*, *choices*, and *metavar* parameters of "
":class:`!argparse.BooleanOptionalAction` are deprecated and will be removed "
"in 3.14. (Contributed by Nikita Sobolev in :gh:`92248`.)"
msgstr ""
":mod:`argparse`: :class:`!argparse.BooleanOptionalAction` 的 *type*, "
"*choices* 和 *metavar* 形参已被弃用并将在 3.14 中移除。 （由 Nikita Sobolev 在 :gh:`92248` "
"中贡献。）"

#: ../../deprecations/pending-removal-in-3.14.rst:9
msgid ""
":mod:`ast`: The following features have been deprecated in documentation "
"since Python 3.8, now cause a :exc:`DeprecationWarning` to be emitted at "
"runtime when they are accessed or used, and will be removed in Python 3.14:"
msgstr ""
":mod:`ast`: 以下特性自 Python 3.8 起已在文档中声明弃用，现在当运行时如果它们被访问或使用时将发出 "
":exc:`DeprecationWarning`，并将在 Python 3.14 中移除："

#: ../../deprecations/pending-removal-in-3.14.rst:13
msgid ":class:`!ast.Num`"
msgstr ":class:`!ast.Num`"

#: ../../deprecations/pending-removal-in-3.14.rst:14
msgid ":class:`!ast.Str`"
msgstr ":class:`!ast.Str`"

#: ../../deprecations/pending-removal-in-3.14.rst:15
msgid ":class:`!ast.Bytes`"
msgstr ":class:`!ast.Bytes`"

#: ../../deprecations/pending-removal-in-3.14.rst:16
msgid ":class:`!ast.NameConstant`"
msgstr ":class:`!ast.NameConstant`"

#: ../../deprecations/pending-removal-in-3.14.rst:17
msgid ":class:`!ast.Ellipsis`"
msgstr ":class:`!ast.Ellipsis`"

#: ../../deprecations/pending-removal-in-3.14.rst:19
msgid ""
"Use :class:`ast.Constant` instead. (Contributed by Serhiy Storchaka in "
":gh:`90953`.)"
msgstr "请改用 :class:`ast.Constant`。 （由 Serhiy Storchaka 在 :gh:`90953` 中贡献。）"

#: ../../deprecations/pending-removal-in-3.14.rst:22
msgid ":mod:`asyncio`:"
msgstr ":mod:`asyncio`:"

#: ../../deprecations/pending-removal-in-3.14.rst:24
msgid ""
"The child watcher classes :class:`~asyncio.MultiLoopChildWatcher`, "
":class:`~asyncio.FastChildWatcher`, :class:`~asyncio.AbstractChildWatcher` "
"and :class:`~asyncio.SafeChildWatcher` are deprecated and will be removed in"
" Python 3.14. (Contributed by Kumar Aditya in :gh:`94597`.)"
msgstr ""
"子监视器类 :class:`~asyncio.MultiLoopChildWatcher`, "
":class:`~asyncio.FastChildWatcher`, :class:`~asyncio.AbstractChildWatcher` 和"
" :class:`~asyncio.SafeChildWatcher` 已被弃用并将在 Python 3.14 中移除。 （由 Kumar Aditya"
" 在 :gh:`94597` 中贡献。）"

#: ../../deprecations/pending-removal-in-3.14.rst:30
msgid ""
":func:`asyncio.set_child_watcher`, :func:`asyncio.get_child_watcher`, "
":meth:`asyncio.AbstractEventLoopPolicy.set_child_watcher` and "
":meth:`asyncio.AbstractEventLoopPolicy.get_child_watcher` are deprecated and"
" will be removed in Python 3.14. (Contributed by Kumar Aditya in "
":gh:`94597`.)"
msgstr ""
":func:`asyncio.set_child_watcher`、:func:`asyncio.get_child_watcher`、:meth:`asyncio.AbstractEventLoopPolicy.set_child_watcher`"
" 和 :meth:`asyncio.AbstractEventLoopPolicy.get_child_watcher` 已弃用，并将在 Python "
"3.14 中移除。（由 Kumar Aditya 在 :gh:`94597` 中贡献。）"

#: ../../deprecations/pending-removal-in-3.14.rst:36
msgid ""
"The :meth:`~asyncio.get_event_loop` method of the default event loop policy "
"now emits a :exc:`DeprecationWarning` if there is no current event loop set "
"and it decides to create one. (Contributed by Serhiy Storchaka and Guido van"
" Rossum in :gh:`100160`.)"
msgstr ""
"现在默认事件循环策略的 :meth:`~asyncio.get_event_loop` 方法在当前事件循环未设置并决定创建一个时将发出 "
":exc:`DeprecationWarning`。 （由 Serhiy Storchaka 和 Guido van Rossum 在 "
":gh:`100160` 中贡献。）"

#: ../../deprecations/pending-removal-in-3.14.rst:41
msgid ""
":mod:`collections.abc`: Deprecated :class:`~collections.abc.ByteString`. "
"Prefer :class:`!Sequence` or :class:`~collections.abc.Buffer`. For use in "
"typing, prefer a union, like ``bytes | bytearray``, or "
":class:`collections.abc.Buffer`. (Contributed by Shantanu Jain in "
":gh:`91896`.)"
msgstr ""
":mod:`collections.abc`: 已弃用 :class:`~collections.abc.ByteString`。 推荐改用 "
":class:`!Sequence` 或 :class:`~collections.abc.Buffer`。 用于类型标注时，则推荐并集运算符，如 "
"``bytes | bytearray``，或 :class:`collections.abc.Buffer`。 （由 Shantanu Jain 在 "
":gh:`91896` 中贡献。）"

#: ../../deprecations/pending-removal-in-3.14.rst:47
msgid ""
":mod:`email`: Deprecated the *isdst* parameter in "
":func:`email.utils.localtime`. (Contributed by Alan Williams in "
":gh:`72346`.)"
msgstr ""
":mod:`email`: 已弃用 :func:`email.utils.localtime` 中的 *isdst* 形参。 （由 Alan "
"Williams 在 :gh:`72346` 中贡献。）"

#: ../../deprecations/pending-removal-in-3.14.rst:50
msgid ""
":mod:`importlib`: ``__package__`` and ``__cached__`` will cease to be set or"
" taken into consideration by the import system (:gh:`97879`)."
msgstr ""
":mod:`importlib`: ``__package__`` 和 ``__cached__`` 将不再被设置或是被导入系统纳入考量 "
"(:gh:`97879`)。"

#: ../../deprecations/pending-removal-in-3.14.rst:53
msgid ":mod:`importlib.abc` deprecated classes:"
msgstr ":mod:`importlib.abc` 中已弃用的类："

#: ../../deprecations/pending-removal-in-3.14.rst:55
msgid ":class:`!importlib.abc.ResourceReader`"
msgstr ":class:`!importlib.abc.ResourceReader`"

#: ../../deprecations/pending-removal-in-3.14.rst:56
msgid ":class:`!importlib.abc.Traversable`"
msgstr ":class:`!importlib.abc.Traversable`"

#: ../../deprecations/pending-removal-in-3.14.rst:57
msgid ":class:`!importlib.abc.TraversableResources`"
msgstr ":class:`!importlib.abc.TraversableResources`"

#: ../../deprecations/pending-removal-in-3.14.rst:59
msgid "Use :mod:`importlib.resources.abc` classes instead:"
msgstr "使用 :mod:`importlib.resources.abc` 类代替:"

#: ../../deprecations/pending-removal-in-3.14.rst:61
msgid ":class:`importlib.resources.abc.Traversable`"
msgstr ":class:`importlib.resources.abc.Traversable`"

#: ../../deprecations/pending-removal-in-3.14.rst:62
msgid ":class:`importlib.resources.abc.TraversableResources`"
msgstr ":class:`importlib.resources.abc.TraversableResources`"

#: ../../deprecations/pending-removal-in-3.14.rst:64
msgid "(Contributed by Jason R. Coombs and Hugo van Kemenade in :gh:`93963`.)"
msgstr "（由 Jason R. Coombs 和 Hugo van Kemenade 在 :gh:`93963` 中贡献。）"

#: ../../deprecations/pending-removal-in-3.14.rst:66
msgid ""
":mod:`itertools` had undocumented, inefficient, historically buggy, and "
"inconsistent support for copy, deepcopy, and pickle operations. This will be"
" removed in 3.14 for a significant reduction in code volume and maintenance "
"burden. (Contributed by Raymond Hettinger in :gh:`101588`.)"
msgstr ""
":mod:`itertools` 具有对 copy, deepcopy 和 pickle 等操作的未写入文档的、低效的、历史上充满问题的且不稳定的支持。"
" 这将在 3.14 中移除以显著减少代码量和维护负担。 （由 Raymond Hettinger 在 :gh:`101588` 中贡献。）"

#: ../../deprecations/pending-removal-in-3.14.rst:72
msgid ""
":mod:`multiprocessing`: The default start method will change to a safer one "
"on Linux, BSDs, and other non-macOS POSIX platforms where ``'fork'`` is "
"currently the default (:gh:`84559`). Adding a runtime warning about this was"
" deemed too disruptive as the majority of code is not expected to care. Use "
"the :func:`~multiprocessing.get_context` or "
":func:`~multiprocessing.set_start_method` APIs to explicitly specify when "
"your code *requires* ``'fork'``.  See :ref:`multiprocessing-start-methods`."
msgstr ""
":mod:`multiprocessing`: 默认的启动方法在目前默认使用 ``'fork'`` 的 Linux, BSD 和其他非 macOS "
"POSIX 平台上将改为更安全的方法 (:gh:`84559`)。 为此添加运行时警告将带来糟糕的体验因为大部分代码并不会关心这个问题。 当你的代码 "
"*需要* ``'fork'`` 时请使用 :func:`~multiprocessing.get_context` 或 "
":func:`~multiprocessing.set_start_method` API 来显式地指明。 参见 "
":ref:`multiprocessing-start-methods`。"

#: ../../deprecations/pending-removal-in-3.14.rst:80
msgid ""
":mod:`pathlib`: :meth:`~pathlib.PurePath.is_relative_to` and "
":meth:`~pathlib.PurePath.relative_to`: passing additional arguments is "
"deprecated."
msgstr ""
":mod:`pathlib`: :meth:`~pathlib.PurePath.is_relative_to` 和 "
":meth:`~pathlib.PurePath.relative_to`: 传入额外参数的做法已被弃用。"

#: ../../deprecations/pending-removal-in-3.14.rst:84
msgid ""
":mod:`pkgutil`: :func:`~pkgutil.find_loader` and :func:`~pkgutil.get_loader`"
" now raise :exc:`DeprecationWarning`; use :func:`importlib.util.find_spec` "
"instead. (Contributed by Nikita Sobolev in :gh:`97850`.)"
msgstr ""
":mod:`pkgutil`: 现在 :func:`~pkgutil.find_loader` 和 "
":func:`~pkgutil.get_loader` 将引发 :exc:`DeprecationWarning`；请改用 "
":func:`importlib.util.find_spec`。 （由 Nikita Sobolev 在 :gh:`97850` 中贡献。）"

#: ../../deprecations/pending-removal-in-3.14.rst:89
msgid ":mod:`pty`:"
msgstr ":mod:`pty`:"

#: ../../deprecations/pending-removal-in-3.14.rst:91
msgid "``master_open()``: use :func:`pty.openpty`."
msgstr "``master_open()``: 使用 :func:`pty.openpty`。"

#: ../../deprecations/pending-removal-in-3.14.rst:92
msgid "``slave_open()``: use :func:`pty.openpty`."
msgstr "``slave_open()``: 使用 :func:`pty.openpty`。"

#: ../../deprecations/pending-removal-in-3.14.rst:94
msgid ":mod:`sqlite3`:"
msgstr ":mod:`sqlite3`:"

#: ../../deprecations/pending-removal-in-3.14.rst:96
msgid ":data:`~sqlite3.version` and :data:`~sqlite3.version_info`."
msgstr ":data:`~sqlite3.version` 和 :data:`~sqlite3.version_info`。"

#: ../../deprecations/pending-removal-in-3.14.rst:98
msgid ""
":meth:`~sqlite3.Cursor.execute` and :meth:`~sqlite3.Cursor.executemany` if "
":ref:`named placeholders <sqlite3-placeholders>` are used and *parameters* "
"is a sequence instead of a :class:`dict`."
msgstr ""
"如果使用了 :ref:`命名占位符 <sqlite3-placeholders>` 且 *parameters* 是一个序列而不是 "
":class:`dict` 则选择 :meth:`~sqlite3.Cursor.execute` 和 "
":meth:`~sqlite3.Cursor.executemany`。"

#: ../../deprecations/pending-removal-in-3.14.rst:102
msgid ""
":mod:`typing`: :class:`~typing.ByteString`, deprecated since Python 3.9, now"
" causes a :exc:`DeprecationWarning` to be emitted when it is used."
msgstr ""
":mod:`typing`: :class:`~typing.ByteString` 自 Python 3.9 起已被弃用，现在当被使用时将会发出 "
":exc:`DeprecationWarning`。"

#: ../../deprecations/pending-removal-in-3.14.rst:105
msgid ""
":mod:`urllib`: :class:`!urllib.parse.Quoter` is deprecated: it was not "
"intended to be a public API. (Contributed by Gregory P. Smith in "
":gh:`88168`.)"
msgstr ""
":mod:`urllib`: :class:`!urllib.parse.Quoter` 已被弃用：它不应被作为公有 API。 （由 Gregory "
"P. Smith 在 :gh:`88168` 中贡献。）"

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:2
#: ../../deprecations/pending-removal-in-3.15.rst:2
msgid "Pending Removal in Python 3.15"
msgstr "Python 3.15 中的待移除功能"

#: ../../deprecations/pending-removal-in-3.15.rst:4
msgid ""
":class:`http.server.CGIHTTPRequestHandler` will be removed along with its "
"related ``--cgi`` flag to ``python -m http.server``.  It was obsolete and "
"rarely used.  No direct replacement exists.  *Anything* is better than CGI "
"to interface a web server with a request handler."
msgstr ""
":class:`http.server.CGIHTTPRequestHandler` 将同 ``python -m http.server`` "
"中与其相关的 ``--cgi`` 旗标一起被移除。 它已经过时并且很少被使用。 不存在直接的替代品。 对于建立 Web "
"服务器与请求处理器的接口的任务来说 *任何东西* 都比 CGI 要好。"

#: ../../deprecations/pending-removal-in-3.15.rst:9
#: ../../deprecations/pending-removal-in-future.rst:58
msgid ":mod:`importlib`:"
msgstr ":mod:`importlib`:"

#: ../../deprecations/pending-removal-in-3.15.rst:11
msgid "``load_module()`` method: use ``exec_module()`` instead."
msgstr "``load_module()`` 方法：改用 ``exec_module()``。"

#: ../../deprecations/pending-removal-in-3.15.rst:13
msgid ""
":class:`locale`: :func:`locale.getdefaultlocale` was deprecated in Python "
"3.11 and originally planned for removal in Python 3.13 (:gh:`90817`), but "
"removal has been postponed to Python 3.15. Use :func:`locale.setlocale`, "
":func:`locale.getencoding` and :func:`locale.getlocale` instead. "
"(Contributed by Hugo van Kemenade in :gh:`111187`.)"
msgstr ""
":class:`locale`: :func:`locale.getdefaultlocale` 在 Python 3.11 中已被弃用并且原计划在 "
"Python 3.13 中移除 (:gh:`90817`)，但移除时间已被推迟至 Python 3.15。 请改用 "
":func:`locale.setlocale`, :func:`locale.getencoding` 和 "
":func:`locale.getlocale`。 （由 Hugo van Kemenade 在 :gh:`111187` 中贡献。）"

#: ../../deprecations/pending-removal-in-3.15.rst:20
msgid ""
":mod:`pathlib`: :meth:`pathlib.PurePath.is_reserved` is deprecated and "
"scheduled for removal in Python 3.15. From Python 3.13 onwards, use "
"``os.path.isreserved`` to detect reserved paths on Windows."
msgstr ""
":mod:`pathlib`：:meth:`pathlib.PurePath.is_reserved` 已被弃用，并计划在 Python 3.15 "
"中移除。从 Python 3.13 起，请在 Windows 上使用``os.path.isreserved`` 检测保留路径。"

#: ../../deprecations/pending-removal-in-3.15.rst:25
msgid ""
":mod:`platform`: :func:`~platform.java_ver` is deprecated and will be "
"removed in 3.15. It was largely untested, had a confusing API, and was only "
"useful for Jython support. (Contributed by Nikita Sobolev in :gh:`116349`.)"
msgstr ""
":mod:`platform`: :func:`~platform.java_ver` 已被弃用并将在 3.15 中移除。 "
"它几乎未经测试，具有令人困惑的 API，并且仅适用于 Jython 支持。 （由 Nikita Sobolev 在 :gh:`116349` 中贡献。）"

#: ../../deprecations/pending-removal-in-3.15.rst:31
msgid ":mod:`sysconfig`:"
msgstr ":mod:`sysconfig`:"

#: ../../deprecations/pending-removal-in-3.15.rst:33
msgid ""
"The *check_home* argument of :func:`sysconfig.is_python_build` has been "
"deprecated since Python 3.12."
msgstr ""
":func:`sysconfig.is_python_build` 的 *check_home* 参数自 Python 3.12 起已被弃用。"

#: ../../deprecations/pending-removal-in-3.15.rst:36
msgid ""
":mod:`threading`: Passing any arguments to :func:`threading.RLock` is now "
"deprecated. C version allows any numbers of args and kwargs, but they are "
"just ignored. Python version does not allow any arguments. All arguments "
"will be removed from :func:`threading.RLock` in Python 3.15. (Contributed by"
" Nikita Sobolev in :gh:`102029`.)"
msgstr ""
":mod:`threading`: 向 :func:`threading.RLock` 传入任意参数的做法现已被弃用。 C 版本允许任意数量的 args"
" 和 kwargs，但它们都会被忽略。 Python 版本不允许任何参数。 在 Python 3.15 中将从 "
":func:`threading.RLock` 移除所有参数。 （由 Nikita Sobolev 在 :gh:`102029` 中贡献。）"

#: ../../deprecations/pending-removal-in-3.15.rst:43
msgid ":class:`typing.NamedTuple`:"
msgstr ":class:`typing.NamedTuple`:"

#: ../../deprecations/pending-removal-in-3.15.rst:45
msgid ""
"The undocumented keyword argument syntax for creating :class:`!NamedTuple` "
"classes (``NT = NamedTuple(\"NT\", x=int)``) is deprecated, and will be "
"disallowed in 3.15. Use the class-based syntax or the functional syntax "
"instead."
msgstr ""
"创建 :class:`!NamedTuple` 类 (``NT = NamedTuple(\"NT\", x=int)``) "
"的关键字参数语法从未写入文档且已被弃用，并将在 3.15 中被禁止。 请改用基于类的语法或函数语法。"

#: ../../deprecations/pending-removal-in-3.15.rst:49
msgid ":mod:`types`:"
msgstr ":mod:`types`:"

#: ../../deprecations/pending-removal-in-3.15.rst:51
msgid ""
":class:`types.CodeType`: Accessing :attr:`~codeobject.co_lnotab` was "
"deprecated in :pep:`626` since 3.10 and was planned to be removed in 3.12, "
"but it only got a proper :exc:`DeprecationWarning` in 3.12. May be removed "
"in 3.15. (Contributed by Nikita Sobolev in :gh:`101866`.)"
msgstr ""
":class:`types.CodeType`: 访问 :attr:`~codeobject.co_lnotab` 的做法自 3.10 起已根据 "
":pep:`626` 被弃用并曾计划在 3.12 中移除，但在 3.12 中实际仅设置了 :exc:`DeprecationWarning`。 可能会在"
" 3.15 中移除。 （由 Nikita Sobolev 在 :gh:`101866` 中贡献。）"

#: ../../deprecations/pending-removal-in-3.15.rst:58
msgid ":mod:`typing`:"
msgstr ":mod:`typing`:"

#: ../../deprecations/pending-removal-in-3.15.rst:60
msgid ""
"When using the functional syntax to create a :class:`!NamedTuple` class, "
"failing to pass a value to the *fields* parameter (``NT = "
"NamedTuple(\"NT\")``) is deprecated. Passing ``None`` to the *fields* "
"parameter (``NT = NamedTuple(\"NT\", None)``) is also deprecated. Both will "
"be disallowed in Python 3.15. To create a :class:`!NamedTuple` class with 0 "
"fields, use ``class NT(NamedTuple): pass`` or ``NT = NamedTuple(\"NT\", "
"[])``."
msgstr ""
"当使用函数式语法创建 :class:`!NamedTuple` 类时，不向 *fields* 形参传值的做法 (``NT = "
"NamedTuple(\"NT\")``) 已被弃用。 将 ``None`` 传给 *fields* 形参的做法 (``NT = "
"NamedTuple(\"NT\", None)``) 也已被弃用。 两者都将在 Python 3.15 中被禁止。 要创建拥有 0 个字段的 "
":class:`!NamedTuple` 类，请使用 ``class NT(NamedTuple): pass`` 或 ``NT = "
"NamedTuple(\"NT\", [])``。"

#: ../../deprecations/pending-removal-in-3.15.rst:67
msgid ""
":class:`typing.TypedDict`: When using the functional syntax to create a "
":class:`!TypedDict` class, failing to pass a value to the *fields* parameter"
" (``TD = TypedDict(\"TD\")``) is deprecated. Passing ``None`` to the "
"*fields* parameter (``TD = TypedDict(\"TD\", None)``) is also deprecated. "
"Both will be disallowed in Python 3.15. To create a :class:`!TypedDict` "
"class with 0 fields, use ``class TD(TypedDict): pass`` or ``TD = "
"TypedDict(\"TD\", {})``."
msgstr ""
":class:`typing.TypedDict`: 当使用函数语法创建 :class:`!TypedDict` 类时，不向 *fields* 形参传值"
" (``TD = TypedDict(\"TD\")``) 的行为已被弃用。 将 ``None`` 传给 *fields* 形参 (``TD = "
"TypedDict(\"TD\", None)``) 的行为也已被弃用。 两者都将在 Python 3.15 中被禁止。 要创建拥有 0 个字段的 "
":class:`!TypedDict` 类，请使用 ``class TD(TypedDict): pass`` 或 ``TD = "
"TypedDict(\"TD\", {})``。"

#: ../../deprecations/pending-removal-in-3.15.rst:74
msgid ""
":mod:`wave`: Deprecate the ``getmark()``, ``setmark()`` and ``getmarkers()``"
" methods of the :class:`wave.Wave_read` and :class:`wave.Wave_write` "
"classes. They will be removed in Python 3.15. (Contributed by Victor Stinner"
" in :gh:`105096`.)"
msgstr ""
":mod:`wave`: 已弃用 :class:`wave.Wave_read` 和 :class:`wave.Wave_write` 类的 "
"``getmark()``, ``setmark()`` 和 ``getmarkers()`` 方法。 它们将在 Python 3.15 中被移除。 "
"（由 Victor Stinner 在 :gh:`105096` 中贡献。）"

#: ../../deprecations/pending-removal-in-3.16.rst:2
msgid "Pending Removal in Python 3.16"
msgstr "计划在 Python 3.16 中移除"

#: ../../deprecations/pending-removal-in-3.16.rst:4
msgid "The import system:"
msgstr "导入系统："

#: ../../deprecations/pending-removal-in-3.16.rst:6
msgid ""
"Setting :attr:`~module.__loader__` on a module while failing to set "
":attr:`__spec__.loader <importlib.machinery.ModuleSpec.loader>` is "
"deprecated. In Python 3.16, :attr:`!__loader__` will cease to be set or "
"taken into consideration by the import system or the standard library."
msgstr ""
"当设置 :attr:`__spec__.loader <importlib.machinery.ModuleSpec.loader>` "
"失败时在模块上设置 :attr:`~module.__loader__` 的做法已被弃用。 在 Python 3.16 "
"中，:attr:`!__loader__` 将不会再被设置或是被导入系统或标准库纳入考虑。"

#: ../../deprecations/pending-removal-in-3.16.rst:11
msgid ""
":mod:`array`: :class:`array.array` ``'u'`` type (:c:type:`wchar_t`): use the"
" ``'w'`` type instead (``Py_UCS4``)."
msgstr ""
":mod:`array`: :class:`array.array` ``'u'`` 类型 (:c:type:`wchar_t`): 改用 "
"``'w'`` 类型 (``Py_UCS4``)。"

#: ../../deprecations/pending-removal-in-3.16.rst:15
msgid ":mod:`builtins`: ``~bool``, bitwise inversion on bool."
msgstr ":mod:`builtins`: ``~bool``，对布尔值按位取反。"

#: ../../deprecations/pending-removal-in-3.16.rst:18
msgid ""
":mod:`symtable`: Deprecate :meth:`symtable.Class.get_methods` due to the "
"lack of interest. (Contributed by Bénédikt Tran in :gh:`119698`.)"
msgstr ""
":mod:`symtable`: :meth:`symtable.Class.get_methods` 因缺少适当的场景已被弃用。 （由 "
"Bénédikt Tran 在 :gh:`119698` 中贡献。）"

#: ../../deprecations/c-api-pending-removal-in-future.rst:2
#: ../../deprecations/pending-removal-in-future.rst:2
msgid "Pending Removal in Future Versions"
msgstr "计划在未来版本中移除"

#: ../../deprecations/pending-removal-in-future.rst:4
msgid ""
"The following APIs will be removed in the future, although there is "
"currently no date scheduled for their removal."
msgstr "以下API将会被移除，尽管具体时间还未确定。"

#: ../../deprecations/pending-removal-in-future.rst:7
msgid ""
":mod:`argparse`: Nesting argument groups and nesting mutually exclusive "
"groups are deprecated."
msgstr ":mod:`argparse`: 嵌套参数分组和嵌套互斥分组的做法已被弃用。"

#: ../../deprecations/pending-removal-in-future.rst:10
msgid ":mod:`array`'s ``'u'`` format code (:gh:`57281`)"
msgstr ":mod:`array` 的 ``'u'`` 格式代码 (:gh:`57281`)"

#: ../../deprecations/pending-removal-in-future.rst:12
msgid ":mod:`builtins`:"
msgstr ":mod:`builtins`:"

#: ../../deprecations/pending-removal-in-future.rst:14
msgid "``bool(NotImplemented)``."
msgstr "``bool(NotImplemented)``。"

#: ../../deprecations/pending-removal-in-future.rst:15
msgid ""
"Generators: ``throw(type, exc, tb)`` and ``athrow(type, exc, tb)`` signature"
" is deprecated: use ``throw(exc)`` and ``athrow(exc)`` instead, the single "
"argument signature."
msgstr ""
"生成器: ``throw(type, exc, tb)`` 和 ``athrow(type, exc, tb)`` 签名已被弃用：请改用 "
"``throw(exc)`` 和 ``athrow(exc)``，即单参数签名。"

#: ../../deprecations/pending-removal-in-future.rst:18
msgid ""
"Currently Python accepts numeric literals immediately followed by keywords, "
"for example ``0in x``, ``1or x``, ``0if 1else 2``.  It allows confusing and "
"ambiguous expressions like ``[0x1for x in y]`` (which can be interpreted as "
"``[0x1 for x in y]`` or ``[0x1f or x in y]``).  A syntax warning is raised "
"if the numeric literal is immediately followed by one of keywords "
":keyword:`and`, :keyword:`else`, :keyword:`for`, :keyword:`if`, "
":keyword:`in`, :keyword:`is` and :keyword:`or`.  In a future release it will"
" be changed to a syntax error. (:gh:`87999`)"
msgstr ""
"目前 Python 接受数字类字面值后面紧跟关键字的写法，例如 ``0in x``, ``1or x``, ``0if 1else 2``。 它允许像 "
"``[0x1for x in y]`` 这样令人困惑且有歧义的表达式 (它可以被解读为 ``[0x1 for x in y]`` 或者 ``[0x1f "
"or x in y]``)。 如果数字类字面值后面紧跟关键字 :keyword:`and`, :keyword:`else`, "
":keyword:`for`, :keyword:`if`, :keyword:`in`, :keyword:`is` 和 :keyword:`or` "
"中的一个将会引发语法警告。 在未来的版本中它将改为语法错误。 (:gh:`87999`)"

#: ../../deprecations/pending-removal-in-future.rst:26
msgid ""
"Support for ``__index__()`` and ``__int__()`` method returning non-int type:"
" these methods will be required to return an instance of a strict subclass "
"of :class:`int`."
msgstr ""
"对 ``__index__()`` 和 ``__int__()`` 方法返回非 int 类型的支持：将要求这些方法必须返回 :class:`int` "
"的子类的实例。"

#: ../../deprecations/pending-removal-in-future.rst:29
msgid ""
"Support for ``__float__()`` method returning a strict subclass of "
":class:`float`: these methods will be required to return an instance of "
":class:`float`."
msgstr ""
"对 ``__float__()`` 方法返回 :class:`float` 的子类的支持：将要求这些方法必须返回 :class:`float` 的实例。"

#: ../../deprecations/pending-removal-in-future.rst:32
msgid ""
"Support for ``__complex__()`` method returning a strict subclass of "
":class:`complex`: these methods will be required to return an instance of "
":class:`complex`."
msgstr ""
"对 ``__complex__()`` 方法返回 :class:`complex` 的子类的支持：将要求这些方法必须返回 "
":class:`complex` 的实例。"

#: ../../deprecations/pending-removal-in-future.rst:35
msgid "Delegation of ``int()`` to ``__trunc__()`` method."
msgstr "将 ``int()`` 委托给 ``__trunc__()`` 方法。"

#: ../../deprecations/pending-removal-in-future.rst:36
msgid ""
"Passing a complex number as the *real* or *imag* argument in the "
":func:`complex` constructor is now deprecated; it should only be passed as a"
" single positional argument. (Contributed by Serhiy Storchaka in "
":gh:`109218`.)"
msgstr ""
"传入一个复数作为 :func:`complex` 构造器中的 *real* 或 *imag* 参数的做法现在已被弃用；它应当仅作为单个位置参数被传入。 "
"（由 Serhiy Storchaka 在 :gh:`109218` 中贡献。）.)"

#: ../../deprecations/pending-removal-in-future.rst:41
msgid ""
":mod:`calendar`: ``calendar.January`` and ``calendar.February`` constants "
"are deprecated and replaced by :data:`calendar.JANUARY` and "
":data:`calendar.FEBRUARY`. (Contributed by Prince Roshan in :gh:`103636`.)"
msgstr ""
":mod:`calendar`: ``calendar.January`` 和 ``calendar.February`` 常量已被弃用并由 "
":data:`calendar.JANUARY` 和 :data:`calendar.FEBRUARY` 替代。 （由 Prince Roshan 在 "
":gh:`103636` 中贡献。）"

#: ../../deprecations/pending-removal-in-future.rst:46
msgid ""
":attr:`codeobject.co_lnotab`: use the :meth:`codeobject.co_lines` method "
"instead."
msgstr ":attr:`codeobject.co_lnotab`: 改用 :meth:`codeobject.co_lines` 方法。"

#: ../../deprecations/pending-removal-in-future.rst:49
msgid ":mod:`datetime`:"
msgstr ":mod:`datetime`:"

#: ../../deprecations/pending-removal-in-future.rst:51
msgid ""
":meth:`~datetime.datetime.utcnow`: use "
"``datetime.datetime.now(tz=datetime.UTC)``."
msgstr ""
":meth:`~datetime.datetime.utcnow`: 使用 "
"``datetime.datetime.now(tz=datetime.UTC)``。"

#: ../../deprecations/pending-removal-in-future.rst:53
msgid ""
":meth:`~datetime.datetime.utcfromtimestamp`: use "
"``datetime.datetime.fromtimestamp(timestamp, tz=datetime.UTC)``."
msgstr ""
":meth:`~datetime.datetime.utcfromtimestamp`: 使用 "
"``datetime.datetime.fromtimestamp(timestamp, tz=datetime.UTC)``。"

#: ../../deprecations/pending-removal-in-future.rst:56
msgid ":mod:`gettext`: Plural value must be an integer."
msgstr ":mod:`gettext`: 复数值必须是一个整数。"

#: ../../deprecations/pending-removal-in-future.rst:60
msgid ""
":func:`~importlib.util.cache_from_source` *debug_override* parameter is "
"deprecated: use the *optimization* parameter instead."
msgstr ""
":func:`~importlib.util.cache_from_source` *debug_override* 形参已被弃用：改用 "
"*optimization* 形能耐。"

#: ../../deprecations/pending-removal-in-future.rst:63
msgid ":mod:`importlib.metadata`:"
msgstr ":mod:`importlib.metadata`:"

#: ../../deprecations/pending-removal-in-future.rst:65
msgid "``EntryPoints`` tuple interface."
msgstr "``EntryPoints`` 元组接口。"

#: ../../deprecations/pending-removal-in-future.rst:66
msgid "Implicit ``None`` on return values."
msgstr "返回值中隐式的 ``None``。"

#: ../../deprecations/pending-removal-in-future.rst:68
msgid ""
":mod:`mailbox`: Use of StringIO input and text mode is deprecated, use "
"BytesIO and binary mode instead."
msgstr ":mod:`mailbox`: 对 StringIO 输入和文本模式的使用已被弃用，改用 BytesIO 和二进制模式。"

#: ../../deprecations/pending-removal-in-future.rst:71
msgid ""
":mod:`os`: Calling :func:`os.register_at_fork` in multi-threaded process."
msgstr ":mod:`os`: 在多线程的进程中调用 :func:`os.register_at_fork`。"

#: ../../deprecations/pending-removal-in-future.rst:73
msgid ""
":class:`!pydoc.ErrorDuringImport`: A tuple value for *exc_info* parameter is"
" deprecated, use an exception instance."
msgstr ""
":class:`!pydoc.ErrorDuringImport`: 使用元组值作为 *exc_info* 形参的做法已被弃用，应使用异常实例。"

#: ../../deprecations/pending-removal-in-future.rst:76
msgid ""
":mod:`re`: More strict rules are now applied for numerical group references "
"and group names in regular expressions.  Only sequence of ASCII digits is "
"now accepted as a numerical reference.  The group name in bytes patterns and"
" replacement strings can now only contain ASCII letters and digits and "
"underscore. (Contributed by Serhiy Storchaka in :gh:`91760`.)"
msgstr ""
":mod:`re`: 现在对于正则表达式中的数字分组引用和分组名称将应用更严格的规则。 现在只接受 ASCII 数字序列作为数字引用。 "
"字节串模式和替换字符串中的分组名称现在只能包含 ASCII 字母和数字以及下划线。 （由 Serhiy Storchaka 在 :gh:`91760` "
"中贡献。）"

#: ../../deprecations/pending-removal-in-future.rst:83
msgid ""
":mod:`!sre_compile`, :mod:`!sre_constants` and :mod:`!sre_parse` modules."
msgstr ":mod:`!sre_compile`, :mod:`!sre_constants` 和 :mod:`!sre_parse` 模块。"

#: ../../deprecations/pending-removal-in-future.rst:85
msgid ""
":mod:`shutil`: :func:`~shutil.rmtree`'s *onerror* parameter is deprecated in"
" Python 3.12; use the *onexc* parameter instead."
msgstr ""
":mod:`shutil`: :func:`~shutil.rmtree` 的 *onerror* 形参在 Python 3.12 中已被弃用；请改用 "
"*onexc* 形参。"

#: ../../deprecations/pending-removal-in-future.rst:88
msgid ":mod:`ssl` options and protocols:"
msgstr ":mod:`ssl` 选项和协议："

#: ../../deprecations/pending-removal-in-future.rst:90
msgid ":class:`ssl.SSLContext` without protocol argument is deprecated."
msgstr ":class:`ssl.SSLContext` 不带 protocol 参数的做法已被弃用。"

#: ../../deprecations/pending-removal-in-future.rst:91
msgid ""
":class:`ssl.SSLContext`: :meth:`~ssl.SSLContext.set_npn_protocols` and "
":meth:`!selected_npn_protocol` are deprecated: use ALPN instead."
msgstr ""
":class:`ssl.SSLContext`: :meth:`~ssl.SSLContext.set_npn_protocols` 和 "
":meth:`!selected_npn_protocol` 已被弃用：请改用 ALPN."

#: ../../deprecations/pending-removal-in-future.rst:94
msgid "``ssl.OP_NO_SSL*`` options"
msgstr "``ssl.OP_NO_SSL*`` 选项"

#: ../../deprecations/pending-removal-in-future.rst:95
msgid "``ssl.OP_NO_TLS*`` options"
msgstr "``ssl.OP_NO_TLS*`` 选项"

#: ../../deprecations/pending-removal-in-future.rst:96
msgid "``ssl.PROTOCOL_SSLv3``"
msgstr "``ssl.PROTOCOL_SSLv3``"

#: ../../deprecations/pending-removal-in-future.rst:97
msgid "``ssl.PROTOCOL_TLS``"
msgstr "``ssl.PROTOCOL_TLS``"

#: ../../deprecations/pending-removal-in-future.rst:98
msgid "``ssl.PROTOCOL_TLSv1``"
msgstr "``ssl.PROTOCOL_TLSv1``"

#: ../../deprecations/pending-removal-in-future.rst:99
msgid "``ssl.PROTOCOL_TLSv1_1``"
msgstr "``ssl.PROTOCOL_TLSv1_1``"

#: ../../deprecations/pending-removal-in-future.rst:100
msgid "``ssl.PROTOCOL_TLSv1_2``"
msgstr "``ssl.PROTOCOL_TLSv1_2``"

#: ../../deprecations/pending-removal-in-future.rst:101
msgid "``ssl.TLSVersion.SSLv3``"
msgstr "``ssl.TLSVersion.SSLv3``"

#: ../../deprecations/pending-removal-in-future.rst:102
msgid "``ssl.TLSVersion.TLSv1``"
msgstr "``ssl.TLSVersion.TLSv1``"

#: ../../deprecations/pending-removal-in-future.rst:103
msgid "``ssl.TLSVersion.TLSv1_1``"
msgstr "``ssl.TLSVersion.TLSv1_1``"

#: ../../deprecations/pending-removal-in-future.rst:105
msgid ":mod:`threading` methods:"
msgstr ":mod:`threading` 的方法："

#: ../../deprecations/pending-removal-in-future.rst:107
msgid ""
":meth:`!threading.Condition.notifyAll`: use "
":meth:`~threading.Condition.notify_all`."
msgstr ""
":meth:`!threading.Condition.notifyAll`: 使用 "
":meth:`~threading.Condition.notify_all`。"

#: ../../deprecations/pending-removal-in-future.rst:108
msgid ":meth:`!threading.Event.isSet`: use :meth:`~threading.Event.is_set`."
msgstr ":meth:`!threading.Event.isSet`: 使用 :meth:`~threading.Event.is_set`。"

#: ../../deprecations/pending-removal-in-future.rst:109
msgid ""
":meth:`!threading.Thread.isDaemon`, :meth:`threading.Thread.setDaemon`: use "
":attr:`threading.Thread.daemon` attribute."
msgstr ""
":meth:`!threading.Thread.isDaemon`, :meth:`threading.Thread.setDaemon`: 使用 "
":attr:`threading.Thread.daemon` 属性。"

#: ../../deprecations/pending-removal-in-future.rst:111
msgid ""
":meth:`!threading.Thread.getName`, :meth:`threading.Thread.setName`: use "
":attr:`threading.Thread.name` attribute."
msgstr ""
":meth:`!threading.Thread.getName`, :meth:`threading.Thread.setName`: 使用 "
":attr:`threading.Thread.name` 属性。"

#: ../../deprecations/pending-removal-in-future.rst:113
msgid ""
":meth:`!threading.currentThread`: use :meth:`threading.current_thread`."
msgstr ""
":meth:`!threading.currentThread`: 使用 :meth:`threading.current_thread`。"

#: ../../deprecations/pending-removal-in-future.rst:114
msgid ":meth:`!threading.activeCount`: use :meth:`threading.active_count`."
msgstr ":meth:`!threading.activeCount`: 使用 :meth:`threading.active_count`。"

#: ../../deprecations/pending-removal-in-future.rst:116
msgid ":class:`typing.Text` (:gh:`92332`)."
msgstr ":class:`typing.Text` (:gh:`92332`)。"

#: ../../deprecations/pending-removal-in-future.rst:118
msgid ""
":class:`unittest.IsolatedAsyncioTestCase`: it is deprecated to return a "
"value that is not ``None`` from a test case."
msgstr ""
":class:`unittest.IsolatedAsyncioTestCase`: 从测试用例返回不为 ``None`` 的值的做法已被弃用。"

#: ../../deprecations/pending-removal-in-future.rst:121
msgid ""
":mod:`urllib.parse` deprecated functions: :func:`~urllib.parse.urlparse` "
"instead"
msgstr ":mod:`urllib.parse` 函数已被弃用：改用 :func:`~urllib.parse.urlparse`"

#: ../../deprecations/pending-removal-in-future.rst:123
msgid "``splitattr()``"
msgstr "``splitattr()``"

#: ../../deprecations/pending-removal-in-future.rst:124
msgid "``splithost()``"
msgstr "``splithost()``"

#: ../../deprecations/pending-removal-in-future.rst:125
msgid "``splitnport()``"
msgstr "``splitnport()``"

#: ../../deprecations/pending-removal-in-future.rst:126
msgid "``splitpasswd()``"
msgstr "``splitpasswd()``"

#: ../../deprecations/pending-removal-in-future.rst:127
msgid "``splitport()``"
msgstr "``splitport()``"

#: ../../deprecations/pending-removal-in-future.rst:128
msgid "``splitquery()``"
msgstr "``splitquery()``"

#: ../../deprecations/pending-removal-in-future.rst:129
msgid "``splittag()``"
msgstr "``splittag()``"

#: ../../deprecations/pending-removal-in-future.rst:130
msgid "``splittype()``"
msgstr "``splittype()``"

#: ../../deprecations/pending-removal-in-future.rst:131
msgid "``splituser()``"
msgstr "``splituser()``"

#: ../../deprecations/pending-removal-in-future.rst:132
msgid "``splitvalue()``"
msgstr "``splitvalue()``"

#: ../../deprecations/pending-removal-in-future.rst:133
msgid "``to_bytes()``"
msgstr "``to_bytes()``"

#: ../../deprecations/pending-removal-in-future.rst:135
msgid ""
":mod:`urllib.request`: :class:`~urllib.request.URLopener` and "
":class:`~urllib.request.FancyURLopener` style of invoking requests is "
"deprecated. Use newer :func:`~urllib.request.urlopen` functions and methods."
msgstr ""
":mod:`urllib.request`: 发起请求的 :class:`~urllib.request.URLopener` 和 "
":class:`~urllib.request.FancyURLopener` 方式已被弃用。 改用更新 "
":func:`~urllib.request.urlopen` 函数和方法。"

#: ../../deprecations/pending-removal-in-future.rst:139
msgid ""
":mod:`wsgiref`: ``SimpleHandler.stdout.write()`` should not do partial "
"writes."
msgstr ":mod:`wsgiref`: ``SimpleHandler.stdout.write()`` 不应执行部分写入。"

#: ../../deprecations/pending-removal-in-future.rst:142
msgid ""
":mod:`xml.etree.ElementTree`: Testing the truth value of an "
":class:`~xml.etree.ElementTree.Element` is deprecated. In a future release "
"it will always return ``True``. Prefer explicit ``len(elem)`` or ``elem is "
"not None`` tests instead."
msgstr ""
":mod:`xml.etree.ElementTree`: 对 :class:`~xml.etree.ElementTree.Element` "
"的真值测试已被弃用。 在未来的发布版中它将始终返回 ``True``。 建议改用显式的 ``len(elem)`` 或 ``elem is not "
"None`` 测试。"

#: ../../deprecations/pending-removal-in-future.rst:147
msgid ""
":meth:`zipimport.zipimporter.load_module` is deprecated: use "
":meth:`~zipimport.zipimporter.exec_module` instead."
msgstr ""
":meth:`zipimport.zipimporter.load_module` 已被弃用：请改用 "
":meth:`~zipimport.zipimporter.exec_module`。"

#: ../../deprecations/index.rst:15
msgid "C API Deprecations"
msgstr "C API 的弃用项"

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:4
msgid ""
"The ``ma_version_tag`` field in :c:type:`PyDictObject` for extension modules"
" (:pep:`699`; :gh:`101193`)."
msgstr ""
":c:type:`PyDictObject` 中的 ``ma_version_tag`` 字段用于扩展模块 ( :pep:`699` ; "
":gh:`101193` )。"

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:7
msgid ""
"Creating :c:data:`immutable types <Py_TPFLAGS_IMMUTABLETYPE>` with mutable "
"bases (:gh:`95388`)."
msgstr ""
"创建 :c:data:`immutable types<Py_TPFLAGS_IMMUTABLETYPE>`  的可变基础 ( :gh:`95388` "
")。"

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:10
msgid ""
"Functions to configure Python's initialization, deprecated in Python 3.11:"
msgstr "用于配置 Python 的初始化的函数，在 Python 3.11 中已弃用："

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:12
msgid ":c:func:`!PySys_SetArgvEx()`: Set :c:member:`PyConfig.argv` instead."
msgstr ":c:func:`!PySys_SetArgvEx()`: 改为设置 :c:member:`PyConfig.argv`。"

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:14
msgid ":c:func:`!PySys_SetArgv()`: Set :c:member:`PyConfig.argv` instead."
msgstr ":c:func:`!PySys_SetArgv()`: 改为设置 :c:member:`PyConfig.argv`。"

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:16
msgid ""
":c:func:`!Py_SetProgramName()`: Set :c:member:`PyConfig.program_name` "
"instead."
msgstr ""
":c:func:`!Py_SetProgramName()`: 改为设置 :c:member:`PyConfig.program_name`。"

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:18
msgid ":c:func:`!Py_SetPythonHome()`: Set :c:member:`PyConfig.home` instead."
msgstr ":c:func:`!Py_SetPythonHome()`: 改为设置 :c:member:`PyConfig.home`。"

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:21
#: ../../deprecations/c-api-pending-removal-in-3.14.rst:71
msgid ""
"The :c:func:`Py_InitializeFromConfig` API should be used with "
":c:type:`PyConfig` instead."
msgstr ":c:func:`Py_InitializeFromConfig` API 应与 :c:type:`PyConfig` 一起使用。"

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:24
msgid "Global configuration variables:"
msgstr "全局配置变量："

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:26
msgid ":c:var:`Py_DebugFlag`: Use :c:member:`PyConfig.parser_debug` instead."
msgstr ":c:var:`Py_DebugFlag`: 改用 :c:member:`PyConfig.parser_debug`。"

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:28
msgid ":c:var:`Py_VerboseFlag`: Use :c:member:`PyConfig.verbose` instead."
msgstr ":c:var:`Py_VerboseFlag`: 改用 :c:member:`PyConfig.verbose`。"

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:30
msgid ":c:var:`Py_QuietFlag`: Use :c:member:`PyConfig.quiet` instead."
msgstr ":c:var:`Py_QuietFlag`: 改用 :c:member:`PyConfig.quiet`。"

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:32
msgid ""
":c:var:`Py_InteractiveFlag`: Use :c:member:`PyConfig.interactive` instead."
msgstr ":c:var:`Py_InteractiveFlag`: 改用 :c:member:`PyConfig.interactive`。"

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:34
msgid ":c:var:`Py_InspectFlag`: Use :c:member:`PyConfig.inspect` instead."
msgstr ":c:var:`Py_InspectFlag`: 改用 :c:member:`PyConfig.inspect`。"

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:36
msgid ""
":c:var:`Py_OptimizeFlag`: Use :c:member:`PyConfig.optimization_level` "
"instead."
msgstr ":c:var:`Py_OptimizeFlag`: 改用 :c:member:`PyConfig.optimization_level`。"

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:38
msgid ":c:var:`Py_NoSiteFlag`: Use :c:member:`PyConfig.site_import` instead."
msgstr ":c:var:`Py_NoSiteFlag`: 改用 :c:member:`PyConfig.site_import`。"

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:40
msgid ""
":c:var:`Py_BytesWarningFlag`: Use :c:member:`PyConfig.bytes_warning` "
"instead."
msgstr ":c:var:`Py_BytesWarningFlag`: 改用 :c:member:`PyConfig.bytes_warning`。"

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:42
msgid ""
":c:var:`Py_FrozenFlag`: Use :c:member:`PyConfig.pathconfig_warnings` "
"instead."
msgstr ":c:var:`Py_FrozenFlag`: 改用 :c:member:`PyConfig.pathconfig_warnings`。"

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:44
msgid ""
":c:var:`Py_IgnoreEnvironmentFlag`: Use :c:member:`PyConfig.use_environment` "
"instead."
msgstr ""
":c:var:`Py_IgnoreEnvironmentFlag`: 改用 :c:member:`PyConfig.use_environment`。"

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:46
msgid ""
":c:var:`Py_DontWriteBytecodeFlag`: Use :c:member:`PyConfig.write_bytecode` "
"instead."
msgstr ""
":c:var:`Py_DontWriteBytecodeFlag`: 改用 :c:member:`PyConfig.write_bytecode`。"

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:48
msgid ""
":c:var:`Py_NoUserSiteDirectory`: Use "
":c:member:`PyConfig.user_site_directory` instead."
msgstr ""
":c:var:`Py_NoUserSiteDirectory`: 改用 "
":c:member:`PyConfig.user_site_directory`。"

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:50
msgid ""
":c:var:`Py_UnbufferedStdioFlag`: Use :c:member:`PyConfig.buffered_stdio` "
"instead."
msgstr ""
":c:var:`Py_UnbufferedStdioFlag`: 改用 :c:member:`PyConfig.buffered_stdio`。"

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:52
msgid ""
":c:var:`Py_HashRandomizationFlag`: Use :c:member:`PyConfig.use_hash_seed` "
"and :c:member:`PyConfig.hash_seed` instead."
msgstr ""
":c:var:`Py_HashRandomizationFlag`: 改用 :c:member:`PyConfig.use_hash_seed` 和 "
":c:member:`PyConfig.hash_seed`。"

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:55
msgid ":c:var:`Py_IsolatedFlag`: Use :c:member:`PyConfig.isolated` instead."
msgstr ":c:var:`Py_IsolatedFlag`: 改用 :c:member:`PyConfig.isolated`。"

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:57
msgid ""
":c:var:`Py_LegacyWindowsFSEncodingFlag`: Use "
":c:member:`PyPreConfig.legacy_windows_fs_encoding` instead."
msgstr ""
":c:var:`Py_LegacyWindowsFSEncodingFlag`: 改用 "
":c:member:`PyPreConfig.legacy_windows_fs_encoding`。"

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:59
msgid ""
":c:var:`Py_LegacyWindowsStdioFlag`: Use "
":c:member:`PyConfig.legacy_windows_stdio` instead."
msgstr ""
":c:var:`Py_LegacyWindowsStdioFlag`: 改用 "
":c:member:`PyConfig.legacy_windows_stdio`。"

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:61
msgid ""
":c:var:`!Py_FileSystemDefaultEncoding`: Use "
":c:member:`PyConfig.filesystem_encoding` instead."
msgstr ""
":c:var:`!Py_FileSystemDefaultEncoding`: 改用 "
":c:member:`PyConfig.filesystem_encoding`。"

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:63
msgid ""
":c:var:`!Py_HasFileSystemDefaultEncoding`: Use "
":c:member:`PyConfig.filesystem_encoding` instead."
msgstr ""
":c:var:`!Py_HasFileSystemDefaultEncoding`: 改用 "
":c:member:`PyConfig.filesystem_encoding`。"

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:65
msgid ""
":c:var:`!Py_FileSystemDefaultEncodeErrors`: Use "
":c:member:`PyConfig.filesystem_errors` instead."
msgstr ""
":c:var:`!Py_FileSystemDefaultEncodeErrors`: 改用 "
":c:member:`PyConfig.filesystem_errors`。"

#: ../../deprecations/c-api-pending-removal-in-3.14.rst:67
msgid ""
":c:var:`!Py_UTF8Mode`: Use :c:member:`PyPreConfig.utf8_mode` instead. (see "
":c:func:`Py_PreInitialize`)"
msgstr ""
":c:var:`!Py_UTF8Mode`: 改用 :c:member:`PyPreConfig.utf8_mode`。 (参见 "
":c:func:`Py_PreInitialize`)"

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:4
msgid "The bundled copy of ``libmpdecimal``."
msgstr "捆绑的 ``libmpdecimal`` 副本。"

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:5
msgid ""
"The :c:func:`PyImport_ImportModuleNoBlock`: Use "
":c:func:`PyImport_ImportModule` instead."
msgstr ""
"The :c:func:`PyImport_ImportModuleNoBlock`: 改用 "
":c:func:`PyImport_ImportModule`。"

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:7
msgid ""
":c:func:`PyWeakref_GetObject` and :c:func:`PyWeakref_GET_OBJECT`: Use "
":c:func:`!PyWeakref_GetRef` instead."
msgstr ""
":c:func:`PyWeakref_GetObject` 和 :c:func:`PyWeakref_GET_OBJECT`：改用 "
":c:func:`!PyWeakref_GetRef`。"

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:9
msgid ""
":c:type:`Py_UNICODE` type and the :c:macro:`!Py_UNICODE_WIDE` macro: Use "
":c:type:`wchar_t` instead."
msgstr ""
":c:type:`Py_UNICODE` 类型和 :c:macro:`!Py_UNICODE_WIDE` 宏：改用 :c:type:`wchar_t`。"

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:11
msgid "Python initialization functions:"
msgstr "Python 初始化函数"

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:13
msgid ""
":c:func:`PySys_ResetWarnOptions`: Clear :data:`sys.warnoptions` and "
":data:`!warnings.filters` instead."
msgstr ""
":c:func:`PySys_ResetWarnOptions`: 改为清除 :data:`sys.warnoptions` 和 "
":data:`!warnings.filters`。"

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:15
msgid ":c:func:`Py_GetExecPrefix`: Get :data:`sys.exec_prefix` instead."
msgstr ":c:func:`Py_GetExecPrefix`: 改为获取 :data:`sys.exec_prefix`。"

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:17
msgid ":c:func:`Py_GetPath`: Get :data:`sys.path` instead."
msgstr ":c:func:`Py_GetPath`: 改为获取 :data:`sys.path`。"

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:19
msgid ":c:func:`Py_GetPrefix`: Get :data:`sys.prefix` instead."
msgstr ":c:func:`Py_GetPrefix`: 改为获取 :data:`sys.prefix`。"

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:21
msgid ":c:func:`Py_GetProgramFullPath`: Get :data:`sys.executable` instead."
msgstr ":c:func:`Py_GetProgramFullPath`: 改为获取 :data:`sys.executable`。"

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:23
msgid ":c:func:`Py_GetProgramName`: Get :data:`sys.executable` instead."
msgstr ":c:func:`Py_GetProgramName`: 改为获取 :data:`sys.executable`。"

#: ../../deprecations/c-api-pending-removal-in-3.15.rst:25
msgid ""
":c:func:`Py_GetPythonHome`: Get :c:member:`PyConfig.home` or the "
":envvar:`PYTHONHOME` environment variable instead."
msgstr ""
":c:func:`Py_GetPythonHome`: 改为获取 :c:member:`PyConfig.home` 或 "
":envvar:`PYTHONHOME` 环境变量。"

#: ../../deprecations/c-api-pending-removal-in-future.rst:4
msgid ""
"The following APIs are deprecated and will be removed, although there is "
"currently no date scheduled for their removal."
msgstr "以下 API 已被弃用，将被移除，但目前尚未确定移除日期。"

#: ../../deprecations/c-api-pending-removal-in-future.rst:7
msgid ":c:macro:`Py_TPFLAGS_HAVE_FINALIZE`: Unneeded since Python 3.8."
msgstr ":c:macro:`Py_TPFLAGS_HAVE_FINALIZE`: 自 Python 3.8 起不再需要。"

#: ../../deprecations/c-api-pending-removal-in-future.rst:9
msgid ":c:func:`PyErr_Fetch`: Use :c:func:`PyErr_GetRaisedException` instead."
msgstr ":c:func:`PyErr_Fetch`: 改用 :c:func:`PyErr_GetRaisedException`。"

#: ../../deprecations/c-api-pending-removal-in-future.rst:11
msgid ""
":c:func:`PyErr_NormalizeException`: Use :c:func:`PyErr_GetRaisedException` "
"instead."
msgstr ""
":c:func:`PyErr_NormalizeException`: 改用 :c:func:`PyErr_GetRaisedException`。"

#: ../../deprecations/c-api-pending-removal-in-future.rst:13
msgid ""
":c:func:`PyErr_Restore`: Use :c:func:`PyErr_SetRaisedException` instead."
msgstr ":c:func:`PyErr_Restore`: 改用 :c:func:`PyErr_SetRaisedException`。"

#: ../../deprecations/c-api-pending-removal-in-future.rst:15
msgid ""
":c:func:`PyModule_GetFilename`: Use :c:func:`PyModule_GetFilenameObject` "
"instead."
msgstr ""
":c:func:`PyModule_GetFilename`: 改用 :c:func:`PyModule_GetFilenameObject`。"

#: ../../deprecations/c-api-pending-removal-in-future.rst:17
msgid ":c:func:`PyOS_AfterFork`: Use :c:func:`PyOS_AfterFork_Child` instead."
msgstr ":c:func:`PyOS_AfterFork`: 改用 :c:func:`PyOS_AfterFork_Child`。"

#: ../../deprecations/c-api-pending-removal-in-future.rst:19
msgid ""
":c:func:`PySlice_GetIndicesEx`: Use :c:func:`PySlice_Unpack` and "
":c:func:`PySlice_AdjustIndices` instead."
msgstr ""
":c:func:`PySlice_GetIndicesEx`: 改用 :c:func:`PySlice_Unpack` and "
":c:func:`PySlice_AdjustIndices`。"

#: ../../deprecations/c-api-pending-removal-in-future.rst:21
msgid ""
":c:func:`!PyUnicode_AsDecodedObject`: Use :c:func:`PyCodec_Decode` instead."
msgstr ":c:func:`!PyUnicode_AsDecodedObject`: 改用 :c:func:`PyCodec_Decode`。"

#: ../../deprecations/c-api-pending-removal-in-future.rst:23
msgid ""
":c:func:`!PyUnicode_AsDecodedUnicode`: Use :c:func:`PyCodec_Decode` instead."
msgstr ":c:func:`!PyUnicode_AsDecodedUnicode`: 改用 :c:func:`PyCodec_Decode`。"

#: ../../deprecations/c-api-pending-removal-in-future.rst:25
msgid ""
":c:func:`!PyUnicode_AsEncodedObject`: Use :c:func:`PyCodec_Encode` instead."
msgstr ":c:func:`!PyUnicode_AsEncodedObject`: 改用 :c:func:`PyCodec_Encode`。"

#: ../../deprecations/c-api-pending-removal-in-future.rst:27
msgid ""
":c:func:`!PyUnicode_AsEncodedUnicode`: Use :c:func:`PyCodec_Encode` instead."
msgstr ":c:func:`!PyUnicode_AsEncodedUnicode`: 改用 :c:func:`PyCodec_Encode`。"

#: ../../deprecations/c-api-pending-removal-in-future.rst:29
msgid ":c:func:`PyUnicode_READY`: Unneeded since Python 3.12"
msgstr ":c:func:`PyUnicode_READY`: 自 Python 3.12 起不再需要"

#: ../../deprecations/c-api-pending-removal-in-future.rst:31
msgid ""
":c:func:`!PyErr_Display`: Use :c:func:`PyErr_DisplayException` instead."
msgstr ":c:func:`!PyErr_Display`: 改用 :c:func:`PyErr_DisplayException`。"

#: ../../deprecations/c-api-pending-removal-in-future.rst:33
msgid ""
":c:func:`!_PyErr_ChainExceptions`: Use :c:func:`!_PyErr_ChainExceptions1` "
"instead."
msgstr ""
":c:func:`!_PyErr_ChainExceptions`: 改用 :c:func:`!_PyErr_ChainExceptions1`。"

#: ../../deprecations/c-api-pending-removal-in-future.rst:35
msgid ""
":c:member:`!PyBytesObject.ob_shash` member: call :c:func:`PyObject_Hash` "
"instead."
msgstr ":c:member:`!PyBytesObject.ob_shash` 成员：改为调用 :c:func:`PyObject_Hash`。"

#: ../../deprecations/c-api-pending-removal-in-future.rst:37
msgid ":c:member:`!PyDictObject.ma_version_tag` member."
msgstr ":c:member:`!PyDictObject.ma_version_tag` 成员。"

#: ../../deprecations/c-api-pending-removal-in-future.rst:38
msgid "Thread Local Storage (TLS) API:"
msgstr "线程本地存储 (TLS) API："

#: ../../deprecations/c-api-pending-removal-in-future.rst:40
msgid ""
":c:func:`PyThread_create_key`: Use :c:func:`PyThread_tss_alloc` instead."
msgstr ":c:func:`PyThread_create_key`: 改用 :c:func:`PyThread_tss_alloc`。"

#: ../../deprecations/c-api-pending-removal-in-future.rst:42
msgid ""
":c:func:`PyThread_delete_key`: Use :c:func:`PyThread_tss_free` instead."
msgstr ":c:func:`PyThread_delete_key`: 改用 :c:func:`PyThread_tss_free`。"

#: ../../deprecations/c-api-pending-removal-in-future.rst:44
msgid ""
":c:func:`PyThread_set_key_value`: Use :c:func:`PyThread_tss_set` instead."
msgstr ":c:func:`PyThread_set_key_value`: 改用 :c:func:`PyThread_tss_set`。"

#: ../../deprecations/c-api-pending-removal-in-future.rst:46
msgid ""
":c:func:`PyThread_get_key_value`: Use :c:func:`PyThread_tss_get` instead."
msgstr ":c:func:`PyThread_get_key_value`: 改用 :c:func:`PyThread_tss_get`。"

#: ../../deprecations/c-api-pending-removal-in-future.rst:48
msgid ""
":c:func:`PyThread_delete_key_value`: Use :c:func:`PyThread_tss_delete` "
"instead."
msgstr ""
":c:func:`PyThread_delete_key_value`: 改用 :c:func:`PyThread_tss_delete`。"

#: ../../deprecations/c-api-pending-removal-in-future.rst:50
msgid ":c:func:`PyThread_ReInitTLS`: Unneeded since Python 3.7."
msgstr ":c:func:`PyThread_ReInitTLS`: 自 Python 3.7 起不再需要。"
