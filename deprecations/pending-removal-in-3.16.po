# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# lian Wu (Wulian) <xiguawulian@gmail.com>, 2025
# Alpha Du <alphanow@gmail.com>, 2025
# Freesand Leo <yuqinju@163.com>, 2025
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-05-16 14:19+0000\n"
"PO-Revision-Date: 2024-07-20 00:54+0000\n"
"Last-Translator: Freesand Leo <yuqinju@163.com>, 2025\n"
"Language-Team: Chinese (China) (https://app.transifex.com/python-doc/teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../deprecations/pending-removal-in-3.16.rst:2
msgid "Pending removal in Python 3.16"
msgstr "计划在 Python 3.16 中移除"

#: ../../deprecations/pending-removal-in-3.16.rst:4
msgid "The import system:"
msgstr "导入系统："

#: ../../deprecations/pending-removal-in-3.16.rst:6
msgid ""
"Setting :attr:`~module.__loader__` on a module while failing to set "
":attr:`__spec__.loader <importlib.machinery.ModuleSpec.loader>` is "
"deprecated. In Python 3.16, :attr:`!__loader__` will cease to be set or "
"taken into consideration by the import system or the standard library."
msgstr ""
"当设置 :attr:`__spec__.loader <importlib.machinery.ModuleSpec.loader>` "
"失败时在模块上设置 :attr:`~module.__loader__` 的做法已被弃用。 在 Python 3.16 "
"中，:attr:`!__loader__` 将不会再被设置或是被导入系统或标准库纳入考虑。"

#: ../../deprecations/pending-removal-in-3.16.rst:11
msgid ":mod:`array`:"
msgstr ":mod:`array`:"

#: ../../deprecations/pending-removal-in-3.16.rst:13
msgid ""
"The ``'u'`` format code (:c:type:`wchar_t`) has been deprecated in "
"documentation since Python 3.3 and at runtime since Python 3.13. Use the "
"``'w'`` format code (:c:type:`Py_UCS4`) for Unicode characters instead."
msgstr ""
"``'u'`` 格式代码 (:c:type:`wchar_t`) 自 Python 3.3 起已在文档中弃用并自 Python 3.13 "
"起在运行时弃用。 对于 Unicode 字符请改用 ``'w'`` 格式代码 (:c:type:`Py_UCS4`)。"

#: ../../deprecations/pending-removal-in-3.16.rst:19
msgid ":mod:`asyncio`:"
msgstr ":mod:`asyncio`:"

#: ../../deprecations/pending-removal-in-3.16.rst:21
msgid ""
":func:`!asyncio.iscoroutinefunction` is deprecated and will be removed in "
"Python 3.16; use :func:`inspect.iscoroutinefunction` instead. (Contributed "
"by Jiahao Li and Kumar Aditya in :gh:`122875`.)"
msgstr ""
":func:`!asyncio.iscoroutinefunction` 已被弃用并将在 Python 3.16 中移除，请改用 :func:`inspect.iscoroutinefunction`。\n"
"（由李佳昊和 Kumar Aditya 在 :gh:`122875` 中贡献。）"

#: ../../deprecations/pending-removal-in-3.16.rst:26
msgid ""
":mod:`asyncio` policy system is deprecated and will be removed in Python "
"3.16. In particular, the following classes and functions are deprecated:"
msgstr ":mod:`asyncio` 策略系统已被弃用并将在 Python 3.16 中移除。 具体而言，是弃用了下列类和函数："

#: ../../deprecations/pending-removal-in-3.16.rst:29
msgid ":class:`asyncio.AbstractEventLoopPolicy`"
msgstr ":class:`asyncio.AbstractEventLoopPolicy`"

#: ../../deprecations/pending-removal-in-3.16.rst:30
msgid ":class:`asyncio.DefaultEventLoopPolicy`"
msgstr ":class:`asyncio.DefaultEventLoopPolicy`"

#: ../../deprecations/pending-removal-in-3.16.rst:31
msgid ":class:`asyncio.WindowsSelectorEventLoopPolicy`"
msgstr ":class:`asyncio.WindowsSelectorEventLoopPolicy`"

#: ../../deprecations/pending-removal-in-3.16.rst:32
msgid ":class:`asyncio.WindowsProactorEventLoopPolicy`"
msgstr ":class:`asyncio.WindowsProactorEventLoopPolicy`"

#: ../../deprecations/pending-removal-in-3.16.rst:33
msgid ":func:`asyncio.get_event_loop_policy`"
msgstr ":func:`asyncio.get_event_loop_policy`"

#: ../../deprecations/pending-removal-in-3.16.rst:34
msgid ":func:`asyncio.set_event_loop_policy`"
msgstr ":func:`asyncio.set_event_loop_policy`"

#: ../../deprecations/pending-removal-in-3.16.rst:36
msgid ""
"Users should use :func:`asyncio.run` or :class:`asyncio.Runner` with "
"*loop_factory* to use the desired event loop implementation."
msgstr ""
"用户应当使用 :func:`asyncio.run` 或 :class:`asyncio.Runner` 并附带 *loop_factory* "
"以使用想要的事件循环实现。"

#: ../../deprecations/pending-removal-in-3.16.rst:39
msgid "For example, to use :class:`asyncio.SelectorEventLoop` on Windows::"
msgstr "例如，在 Windows 上使用 :class:`asyncio.SelectorEventLoop`::"

#: ../../deprecations/pending-removal-in-3.16.rst:41
msgid ""
"import asyncio\n"
"\n"
"async def main():\n"
"    ...\n"
"\n"
"asyncio.run(main(), loop_factory=asyncio.SelectorEventLoop)"
msgstr ""
"import asyncio\n"
"\n"
"async def main():\n"
"    ...\n"
"\n"
"asyncio.run(main(), loop_factory=asyncio.SelectorEventLoop)"

#: ../../deprecations/pending-removal-in-3.16.rst:48
msgid "(Contributed by Kumar Aditya in :gh:`127949`.)"
msgstr "（由 Kumar Aditya 在 :gh:`127949` 中贡献。）"

#: ../../deprecations/pending-removal-in-3.16.rst:50
msgid ":mod:`builtins`:"
msgstr ":mod:`builtins`:"

#: ../../deprecations/pending-removal-in-3.16.rst:52
msgid ""
"Bitwise inversion on boolean types, ``~True`` or ``~False`` has been "
"deprecated since Python 3.12, as it produces surprising and unintuitive "
"results (``-2`` and ``-1``). Use ``not x`` instead for the logical negation "
"of a Boolean. In the rare case that you need the bitwise inversion of the "
"underlying integer, convert to ``int`` explicitly (``~int(x)``)."
msgstr ""
"对布尔类型 ``~True`` 或 ``~False`` 执行按位取反的操作自 Python 3.12 起已被弃用，因为它会产生奇怪和不直观的结果 "
"(``-2`` and ``-1``)。 请改用 ``not x`` 来对布尔值执行逻辑否操作。 "
"对于需要对下层整数执行按位取反操作的少数场合，请显式地将其转换为 ``int`` (``~int(x)``)。"

#: ../../deprecations/pending-removal-in-3.16.rst:59
msgid ":mod:`functools`:"
msgstr ":mod:`functools`："

#: ../../deprecations/pending-removal-in-3.16.rst:61
msgid ""
"Calling the Python implementation of :func:`functools.reduce` with "
"*function* or *sequence* as keyword arguments has been deprecated since "
"Python 3.14."
msgstr ""
"调用 :func:`functools.reduce` 的 Python 实现并传入 *function* 或 *sequence* "
"作为关键字参数的做法自 Python 3.14 起已被弃用。"

#: ../../deprecations/pending-removal-in-3.16.rst:64
msgid ":mod:`logging`:"
msgstr ":mod:`logging`："

#: ../../deprecations/pending-removal-in-3.16.rst:66
msgid ""
"Support for custom logging handlers with the *strm* argument is deprecated "
"and scheduled for removal in Python 3.16. Define handlers with the *stream* "
"argument instead. (Contributed by Mariusz Felisiak in :gh:`115032`.)"
msgstr ""
"使用 *strm* 参数对自定义日志记录处理器提供支持的做法已被弃用并计划在 Python 3.16 中移除。 改为使用 *stream* "
"参数定义处理器。 （由 Mariusz Felisiak 在 :gh:`115032` 中贡献。）"

#: ../../deprecations/pending-removal-in-3.16.rst:70
msgid ":mod:`mimetypes`:"
msgstr ":mod:`mimetypes`:"

#: ../../deprecations/pending-removal-in-3.16.rst:72
msgid ""
"Valid extensions start with a '.' or are empty for "
":meth:`mimetypes.MimeTypes.add_type`. Undotted extensions are deprecated and"
" will raise a :exc:`ValueError` in Python 3.16. (Contributed by Hugo van "
"Kemenade in :gh:`75223`.)"
msgstr ""
"有效扩展以 \". \" 开头或在 :meth:`mimetypes.MimeTypes.add_type` 为空。 未加点的扩展已弃用，在 "
"Python 3.16 中将引发 :exc:`ValueError`。 （由 Hugo van Kemenade 在 :gh:`75223` 中贡献。）"

#: ../../deprecations/pending-removal-in-3.16.rst:78
msgid ":mod:`shutil`:"
msgstr ":mod:`shutil`:"

#: ../../deprecations/pending-removal-in-3.16.rst:80
msgid ""
"The :class:`!ExecError` exception has been deprecated since Python 3.14. It "
"has not been used by any function in :mod:`!shutil` since Python 3.4, and is"
" now an alias of :exc:`RuntimeError`."
msgstr ""
":class:`!ExecError` 异常自 Python 3.14 起已被弃用。 它自 Python 3.4 起就未被 :mod:`!shutil`"
" 中的任何函数所使用，现在是 :exc:`RuntimeError` 的一个别名。"

#: ../../deprecations/pending-removal-in-3.16.rst:85
msgid ":mod:`symtable`:"
msgstr ":mod:`symtable`:"

#: ../../deprecations/pending-removal-in-3.16.rst:87
msgid ""
"The :meth:`Class.get_methods <symtable.Class.get_methods>` method has been "
"deprecated since Python 3.14."
msgstr ""
":meth:`Class.get_methods <symtable.Class.get_methods>` 方法自 Python 3.14 起被弃用。"

#: ../../deprecations/pending-removal-in-3.16.rst:90
msgid ":mod:`sys`:"
msgstr ":mod:`sys`:"

#: ../../deprecations/pending-removal-in-3.16.rst:92
msgid ""
"The :func:`~sys._enablelegacywindowsfsencoding` function has been deprecated"
" since Python 3.13. Use the :envvar:`PYTHONLEGACYWINDOWSFSENCODING` "
"environment variable instead."
msgstr ""
":func:`~sys._enablelegacywindowsfsencoding` 函数自 Python 3.13 起被弃用。 请改用 "
":envvar:`PYTHONLEGACYWINDOWSFSENCODING` 环境变量。"

#: ../../deprecations/pending-removal-in-3.16.rst:96
msgid ":mod:`sysconfig`:"
msgstr ":mod:`sysconfig`:"

#: ../../deprecations/pending-removal-in-3.16.rst:98
msgid ""
"The :func:`!sysconfig.expand_makefile_vars` function has been deprecated "
"since Python 3.14. Use the ``vars`` argument of :func:`sysconfig.get_paths` "
"instead."
msgstr ""
"自 Python 3.14 起，:func:`!sysconfig.expand_makefile_vars` 函数已被弃用。请使用 "
":func:`sysconfig.get_paths` 的 ``vars`` 参数代替。"

#: ../../deprecations/pending-removal-in-3.16.rst:102
msgid ":mod:`tarfile`:"
msgstr ":mod:`tarfile`:"

#: ../../deprecations/pending-removal-in-3.16.rst:104
msgid ""
"The undocumented and unused :attr:`!TarFile.tarfile` attribute has been "
"deprecated since Python 3.13."
msgstr "未写入文档也未被使用的 :attr:`!TarFile.tarfile` 属性自 Python 3.13 起被弃用。"
