# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2025
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-07-25 18:10+0000\n"
"PO-Revision-Date: 2025-07-18 20:08+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2025\n"
"Language-Team: Chinese (China) (https://app.transifex.com/python-doc/teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../installing/index.rst:7
msgid "Installing Python Modules"
msgstr "安装 Python 模块"

#: ../../installing/index.rst:0
msgid "Email"
msgstr "电子邮箱"

#: ../../installing/index.rst:9
msgid "distutils-sig@python.org"
msgstr "distutils-sig@python.org"

#: ../../installing/index.rst:11
msgid ""
"As a popular open source development project, Python has an active "
"supporting community of contributors and users that also make their software"
" available for other Python developers to use under open source license "
"terms."
msgstr ""
"作为一个流行的开源开发项目，Python拥有一个活跃的贡献者和用户支持社区，这些社区也可以让他们的软件可供其他Python开发人员在开源许可条款下使用。"

#: ../../installing/index.rst:15
msgid ""
"This allows Python users to share and collaborate effectively, benefiting "
"from the solutions others have already created to common (and sometimes even"
" rare!) problems, as well as potentially contributing their own solutions to"
" the common pool."
msgstr "这允许Python用户有效地共享和协作，从其他人已经创建的解决方案中受益于常见（有时甚至是罕见的）问题，以及可以提供他们自己的解决方案。"

#: ../../installing/index.rst:20
msgid ""
"This guide covers the installation part of the process. For a guide to "
"creating and sharing your own Python projects, refer to the "
":ref:`distribution guide <distributing-index>`."
msgstr "本指南涵盖了分发部分的流程。有关安装其他Python项目的指南，请参阅 :ref:`安装指南<distributing-index>`。"

#: ../../installing/index.rst:26
msgid ""
"For corporate and other institutional users, be aware that many "
"organisations have their own policies around using and contributing to open "
"source software. Please take such policies into account when making use of "
"the distribution and installation tools provided with Python."
msgstr "对于企业和其他机构用户，请注意许多组织都有自己的政策来使用和贡献开源软件。在使用Python提供的分发和安装工具时，请考虑这些政策。"

#: ../../installing/index.rst:33
msgid "Key terms"
msgstr "关键术语"

#: ../../installing/index.rst:35
msgid ""
"``pip`` is the preferred installer program. Starting with Python 3.4, it is "
"included by default with the Python binary installers."
msgstr "``pip`` 是首选的安装程序。从Python 3.4开始，它默认包含在Python二进制安装程序中。"

#: ../../installing/index.rst:37
msgid ""
"A *virtual environment* is a semi-isolated Python environment that allows "
"packages to be installed for use by a particular application, rather than "
"being installed system wide."
msgstr "*virtual environment* 是一种半隔离的 Python 环境，允许为特定的应用安装各自的包，而不是安装到整个系统。"

#: ../../installing/index.rst:40
msgid ""
"``venv`` is the standard tool for creating virtual environments, and has "
"been part of Python since Python 3.3. Starting with Python 3.4, it defaults "
"to installing ``pip`` into all created virtual environments."
msgstr ""
"``venv`` 是创建虚拟环境的标准工具，从 Python 3.3 开始成为 Python 的组成部分。 从 Python 3.4 开始，它会默认安装"
" ``pip`` 到所创建的全部虚拟环境。"

#: ../../installing/index.rst:43
msgid ""
"``virtualenv`` is a third party alternative (and predecessor) to ``venv``. "
"It allows virtual environments to be used on versions of Python prior to "
"3.4, which either don't provide ``venv`` at all, or aren't able to "
"automatically install ``pip`` into created environments."
msgstr ""
"``virtualenv`` 是 ``venv`` 的第三方替代（及其前身）。 它允许在 Python 3.4 "
"之前的版本中使用虚拟环境，那些版本或是完全不提供 ``venv``，或是不会自动安装 ``pip`` 到所创建的虚拟环境。"

#: ../../installing/index.rst:47
msgid ""
"The `Python Package Index <https://pypi.org>`__ is a public repository of "
"open source licensed packages made available for use by other Python users."
msgstr ""
"`Python Package Index <https://pypi.org>`__ 是一个开源许可的软件包公共存储库，可供所有 Python "
"用户使用。"

#: ../../installing/index.rst:50
msgid ""
"the `Python Packaging Authority <https://www.pypa.io/>`__ is the group of "
"developers and documentation authors responsible for the maintenance and "
"evolution of the standard packaging tools and the associated metadata and "
"file format standards. They maintain a variety of tools, documentation, and "
"issue trackers on both `GitHub <https://github.com/pypa>`__ and `Bitbucket "
"<https://bitbucket.org/pypa/>`__."
msgstr ""
"`Python Packaging Authority <https://www.pypa.io/>`__ "
"是负责标准打包工具以及相关元数据和文件格式标准维护与改进的开发人员和文档作者团队。 他们基于 `GitHub "
"<https://github.com/pypa>`__ 和 `Bitbucket <https://bitbucket.org/pypa/>`__ "
"这两个平台维护着各种工具、文档和问题追踪系统。"

#: ../../installing/index.rst:57
msgid ""
"``distutils`` is the original build and distribution system first added to "
"the Python standard library in 1998. While direct use of ``distutils`` is "
"being phased out, it still laid the foundation for the current packaging and"
" distribution infrastructure, and it not only remains part of the standard "
"library, but its name lives on in other ways (such as the name of the "
"mailing list used to coordinate Python packaging standards development)."
msgstr ""
"``distutils`` 是最初的构建和分发系统，于 1998 年首次加入 Python 标准库。 虽然直接使用 ``distutils`` "
"的方式已被淘汰，它仍然是当前打包和分发架构的基础，而且它不仅仍然是标准库的一部分，这个名称还以其他方式存在（例如用于协调 Python "
"打包标准开发流程的邮件列表就以此命名）。"

#: ../../installing/index.rst:65
msgid ""
"The use of ``venv`` is now recommended for creating virtual environments."
msgstr "现在推荐使用 ``venv`` 来创建虚拟环境。"

#: ../../installing/index.rst:70
msgid ""
"`Python Packaging User Guide: Creating and using virtual environments "
"<https://packaging.python.org/installing/#creating-virtual-environments>`__"
msgstr ""
"`Python 软件包用户指南：创建和使用虚拟环境 "
"<https://packaging.python.org/installing/#creating-virtual-environments>`__"

#: ../../installing/index.rst:75
msgid "Basic usage"
msgstr "基本使用"

#: ../../installing/index.rst:77
msgid ""
"The standard packaging tools are all designed to be used from the command "
"line."
msgstr "标准打包工具完全是针对命令行使用方式来设计的。"

#: ../../installing/index.rst:80
msgid ""
"The following command will install the latest version of a module and its "
"dependencies from the Python Package Index::"
msgstr "以下命令将从 Python Package Index 安装一个模块的最新版本及其依赖项::"

#: ../../installing/index.rst:87
msgid ""
"For POSIX users (including macOS and Linux users), the examples in this "
"guide assume the use of a :term:`virtual environment`."
msgstr ""
"对于 POSIX 用户（包括 macOS 和 Linux 用户）本指南中的示例假定使用了 :term:`virtual environment`。"

#: ../../installing/index.rst:90
msgid ""
"For Windows users, the examples in this guide assume that the option to "
"adjust the system PATH environment variable was selected when installing "
"Python."
msgstr "对于 Windows 用户，本指南中的示例假定在安装 Python 时选择了修改系统 PATH 环境变量。"

#: ../../installing/index.rst:94
msgid ""
"It's also possible to specify an exact or minimum version directly on the "
"command line. When using comparator operators such as ``>``, ``<`` or some "
"other special character which get interpreted by shell, the package name and"
" the version should be enclosed within double quotes::"
msgstr ""
"在命令行中指定一个准确或最小版本也是可以的。 当使用比较运算符例如 ``>``, ``<`` "
"或其他某些可以被终端所解析的特殊字符时，包名称与版本号应当用双引号括起来::"

#: ../../installing/index.rst:102
msgid ""
"Normally, if a suitable module is already installed, attempting to install "
"it again will have no effect. Upgrading existing modules must be requested "
"explicitly::"
msgstr "通常，如果一个匹配的模块已安装，尝试再次安装将不会有任何效果。 要升级现有模块必须显式地发出请求::"

#: ../../installing/index.rst:108
msgid ""
"More information and resources regarding ``pip`` and its capabilities can be"
" found in the `Python Packaging User Guide "
"<https://packaging.python.org>`__."
msgstr ""
"更多有关 ``pip`` 及其功能的信息和资源可以在 `Python 软件包用户指南 <https://packaging.python.org>`__"
" 中找到。"

#: ../../installing/index.rst:111
msgid ""
"Creation of virtual environments is done through the :mod:`venv` module. "
"Installing packages into an active virtual environment uses the commands "
"shown above."
msgstr "虚拟环境的创建可使用 :mod:`venv` 模块来完成。 向已激活虚拟环境安装软件包可使用上文所介绍的命令。"

#: ../../installing/index.rst:117
msgid ""
"`Python Packaging User Guide: Installing Python Distribution Packages "
"<https://packaging.python.org/installing/>`__"
msgstr ""
"`Python 软件包用户指南：安装 Python 分发包 <https://packaging.python.org/installing/>`__"

#: ../../installing/index.rst:122
msgid "How do I ...?"
msgstr "我应如何 ...？"

#: ../../installing/index.rst:124
msgid "These are quick answers or links for some common tasks."
msgstr "这是一些常见任务的快速解答或相关链接。"

#: ../../installing/index.rst:127
msgid "... install ``pip`` in versions of Python prior to Python 3.4?"
msgstr "... 在 Python 3.4 之前的 Python 版本中安装 ``pip`` ？"

#: ../../installing/index.rst:129
msgid ""
"Python only started bundling ``pip`` with Python 3.4. For earlier versions, "
"``pip`` needs to be \"bootstrapped\" as described in the Python Packaging "
"User Guide."
msgstr ""
"Python 捆绑 ``pip`` 是从 Python 3.4 才开始的。 对于更早的版本，``pip`` 需要“引导安装”，具体说明参见 Python"
" 软件包用户指南。"

#: ../../installing/index.rst:135
msgid ""
"`Python Packaging User Guide: Requirements for Installing Packages "
"<https://packaging.python.org/installing/#requirements-for-installing-"
"packages>`__"
msgstr ""
"`Python 软件包用户指南：安装软件包的前提要求 "
"<https://packaging.python.org/installing/#requirements-for-installing-"
"packages>`__"

#: ../../installing/index.rst:142
msgid "... install packages just for the current user?"
msgstr "... 只为当前用户安装软件包？"

#: ../../installing/index.rst:144
msgid ""
"Passing the ``--user`` option to ``python -m pip install`` will install a "
"package just for the current user, rather than for all users of the system."
msgstr "将 ``--user`` 选项传入 ``python -m pip install`` 将只为当前用户而非为系统中的所有用户安装软件包。"

#: ../../installing/index.rst:149
msgid "... install scientific Python packages?"
msgstr "... 安装科学计算类 Python 软件包？"

#: ../../installing/index.rst:151
msgid ""
"A number of scientific Python packages have complex binary dependencies, and"
" aren't currently easy to install using ``pip`` directly. At this point in "
"time, it will often be easier for users to install these packages by `other "
"means <https://packaging.python.org/science/>`__ rather than attempting to "
"install them with ``pip``."
msgstr ""
"许多科学计算类 Python 软件包都有复杂的二进制编译文件依赖，直接使用 ``pip`` 安装目前并不太容易。 在当前情况下，通过 `其他方式 "
"<https://packaging.python.org/science/>`__ 而非尝试用 ``pip`` 安装这些软件包对用户来说通常会更容易。"

#: ../../installing/index.rst:159
msgid ""
"`Python Packaging User Guide: Installing Scientific Packages "
"<https://packaging.python.org/science/>`__"
msgstr "`Python 软件包用户指南：安装科学计算类软件包 <https://packaging.python.org/science/>`__"

#: ../../installing/index.rst:164
msgid "... work with multiple versions of Python installed in parallel?"
msgstr "... 使用并行安装的多个 Python 版本？"

#: ../../installing/index.rst:166
msgid ""
"On Linux, macOS, and other POSIX systems, use the versioned Python commands "
"in combination with the ``-m`` switch to run the appropriate copy of "
"``pip``::"
msgstr ""
"在 Linux, macOS 以及其他 POSIX 系统中，使用带版本号的 Python 命令配合 ``-m`` 开关选项来运行特定版本的 "
"``pip``::"

#: ../../installing/index.rst:175
msgid "Appropriately versioned ``pip`` commands may also be available."
msgstr "也可以使用带特定版本号的 ``pip`` 命令。"

#: ../../installing/index.rst:177
msgid ""
"On Windows, use the ``py`` Python launcher in combination with the ``-m`` "
"switch::"
msgstr "在 Windows 中，使用 ``py`` Python 启动器命令配合 ``-m`` 开关选项::"

#: ../../installing/index.rst:194
msgid "Common installation issues"
msgstr "常见的安装问题"

#: ../../installing/index.rst:197
msgid "Installing into the system Python on Linux"
msgstr "在 Linux 的系统 Python 版本上安装"

#: ../../installing/index.rst:199
msgid ""
"On Linux systems, a Python installation will typically be included as part "
"of the distribution. Installing into this Python installation requires root "
"access to the system, and may interfere with the operation of the system "
"package manager and other components of the system if a component is "
"unexpectedly upgraded using ``pip``."
msgstr ""
"Linux 系统通常会将某个 Python 版本作为发行版的一部分包含在内。 将软件包安装到这个 Python 版本上需要系统 root "
"权限，并可能会干扰到系统包管理器和其他系统组件的运作，如果这些组件在使用 ``pip`` 时被意外升级的话。"

#: ../../installing/index.rst:205
msgid ""
"On such systems, it is often better to use a virtual environment or a per-"
"user installation when installing packages with ``pip``."
msgstr "在这样的系统上，通过 ``pip`` 安装软件包通常最好是使用虚拟环境或分用户安装。"

#: ../../installing/index.rst:210
msgid "Pip not installed"
msgstr "未安装 pip"

#: ../../installing/index.rst:212
msgid ""
"It is possible that ``pip`` does not get installed by default. One potential"
" fix is::"
msgstr "默认情况下可能未安装 ``pip``，一种可选解决方案是::"

#: ../../installing/index.rst:216
msgid ""
"There are also additional resources for `installing pip. "
"<https://packaging.python.org/en/latest/tutorials/installing-"
"packages/#ensure-pip-setuptools-and-wheel-are-up-to-date>`__"
msgstr ""
"还有其他附加资源可用来 `安装 pip。 "
"<https://packaging.python.org/en/latest/tutorials/installing-"
"packages/#ensure-pip-setuptools-and-wheel-are-up-to-date>`__"

#: ../../installing/index.rst:221
msgid "Installing binary extensions"
msgstr "安装二进制编译扩展"

#: ../../installing/index.rst:223
msgid ""
"Python has typically relied heavily on source based distribution, with end "
"users being expected to compile extension modules from source as part of the"
" installation process."
msgstr "Python 通常非常依赖基于源代码的发布方式，也就是期望最终用户在安装过程中使用源码来编译生成扩展模块。"

#: ../../installing/index.rst:227
msgid ""
"With the introduction of support for the binary ``wheel`` format, and the "
"ability to publish wheels for at least Windows and macOS through the Python "
"Package Index, this problem is expected to diminish over time, as users are "
"more regularly able to install pre-built extensions rather than needing to "
"build them themselves."
msgstr ""
"随着对二进制码 ``wheel`` 格式支持的引入，以及通过 Python Package Index 至少发布 Windows 和 macOS 版的 "
"wheel 文件，预计此问题将逐步得到解决，因为用户将能够更频繁地安装预编译扩展，而不再需要自己编译它们。"

#: ../../installing/index.rst:233
msgid ""
"Some of the solutions for installing `scientific software "
"<https://packaging.python.org/science/>`__ that are not yet available as "
"pre-built ``wheel`` files may also help with obtaining other binary "
"extensions without needing to build them locally."
msgstr ""
"某些用来安装 `科学计算类软件包 <https://packaging.python.org/science/>`__ 的解决方案对于尚未提供预编译 "
"``wheel`` 文件的那些扩展模块来说，也有助于用户在无需进行本机编译的情况下获取二进制码扩展模块。"

#: ../../installing/index.rst:240
msgid ""
"`Python Packaging User Guide: Binary Extensions "
"<https://packaging.python.org/extensions/>`__"
msgstr "`Python 软件包用户指南：二进制码扩展 <https://packaging.python.org/extensions/>`__"
