# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-07-25 16:48+0000\n"
"PO-Revision-Date: 2025-07-18 20:05+0000\n"
"Language-Team: Chinese (China) (https://app.transifex.com/python-doc/teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../installing/index.rst:7
msgid "Installing Python Modules"
msgstr ""

#: ../../installing/index.rst:0
msgid "Email"
msgstr ""

#: ../../installing/index.rst:9
msgid "distutils-sig@python.org"
msgstr ""

#: ../../installing/index.rst:11
msgid ""
"As a popular open source development project, Python has an active "
"supporting community of contributors and users that also make their software"
" available for other Python developers to use under open source license "
"terms."
msgstr ""

#: ../../installing/index.rst:15
msgid ""
"This allows Python users to share and collaborate effectively, benefiting "
"from the solutions others have already created to common (and sometimes even"
" rare!) problems, as well as potentially contributing their own solutions to"
" the common pool."
msgstr ""

#: ../../installing/index.rst:20
msgid ""
"This guide covers the installation part of the process. For a guide to "
"creating and sharing your own Python projects, refer to the `Python "
"packaging user guide`_."
msgstr ""

#: ../../installing/index.rst:28
msgid ""
"For corporate and other institutional users, be aware that many "
"organisations have their own policies around using and contributing to open "
"source software. Please take such policies into account when making use of "
"the distribution and installation tools provided with Python."
msgstr ""

#: ../../installing/index.rst:35
msgid "Key terms"
msgstr ""

#: ../../installing/index.rst:37
msgid ""
"``pip`` is the preferred installer program. Starting with Python 3.4, it is "
"included by default with the Python binary installers."
msgstr ""

#: ../../installing/index.rst:39
msgid ""
"A *virtual environment* is a semi-isolated Python environment that allows "
"packages to be installed for use by a particular application, rather than "
"being installed system wide."
msgstr ""

#: ../../installing/index.rst:42
msgid ""
"``venv`` is the standard tool for creating virtual environments, and has "
"been part of Python since Python 3.3. Starting with Python 3.4, it defaults "
"to installing ``pip`` into all created virtual environments."
msgstr ""

#: ../../installing/index.rst:45
msgid ""
"``virtualenv`` is a third party alternative (and predecessor) to ``venv``. "
"It allows virtual environments to be used on versions of Python prior to "
"3.4, which either don't provide ``venv`` at all, or aren't able to "
"automatically install ``pip`` into created environments."
msgstr ""

#: ../../installing/index.rst:49
msgid ""
"The `Python Package Index <https://pypi.org>`__ is a public repository of "
"open source licensed packages made available for use by other Python users."
msgstr ""

#: ../../installing/index.rst:52
msgid ""
"the `Python Packaging Authority <https://www.pypa.io/>`__ is the group of "
"developers and documentation authors responsible for the maintenance and "
"evolution of the standard packaging tools and the associated metadata and "
"file format standards. They maintain a variety of tools, documentation, and "
"issue trackers on both `GitHub <https://github.com/pypa>`__ and `Bitbucket "
"<https://bitbucket.org/pypa/>`__."
msgstr ""

#: ../../installing/index.rst:59
msgid ""
"``distutils`` is the original build and distribution system first added to "
"the Python standard library in 1998. While direct use of ``distutils`` is "
"being phased out, it still laid the foundation for the current packaging and"
" distribution infrastructure, and it not only remains part of the standard "
"library, but its name lives on in other ways (such as the name of the "
"mailing list used to coordinate Python packaging standards development)."
msgstr ""

#: ../../installing/index.rst:67
msgid ""
"The use of ``venv`` is now recommended for creating virtual environments."
msgstr ""

#: ../../installing/index.rst:72
msgid ""
"`Python Packaging User Guide: Creating and using virtual environments "
"<https://packaging.python.org/installing/#creating-virtual-environments>`__"
msgstr ""

#: ../../installing/index.rst:77
msgid "Basic usage"
msgstr ""

#: ../../installing/index.rst:79
msgid ""
"The standard packaging tools are all designed to be used from the command "
"line."
msgstr ""

#: ../../installing/index.rst:82
msgid ""
"The following command will install the latest version of a module and its "
"dependencies from the Python Package Index::"
msgstr ""

#: ../../installing/index.rst:89
msgid ""
"For POSIX users (including macOS and Linux users), the examples in this "
"guide assume the use of a :term:`virtual environment`."
msgstr ""

#: ../../installing/index.rst:92
msgid ""
"For Windows users, the examples in this guide assume that the option to "
"adjust the system PATH environment variable was selected when installing "
"Python."
msgstr ""

#: ../../installing/index.rst:96
msgid ""
"It's also possible to specify an exact or minimum version directly on the "
"command line. When using comparator operators such as ``>``, ``<`` or some "
"other special character which get interpreted by shell, the package name and"
" the version should be enclosed within double quotes::"
msgstr ""

#: ../../installing/index.rst:104
msgid ""
"Normally, if a suitable module is already installed, attempting to install "
"it again will have no effect. Upgrading existing modules must be requested "
"explicitly::"
msgstr ""

#: ../../installing/index.rst:110
msgid ""
"More information and resources regarding ``pip`` and its capabilities can be"
" found in the `Python Packaging User Guide "
"<https://packaging.python.org>`__."
msgstr ""

#: ../../installing/index.rst:113
msgid ""
"Creation of virtual environments is done through the :mod:`venv` module. "
"Installing packages into an active virtual environment uses the commands "
"shown above."
msgstr ""

#: ../../installing/index.rst:119
msgid ""
"`Python Packaging User Guide: Installing Python Distribution Packages "
"<https://packaging.python.org/installing/>`__"
msgstr ""

#: ../../installing/index.rst:124
msgid "How do I ...?"
msgstr ""

#: ../../installing/index.rst:126
msgid "These are quick answers or links for some common tasks."
msgstr ""

#: ../../installing/index.rst:129
msgid "... install ``pip`` in versions of Python prior to Python 3.4?"
msgstr ""

#: ../../installing/index.rst:131
msgid ""
"Python only started bundling ``pip`` with Python 3.4. For earlier versions, "
"``pip`` needs to be \"bootstrapped\" as described in the Python Packaging "
"User Guide."
msgstr ""

#: ../../installing/index.rst:137
msgid ""
"`Python Packaging User Guide: Requirements for Installing Packages "
"<https://packaging.python.org/installing/#requirements-for-installing-"
"packages>`__"
msgstr ""

#: ../../installing/index.rst:144
msgid "... install packages just for the current user?"
msgstr ""

#: ../../installing/index.rst:146
msgid ""
"Passing the ``--user`` option to ``python -m pip install`` will install a "
"package just for the current user, rather than for all users of the system."
msgstr ""

#: ../../installing/index.rst:151
msgid "... install scientific Python packages?"
msgstr ""

#: ../../installing/index.rst:153
msgid ""
"A number of scientific Python packages have complex binary dependencies, and"
" aren't currently easy to install using ``pip`` directly. At this point in "
"time, it will often be easier for users to install these packages by `other "
"means <https://packaging.python.org/science/>`__ rather than attempting to "
"install them with ``pip``."
msgstr ""

#: ../../installing/index.rst:161
msgid ""
"`Python Packaging User Guide: Installing Scientific Packages "
"<https://packaging.python.org/science/>`__"
msgstr ""

#: ../../installing/index.rst:166
msgid "... work with multiple versions of Python installed in parallel?"
msgstr ""

#: ../../installing/index.rst:168
msgid ""
"On Linux, macOS, and other POSIX systems, use the versioned Python commands "
"in combination with the ``-m`` switch to run the appropriate copy of "
"``pip``::"
msgstr ""

#: ../../installing/index.rst:177
msgid "Appropriately versioned ``pip`` commands may also be available."
msgstr ""

#: ../../installing/index.rst:179
msgid ""
"On Windows, use the ``py`` Python launcher in combination with the ``-m`` "
"switch::"
msgstr ""

#: ../../installing/index.rst:196
msgid "Common installation issues"
msgstr ""

#: ../../installing/index.rst:199
msgid "Installing into the system Python on Linux"
msgstr ""

#: ../../installing/index.rst:201
msgid ""
"On Linux systems, a Python installation will typically be included as part "
"of the distribution. Installing into this Python installation requires root "
"access to the system, and may interfere with the operation of the system "
"package manager and other components of the system if a component is "
"unexpectedly upgraded using ``pip``."
msgstr ""

#: ../../installing/index.rst:207
msgid ""
"On such systems, it is often better to use a virtual environment or a per-"
"user installation when installing packages with ``pip``."
msgstr ""

#: ../../installing/index.rst:212
msgid "Pip not installed"
msgstr ""

#: ../../installing/index.rst:214
msgid ""
"It is possible that ``pip`` does not get installed by default. One potential"
" fix is::"
msgstr ""

#: ../../installing/index.rst:218
msgid ""
"There are also additional resources for `installing pip. "
"<https://packaging.python.org/en/latest/tutorials/installing-"
"packages/#ensure-pip-setuptools-and-wheel-are-up-to-date>`__"
msgstr ""

#: ../../installing/index.rst:223
msgid "Installing binary extensions"
msgstr ""

#: ../../installing/index.rst:225
msgid ""
"Python has typically relied heavily on source based distribution, with end "
"users being expected to compile extension modules from source as part of the"
" installation process."
msgstr ""

#: ../../installing/index.rst:229
msgid ""
"With the introduction of support for the binary ``wheel`` format, and the "
"ability to publish wheels for at least Windows and macOS through the Python "
"Package Index, this problem is expected to diminish over time, as users are "
"more regularly able to install pre-built extensions rather than needing to "
"build them themselves."
msgstr ""

#: ../../installing/index.rst:235
msgid ""
"Some of the solutions for installing `scientific software "
"<https://packaging.python.org/science/>`__ that are not yet available as "
"pre-built ``wheel`` files may also help with obtaining other binary "
"extensions without needing to build them locally."
msgstr ""

#: ../../installing/index.rst:242
msgid ""
"`Python Packaging User Guide: Binary Extensions "
"<https://packaging.python.org/extensions/>`__"
msgstr ""
