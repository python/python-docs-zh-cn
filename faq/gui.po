# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-07-25 16:48+0000\n"
"PO-Revision-Date: 2025-07-18 20:05+0000\n"
"Language-Team: Chinese (China) (https://app.transifex.com/python-doc/teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../faq/gui.rst:5
msgid "Graphic User Interface FAQ"
msgstr ""

#: ../../faq/gui.rst:8
msgid "Contents"
msgstr ""

#: ../../faq/gui.rst:15
msgid "General GUI Questions"
msgstr ""

#: ../../faq/gui.rst:18
msgid "What GUI toolkits exist for Python?"
msgstr ""

#: ../../faq/gui.rst:20
msgid ""
"Standard builds of Python include an object-oriented interface to the Tcl/Tk"
" widget set, called :ref:`tkinter <Tkinter>`.  This is probably the easiest "
"to install (since it comes included with most `binary distributions "
"<https://www.python.org/downloads/>`_ of Python) and use. For more info "
"about Tk, including pointers to the source, see the `Tcl/Tk home page "
"<https://www.tcl.tk>`_.  Tcl/Tk is fully portable to the macOS, Windows, and"
" Unix platforms."
msgstr ""

#: ../../faq/gui.rst:28
msgid ""
"Depending on what platform(s) you are aiming at, there are also several "
"alternatives. A `list of cross-platform "
"<https://wiki.python.org/moin/GuiProgramming#Cross-Platform_Frameworks>`_ "
"and `platform-specific "
"<https://wiki.python.org/moin/GuiProgramming#Platform-specific_Frameworks>`_"
" GUI frameworks can be found on the python wiki."
msgstr ""

#: ../../faq/gui.rst:36
msgid "Tkinter questions"
msgstr ""

#: ../../faq/gui.rst:39
msgid "How do I freeze Tkinter applications?"
msgstr ""

#: ../../faq/gui.rst:41
msgid ""
"Freeze is a tool to create stand-alone applications.  When freezing Tkinter "
"applications, the applications will not be truly stand-alone, as the "
"application will still need the Tcl and Tk libraries."
msgstr ""

#: ../../faq/gui.rst:45
msgid ""
"One solution is to ship the application with the Tcl and Tk libraries, and "
"point to them at run-time using the :envvar:`!TCL_LIBRARY` and "
":envvar:`!TK_LIBRARY` environment variables."
msgstr ""

#: ../../faq/gui.rst:49
msgid ""
"To get truly stand-alone applications, the Tcl scripts that form the library"
" have to be integrated into the application as well. One tool supporting "
"that is SAM (stand-alone modules), which is part of the Tix distribution "
"(https://tix.sourceforge.net/)."
msgstr ""

#: ../../faq/gui.rst:54
msgid ""
"Build Tix with SAM enabled, perform the appropriate call to "
":c:func:`Tclsam_init`, etc. inside Python's :file:`Modules/tkappinit.c`, and"
" link with libtclsam and libtksam (you might include the Tix libraries as "
"well)."
msgstr ""

#: ../../faq/gui.rst:61
msgid "Can I have Tk events handled while waiting for I/O?"
msgstr ""

#: ../../faq/gui.rst:63
msgid ""
"On platforms other than Windows, yes, and you don't even need threads!  But "
"you'll have to restructure your I/O code a bit.  Tk has the equivalent of "
"Xt's :c:func:`!XtAddInput` call, which allows you to register a callback "
"function which will be called from the Tk mainloop when I/O is possible on a"
" file descriptor.  See :ref:`tkinter-file-handlers`."
msgstr ""

#: ../../faq/gui.rst:71
msgid "I can't get key bindings to work in Tkinter: why?"
msgstr ""

#: ../../faq/gui.rst:73
msgid ""
"An often-heard complaint is that event handlers :ref:`bound <bindings-and-"
"events>` to events with the :meth:`!bind` method don't get handled even when"
" the appropriate key is pressed."
msgstr ""

#: ../../faq/gui.rst:77
msgid ""
"The most common cause is that the widget to which the binding applies "
"doesn't have \"keyboard focus\".  Check out the Tk documentation for the "
"focus command. Usually a widget is given the keyboard focus by clicking in "
"it (but not for labels; see the takefocus option)."
msgstr ""
