# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-07-25 16:48+0000\n"
"PO-Revision-Date: 2025-07-18 20:06+0000\n"
"Language-Team: Chinese (China) (https://app.transifex.com/python-doc/teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/pyexpat.rst:2
msgid ":mod:`xml.parsers.expat` --- Fast XML parsing using Expat"
msgstr ""

#: ../../library/pyexpat.rst:21
msgid ""
"The :mod:`pyexpat` module is not secure against maliciously constructed "
"data.  If you need to parse untrusted or unauthenticated data see :ref:`xml-"
"vulnerabilities`."
msgstr ""

#: ../../library/pyexpat.rst:28
msgid ""
"The :mod:`xml.parsers.expat` module is a Python interface to the Expat non-"
"validating XML parser. The module provides a single extension type, "
":class:`xmlparser`, that represents the current state of an XML parser.  "
"After an :class:`xmlparser` object has been created, various attributes of "
"the object can be set to handler functions.  When an XML document is then "
"fed to the parser, the handler functions are called for the character data "
"and markup in the XML document."
msgstr ""

#: ../../library/pyexpat.rst:38
msgid ""
"This module uses the :mod:`pyexpat` module to provide access to the Expat "
"parser.  Direct use of the :mod:`pyexpat` module is deprecated."
msgstr ""

#: ../../library/pyexpat.rst:41
msgid "This module provides one exception and one type object:"
msgstr ""

#: ../../library/pyexpat.rst:46
msgid ""
"The exception raised when Expat reports an error.  See section "
":ref:`expaterror-objects` for more information on interpreting Expat errors."
msgstr ""

#: ../../library/pyexpat.rst:52
msgid "Alias for :exc:`ExpatError`."
msgstr ""

#: ../../library/pyexpat.rst:57
msgid "The type of the return values from the :func:`ParserCreate` function."
msgstr ""

#: ../../library/pyexpat.rst:59
msgid "The :mod:`xml.parsers.expat` module contains two functions:"
msgstr ""

#: ../../library/pyexpat.rst:64
msgid "Returns an explanatory string for a given error number *errno*."
msgstr ""

#: ../../library/pyexpat.rst:69
msgid ""
"Creates and returns a new :class:`xmlparser` object.   *encoding*, if "
"specified, must be a string naming the encoding  used by the XML data.  "
"Expat doesn't support as many encodings as Python does, and its repertoire "
"of encodings can't be extended; it supports UTF-8, UTF-16, ISO-8859-1 "
"(Latin1), and ASCII.  If *encoding* [1]_ is given it will override the "
"implicit or explicit encoding of the document."
msgstr ""

#: ../../library/pyexpat.rst:76
msgid ""
"Expat can optionally do XML namespace processing for you, enabled by "
"providing a value for *namespace_separator*.  The value must be a one-"
"character string; a :exc:`ValueError` will be raised if the string has an "
"illegal length (``None`` is considered the same as omission).  When "
"namespace processing is enabled, element type names and attribute names that"
" belong to a namespace will be expanded.  The element name passed to the "
"element handlers :attr:`StartElementHandler` and :attr:`EndElementHandler` "
"will be the concatenation of the namespace URI, the namespace separator "
"character, and the local part of the name.  If the namespace separator is a "
"zero byte (``chr(0)``) then the namespace URI and the local part will be "
"concatenated without any separator."
msgstr ""

#: ../../library/pyexpat.rst:88
msgid ""
"For example, if *namespace_separator* is set to a space character (``' '``) "
"and the following document is parsed:"
msgstr ""

#: ../../library/pyexpat.rst:100
msgid ""
":attr:`StartElementHandler` will receive the following strings for each "
"element::"
msgstr ""

#: ../../library/pyexpat.rst:107
msgid ""
"Due to limitations in the ``Expat`` library used by :mod:`pyexpat`, the "
":class:`xmlparser` instance returned can only be used to parse a single XML "
"document.  Call ``ParserCreate`` for each document to provide unique parser "
"instances."
msgstr ""

#: ../../library/pyexpat.rst:115
msgid "`The Expat XML Parser <http://www.libexpat.org/>`_"
msgstr ""

#: ../../library/pyexpat.rst:116
msgid "Home page of the Expat project."
msgstr ""

#: ../../library/pyexpat.rst:122
msgid "XMLParser Objects"
msgstr ""

#: ../../library/pyexpat.rst:124
msgid ":class:`xmlparser` objects have the following methods:"
msgstr ""

#: ../../library/pyexpat.rst:129
msgid ""
"Parses the contents of the string *data*, calling the appropriate handler "
"functions to process the parsed data.  *isfinal* must be true on the final "
"call to this method; it allows the parsing of a single file in fragments, "
"not the submission of multiple files. *data* can be the empty string at any "
"time."
msgstr ""

#: ../../library/pyexpat.rst:138
msgid ""
"Parse XML data reading from the object *file*.  *file* only needs to provide"
" the ``read(nbytes)`` method, returning the empty string when there's no "
"more data."
msgstr ""

#: ../../library/pyexpat.rst:145
msgid ""
"Sets the base to be used for resolving relative URIs in system identifiers "
"in declarations.  Resolving relative identifiers is left to the application:"
" this value will be passed through as the *base* argument to the "
":func:`ExternalEntityRefHandler`, :func:`NotationDeclHandler`, and "
":func:`UnparsedEntityDeclHandler` functions."
msgstr ""

#: ../../library/pyexpat.rst:154
msgid ""
"Returns a string containing the base set by a previous call to "
":meth:`SetBase`, or ``None`` if  :meth:`SetBase` hasn't been called."
msgstr ""

#: ../../library/pyexpat.rst:160
msgid ""
"Returns the input data that generated the current event as a string. The "
"data is in the encoding of the entity which contains the text. When called "
"while an event handler is not active, the return value is ``None``."
msgstr ""

#: ../../library/pyexpat.rst:167
msgid ""
"Create a \"child\" parser which can be used to parse an external parsed "
"entity referred to by content parsed by the parent parser.  The *context* "
"parameter should be the string passed to the "
":meth:`ExternalEntityRefHandler` handler function, described below. The "
"child parser is created with the :attr:`ordered_attributes` and "
":attr:`specified_attributes` set to the values of this parser."
msgstr ""

#: ../../library/pyexpat.rst:176
msgid ""
"Control parsing of parameter entities (including the external DTD subset). "
"Possible *flag* values are :const:`XML_PARAM_ENTITY_PARSING_NEVER`, "
":const:`XML_PARAM_ENTITY_PARSING_UNLESS_STANDALONE` and "
":const:`XML_PARAM_ENTITY_PARSING_ALWAYS`.  Return true if setting the flag "
"was successful."
msgstr ""

#: ../../library/pyexpat.rst:184
msgid ""
"Calling this with a true value for *flag* (the default) will cause Expat to "
"call the :attr:`ExternalEntityRefHandler` with :const:`None` for all "
"arguments to allow an alternate DTD to be loaded.  If the document does not "
"contain a document type declaration, the :attr:`ExternalEntityRefHandler` "
"will still be called, but the :attr:`StartDoctypeDeclHandler` and "
":attr:`EndDoctypeDeclHandler` will not be called."
msgstr ""

#: ../../library/pyexpat.rst:191
msgid ""
"Passing a false value for *flag* will cancel a previous call that passed a "
"true value, but otherwise has no effect."
msgstr ""

#: ../../library/pyexpat.rst:194
msgid ""
"This method can only be called before the :meth:`Parse` or :meth:`ParseFile`"
" methods are called; calling it after either of those have been called "
"causes :exc:`ExpatError` to be raised with the :attr:`code` attribute set to"
" ``errors.codes[errors.XML_ERROR_CANT_CHANGE_FEATURE_ONCE_PARSING]``."
msgstr ""

#: ../../library/pyexpat.rst:203
msgid ""
"Calling ``SetReparseDeferralEnabled(False)`` has security implications, as "
"detailed below; please make sure to understand these consequences prior to "
"using the ``SetReparseDeferralEnabled`` method."
msgstr ""

#: ../../library/pyexpat.rst:207
msgid ""
"Expat 2.6.0 introduced a security mechanism called \"reparse deferral\" "
"where instead of causing denial of service through quadratic runtime from "
"reparsing large tokens, reparsing of unfinished tokens is now delayed by "
"default until a sufficient amount of input is reached. Due to this delay, "
"registered handlers may — depending of the sizing of input chunks pushed to "
"Expat — no longer be called right after pushing new input to the parser.  "
"Where immediate feedback and taking over responsiblity of protecting against"
" denial of service from large tokens are both wanted, calling "
"``SetReparseDeferralEnabled(False)`` disables reparse deferral for the "
"current Expat parser instance, temporarily or altogether. Calling "
"``SetReparseDeferralEnabled(True)`` allows re-enabling reparse deferral."
msgstr ""

#: ../../library/pyexpat.rst:220
msgid ""
"Note that :meth:`SetReparseDeferralEnabled` has been backported to some "
"prior releases of CPython as a security fix.  Check for availability of "
":meth:`SetReparseDeferralEnabled` using :func:`hasattr` if used in code "
"running across a variety of Python versions."
msgstr ""

#: ../../library/pyexpat.rst:229
msgid ""
"Returns whether reparse deferral is currently enabled for the given Expat "
"parser instance."
msgstr ""

#: ../../library/pyexpat.rst:235
msgid ":class:`xmlparser` objects have the following attributes:"
msgstr ""

#: ../../library/pyexpat.rst:240
msgid ""
"The size of the buffer used when :attr:`buffer_text` is true. A new buffer "
"size can be set by assigning a new integer value to this attribute. When the"
" size is changed, the buffer will be flushed."
msgstr ""

#: ../../library/pyexpat.rst:248
msgid ""
"Setting this to true causes the :class:`xmlparser` object to buffer textual "
"content returned by Expat to avoid multiple calls to the "
":meth:`CharacterDataHandler` callback whenever possible.  This can improve "
"performance substantially since Expat normally breaks character data into "
"chunks at every line ending.  This attribute is false by default, and may be"
" changed at any time. Note that when it is false, data that does not contain"
" newlines may be chunked too."
msgstr ""

#: ../../library/pyexpat.rst:259
msgid ""
"If :attr:`buffer_text` is enabled, the number of bytes stored in the buffer."
" These bytes represent UTF-8 encoded text.  This attribute has no meaningful"
" interpretation when :attr:`buffer_text` is false."
msgstr ""

#: ../../library/pyexpat.rst:266
msgid ""
"Setting this attribute to a non-zero integer causes the attributes to be "
"reported as a list rather than a dictionary.  The attributes are presented "
"in the order found in the document text.  For each attribute, two list "
"entries are presented: the attribute name and the attribute value.  (Older "
"versions of this module also used this format.)  By default, this attribute "
"is false; it may be changed at any time."
msgstr ""

#: ../../library/pyexpat.rst:276
msgid ""
"If set to a non-zero integer, the parser will report only those attributes "
"which were specified in the document instance and not those which were "
"derived from attribute declarations.  Applications which set this need to be"
" especially careful to use what additional information is available from the"
" declarations as needed to comply with the standards for the behavior of XML"
" processors.  By default, this attribute is false; it may be changed at any "
"time."
msgstr ""

#: ../../library/pyexpat.rst:284
msgid ""
"The following attributes contain values relating to the most recent error "
"encountered by an :class:`xmlparser` object, and will only have correct "
"values once a call to :meth:`Parse` or :meth:`ParseFile` has raised an "
":exc:`xml.parsers.expat.ExpatError` exception."
msgstr ""

#: ../../library/pyexpat.rst:292
msgid "Byte index at which an error occurred."
msgstr ""

#: ../../library/pyexpat.rst:297
msgid ""
"Numeric code specifying the problem.  This value can be passed to the "
":func:`ErrorString` function, or compared to one of the constants defined in"
" the ``errors`` object."
msgstr ""

#: ../../library/pyexpat.rst:304
msgid "Column number at which an error occurred."
msgstr ""

#: ../../library/pyexpat.rst:309
msgid "Line number at which an error occurred."
msgstr ""

#: ../../library/pyexpat.rst:311
msgid ""
"The following attributes contain values relating to the current parse "
"location in an :class:`xmlparser` object.  During a callback reporting a "
"parse event they indicate the location of the first of the sequence of "
"characters that generated the event.  When called outside of a callback, the"
" position indicated will be just past the last parse event (regardless of "
"whether there was an associated callback)."
msgstr ""

#: ../../library/pyexpat.rst:321
msgid "Current byte index in the parser input."
msgstr ""

#: ../../library/pyexpat.rst:326
msgid "Current column number in the parser input."
msgstr ""

#: ../../library/pyexpat.rst:331
msgid "Current line number in the parser input."
msgstr ""

#: ../../library/pyexpat.rst:333
msgid ""
"Here is the list of handlers that can be set.  To set a handler on an "
":class:`xmlparser` object *o*, use ``o.handlername = func``.  *handlername* "
"must be taken from the following list, and *func* must be a callable object "
"accepting the correct number of arguments.  The arguments are all strings, "
"unless otherwise stated."
msgstr ""

#: ../../library/pyexpat.rst:342
msgid ""
"Called when the XML declaration is parsed.  The XML declaration is the "
"(optional) declaration of the applicable version of the XML recommendation, "
"the encoding of the document text, and an optional \"standalone\" "
"declaration. *version* and *encoding* will be strings, and *standalone* will"
" be ``1`` if the document is declared standalone, ``0`` if it is declared "
"not to be standalone, or ``-1`` if the standalone clause was omitted. This "
"is only available with Expat version 1.95.0 or newer."
msgstr ""

#: ../../library/pyexpat.rst:353
msgid ""
"Called when Expat begins parsing the document type declaration (``<!DOCTYPE "
"...``).  The *doctypeName* is provided exactly as presented.  The *systemId*"
" and *publicId* parameters give the system and public identifiers if "
"specified, or ``None`` if omitted.  *has_internal_subset* will be true if "
"the document contains and internal document declaration subset. This "
"requires Expat version 1.2 or newer."
msgstr ""

#: ../../library/pyexpat.rst:363
msgid ""
"Called when Expat is done parsing the document type declaration. This "
"requires Expat version 1.2 or newer."
msgstr ""

#: ../../library/pyexpat.rst:369
msgid ""
"Called once for each element type declaration.  *name* is the name of the "
"element type, and *model* is a representation of the content model."
msgstr ""

#: ../../library/pyexpat.rst:375
msgid ""
"Called for each declared attribute for an element type.  If an attribute "
"list declaration declares three attributes, this handler is called three "
"times, once for each attribute.  *elname* is the name of the element to "
"which the declaration applies and *attname* is the name of the attribute "
"declared.  The attribute type is a string passed as *type*; the possible "
"values are ``'CDATA'``, ``'ID'``, ``'IDREF'``, ... *default* gives the "
"default value for the attribute used when the attribute is not specified by "
"the document instance, or ``None`` if there is no default value "
"(``#IMPLIED`` values).  If the attribute is required to be given in the "
"document instance, *required* will be true. This requires Expat version "
"1.95.0 or newer."
msgstr ""

#: ../../library/pyexpat.rst:389
msgid ""
"Called for the start of every element.  *name* is a string containing the "
"element name, and *attributes* is the element attributes. If "
":attr:`ordered_attributes` is true, this is a list (see "
":attr:`ordered_attributes` for a full description). Otherwise it's a "
"dictionary mapping names to values."
msgstr ""

#: ../../library/pyexpat.rst:398
msgid "Called for the end of every element."
msgstr ""

#: ../../library/pyexpat.rst:403
msgid "Called for every processing instruction."
msgstr ""

#: ../../library/pyexpat.rst:408
msgid ""
"Called for character data.  This will be called for normal character data, "
"CDATA marked content, and ignorable whitespace.  Applications which must "
"distinguish these cases can use the :attr:`StartCdataSectionHandler`, "
":attr:`EndCdataSectionHandler`, and :attr:`ElementDeclHandler` callbacks to "
"collect the required information. Note that the character data may be "
"chunked even if it is short and so you may receive more than one call to "
":meth:`CharacterDataHandler`. Set the :attr:`buffer_text` instance attribute"
" to ``True`` to avoid that."
msgstr ""

#: ../../library/pyexpat.rst:420
msgid ""
"Called for unparsed (NDATA) entity declarations.  This is only present for "
"version 1.2 of the Expat library; for more recent versions, use "
":attr:`EntityDeclHandler` instead.  (The underlying function in the Expat "
"library has been declared obsolete.)"
msgstr ""

#: ../../library/pyexpat.rst:428
msgid ""
"Called for all entity declarations.  For parameter and internal entities, "
"*value* will be a string giving the declared contents of the entity; this "
"will be ``None`` for external entities.  The *notationName* parameter will "
"be ``None`` for parsed entities, and the name of the notation for unparsed "
"entities. *is_parameter_entity* will be true if the entity is a parameter "
"entity or false for general entities (most applications only need to be "
"concerned with general entities). This is only available starting with "
"version 1.95.0 of the Expat library."
msgstr ""

#: ../../library/pyexpat.rst:440
msgid ""
"Called for notation declarations.  *notationName*, *base*, and *systemId*, "
"and *publicId* are strings if given.  If the public identifier is omitted, "
"*publicId* will be ``None``."
msgstr ""

#: ../../library/pyexpat.rst:447
msgid ""
"Called when an element contains a namespace declaration.  Namespace "
"declarations are processed before the :attr:`StartElementHandler` is called "
"for the element on which declarations are placed."
msgstr ""

#: ../../library/pyexpat.rst:454
msgid ""
"Called when the closing tag is reached for an element  that contained a "
"namespace declaration.  This is called once for each namespace declaration "
"on the element in the reverse of the order for which the "
":attr:`StartNamespaceDeclHandler` was called to indicate the start of each "
"namespace declaration's scope.  Calls to this handler are made after the "
"corresponding :attr:`EndElementHandler` for the end of the element."
msgstr ""

#: ../../library/pyexpat.rst:464
msgid ""
"Called for comments.  *data* is the text of the comment, excluding the "
"leading ``'<!-``\\ ``-'`` and trailing ``'-``\\ ``->'``."
msgstr ""

#: ../../library/pyexpat.rst:470
msgid ""
"Called at the start of a CDATA section.  This and "
":attr:`EndCdataSectionHandler` are needed to be able to identify the "
"syntactical start and end for CDATA sections."
msgstr ""

#: ../../library/pyexpat.rst:477
msgid "Called at the end of a CDATA section."
msgstr ""

#: ../../library/pyexpat.rst:482
msgid ""
"Called for any characters in the XML document for which no applicable "
"handler has been specified.  This means characters that are part of a "
"construct which could be reported, but for which no handler has been "
"supplied."
msgstr ""

#: ../../library/pyexpat.rst:489
msgid ""
"This is the same as the :func:`DefaultHandler`,  but doesn't inhibit "
"expansion of internal entities. The entity reference will not be passed to "
"the default handler."
msgstr ""

#: ../../library/pyexpat.rst:496
msgid ""
"Called if the XML document hasn't been declared as being a standalone "
"document. This happens when there is an external subset or a reference to a "
"parameter entity, but the XML declaration does not set standalone to ``yes``"
" in an XML declaration.  If this handler returns ``0``, then the parser will"
" raise an :const:`XML_ERROR_NOT_STANDALONE` error.  If this handler is not "
"set, no exception is raised by the parser for this condition."
msgstr ""

#: ../../library/pyexpat.rst:506
msgid ""
"Called for references to external entities.  *base* is the current base, as "
"set by a previous call to :meth:`SetBase`.  The public and system "
"identifiers, *systemId* and *publicId*, are strings if given; if the public "
"identifier is not given, *publicId* will be ``None``.  The *context* value "
"is opaque and should only be used as described below."
msgstr ""

#: ../../library/pyexpat.rst:512
msgid ""
"For external entities to be parsed, this handler must be implemented. It is "
"responsible for creating the sub-parser using "
"``ExternalEntityParserCreate(context)``, initializing it with the "
"appropriate callbacks, and parsing the entity.  This handler should return "
"an integer; if it returns ``0``, the parser will raise an "
":const:`XML_ERROR_EXTERNAL_ENTITY_HANDLING` error, otherwise parsing will "
"continue."
msgstr ""

#: ../../library/pyexpat.rst:520
msgid ""
"If this handler is not provided, external entities are reported by the "
":attr:`DefaultHandler` callback, if provided."
msgstr ""

#: ../../library/pyexpat.rst:527
msgid "ExpatError Exceptions"
msgstr ""

#: ../../library/pyexpat.rst:532
msgid ":exc:`ExpatError` exceptions have a number of interesting attributes:"
msgstr ""

#: ../../library/pyexpat.rst:537
msgid ""
"Expat's internal error number for the specific error.  The "
":data:`errors.messages <xml.parsers.expat.errors.messages>` dictionary maps "
"these error numbers to Expat's error messages.  For example::"
msgstr ""

#: ../../library/pyexpat.rst:549
msgid ""
"The :mod:`~xml.parsers.expat.errors` module also provides error message "
"constants and a dictionary :data:`~xml.parsers.expat.errors.codes` mapping "
"these messages back to the error codes, see below."
msgstr ""

#: ../../library/pyexpat.rst:556
msgid ""
"Line number on which the error was detected.  The first line is numbered "
"``1``."
msgstr ""

#: ../../library/pyexpat.rst:561
msgid ""
"Character offset into the line where the error occurred.  The first column "
"is numbered ``0``."
msgstr ""

#: ../../library/pyexpat.rst:568
msgid "Example"
msgstr ""

#: ../../library/pyexpat.rst:570
msgid ""
"The following program defines three handlers that just print out their "
"arguments. ::"
msgstr ""

#: ../../library/pyexpat.rst:594
msgid "The output from this program is::"
msgstr ""

#: ../../library/pyexpat.rst:611
msgid "Content Model Descriptions"
msgstr ""

#: ../../library/pyexpat.rst:617
msgid ""
"Content models are described using nested tuples.  Each tuple contains four "
"values: the type, the quantifier, the name, and a tuple of children.  "
"Children are simply additional content model descriptions."
msgstr ""

#: ../../library/pyexpat.rst:621
msgid ""
"The values of the first two fields are constants defined in the "
":mod:`xml.parsers.expat.model` module.  These constants can be collected in "
"two groups: the model type group and the quantifier group."
msgstr ""

#: ../../library/pyexpat.rst:625
msgid "The constants in the model type group are:"
msgstr ""

#: ../../library/pyexpat.rst:631
msgid ""
"The element named by the model name was declared to have a content model of "
"``ANY``."
msgstr ""

#: ../../library/pyexpat.rst:638
msgid ""
"The named element allows a choice from a number of options; this is used for"
" content models such as ``(A | B | C)``."
msgstr ""

#: ../../library/pyexpat.rst:645
msgid "Elements which are declared to be ``EMPTY`` have this model type."
msgstr ""

#: ../../library/pyexpat.rst:659
msgid ""
"Models which represent a series of models which follow one after the other "
"are indicated with this model type.  This is used for models such as ``(A, "
"B, C)``."
msgstr ""

#: ../../library/pyexpat.rst:662
msgid "The constants in the quantifier group are:"
msgstr ""

#: ../../library/pyexpat.rst:668
msgid "No modifier is given, so it can appear exactly once, as for ``A``."
msgstr ""

#: ../../library/pyexpat.rst:674
msgid ""
"The model is optional: it can appear once or not at all, as for ``A?``."
msgstr ""

#: ../../library/pyexpat.rst:680
msgid "The model must occur one or more times (like ``A+``)."
msgstr ""

#: ../../library/pyexpat.rst:686
msgid "The model must occur zero or more times, as for ``A*``."
msgstr ""

#: ../../library/pyexpat.rst:692
msgid "Expat error constants"
msgstr ""

#: ../../library/pyexpat.rst:696
msgid ""
"The following constants are provided in the :mod:`xml.parsers.expat.errors` "
"module.  These constants are useful in interpreting some of the attributes "
"of the :exc:`ExpatError` exception objects raised when an error has "
"occurred. Since for backwards compatibility reasons, the constants' value is"
" the error *message* and not the numeric error *code*, you do this by "
"comparing its :attr:`code` attribute with "
":samp:`errors.codes[errors.XML_ERROR_{CONSTANT_NAME}]`."
msgstr ""

#: ../../library/pyexpat.rst:704
msgid "The ``errors`` module has the following attributes:"
msgstr ""

#: ../../library/pyexpat.rst:708
msgid "A dictionary mapping string descriptions to their error codes."
msgstr ""

#: ../../library/pyexpat.rst:715
msgid "A dictionary mapping numeric error codes to their string descriptions."
msgstr ""

#: ../../library/pyexpat.rst:725
msgid ""
"An entity reference in an attribute value referred to an external entity "
"instead of an internal entity."
msgstr ""

#: ../../library/pyexpat.rst:731
msgid ""
"A character reference referred to a character which is illegal in XML (for "
"example, character ``0``, or '``&#0;``')."
msgstr ""

#: ../../library/pyexpat.rst:737
msgid ""
"An entity reference referred to an entity which was declared with a "
"notation, so cannot be parsed."
msgstr ""

#: ../../library/pyexpat.rst:743
msgid "An attribute was used more than once in a start tag."
msgstr ""

#: ../../library/pyexpat.rst:751
msgid ""
"Raised when an input byte could not properly be assigned to a character; for"
" example, a NUL byte (value ``0``) in a UTF-8 input stream."
msgstr ""

#: ../../library/pyexpat.rst:757
msgid "Something other than whitespace occurred after the document element."
msgstr ""

#: ../../library/pyexpat.rst:762
msgid ""
"An XML declaration was found somewhere other than the start of the input "
"data."
msgstr ""

#: ../../library/pyexpat.rst:767
msgid ""
"The document contains no elements (XML requires all documents to contain "
"exactly one top-level element).."
msgstr ""

#: ../../library/pyexpat.rst:773
msgid "Expat was not able to allocate memory internally."
msgstr ""

#: ../../library/pyexpat.rst:778
msgid "A parameter entity reference was found where it was not allowed."
msgstr ""

#: ../../library/pyexpat.rst:783
msgid "An incomplete character was found in the input."
msgstr ""

#: ../../library/pyexpat.rst:788
msgid ""
"An entity reference contained another reference to the same entity; possibly"
" via a different name, and possibly indirectly."
msgstr ""

#: ../../library/pyexpat.rst:794
msgid "Some unspecified syntax error was encountered."
msgstr ""

#: ../../library/pyexpat.rst:799
msgid "An end tag did not match the innermost open start tag."
msgstr ""

#: ../../library/pyexpat.rst:804
msgid ""
"Some token (such as a start tag) was not closed before the end of the stream"
" or the next token was encountered."
msgstr ""

#: ../../library/pyexpat.rst:810
msgid "A reference was made to an entity which was not defined."
msgstr ""

#: ../../library/pyexpat.rst:815
msgid "The document encoding is not supported by Expat."
msgstr ""

#: ../../library/pyexpat.rst:820
msgid "A CDATA marked section was not closed."
msgstr ""

#: ../../library/pyexpat.rst:828
msgid ""
"The parser determined that the document was not \"standalone\" though it "
"declared itself to be in the XML declaration, and the "
":attr:`NotStandaloneHandler` was set and returned ``0``."
msgstr ""

#: ../../library/pyexpat.rst:841
msgid ""
"An operation was requested that requires DTD support to be compiled in, but "
"Expat was configured without DTD support.  This should never be reported by "
"a standard build of the :mod:`xml.parsers.expat` module."
msgstr ""

#: ../../library/pyexpat.rst:848
msgid ""
"A behavioral change was requested after parsing started that can only be "
"changed before parsing has started.  This is (currently) only raised by "
":meth:`UseForeignDTD`."
msgstr ""

#: ../../library/pyexpat.rst:855
msgid "An undeclared prefix was found when namespace processing was enabled."
msgstr ""

#: ../../library/pyexpat.rst:860
msgid ""
"The document attempted to remove the namespace declaration associated with a"
" prefix."
msgstr ""

#: ../../library/pyexpat.rst:866
msgid "A parameter entity contained incomplete markup."
msgstr ""

#: ../../library/pyexpat.rst:871
msgid "The document contained no document element at all."
msgstr ""

#: ../../library/pyexpat.rst:876
msgid "There was an error parsing a text declaration in an external entity."
msgstr ""

#: ../../library/pyexpat.rst:881
msgid "Characters were found in the public id that are not allowed."
msgstr ""

#: ../../library/pyexpat.rst:886
msgid ""
"The requested operation was made on a suspended parser, but isn't allowed.  "
"This includes attempts to provide additional input or to stop the parser."
msgstr ""

#: ../../library/pyexpat.rst:892
msgid ""
"An attempt to resume the parser was made when the parser had not been "
"suspended."
msgstr ""

#: ../../library/pyexpat.rst:897 ../../library/pyexpat.rst:930
#: ../../library/pyexpat.rst:935
msgid "This should not be reported to Python applications."
msgstr ""

#: ../../library/pyexpat.rst:902
msgid ""
"The requested operation was made on a parser which was finished parsing "
"input, but isn't allowed.  This includes attempts to provide additional "
"input or to stop the parser."
msgstr ""

#: ../../library/pyexpat.rst:912
msgid ""
"An attempt was made to undeclare reserved namespace prefix ``xml`` or to "
"bind it to another namespace URI."
msgstr ""

#: ../../library/pyexpat.rst:919
msgid ""
"An attempt was made to declare or undeclare reserved namespace prefix "
"``xmlns``."
msgstr ""

#: ../../library/pyexpat.rst:924
msgid ""
"An attempt was made to bind the URI of one the reserved namespace prefixes "
"``xml`` and ``xmlns`` to another namespace prefix."
msgstr ""

#: ../../library/pyexpat.rst:940
msgid ""
"The limit on input amplification factor (from DTD and entities) has been "
"breached."
msgstr ""

#: ../../library/pyexpat.rst:945
msgid "Footnotes"
msgstr ""

#: ../../library/pyexpat.rst:946
msgid ""
"The encoding string included in XML output should conform to the appropriate"
" standards. For example, \"UTF-8\" is valid, but \"UTF8\" is not. See "
"https://www.w3.org/TR/2006/REC-xml11-20060816/#NT-EncodingDecl and "
"https://www.iana.org/assignments/character-sets/character-sets.xhtml."
msgstr ""

#: ../../library/pyexpat.rst:26
msgid "Expat"
msgstr ""

#: ../../library/pyexpat.rst:36
msgid "module"
msgstr ""

#: ../../library/pyexpat.rst:36
msgid "pyexpat"
msgstr ""
