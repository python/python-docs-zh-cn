# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.9\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-07-25 19:10+0000\n"
"PO-Revision-Date: 2025-07-18 19:18+0000\n"
"Language-Team: Chinese (China) (https://app.transifex.com/python-doc/teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/xml.sax.rst:2
msgid ":mod:`xml.sax` --- Support for SAX2 parsers"
msgstr ""

#: ../../library/xml.sax.rst:11
msgid "**Source code:** :source:`Lib/xml/sax/__init__.py`"
msgstr ""

#: ../../library/xml.sax.rst:15
msgid ""
"The :mod:`xml.sax` package provides a number of modules which implement the "
"Simple API for XML (SAX) interface for Python.  The package itself provides "
"the SAX exceptions and the convenience functions which will be most used by "
"users of the SAX API."
msgstr ""

#: ../../library/xml.sax.rst:23
msgid ""
"The :mod:`xml.sax` module is not secure against maliciously constructed "
"data.  If you need to parse untrusted or unauthenticated data see :ref:`xml-"
"vulnerabilities`."
msgstr ""

#: ../../library/xml.sax.rst:29
msgid ""
"The SAX parser no longer processes general external entities by default to "
"increase security. Before, the parser created network connections to fetch "
"remote files or loaded local files from the file system for DTD and "
"entities. The feature can be enabled again with method "
":meth:`~xml.sax.xmlreader.XMLReader.setFeature` on the parser object and "
"argument :data:`~xml.sax.handler.feature_external_ges`."
msgstr ""

#: ../../library/xml.sax.rst:36
msgid "The convenience functions are:"
msgstr ""

#: ../../library/xml.sax.rst:41
msgid ""
"Create and return a SAX :class:`~xml.sax.xmlreader.XMLReader` object.  The "
"first parser found will be used.  If *parser_list* is provided, it must be "
"an iterable of strings which name modules that have a function named "
":func:`create_parser`.  Modules listed in *parser_list* will be used before "
"modules in the default list of parsers."
msgstr ""

#: ../../library/xml.sax.rst:47
msgid "The *parser_list* argument can be any iterable, not just a list."
msgstr ""

#: ../../library/xml.sax.rst:53
msgid ""
"Create a SAX parser and use it to parse a document.  The document, passed in"
" as *filename_or_stream*, can be a filename or a file object.  The *handler*"
" parameter needs to be a SAX :class:`~handler.ContentHandler` instance.  If "
"*error_handler* is given, it must be a SAX :class:`~handler.ErrorHandler` "
"instance; if omitted,  :exc:`SAXParseException` will be raised on all "
"errors.  There is no return value; all work must be done by the *handler* "
"passed in."
msgstr ""

#: ../../library/xml.sax.rst:64
msgid ""
"Similar to :func:`parse`, but parses from a buffer *string* received as a "
"parameter.  *string* must be a :class:`str` instance or a :term:`bytes-like "
"object`."
msgstr ""

#: ../../library/xml.sax.rst:68
msgid "Added support of :class:`str` instances."
msgstr ""

#: ../../library/xml.sax.rst:71
msgid ""
"A typical SAX application uses three kinds of objects: readers, handlers and"
" input sources.  \"Reader\" in this context is another term for parser, i.e."
" some piece of code that reads the bytes or characters from the input "
"source, and produces a sequence of events. The events then get distributed "
"to the handler objects, i.e. the reader invokes a method on the handler.  A "
"SAX application must therefore obtain a reader object, create or open the "
"input sources, create the handlers, and connect these objects all together."
"  As the final step of preparation, the reader is called to parse the input."
" During parsing, methods on the handler objects are called based on "
"structural and syntactic events from the input data."
msgstr ""

#: ../../library/xml.sax.rst:82
msgid ""
"For these objects, only the interfaces are relevant; they are normally not "
"instantiated by the application itself.  Since Python does not have an "
"explicit notion of interface, they are formally introduced as classes, but "
"applications may use implementations which do not inherit from the provided "
"classes.  The :class:`~xml.sax.xmlreader.InputSource`, "
":class:`~xml.sax.xmlreader.Locator`, :class:`~xml.sax.xmlreader.Attributes`,"
" :class:`~xml.sax.xmlreader.AttributesNS`, and "
":class:`~xml.sax.xmlreader.XMLReader` interfaces are defined in the module "
":mod:`xml.sax.xmlreader`.  The handler interfaces are defined in "
":mod:`xml.sax.handler`.  For convenience, "
":class:`~xml.sax.xmlreader.InputSource` (which is often instantiated "
"directly) and the handler classes are also available from :mod:`xml.sax`.  "
"These interfaces are described below."
msgstr ""

#: ../../library/xml.sax.rst:95
msgid ""
"In addition to these classes, :mod:`xml.sax` provides the following "
"exception classes."
msgstr ""

#: ../../library/xml.sax.rst:101
msgid ""
"Encapsulate an XML error or warning.  This class can contain basic error or "
"warning information from either the XML parser or the application: it can be"
" subclassed to provide additional functionality or to add localization.  "
"Note that although the handlers defined in the "
":class:`~xml.sax.handler.ErrorHandler` interface receive instances of this "
"exception, it is not required to actually raise the exception --- it is also"
" useful as a container for information."
msgstr ""

#: ../../library/xml.sax.rst:109
msgid ""
"When instantiated, *msg* should be a human-readable description of the "
"error. The optional *exception* parameter, if given, should be ``None`` or "
"an exception that was caught by the parsing code and is being passed along "
"as information."
msgstr ""

#: ../../library/xml.sax.rst:113
msgid "This is the base class for the other SAX exception classes."
msgstr ""

#: ../../library/xml.sax.rst:118
msgid ""
"Subclass of :exc:`SAXException` raised on parse errors. Instances of this "
"class are passed to the methods of the SAX "
":class:`~xml.sax.handler.ErrorHandler` interface to provide information "
"about the parse error.  This class supports the SAX "
":class:`~xml.sax.xmlreader.Locator` interface as well as the "
":class:`SAXException` interface."
msgstr ""

#: ../../library/xml.sax.rst:128
msgid ""
"Subclass of :exc:`SAXException` raised when a SAX "
":class:`~xml.sax.xmlreader.XMLReader` is confronted with an unrecognized "
"feature or property.  SAX applications and extensions may use this class for"
" similar purposes."
msgstr ""

#: ../../library/xml.sax.rst:136
msgid ""
"Subclass of :exc:`SAXException` raised when a SAX "
":class:`~xml.sax.xmlreader.XMLReader` is asked to enable a feature that is "
"not supported, or to set a property to a value that the implementation does "
"not support.  SAX applications and extensions may use this class for similar"
" purposes."
msgstr ""

#: ../../library/xml.sax.rst:148
msgid "`SAX: The Simple API for XML <http://www.saxproject.org/>`_"
msgstr ""

#: ../../library/xml.sax.rst:146
msgid ""
"This site is the focal point for the definition of the SAX API.  It provides"
" a Java implementation and online documentation.  Links to implementations "
"and historical information are also available."
msgstr ""

#: ../../library/xml.sax.rst:151
msgid "Module :mod:`xml.sax.handler`"
msgstr ""

#: ../../library/xml.sax.rst:151
msgid "Definitions of the interfaces for application-provided objects."
msgstr ""

#: ../../library/xml.sax.rst:154
msgid "Module :mod:`xml.sax.saxutils`"
msgstr ""

#: ../../library/xml.sax.rst:154
msgid "Convenience functions for use in SAX applications."
msgstr ""

#: ../../library/xml.sax.rst:156
msgid "Module :mod:`xml.sax.xmlreader`"
msgstr ""

#: ../../library/xml.sax.rst:157
msgid "Definitions of the interfaces for parser-provided objects."
msgstr ""

#: ../../library/xml.sax.rst:163
msgid "SAXException Objects"
msgstr ""

#: ../../library/xml.sax.rst:165
msgid ""
"The :class:`SAXException` exception class supports the following methods:"
msgstr ""

#: ../../library/xml.sax.rst:170
msgid "Return a human-readable message describing the error condition."
msgstr ""

#: ../../library/xml.sax.rst:175
msgid "Return an encapsulated exception object, or ``None``."
msgstr ""
