# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2025
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.9\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-07-25 19:10+0000\n"
"PO-Revision-Date: 2025-07-18 19:17+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2025\n"
"Language-Team: Chinese (China) (https://app.transifex.com/python-doc/teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/http.client.rst:2
msgid ":mod:`http.client` --- HTTP protocol client"
msgstr ""

#: ../../library/http.client.rst:7
msgid "**Source code:** :source:`Lib/http/client.py`"
msgstr ""

#: ../../library/http.client.rst:17
msgid ""
"This module defines classes which implement the client side of the HTTP and "
"HTTPS protocols.  It is normally not used directly --- the module "
":mod:`urllib.request` uses it to handle URLs that use HTTP and HTTPS."
msgstr ""

#: ../../library/http.client.rst:23
msgid ""
"The `Requests package <https://requests.readthedocs.io/en/master/>`_ is "
"recommended for a higher-level HTTP client interface."
msgstr ""

#: ../../library/http.client.rst:28
msgid ""
"HTTPS support is only available if Python was compiled with SSL support "
"(through the :mod:`ssl` module)."
msgstr ""

#: ../../library/http.client.rst:31
msgid "The module provides the following classes:"
msgstr ""

#: ../../library/http.client.rst:37
msgid ""
"An :class:`HTTPConnection` instance represents one transaction with an HTTP "
"server.  It should be instantiated passing it a host and optional port "
"number.  If no port number is passed, the port is extracted from the host "
"string if it has the form ``host:port``, else the default HTTP port (80) is "
"used.  If the optional *timeout* parameter is given, blocking operations "
"(like connection attempts) will timeout after that many seconds (if it is "
"not given, the global default timeout setting is used). The optional "
"*source_address* parameter may be a tuple of a (host, port) to use as the "
"source address the HTTP connection is made from. The optional *blocksize* "
"parameter sets the buffer size in bytes for sending a file-like message "
"body."
msgstr ""

#: ../../library/http.client.rst:49
msgid ""
"For example, the following calls all create instances that connect to the "
"server at the same host and port::"
msgstr ""

#: ../../library/http.client.rst:57
msgid "*source_address* was added."
msgstr ""

#: ../../library/http.client.rst:60
msgid ""
"The  *strict* parameter was removed. HTTP 0.9-style \"Simple Responses\" are"
" not longer supported."
msgstr ""

#: ../../library/http.client.rst:64
msgid "*blocksize* parameter was added."
msgstr ""

#: ../../library/http.client.rst:73
msgid ""
"A subclass of :class:`HTTPConnection` that uses SSL for communication with "
"secure servers.  Default port is ``443``.  If *context* is specified, it "
"must be a :class:`ssl.SSLContext` instance describing the various SSL "
"options."
msgstr ""

#: ../../library/http.client.rst:78
msgid ""
"Please read :ref:`ssl-security` for more information on best practices."
msgstr ""

#: ../../library/http.client.rst:80
msgid "*source_address*, *context* and *check_hostname* were added."
msgstr ""

#: ../../library/http.client.rst:83
msgid ""
"This class now supports HTTPS virtual hosts if possible (that is, if "
":data:`ssl.HAS_SNI` is true)."
msgstr ""

#: ../../library/http.client.rst:87
msgid ""
"The *strict* parameter was removed. HTTP 0.9-style \"Simple Responses\" are "
"no longer supported."
msgstr ""

#: ../../library/http.client.rst:91
msgid ""
"This class now performs all the necessary certificate and hostname checks by"
" default. To revert to the previous, unverified, behavior "
":func:`ssl._create_unverified_context` can be passed to the *context* "
"parameter."
msgstr ""

#: ../../library/http.client.rst:97
msgid ""
"This class now enables TLS 1.3 :attr:`ssl.SSLContext.post_handshake_auth` "
"for the default *context* or when *cert_file* is passed with a custom "
"*context*."
msgstr ""

#: ../../library/http.client.rst:104
msgid ""
"*key_file* and *cert_file* are deprecated in favor of *context*. Please use "
":meth:`ssl.SSLContext.load_cert_chain` instead, or let "
":func:`ssl.create_default_context` select the system's trusted CA "
"certificates for you."
msgstr ""

#: ../../library/http.client.rst:109
msgid ""
"The *check_hostname* parameter is also deprecated; the "
":attr:`ssl.SSLContext.check_hostname` attribute of *context* should be used "
"instead."
msgstr ""

#: ../../library/http.client.rst:116
msgid ""
"Class whose instances are returned upon successful connection.  Not "
"instantiated directly by user."
msgstr ""

#: ../../library/http.client.rst:119
msgid ""
"The *strict* parameter was removed. HTTP 0.9 style \"Simple Responses\" are "
"no longer supported."
msgstr ""

#: ../../library/http.client.rst:123
msgid "This module provides the following function:"
msgstr ""

#: ../../library/http.client.rst:127
msgid ""
"Parse the headers from a file pointer *fp* representing a HTTP "
"request/response. The file has to be a :class:`BufferedIOBase` reader (i.e. "
"not text) and must provide a valid :rfc:`2822` style header."
msgstr ""

#: ../../library/http.client.rst:131
msgid ""
"This function returns an instance of :class:`http.client.HTTPMessage` that "
"holds the header fields, but no payload (the same as "
":attr:`HTTPResponse.msg` and "
":attr:`http.server.BaseHTTPRequestHandler.headers`). After returning, the "
"file pointer *fp* is ready to read the HTTP body."
msgstr ""

#: ../../library/http.client.rst:138
msgid ""
":meth:`parse_headers` does not parse the start-line of a HTTP message; it "
"only parses the ``Name: value`` lines. The file has to be ready to read "
"these field lines, so the first line should already be consumed before "
"calling the function."
msgstr ""

#: ../../library/http.client.rst:143
msgid "The following exceptions are raised as appropriate:"
msgstr ""

#: ../../library/http.client.rst:148
msgid ""
"The base class of the other exceptions in this module.  It is a subclass of "
":exc:`Exception`."
msgstr ""

#: ../../library/http.client.rst:154 ../../library/http.client.rst:165
#: ../../library/http.client.rst:170 ../../library/http.client.rst:175
#: ../../library/http.client.rst:180 ../../library/http.client.rst:185
msgid "A subclass of :exc:`HTTPException`."
msgstr ""

#: ../../library/http.client.rst:159
msgid ""
"A subclass of :exc:`HTTPException`, raised if a port is given and is either "
"non-numeric or empty."
msgstr ""

#: ../../library/http.client.rst:190 ../../library/http.client.rst:195
#: ../../library/http.client.rst:200
msgid "A subclass of :exc:`ImproperConnectionState`."
msgstr ""

#: ../../library/http.client.rst:205
msgid ""
"A subclass of :exc:`HTTPException`.  Raised if a server responds with a HTTP"
" status code that we don't understand."
msgstr ""

#: ../../library/http.client.rst:211
msgid ""
"A subclass of :exc:`HTTPException`.  Raised if an excessively long line is "
"received in the HTTP protocol from the server."
msgstr ""

#: ../../library/http.client.rst:217
msgid ""
"A subclass of :exc:`ConnectionResetError` and :exc:`BadStatusLine`.  Raised "
"by :meth:`HTTPConnection.getresponse` when the attempt to read the response "
"results in no data read from the connection, indicating that the remote end "
"has closed the connection."
msgstr ""

#: ../../library/http.client.rst:222
msgid "Previously, :exc:`BadStatusLine`\\ ``('')`` was raised."
msgstr ""

#: ../../library/http.client.rst:226
msgid "The constants defined in this module are:"
msgstr ""

#: ../../library/http.client.rst:230
msgid "The default port for the HTTP protocol (always ``80``)."
msgstr ""

#: ../../library/http.client.rst:234
msgid "The default port for the HTTPS protocol (always ``443``)."
msgstr ""

#: ../../library/http.client.rst:238
msgid "This dictionary maps the HTTP 1.1 status codes to the W3C names."
msgstr ""

#: ../../library/http.client.rst:240
msgid ""
"Example: ``http.client.responses[http.client.NOT_FOUND]`` is ``'Not "
"Found'``."
msgstr ""

#: ../../library/http.client.rst:242
msgid ""
"See :ref:`http-status-codes` for a list of HTTP status codes that are "
"available in this module as constants."
msgstr ""

#: ../../library/http.client.rst:249
msgid "HTTPConnection Objects"
msgstr ""

#: ../../library/http.client.rst:251
msgid ":class:`HTTPConnection` instances have the following methods:"
msgstr ""

#: ../../library/http.client.rst:257
msgid ""
"This will send a request to the server using the HTTP request method "
"*method* and the selector *url*."
msgstr ""

#: ../../library/http.client.rst:260
msgid ""
"If *body* is specified, the specified data is sent after the headers are "
"finished.  It may be a :class:`str`, a :term:`bytes-like object`, an open "
":term:`file object`, or an iterable of :class:`bytes`.  If *body* is a "
"string, it is encoded as ISO-8859-1, the default for HTTP.  If it is a "
"bytes-like object, the bytes are sent as is.  If it is a :term:`file "
"object`, the contents of the file is sent; this file object should support "
"at least the ``read()`` method.  If the file object is an instance of "
":class:`io.TextIOBase`, the data returned by the ``read()`` method will be "
"encoded as ISO-8859-1, otherwise the data returned by ``read()`` is sent as "
"is.  If *body* is an iterable, the elements of the iterable are sent as is "
"until the iterable is exhausted."
msgstr ""

#: ../../library/http.client.rst:272
msgid ""
"The *headers* argument should be a mapping of extra HTTP headers to send "
"with the request."
msgstr ""

#: ../../library/http.client.rst:275
msgid ""
"If *headers* contains neither Content-Length nor Transfer-Encoding, but "
"there is a request body, one of those header fields will be added "
"automatically.  If *body* is ``None``, the Content-Length header is set to "
"``0`` for methods that expect a body (``PUT``, ``POST``, and ``PATCH``).  If"
" *body* is a string or a bytes-like object that is not also a :term:`file "
"<file object>`, the Content-Length header is set to its length.  Any other "
"type of *body* (files and iterables in general) will be chunk-encoded, and "
"the Transfer-Encoding header will automatically be set instead of Content-"
"Length."
msgstr ""

#: ../../library/http.client.rst:287
msgid ""
"The *encode_chunked* argument is only relevant if Transfer-Encoding is "
"specified in *headers*.  If *encode_chunked* is ``False``, the "
"HTTPConnection object assumes that all encoding is handled by the calling "
"code.  If it is ``True``, the body will be chunk-encoded."
msgstr ""

#: ../../library/http.client.rst:293
msgid ""
"Chunked transfer encoding has been added to the HTTP protocol version 1.1.  "
"Unless the HTTP server is known to handle HTTP 1.1, the caller must either "
"specify the Content-Length, or must pass a :class:`str` or bytes-like object"
" that is not also a file as the body representation."
msgstr ""

#: ../../library/http.client.rst:299
msgid "*body* can now be an iterable."
msgstr ""

#: ../../library/http.client.rst:302
msgid ""
"If neither Content-Length nor Transfer-Encoding are set in *headers*, file "
"and iterable *body* objects are now chunk-encoded. The *encode_chunked* "
"argument was added. No attempt is made to determine the Content-Length for "
"file objects."
msgstr ""

#: ../../library/http.client.rst:311
msgid ""
"Should be called after a request is sent to get the response from the "
"server. Returns an :class:`HTTPResponse` instance."
msgstr ""

#: ../../library/http.client.rst:316
msgid ""
"Note that you must have read the whole response before you can send a new "
"request to the server."
msgstr ""

#: ../../library/http.client.rst:319
msgid ""
"If a :exc:`ConnectionError` or subclass is raised, the "
":class:`HTTPConnection` object will be ready to reconnect when a new request"
" is sent."
msgstr ""

#: ../../library/http.client.rst:327
msgid ""
"Set the debugging level.  The default debug level is ``0``, meaning no "
"debugging output is printed.  Any value greater than ``0`` will cause all "
"currently defined debug output to be printed to stdout.  The ``debuglevel`` "
"is passed to any new :class:`HTTPResponse` objects that are created."
msgstr ""

#: ../../library/http.client.rst:337
msgid ""
"Set the host and the port for HTTP Connect Tunnelling. This allows running "
"the connection through a proxy server."
msgstr ""

#: ../../library/http.client.rst:340
msgid ""
"The host and port arguments specify the endpoint of the tunneled connection "
"(i.e. the address included in the CONNECT request, *not* the address of the "
"proxy server)."
msgstr ""

#: ../../library/http.client.rst:344
msgid ""
"The headers argument should be a mapping of extra HTTP headers to send with "
"the CONNECT request."
msgstr ""

#: ../../library/http.client.rst:347
msgid ""
"For example, to tunnel through a HTTPS proxy server running locally on port "
"8080, we would pass the address of the proxy to the :class:`HTTPSConnection`"
" constructor, and the address of the host that we eventually want to reach "
"to the :meth:`~HTTPConnection.set_tunnel` method::"
msgstr ""

#: ../../library/http.client.rst:362
msgid ""
"Connect to the server specified when the object was created.  By default, "
"this is called automatically when making a request if the client does not "
"already have a connection."
msgstr ""

#: ../../library/http.client.rst:369
msgid "Close the connection to the server."
msgstr ""

#: ../../library/http.client.rst:374
msgid "Buffer size in bytes for sending a file-like message body."
msgstr ""

#: ../../library/http.client.rst:379
msgid ""
"As an alternative to using the :meth:`request` method described above, you "
"can also send your request step by step, by using the four functions below."
msgstr ""

#: ../../library/http.client.rst:386
msgid ""
"This should be the first call after the connection to the server has been "
"made. It sends a line to the server consisting of the *method* string, the "
"*url* string, and the HTTP version (``HTTP/1.1``).  To disable automatic "
"sending of ``Host:`` or ``Accept-Encoding:`` headers (for example to accept "
"additional content encodings), specify *skip_host* or *skip_accept_encoding*"
" with non-False values."
msgstr ""

#: ../../library/http.client.rst:396
msgid ""
"Send an :rfc:`822`\\ -style header to the server.  It sends a line to the "
"server consisting of the header, a colon and a space, and the first "
"argument.  If more arguments are given, continuation lines are sent, each "
"consisting of a tab and an argument."
msgstr ""

#: ../../library/http.client.rst:404
msgid ""
"Send a blank line to the server, signalling the end of the headers. The "
"optional *message_body* argument can be used to pass a message body "
"associated with the request."
msgstr ""

#: ../../library/http.client.rst:408
msgid ""
"If *encode_chunked* is ``True``, the result of each iteration of "
"*message_body* will be chunk-encoded as specified in :rfc:`7230`, Section "
"3.3.1.  How the data is encoded is dependent on the type of *message_body*."
"  If *message_body* implements the :ref:`buffer interface <bufferobjects>` "
"the encoding will result in a single chunk. If *message_body* is a "
":class:`collections.abc.Iterable`, each iteration of *message_body* will "
"result in a chunk.  If *message_body* is a :term:`file object`, each call to"
" ``.read()`` will result in a chunk. The method automatically signals the "
"end of the chunk-encoded data immediately after *message_body*."
msgstr ""

#: ../../library/http.client.rst:419
msgid ""
"Due to the chunked encoding specification, empty chunks yielded by an "
"iterator body will be ignored by the chunk-encoder. This is to avoid "
"premature termination of the read of the request by the target server due to"
" malformed encoding."
msgstr ""

#: ../../library/http.client.rst:424
msgid "Chunked encoding support.  The *encode_chunked* parameter was added."
msgstr ""

#: ../../library/http.client.rst:431
msgid ""
"Send data to the server.  This should be used directly only after the "
":meth:`endheaders` method has been called and before :meth:`getresponse` is "
"called."
msgstr ""

#: ../../library/http.client.rst:439
msgid "HTTPResponse Objects"
msgstr ""

#: ../../library/http.client.rst:441
msgid ""
"An :class:`HTTPResponse` instance wraps the HTTP response from the server.  "
"It provides access to the request headers and the entity body.  The response"
" is an iterable object and can be used in a with statement."
msgstr ""

#: ../../library/http.client.rst:446
msgid ""
"The :class:`io.BufferedIOBase` interface is now implemented and all of its "
"reader operations are supported."
msgstr ""

#: ../../library/http.client.rst:453
msgid "Reads and returns the response body, or up to the next *amt* bytes."
msgstr ""

#: ../../library/http.client.rst:457
msgid ""
"Reads up to the next len(b) bytes of the response body into the buffer *b*. "
"Returns the number of bytes read."
msgstr ""

#: ../../library/http.client.rst:464
msgid ""
"Return the value of the header *name*, or *default* if there is no header "
"matching *name*.  If there is more than one  header with the name *name*, "
"return all of the values joined by ', '.  If 'default' is any iterable other"
" than a single string, its elements are similarly returned joined by commas."
msgstr ""

#: ../../library/http.client.rst:471
msgid "Return a list of (header, value) tuples."
msgstr ""

#: ../../library/http.client.rst:475
msgid "Return the ``fileno`` of the underlying socket."
msgstr ""

#: ../../library/http.client.rst:479
msgid ""
"A :class:`http.client.HTTPMessage` instance containing the response headers."
"  :class:`http.client.HTTPMessage` is a subclass of "
":class:`email.message.Message`."
msgstr ""

#: ../../library/http.client.rst:485
msgid ""
"HTTP protocol version used by server.  10 for HTTP/1.0, 11 for HTTP/1.1."
msgstr ""

#: ../../library/http.client.rst:489
msgid ""
"URL of the resource retrieved, commonly used to determine if a redirect was "
"followed."
msgstr ""

#: ../../library/http.client.rst:493
msgid ""
"Headers of the response in the form of an "
":class:`email.message.EmailMessage` instance."
msgstr ""

#: ../../library/http.client.rst:497
msgid "Status code returned by server."
msgstr ""

#: ../../library/http.client.rst:501
msgid "Reason phrase returned by server."
msgstr ""

#: ../../library/http.client.rst:505
msgid ""
"A debugging hook.  If :attr:`debuglevel` is greater than zero, messages will"
" be printed to stdout as the response is read and parsed."
msgstr ""

#: ../../library/http.client.rst:510
msgid "Is ``True`` if the stream is closed."
msgstr ""

#: ../../library/http.client.rst:514
msgid "Deprecated in favor of :attr:`~HTTPResponse.url`."
msgstr ""

#: ../../library/http.client.rst:519
msgid "Deprecated in favor of :attr:`~HTTPResponse.headers`."
msgstr ""

#: ../../library/http.client.rst:524
msgid "Deprecated in favor of :attr:`~HTTPResponse.status`."
msgstr ""

#: ../../library/http.client.rst:528
msgid "Examples"
msgstr "例子"

#: ../../library/http.client.rst:530
msgid "Here is an example session that uses the ``GET`` method::"
msgstr ""

#: ../../library/http.client.rst:555
msgid ""
"Here is an example session that uses the ``HEAD`` method.  Note that the "
"``HEAD`` method never returns any data. ::"
msgstr ""

#: ../../library/http.client.rst:570
msgid "Here is an example session that shows how to ``POST`` requests::"
msgstr ""

#: ../../library/http.client.rst:586
msgid ""
"Client side ``HTTP PUT`` requests are very similar to ``POST`` requests. The"
" difference lies only the server side where HTTP server will allow resources"
" to be created via ``PUT`` request. It should be noted that custom HTTP "
"methods are also handled in :class:`urllib.request.Request` by setting the "
"appropriate method attribute. Here is an example session that shows how to "
"send a ``PUT`` request using http.client::"
msgstr ""

#: ../../library/http.client.rst:608
msgid "HTTPMessage Objects"
msgstr ""

#: ../../library/http.client.rst:610
msgid ""
"An :class:`http.client.HTTPMessage` instance holds the headers from an HTTP "
"response.  It is implemented using the :class:`email.message.Message` class."
msgstr ""
