# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-07-25 16:48+0000\n"
"PO-Revision-Date: 2025-07-18 20:05+0000\n"
"Language-Team: Chinese (China) (https://app.transifex.com/python-doc/teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/curses.rst:2
msgid ":mod:`curses` --- Terminal handling for character-cell displays"
msgstr ""

#: ../../library/curses.rst:12
msgid "**Source code:** :source:`Lib/curses`"
msgstr ""

#: ../../library/curses.rst:16
msgid ""
"The :mod:`curses` module provides an interface to the curses library, the "
"de-facto standard for portable advanced terminal handling."
msgstr ""

#: ../../library/curses.rst:19
msgid ""
"While curses is most widely used in the Unix environment, versions are "
"available for Windows, DOS, and possibly other systems as well.  This "
"extension module is designed to match the API of ncurses, an open-source "
"curses library hosted on Linux and the BSD variants of Unix."
msgstr ""

#: ../../library/curses.rst:26
msgid ""
"Whenever the documentation mentions a *character* it can be specified as an "
"integer, a one-character Unicode string or a one-byte byte string."
msgstr ""

#: ../../library/curses.rst:29
msgid ""
"Whenever the documentation mentions a *character string* it can be specified"
" as a Unicode string or a byte string."
msgstr ""

#: ../../library/curses.rst:35
msgid "Module :mod:`curses.ascii`"
msgstr ""

#: ../../library/curses.rst:35
msgid ""
"Utilities for working with ASCII characters, regardless of your locale "
"settings."
msgstr ""

#: ../../library/curses.rst:38
msgid "Module :mod:`curses.panel`"
msgstr ""

#: ../../library/curses.rst:38
msgid "A panel stack extension that adds depth to  curses windows."
msgstr ""

#: ../../library/curses.rst:41
msgid "Module :mod:`curses.textpad`"
msgstr ""

#: ../../library/curses.rst:41
msgid ""
"Editable text widget for curses supporting  :program:`Emacs`\\ -like "
"bindings."
msgstr ""

#: ../../library/curses.rst:45
msgid ":ref:`curses-howto`"
msgstr ""

#: ../../library/curses.rst:44
msgid ""
"Tutorial material on using curses with Python, by Andrew Kuchling and Eric "
"Raymond."
msgstr ""

#: ../../library/curses.rst:47
msgid ""
"The :source:`Tools/demo/` directory in the Python source distribution "
"contains some example programs using the curses bindings provided by this "
"module."
msgstr ""

#: ../../library/curses.rst:54
msgid "Functions"
msgstr ""

#: ../../library/curses.rst:56
msgid "The module :mod:`curses` defines the following exception:"
msgstr ""

#: ../../library/curses.rst:61
msgid "Exception raised when a curses library function returns an error."
msgstr ""

#: ../../library/curses.rst:65
msgid ""
"Whenever *x* or *y* arguments to a function or a method are optional, they "
"default to the current cursor location. Whenever *attr* is optional, it "
"defaults to :const:`A_NORMAL`."
msgstr ""

#: ../../library/curses.rst:69
msgid "The module :mod:`curses` defines the following functions:"
msgstr ""

#: ../../library/curses.rst:74
msgid ""
"Return the output speed of the terminal in bits per second.  On software "
"terminal emulators it will have a fixed high value. Included for historical "
"reasons; in former times, it was used to  write output loops for time delays"
" and occasionally to change interfaces depending on the line speed."
msgstr ""

#: ../../library/curses.rst:82
msgid "Emit a short attention sound."
msgstr ""

#: ../../library/curses.rst:87
msgid ""
"Return ``True`` or ``False``, depending on whether the programmer can change"
" the colors displayed by the terminal."
msgstr ""

#: ../../library/curses.rst:93
msgid ""
"Enter cbreak mode.  In cbreak mode (sometimes called \"rare\" mode) normal "
"tty line buffering is turned off and characters are available to be read one"
" by one. However, unlike raw mode, special characters (interrupt, quit, "
"suspend, and flow control) retain their effects on the tty driver and "
"calling program.  Calling first :func:`raw` then :func:`cbreak` leaves the "
"terminal in cbreak mode."
msgstr ""

#: ../../library/curses.rst:102
msgid ""
"Return the intensity of the red, green, and blue (RGB) components in the "
"color *color_number*, which must be between ``0`` and ``COLORS - 1``.  "
"Return a 3-tuple, containing the R,G,B values for the given color, which "
"will be between ``0`` (no component) and ``1000`` (maximum amount of "
"component)."
msgstr ""

#: ../../library/curses.rst:110
msgid ""
"Return the attribute value for displaying text in the specified color pair. "
"Only the first 256 color pairs are supported. This attribute value can be "
"combined with :const:`A_STANDOUT`, :const:`A_REVERSE`, and the other "
":const:`!A_\\*` attributes.  :func:`pair_number` is the counterpart to this "
"function."
msgstr ""

#: ../../library/curses.rst:119
msgid ""
"Set the cursor state.  *visibility* can be set to ``0``, ``1``, or ``2``, "
"for invisible, normal, or very visible.  If the terminal supports the "
"visibility requested, return the previous cursor state; otherwise raise an "
"exception.  On many terminals, the \"visible\" mode is an underline cursor "
"and the \"very visible\" mode is a block cursor."
msgstr ""

#: ../../library/curses.rst:128
msgid ""
"Save the current terminal mode as the \"program\" mode, the mode when the "
"running program is using curses.  (Its counterpart is the \"shell\" mode, "
"for when the program is not in curses.)  Subsequent calls to "
":func:`reset_prog_mode` will restore this mode."
msgstr ""

#: ../../library/curses.rst:136
msgid ""
"Save the current terminal mode as the \"shell\" mode, the mode when the "
"running program is not using curses.  (Its counterpart is the \"program\" "
"mode, when the program is using curses capabilities.) Subsequent calls to "
":func:`reset_shell_mode` will restore this mode."
msgstr ""

#: ../../library/curses.rst:144
msgid "Insert an *ms* millisecond pause in output."
msgstr ""

#: ../../library/curses.rst:149
msgid ""
"Update the physical screen.  The curses library keeps two data structures, "
"one representing the current physical screen contents and a virtual screen "
"representing the desired next state.  The :func:`doupdate` ground updates "
"the physical screen to match the virtual screen."
msgstr ""

#: ../../library/curses.rst:154
msgid ""
"The virtual screen may be updated by a :meth:`~window.noutrefresh` call "
"after write operations such as :meth:`~window.addstr` have been performed on"
" a window.  The normal :meth:`~window.refresh` call is simply "
":meth:`!noutrefresh` followed by :func:`!doupdate`; if you have to update "
"multiple windows, you can speed performance and perhaps reduce screen "
"flicker by issuing :meth:`!noutrefresh` calls on all windows, followed by a "
"single :func:`!doupdate`."
msgstr ""

#: ../../library/curses.rst:164
msgid ""
"Enter echo mode.  In echo mode, each character input is echoed to the screen"
" as it is entered."
msgstr ""

#: ../../library/curses.rst:170
msgid "De-initialize the library, and return terminal to normal status."
msgstr ""

#: ../../library/curses.rst:175
msgid ""
"Return the user's current erase character as a one-byte bytes object.  Under"
" Unix operating systems this is a property of the controlling tty of the "
"curses program, and is not set by the curses library itself."
msgstr ""

#: ../../library/curses.rst:182
msgid ""
"The :func:`.filter` routine, if used, must be called before :func:`initscr` "
"is called.  The effect is that, during those calls, :envvar:`LINES` is set "
"to ``1``; the capabilities ``clear``, ``cup``, ``cud``, ``cud1``, ``cuu1``, "
"``cuu``, ``vpa`` are disabled; and the ``home`` string is set to the value "
"of ``cr``. The effect is that the cursor is confined to the current line, "
"and so are screen updates.  This may be used for enabling character-at-a-"
"time  line editing without touching the rest of the screen."
msgstr ""

#: ../../library/curses.rst:192
msgid ""
"Flash the screen.  That is, change it to reverse-video and then change it "
"back in a short interval.  Some people prefer such as 'visible bell' to the "
"audible attention signal produced by :func:`beep`."
msgstr ""

#: ../../library/curses.rst:199
msgid ""
"Flush all input buffers.  This throws away any  typeahead  that  has been "
"typed by the user and has not yet been processed by the program."
msgstr ""

#: ../../library/curses.rst:205
msgid ""
"After :meth:`~window.getch` returns :const:`KEY_MOUSE` to signal a mouse "
"event, this method should be called to retrieve the queued mouse event, "
"represented as a 5-tuple ``(id, x, y, z, bstate)``. *id* is an ID value used"
" to distinguish multiple devices, and *x*, *y*, *z* are the event's "
"coordinates.  (*z* is currently unused.)  *bstate* is an integer value whose"
" bits will be set to indicate the type of event, and will be the bitwise OR "
"of one or more of the following constants, where *n* is the button number "
"from 1 to 5: :const:`BUTTONn_PRESSED`, :const:`BUTTONn_RELEASED`, "
":const:`BUTTONn_CLICKED`, :const:`BUTTONn_DOUBLE_CLICKED`, "
":const:`BUTTONn_TRIPLE_CLICKED`, :const:`BUTTON_SHIFT`, "
":const:`BUTTON_CTRL`, :const:`BUTTON_ALT`."
msgstr ""

#: ../../library/curses.rst:216 ../../library/curses.rst:1777
msgid ""
"The ``BUTTON5_*`` constants are now exposed if they are provided by the "
"underlying curses library."
msgstr ""

#: ../../library/curses.rst:223
msgid ""
"Return the current coordinates of the virtual screen cursor as a tuple ``(y,"
" x)``.  If :meth:`leaveok <window.leaveok>` is currently ``True``, then "
"return ``(-1, -1)``."
msgstr ""

#: ../../library/curses.rst:229
msgid ""
"Read window related data stored in the file by an earlier "
":func:`window.putwin` call. The routine then creates and initializes a new "
"window using that data, returning the new window object."
msgstr ""

#: ../../library/curses.rst:236
msgid ""
"Return ``True`` if the terminal can display colors; otherwise, return "
"``False``."
msgstr ""

#: ../../library/curses.rst:240
msgid ""
"Return ``True`` if the module supports extended colors; otherwise, return "
"``False``. Extended color support allows more than 256 color pairs for "
"terminals that support more than 16 colors (e.g. xterm-256color)."
msgstr ""

#: ../../library/curses.rst:244
msgid "Extended color support requires ncurses version 6.1 or later."
msgstr ""

#: ../../library/curses.rst:250
msgid ""
"Return ``True`` if the terminal has insert- and delete-character "
"capabilities. This function is included for historical reasons only, as all "
"modern software terminal emulators have such capabilities."
msgstr ""

#: ../../library/curses.rst:257
msgid ""
"Return ``True`` if the terminal has insert- and delete-line capabilities, or"
" can simulate  them  using scrolling regions. This function is included for "
"historical reasons only, as all modern software terminal emulators have such"
" capabilities."
msgstr ""

#: ../../library/curses.rst:265
msgid ""
"Take a key value *ch*, and return ``True`` if the current terminal type "
"recognizes a key with that value."
msgstr ""

#: ../../library/curses.rst:271
msgid ""
"Used for half-delay mode, which is similar to cbreak mode in that characters"
" typed by the user are immediately available to the program. However, after "
"blocking for *tenths* tenths of seconds, raise an exception if nothing has "
"been typed.  The value of *tenths* must be a number between ``1`` and "
"``255``.  Use :func:`nocbreak` to leave half-delay mode."
msgstr ""

#: ../../library/curses.rst:280
msgid ""
"Change the definition of a color, taking the number of the color to be "
"changed followed by three RGB values (for the amounts of red, green, and "
"blue components).  The value of *color_number* must be between ``0`` and "
"``COLORS - 1``.  Each of *r*, *g*, *b*, must be a value between ``0`` and "
"``1000``.  When :func:`init_color` is used, all occurrences of that color on"
" the screen immediately change to the new definition.  This function is a "
"no-op on most terminals; it is active only if :func:`can_change_color` "
"returns ``True``."
msgstr ""

#: ../../library/curses.rst:291
msgid ""
"Change the definition of a color-pair.  It takes three arguments: the number"
" of the color-pair to be changed, the foreground color number, and the "
"background color number.  The value of *pair_number* must be between ``1`` "
"and ``COLOR_PAIRS - 1`` (the ``0`` color pair is wired to white on black and"
" cannot be changed).  The value of *fg* and *bg* arguments must be between "
"``0`` and ``COLORS - 1``, or, after calling :func:`use_default_colors`, "
"``-1``. If the color-pair was previously initialized, the screen is "
"refreshed and all occurrences of that color-pair are changed to the new "
"definition."
msgstr ""

#: ../../library/curses.rst:304
msgid ""
"Initialize the library. Return a :ref:`window <curses-window-objects>` "
"object which represents the whole screen."
msgstr ""

#: ../../library/curses.rst:309
msgid ""
"If there is an error opening the terminal, the underlying curses library may"
" cause the interpreter to exit."
msgstr ""

#: ../../library/curses.rst:315
msgid ""
"Return ``True`` if :func:`resize_term` would modify the window structure, "
"``False`` otherwise."
msgstr ""

#: ../../library/curses.rst:321
msgid ""
"Return ``True`` if :func:`endwin` has been called (that is, the  curses "
"library has been deinitialized)."
msgstr ""

#: ../../library/curses.rst:327
msgid ""
"Return the name of the key numbered *k* as a bytes object.  The name of a "
"key generating printable ASCII character is the key's character.  The name "
"of a control-key combination is a two-byte bytes object consisting of a "
"caret (``b'^'``) followed by the corresponding printable ASCII character.  "
"The name of an alt-key combination (128--255) is a bytes object consisting "
"of the prefix ``b'M-'`` followed by the name of the corresponding ASCII "
"character."
msgstr ""

#: ../../library/curses.rst:337
msgid ""
"Return the user's current line kill character as a one-byte bytes object. "
"Under Unix operating systems this is a property of the controlling tty of "
"the curses program, and is not set by the curses library itself."
msgstr ""

#: ../../library/curses.rst:344
msgid ""
"Return a bytes object containing the terminfo long name field describing the"
" current terminal.  The maximum length of a verbose description is 128 "
"characters.  It is defined only after the call to :func:`initscr`."
msgstr ""

#: ../../library/curses.rst:351
msgid ""
"If *flag* is ``True``, allow 8-bit characters to be input.  If *flag* is "
"``False``,  allow only 7-bit chars."
msgstr ""

#: ../../library/curses.rst:357
msgid ""
"Set the maximum time in milliseconds that can elapse between press and "
"release events in order for them to be recognized as a click, and return the"
" previous interval value.  The default value is 200 milliseconds, or one "
"fifth of a second."
msgstr ""

#: ../../library/curses.rst:364
msgid ""
"Set the mouse events to be reported, and return a tuple ``(availmask, "
"oldmask)``.   *availmask* indicates which of the specified mouse events can "
"be reported; on complete failure it returns ``0``.  *oldmask* is the "
"previous value of the given window's mouse event mask.  If this function is "
"never called, no mouse events are ever reported."
msgstr ""

#: ../../library/curses.rst:373
msgid "Sleep for *ms* milliseconds."
msgstr ""

#: ../../library/curses.rst:378
msgid ""
"Create and return a pointer to a new pad data structure with the given "
"number of lines and columns.  Return a pad as a window object."
msgstr ""

#: ../../library/curses.rst:381
msgid ""
"A pad is like a window, except that it is not restricted by the screen size,"
" and is not necessarily associated with a particular part of the screen.  "
"Pads can be used when a large window is needed, and only a part of the "
"window will be on the screen at one time.  Automatic refreshes of pads (such"
" as from scrolling or echoing of input) do not occur.  The "
":meth:`~window.refresh` and :meth:`~window.noutrefresh` methods of a pad "
"require 6 arguments to specify the part of the pad to be displayed and the "
"location on the screen to be used for the display. The arguments are "
"*pminrow*, *pmincol*, *sminrow*, *smincol*, *smaxrow*, *smaxcol*; the *p* "
"arguments refer to the upper left corner of the pad region to be displayed "
"and the *s* arguments define a clipping box on the screen within which the "
"pad region is to be displayed."
msgstr ""

#: ../../library/curses.rst:397
msgid ""
"Return a new :ref:`window <curses-window-objects>`, whose left-upper corner "
"is at  ``(begin_y, begin_x)``, and whose height/width is  *nlines*/*ncols*."
msgstr ""

#: ../../library/curses.rst:400
msgid ""
"By default, the window will extend from the  specified position to the lower"
" right corner of the screen."
msgstr ""

#: ../../library/curses.rst:406
msgid ""
"Enter newline mode.  This mode translates the return key into newline on "
"input, and translates newline into return and line-feed on output. Newline "
"mode is initially on."
msgstr ""

#: ../../library/curses.rst:413
msgid "Leave cbreak mode.  Return to normal \"cooked\" mode with line buffering."
msgstr ""

#: ../../library/curses.rst:418
msgid "Leave echo mode.  Echoing of input characters is turned off."
msgstr ""

#: ../../library/curses.rst:423
msgid ""
"Leave newline mode.  Disable translation of return into newline on input, "
"and disable low-level translation of newline into newline/return on output "
"(but this does not change the behavior of ``addch('\\n')``, which always "
"does the equivalent of return and line feed on the virtual screen).  With "
"translation off, curses can sometimes speed up vertical motion a little; "
"also, it will be able to detect the return key on input."
msgstr ""

#: ../../library/curses.rst:433
msgid ""
"When the :func:`!noqiflush` routine is used, normal flush of input and "
"output queues associated with the ``INTR``, ``QUIT`` and ``SUSP`` characters"
" will not be done.  You may want to call :func:`!noqiflush` in a signal "
"handler if you want output to continue as though the interrupt had not "
"occurred, after the handler exits."
msgstr ""

#: ../../library/curses.rst:441
msgid "Leave raw mode. Return to normal \"cooked\" mode with line buffering."
msgstr ""

#: ../../library/curses.rst:446
msgid ""
"Return a tuple ``(fg, bg)`` containing the colors for the requested color "
"pair. The value of *pair_number* must be between ``0`` and ``COLOR_PAIRS - "
"1``."
msgstr ""

#: ../../library/curses.rst:452
msgid ""
"Return the number of the color-pair set by the attribute value *attr*. "
":func:`color_pair` is the counterpart to this function."
msgstr ""

#: ../../library/curses.rst:458
msgid ""
"Equivalent to ``tputs(str, 1, putchar)``; emit the value of a specified "
"terminfo capability for the current terminal.  Note that the output of "
":func:`putp` always goes to standard output."
msgstr ""

#: ../../library/curses.rst:465
msgid ""
"If *flag* is ``False``, the effect is the same as calling :func:`noqiflush`."
" If *flag* is ``True``, or no argument is provided, the queues will be "
"flushed when these control characters are read."
msgstr ""

#: ../../library/curses.rst:472
msgid ""
"Enter raw mode.  In raw mode, normal line buffering and  processing of "
"interrupt, quit, suspend, and flow control keys are turned off; characters "
"are presented to curses input functions one by one."
msgstr ""

#: ../../library/curses.rst:479
msgid ""
"Restore the  terminal  to \"program\" mode, as previously saved  by "
":func:`def_prog_mode`."
msgstr ""

#: ../../library/curses.rst:485
msgid ""
"Restore the  terminal  to \"shell\" mode, as previously saved  by "
":func:`def_shell_mode`."
msgstr ""

#: ../../library/curses.rst:491
msgid ""
"Restore the state of the terminal modes to what it was at the last call to "
":func:`savetty`."
msgstr ""

#: ../../library/curses.rst:497
msgid ""
"Backend function used by :func:`resizeterm`, performing most of the work; "
"when resizing the windows, :func:`resize_term` blank-fills the areas that "
"are extended.  The calling application should fill in these areas with "
"appropriate data.  The :func:`!resize_term` function attempts to resize all "
"windows.  However, due to the calling convention of pads, it is not possible"
" to resize these without additional interaction with the application."
msgstr ""

#: ../../library/curses.rst:507
msgid ""
"Resize the standard and current windows to the specified dimensions, and "
"adjusts other bookkeeping data used by the curses library that record the "
"window dimensions (in particular the SIGWINCH handler)."
msgstr ""

#: ../../library/curses.rst:514
msgid ""
"Save the current state of the terminal modes in a buffer, usable by "
":func:`resetty`."
msgstr ""

#: ../../library/curses.rst:519
msgid "Retrieves the value set by :func:`set_escdelay`."
msgstr ""

#: ../../library/curses.rst:525
msgid ""
"Sets the number of milliseconds to wait after reading an escape character, "
"to distinguish between an individual escape character entered on the "
"keyboard from escape sequences sent by cursor and function keys."
msgstr ""

#: ../../library/curses.rst:533
msgid "Retrieves the value set by :func:`set_tabsize`."
msgstr ""

#: ../../library/curses.rst:539
msgid ""
"Sets the number of columns used by the curses library when converting a tab "
"character to spaces as it adds the tab to a window."
msgstr ""

#: ../../library/curses.rst:546
msgid ""
"Set the virtual screen cursor to *y*, *x*. If *y* and *x* are both ``-1``, "
"then :meth:`leaveok <window.leaveok>` is set ``True``."
msgstr ""

#: ../../library/curses.rst:552
msgid ""
"Initialize the terminal.  *term* is a string giving the terminal name, or "
"``None``; if omitted or ``None``, the value of the :envvar:`TERM` "
"environment variable will be used.  *fd* is the file descriptor to which any"
" initialization sequences will be sent; if not supplied or ``-1``, the file "
"descriptor for ``sys.stdout`` will be used."
msgstr ""

#: ../../library/curses.rst:561
msgid ""
"Must be called if the programmer wants to use colors, and before any other "
"color manipulation routine is called.  It is good practice to call this "
"routine right after :func:`initscr`."
msgstr ""

#: ../../library/curses.rst:565
msgid ""
":func:`start_color` initializes eight basic colors (black, red,  green, "
"yellow, blue, magenta, cyan, and white), and two global variables in the "
":mod:`curses` module, :const:`COLORS` and :const:`COLOR_PAIRS`, containing "
"the maximum number of colors and color-pairs the terminal can support.  It "
"also restores the colors on the terminal to the values they had when the "
"terminal was just turned on."
msgstr ""

#: ../../library/curses.rst:574
msgid ""
"Return a logical OR of all video attributes supported by the terminal.  This"
" information is useful when a curses program needs complete control over the"
" appearance of the screen."
msgstr ""

#: ../../library/curses.rst:581
msgid ""
"Return the value of the environment variable :envvar:`TERM`, as a bytes "
"object, truncated to 14 characters."
msgstr ""

#: ../../library/curses.rst:587
msgid ""
"Return the value of the Boolean capability corresponding to the terminfo "
"capability name *capname* as an integer.  Return the value ``-1`` if "
"*capname* is not a Boolean capability, or ``0`` if it is canceled or absent "
"from the terminal description."
msgstr ""

#: ../../library/curses.rst:595
msgid ""
"Return the value of the numeric capability corresponding to the terminfo "
"capability name *capname* as an integer.  Return the value ``-2`` if "
"*capname* is not a numeric capability, or ``-1`` if it is canceled or absent"
" from the terminal description."
msgstr ""

#: ../../library/curses.rst:603
msgid ""
"Return the value of the string capability corresponding to the terminfo "
"capability name *capname* as a bytes object.  Return ``None`` if *capname* "
"is not a terminfo \"string capability\", or is canceled or absent from the "
"terminal description."
msgstr ""

#: ../../library/curses.rst:611
msgid ""
"Instantiate the bytes object *str* with the supplied parameters, where *str*"
" should be a parameterized string obtained from the terminfo database.  E.g."
" ``tparm(tigetstr(\"cup\"), 5, 3)`` could result in ``b'\\033[6;4H'``, the "
"exact result depending on terminal type."
msgstr ""

#: ../../library/curses.rst:619
msgid ""
"Specify that the file descriptor *fd* be used for typeahead checking.  If "
"*fd* is ``-1``, then no typeahead checking is done."
msgstr ""

#: ../../library/curses.rst:622
msgid ""
"The curses library does \"line-breakout optimization\" by looking for "
"typeahead periodically while updating the screen.  If input is found, and it"
" is coming from a tty, the current update is postponed until refresh or "
"doupdate is called again, allowing faster response to commands typed in "
"advance. This function allows specifying a different file descriptor for "
"typeahead checking."
msgstr ""

#: ../../library/curses.rst:631
msgid ""
"Return a bytes object which is a printable representation of the character "
"*ch*. Control characters are represented as a caret followed by the "
"character, for example as ``b'^C'``. Printing characters are left as they "
"are."
msgstr ""

#: ../../library/curses.rst:638
msgid "Push *ch* so the next :meth:`~window.getch` will return it."
msgstr ""

#: ../../library/curses.rst:642
msgid "Only one *ch* can be pushed before :meth:`!getch` is called."
msgstr ""

#: ../../library/curses.rst:647
msgid ""
"Update the :const:`LINES` and :const:`COLS` module variables. Useful for "
"detecting manual screen resize."
msgstr ""

#: ../../library/curses.rst:655
msgid "Push *ch* so the next :meth:`~window.get_wch` will return it."
msgstr ""

#: ../../library/curses.rst:659
msgid "Only one *ch* can be pushed before :meth:`!get_wch` is called."
msgstr ""

#: ../../library/curses.rst:666
msgid ""
"Push a :const:`KEY_MOUSE` event onto the input queue, associating the given "
"state data with it."
msgstr ""

#: ../../library/curses.rst:672
msgid ""
"If used, this function should be called before :func:`initscr` or newterm "
"are called.  When *flag* is ``False``, the values of lines and columns "
"specified in the terminfo database will be used, even if environment "
"variables :envvar:`LINES` and :envvar:`COLUMNS` (used by default) are set, "
"or if curses is running in a window (in which case default behavior would be"
" to use the window size if :envvar:`LINES` and :envvar:`COLUMNS` are not "
"set)."
msgstr ""

#: ../../library/curses.rst:682
msgid ""
"Allow use of default values for colors on terminals supporting this feature."
" Use this to support transparency in your application.  The default color is"
" assigned to the color number ``-1``. After calling this function,  "
"``init_pair(x, curses.COLOR_RED, -1)`` initializes, for instance, color pair"
" *x* to a red foreground color on the default background."
msgstr ""

#: ../../library/curses.rst:691
msgid ""
"Initialize curses and call another callable object, *func*, which should be "
"the rest of your curses-using application.  If the application raises an "
"exception, this function will restore the terminal to a sane state before "
"re-raising the exception and generating a traceback.  The callable object "
"*func* is then passed the main window 'stdscr' as its first argument, "
"followed by any other arguments passed to :func:`!wrapper`.  Before calling "
"*func*, :func:`!wrapper` turns on cbreak mode, turns off echo, enables the "
"terminal keypad, and initializes colors if the terminal has color support.  "
"On exit (whether normally or by exception) it restores cooked mode, turns on"
" echo, and disables the terminal keypad."
msgstr ""

#: ../../library/curses.rst:705
msgid "Window Objects"
msgstr ""

#: ../../library/curses.rst:707
msgid ""
"Window objects, as returned by :func:`initscr` and :func:`newwin` above, "
"have the following methods and attributes:"
msgstr ""

#: ../../library/curses.rst:714
msgid ""
"Paint character *ch* at ``(y, x)`` with attributes *attr*, overwriting any "
"character previously painted at that location.  By default, the character "
"position and attributes are the current settings for the window object."
msgstr ""

#: ../../library/curses.rst:720
msgid ""
"Writing outside the window, subwindow, or pad raises a :exc:`curses.error`. "
"Attempting to write to the lower right corner of a window, subwindow, or pad"
" will cause an exception to be raised after the character is printed."
msgstr ""

#: ../../library/curses.rst:728
msgid ""
"Paint at most *n* characters of the character string *str* at ``(y, x)`` "
"with attributes *attr*, overwriting anything previously on the display."
msgstr ""

#: ../../library/curses.rst:736
msgid ""
"Paint the character string *str* at ``(y, x)`` with attributes *attr*, "
"overwriting anything previously on the display."
msgstr ""

#: ../../library/curses.rst:741
msgid ""
"Writing outside the window, subwindow, or pad raises :exc:`curses.error`. "
"Attempting to write to the lower right corner of a window, subwindow, or pad"
" will cause an exception to be raised after the string is printed."
msgstr ""

#: ../../library/curses.rst:745
msgid ""
"A `bug in ncurses <https://bugs.python.org/issue35924>`_, the backend for "
"this Python module, can cause SegFaults when resizing windows. This is fixed"
" in ncurses-6.1-20190511.  If you are stuck with an earlier ncurses, you can"
" avoid triggering this if you do not call :func:`addstr` with a *str* that "
"has embedded newlines.  Instead, call :func:`addstr` separately for each "
"line."
msgstr ""

#: ../../library/curses.rst:755
msgid ""
"Remove attribute *attr* from the \"background\" set applied to all writes to"
" the current window."
msgstr ""

#: ../../library/curses.rst:761
msgid ""
"Add attribute *attr* from the \"background\" set applied to all writes to "
"the current window."
msgstr ""

#: ../../library/curses.rst:767
msgid ""
"Set the \"background\" set of attributes to *attr*.  This set is initially "
"``0`` (no attributes)."
msgstr ""

#: ../../library/curses.rst:773
msgid ""
"Set the background property of the window to the character *ch*, with "
"attributes *attr*.  The change is then applied to every character position "
"in that window:"
msgstr ""

#: ../../library/curses.rst:777
msgid ""
"The attribute of every character in the window  is changed to the new "
"background attribute."
msgstr ""

#: ../../library/curses.rst:780
msgid ""
"Wherever  the  former background character appears, it is changed to the new"
" background character."
msgstr ""

#: ../../library/curses.rst:786
msgid ""
"Set the window's background.  A window's background consists of a character "
"and any combination of attributes.  The attribute part of the background is "
"combined (OR'ed) with all non-blank characters that are written into the "
"window.  Both the character and attribute parts of the background are "
"combined with the blank characters.  The background becomes a property of "
"the character and moves with the character through any scrolling and "
"insert/delete line/character operations."
msgstr ""

#: ../../library/curses.rst:796
msgid ""
"Draw a border around the edges of the window. Each parameter specifies  the "
"character to use for a specific part of the border; see the table below for "
"more details."
msgstr ""

#: ../../library/curses.rst:802
msgid ""
"A ``0`` value for any parameter will cause the default character to be used "
"for that parameter.  Keyword parameters can *not* be used.  The defaults are"
" listed in this table:"
msgstr ""

#: ../../library/curses.rst:807
msgid "Parameter"
msgstr ""

#: ../../library/curses.rst:807
msgid "Description"
msgstr ""

#: ../../library/curses.rst:807
msgid "Default value"
msgstr ""

#: ../../library/curses.rst:809
msgid "*ls*"
msgstr ""

#: ../../library/curses.rst:809
msgid "Left side"
msgstr ""

#: ../../library/curses.rst:809 ../../library/curses.rst:811
msgid ":const:`ACS_VLINE`"
msgstr ""

#: ../../library/curses.rst:811
msgid "*rs*"
msgstr ""

#: ../../library/curses.rst:811
msgid "Right side"
msgstr ""

#: ../../library/curses.rst:813
msgid "*ts*"
msgstr ""

#: ../../library/curses.rst:813
msgid "Top"
msgstr ""

#: ../../library/curses.rst:813 ../../library/curses.rst:815
msgid ":const:`ACS_HLINE`"
msgstr ""

#: ../../library/curses.rst:815
msgid "*bs*"
msgstr ""

#: ../../library/curses.rst:815
msgid "Bottom"
msgstr ""

#: ../../library/curses.rst:817
msgid "*tl*"
msgstr ""

#: ../../library/curses.rst:817
msgid "Upper-left corner"
msgstr ""

#: ../../library/curses.rst:817
msgid ":const:`ACS_ULCORNER`"
msgstr ""

#: ../../library/curses.rst:819
msgid "*tr*"
msgstr ""

#: ../../library/curses.rst:819
msgid "Upper-right corner"
msgstr ""

#: ../../library/curses.rst:819
msgid ":const:`ACS_URCORNER`"
msgstr ""

#: ../../library/curses.rst:821
msgid "*bl*"
msgstr ""

#: ../../library/curses.rst:821
msgid "Bottom-left corner"
msgstr ""

#: ../../library/curses.rst:821
msgid ":const:`ACS_LLCORNER`"
msgstr ""

#: ../../library/curses.rst:823
msgid "*br*"
msgstr ""

#: ../../library/curses.rst:823
msgid "Bottom-right corner"
msgstr ""

#: ../../library/curses.rst:823
msgid ":const:`ACS_LRCORNER`"
msgstr ""

#: ../../library/curses.rst:829
msgid ""
"Similar to :meth:`border`, but both *ls* and *rs* are *vertch* and both *ts*"
" and *bs* are *horch*.  The default corner characters are always used by "
"this function."
msgstr ""

#: ../../library/curses.rst:838
msgid ""
"Set the attributes of *num* characters at the current cursor position, or at"
" position ``(y, x)`` if supplied. If *num* is not given or is ``-1``, the "
"attribute will be set on all the characters to the end of the line.  This "
"function moves cursor to position ``(y, x)`` if supplied. The changed line "
"will be touched using the :meth:`touchline` method so that the contents will"
" be redisplayed by the next window refresh."
msgstr ""

#: ../../library/curses.rst:848
msgid ""
"Like :meth:`erase`, but also cause the whole window to be repainted upon "
"next call to :meth:`refresh`."
msgstr ""

#: ../../library/curses.rst:854
msgid ""
"If *flag* is ``True``, the next call to :meth:`refresh` will clear the "
"window completely."
msgstr ""

#: ../../library/curses.rst:860
msgid ""
"Erase from cursor to the end of the window: all lines below the cursor are "
"deleted, and then the equivalent of :meth:`clrtoeol` is performed."
msgstr ""

#: ../../library/curses.rst:866
msgid "Erase from cursor to the end of the line."
msgstr ""

#: ../../library/curses.rst:871
msgid ""
"Update the current cursor position of all the ancestors of the window to "
"reflect the current cursor position of the window."
msgstr ""

#: ../../library/curses.rst:877
msgid "Delete any character at ``(y, x)``."
msgstr ""

#: ../../library/curses.rst:882
msgid ""
"Delete the line under the cursor. All following lines are moved up by one "
"line."
msgstr ""

#: ../../library/curses.rst:888
msgid ""
"An abbreviation for \"derive window\", :meth:`derwin` is the same as calling"
" :meth:`subwin`, except that *begin_y* and *begin_x* are relative to the "
"origin of the window, rather than relative to the entire screen.  Return a "
"window object for the derived window."
msgstr ""

#: ../../library/curses.rst:896
msgid ""
"Add character *ch* with attribute *attr*, and immediately  call "
":meth:`refresh` on the window."
msgstr ""

#: ../../library/curses.rst:902
msgid ""
"Test whether the given pair of screen-relative character-cell coordinates "
"are enclosed by the given window, returning ``True`` or ``False``.  It is "
"useful for determining what subset of the screen windows enclose the "
"location of a mouse event."
msgstr ""

#: ../../library/curses.rst:907
msgid ""
"Previously it returned ``1`` or ``0`` instead of ``True`` or ``False``."
msgstr ""

#: ../../library/curses.rst:913
msgid ""
"Encoding used to encode method arguments (Unicode strings and characters). "
"The encoding attribute is inherited from the parent window when a subwindow "
"is created, for example with :meth:`window.subwin`. By default, current "
"locale encoding is used (see :func:`locale.getencoding`)."
msgstr ""

#: ../../library/curses.rst:923
msgid "Clear the window."
msgstr ""

#: ../../library/curses.rst:928
msgid "Return a tuple ``(y, x)`` of co-ordinates of upper-left corner."
msgstr ""

#: ../../library/curses.rst:933
msgid "Return the given window's current background character/attribute pair."
msgstr ""

#: ../../library/curses.rst:938
msgid ""
"Get a character. Note that the integer returned does *not* have to be in "
"ASCII range: function keys, keypad keys and so on are represented by numbers"
" higher than 255.  In no-delay mode, return ``-1`` if there is no input, "
"otherwise wait until a key is pressed."
msgstr ""

#: ../../library/curses.rst:946
msgid ""
"Get a wide character. Return a character for most keys, or an integer for "
"function keys, keypad keys, and other special keys. In no-delay mode, raise "
"an exception if there is no input."
msgstr ""

#: ../../library/curses.rst:955
msgid ""
"Get a character, returning a string instead of an integer, as :meth:`getch` "
"does. Function keys, keypad keys and other special keys return a multibyte "
"string containing the key name.  In no-delay mode, raise an exception if "
"there is no input."
msgstr ""

#: ../../library/curses.rst:963
msgid "Return a tuple ``(y, x)`` of the height and width of the window."
msgstr ""

#: ../../library/curses.rst:968
msgid ""
"Return the beginning coordinates of this window relative to its parent "
"window as a tuple ``(y, x)``.  Return ``(-1, -1)`` if this window has no "
"parent."
msgstr ""

#: ../../library/curses.rst:978
msgid ""
"Read a bytes object from the user, with primitive line editing capacity."
msgstr ""

#: ../../library/curses.rst:983
msgid ""
"Return a tuple ``(y, x)`` of current cursor position  relative to the "
"window's upper-left corner."
msgstr ""

#: ../../library/curses.rst:990
msgid ""
"Display a horizontal line starting at ``(y, x)`` with length *n* consisting "
"of the character *ch*."
msgstr ""

#: ../../library/curses.rst:996
msgid ""
"If *flag* is ``False``, curses no longer considers using the hardware "
"insert/delete character feature of the terminal; if *flag* is ``True``, use "
"of character insertion and deletion is enabled.  When curses is first "
"initialized, use of character insert/delete is enabled by default."
msgstr ""

#: ../../library/curses.rst:1004
msgid ""
"If *flag* is ``True``, :mod:`curses` will try and use hardware line editing "
"facilities. Otherwise, line insertion/deletion are disabled."
msgstr ""

#: ../../library/curses.rst:1010
msgid ""
"If *flag* is ``True``, any change in the window image automatically causes "
"the window to be refreshed; you no longer have to call :meth:`refresh` "
"yourself. However, it may degrade performance considerably, due to repeated "
"calls to wrefresh.  This option is disabled by default."
msgstr ""

#: ../../library/curses.rst:1018
msgid ""
"Return the character at the given position in the window. The bottom 8 bits "
"are the character proper, and upper bits are the attributes."
msgstr ""

#: ../../library/curses.rst:1025
msgid ""
"Paint character *ch* at ``(y, x)`` with attributes *attr*, moving the line "
"from position *x* right by one character."
msgstr ""

#: ../../library/curses.rst:1031
msgid ""
"Insert *nlines* lines into the specified window above the current line.  The"
" *nlines* bottom lines are lost.  For negative *nlines*, delete *nlines* "
"lines starting with the one under the cursor, and move the remaining lines "
"up.  The bottom *nlines* lines are cleared.  The current cursor position "
"remains the same."
msgstr ""

#: ../../library/curses.rst:1040
msgid ""
"Insert a blank line under the cursor. All following lines are moved down by "
"one line."
msgstr ""

#: ../../library/curses.rst:1047
msgid ""
"Insert a character string (as many characters as will fit on the line) "
"before the character under the cursor, up to *n* characters.   If *n* is "
"zero or negative, the entire string is inserted. All characters to the right"
" of the cursor are shifted right, with the rightmost characters on the line "
"being lost. The cursor position does not change (after moving to *y*, *x*, "
"if specified)."
msgstr ""

#: ../../library/curses.rst:1057
msgid ""
"Insert a character string (as many characters as will fit on the line) "
"before the character under the cursor.  All characters to the right of the "
"cursor are shifted right, with the rightmost characters on the line being "
"lost.  The cursor position does not change (after moving to *y*, *x*, if "
"specified)."
msgstr ""

#: ../../library/curses.rst:1066
msgid ""
"Return a bytes object of characters, extracted from the window starting at "
"the current cursor position, or at *y*, *x* if specified. Attributes are "
"stripped from the characters.  If *n* is specified, :meth:`instr` returns a "
"string at most *n* characters long (exclusive of the trailing NUL)."
msgstr ""

#: ../../library/curses.rst:1074
msgid ""
"Return ``True`` if the specified line was modified since the last call to "
":meth:`refresh`; otherwise return ``False``.  Raise a :exc:`curses.error` "
"exception if *line* is not valid for the given window."
msgstr ""

#: ../../library/curses.rst:1081
msgid ""
"Return ``True`` if the specified window was modified since the last call to "
":meth:`refresh`; otherwise return ``False``."
msgstr ""

#: ../../library/curses.rst:1087
msgid ""
"If *flag* is ``True``, escape sequences generated by some keys (keypad,  "
"function keys) will be interpreted by :mod:`curses`. If *flag* is ``False``,"
" escape sequences will be left as is in the input stream."
msgstr ""

#: ../../library/curses.rst:1094
msgid ""
"If *flag* is ``True``, cursor is left where it is on update, instead of "
"being at \"cursor position.\"  This reduces cursor movement where possible. "
"If possible the cursor will be made invisible."
msgstr ""

#: ../../library/curses.rst:1098
msgid ""
"If *flag* is ``False``, cursor will always be at \"cursor position\" after "
"an update."
msgstr ""

#: ../../library/curses.rst:1103
msgid "Move cursor to ``(new_y, new_x)``."
msgstr ""

#: ../../library/curses.rst:1108
msgid ""
"Move the window inside its parent window.  The screen-relative parameters of"
" the window are not changed.  This routine is used to display different "
"parts of the parent window at the same physical position on the screen."
msgstr ""

#: ../../library/curses.rst:1115
msgid "Move the window so its upper-left corner is at ``(new_y, new_x)``."
msgstr ""

#: ../../library/curses.rst:1120
msgid "If *flag* is ``True``, :meth:`getch` will be non-blocking."
msgstr ""

#: ../../library/curses.rst:1125
msgid "If *flag* is ``True``, escape sequences will not be timed out."
msgstr ""

#: ../../library/curses.rst:1127
msgid ""
"If *flag* is ``False``, after a few milliseconds, an escape sequence will "
"not be interpreted, and will be left in the input stream as is."
msgstr ""

#: ../../library/curses.rst:1133
msgid ""
"Mark for refresh but wait.  This function updates the data structure "
"representing the desired state of the window, but does not force an update "
"of the physical screen.  To accomplish that, call  :func:`doupdate`."
msgstr ""

#: ../../library/curses.rst:1140
msgid ""
"Overlay the window on top of *destwin*. The windows need not be the same "
"size, only the overlapping region is copied. This copy is non-destructive, "
"which means that the current background character does not overwrite the old"
" contents of *destwin*."
msgstr ""

#: ../../library/curses.rst:1145
msgid ""
"To get fine-grained control over the copied region, the second form of "
":meth:`overlay` can be used. *sminrow* and *smincol* are the upper-left "
"coordinates of the source window, and the other variables mark a rectangle "
"in the destination window."
msgstr ""

#: ../../library/curses.rst:1153
msgid ""
"Overwrite the window on top of *destwin*. The windows need not be the same "
"size, in which case only the overlapping region is copied. This copy is "
"destructive, which means that the current background character overwrites "
"the old contents of *destwin*."
msgstr ""

#: ../../library/curses.rst:1158
msgid ""
"To get fine-grained control over the copied region, the second form of "
":meth:`overwrite` can be used. *sminrow* and *smincol* are the upper-left "
"coordinates of the source window, the other variables mark a rectangle in "
"the destination window."
msgstr ""

#: ../../library/curses.rst:1166
msgid ""
"Write all data associated with the window into the provided file object.  "
"This information can be later retrieved using the :func:`getwin` function."
msgstr ""

#: ../../library/curses.rst:1172
msgid ""
"Indicate that the *num* screen lines, starting at line *beg*, are corrupted "
"and should be completely redrawn on the next :meth:`refresh` call."
msgstr ""

#: ../../library/curses.rst:1178
msgid ""
"Touch the entire window, causing it to be completely redrawn on the next "
":meth:`refresh` call."
msgstr ""

#: ../../library/curses.rst:1184
msgid ""
"Update the display immediately (sync actual screen with previous "
"drawing/deleting methods)."
msgstr ""

#: ../../library/curses.rst:1187
msgid ""
"The 6 optional arguments can only be specified when the window is a pad "
"created with :func:`newpad`.  The additional parameters are needed to "
"indicate what part of the pad and screen are involved. *pminrow* and "
"*pmincol* specify the upper left-hand corner of the rectangle to be "
"displayed in the pad.  *sminrow*, *smincol*, *smaxrow*, and *smaxcol* "
"specify the edges of the rectangle to be displayed on the screen.  The lower"
" right-hand corner of the rectangle to be displayed in the pad is calculated"
" from the screen coordinates, since the rectangles must be the same size.  "
"Both rectangles must be entirely contained within their respective "
"structures.  Negative values of *pminrow*, *pmincol*, *sminrow*, or "
"*smincol* are treated as if they were zero."
msgstr ""

#: ../../library/curses.rst:1201
msgid ""
"Reallocate storage for a curses window to adjust its dimensions to the "
"specified values.  If either dimension is larger than the current values, "
"the window's data is filled with blanks that have the current background "
"rendition (as set by :meth:`bkgdset`) merged into them."
msgstr ""

#: ../../library/curses.rst:1209
msgid "Scroll the screen or scrolling region upward by *lines* lines."
msgstr ""

#: ../../library/curses.rst:1214
msgid ""
"Control what happens when the cursor of a window is moved off the edge of "
"the window or scrolling region, either as a result of a newline action on "
"the bottom line, or typing the last character of the last line.  If *flag* "
"is ``False``, the cursor is left on the bottom line.  If *flag* is ``True``,"
" the window is scrolled up one line.  Note that in order to get the physical"
" scrolling effect on the terminal, it is also necessary to call "
":meth:`idlok`."
msgstr ""

#: ../../library/curses.rst:1224
msgid ""
"Set the scrolling region from line *top* to line *bottom*. All scrolling "
"actions will take place in this region."
msgstr ""

#: ../../library/curses.rst:1230
msgid ""
"Turn off the standout attribute.  On some terminals this has the side effect"
" of turning off all attributes."
msgstr ""

#: ../../library/curses.rst:1236
msgid "Turn on attribute *A_STANDOUT*."
msgstr ""

#: ../../library/curses.rst:1242 ../../library/curses.rst:1249
msgid ""
"Return a sub-window, whose upper-left corner is at ``(begin_y, begin_x)``, "
"and whose width/height is *ncols*/*nlines*."
msgstr ""

#: ../../library/curses.rst:1252
msgid ""
"By default, the sub-window will extend from the specified position to the "
"lower right corner of the window."
msgstr ""

#: ../../library/curses.rst:1258
msgid ""
"Touch each location in the window that has been touched in any of its "
"ancestor windows.  This routine is called by :meth:`refresh`, so it should "
"almost never be necessary to call it manually."
msgstr ""

#: ../../library/curses.rst:1265
msgid ""
"If *flag* is ``True``, then :meth:`syncup` is called automatically whenever "
"there is a change in the window."
msgstr ""

#: ../../library/curses.rst:1271
msgid ""
"Touch all locations in ancestors of the window that have been changed in  "
"the window."
msgstr ""

#: ../../library/curses.rst:1277
msgid ""
"Set blocking or non-blocking read behavior for the window.  If *delay* is "
"negative, blocking read is used (which will wait indefinitely for input).  "
"If *delay* is zero, then non-blocking read is used, and :meth:`getch` will "
"return ``-1`` if no input is waiting.  If *delay* is positive, then "
":meth:`getch` will block for *delay* milliseconds, and return ``-1`` if "
"there is still no input at the end of that time."
msgstr ""

#: ../../library/curses.rst:1287
msgid ""
"Pretend *count* lines have been changed, starting with line *start*.  If "
"*changed* is supplied, it specifies whether the affected lines are marked as"
" having been changed (*changed*\\ ``=True``) or unchanged (*changed*\\ "
"``=False``)."
msgstr ""

#: ../../library/curses.rst:1294
msgid ""
"Pretend the whole window has been changed, for purposes of drawing "
"optimizations."
msgstr ""

#: ../../library/curses.rst:1300
msgid ""
"Mark all lines in  the  window  as unchanged since the last call to "
":meth:`refresh`."
msgstr ""

#: ../../library/curses.rst:1307
msgid ""
"Display a vertical line starting at ``(y, x)`` with length *n* consisting of"
" the character *ch* with attributes *attr*."
msgstr ""

#: ../../library/curses.rst:1312
msgid "Constants"
msgstr ""

#: ../../library/curses.rst:1314
msgid "The :mod:`curses` module defines the following data members:"
msgstr ""

#: ../../library/curses.rst:1319
msgid ""
"Some curses routines  that  return  an integer, such as "
":meth:`~window.getch`, return :const:`ERR` upon failure."
msgstr ""

#: ../../library/curses.rst:1325
msgid ""
"Some curses routines  that  return  an integer, such as  :func:`napms`, "
"return :const:`OK` upon success."
msgstr ""

#: ../../library/curses.rst:1332
msgid "A bytes object representing the current version of the module."
msgstr ""

#: ../../library/curses.rst:1337
msgid ""
"A named tuple containing the three components of the ncurses library "
"version: *major*, *minor*, and *patch*.  All values are integers.  The "
"components can also be accessed by name,  so ``curses.ncurses_version[0]`` "
"is equivalent to ``curses.ncurses_version.major`` and so on."
msgstr ""

#: ../../library/curses.rst:1342
msgid "Availability: if the ncurses library is used."
msgstr ""

#: ../../library/curses.rst:1348
msgid ""
"The maximum number of colors the terminal can support. It is defined only "
"after the call to :func:`start_color`."
msgstr ""

#: ../../library/curses.rst:1353
msgid ""
"The maximum number of color pairs the terminal can support. It is defined "
"only after the call to :func:`start_color`."
msgstr ""

#: ../../library/curses.rst:1358
msgid ""
"The width of the screen, i.e., the number of columns. It is defined only "
"after the call to :func:`initscr`. Updated by :func:`update_lines_cols`, "
":func:`resizeterm` and :func:`resize_term`."
msgstr ""

#: ../../library/curses.rst:1365
msgid ""
"The height of the screen, i.e., the number of lines. It is defined only "
"after the call to :func:`initscr`. Updated by :func:`update_lines_cols`, "
":func:`resizeterm` and :func:`resize_term`."
msgstr ""

#: ../../library/curses.rst:1371
msgid ""
"Some constants are available to specify character cell attributes. The exact"
" constants available are system dependent."
msgstr ""

#: ../../library/curses.rst:1375
msgid "Attribute"
msgstr ""

#: ../../library/curses.rst:1375 ../../library/curses.rst:1420
#: ../../library/curses.rst:1666 ../../library/curses.rst:1758
msgid "Meaning"
msgstr ""

#: ../../library/curses.rst:1377
msgid "Alternate character set mode"
msgstr ""

#: ../../library/curses.rst:1379
msgid "Blink mode"
msgstr ""

#: ../../library/curses.rst:1381
msgid "Bold mode"
msgstr ""

#: ../../library/curses.rst:1383
msgid "Dim mode"
msgstr ""

#: ../../library/curses.rst:1385
msgid "Invisible or blank mode"
msgstr ""

#: ../../library/curses.rst:1387
msgid "Italic mode"
msgstr ""

#: ../../library/curses.rst:1389
msgid "Normal attribute"
msgstr ""

#: ../../library/curses.rst:1391
msgid "Protected mode"
msgstr ""

#: ../../library/curses.rst:1393
msgid "Reverse background and foreground colors"
msgstr ""

#: ../../library/curses.rst:1396
msgid "Standout mode"
msgstr ""

#: ../../library/curses.rst:1398
msgid "Underline mode"
msgstr ""

#: ../../library/curses.rst:1400
msgid "Horizontal highlight"
msgstr ""

#: ../../library/curses.rst:1402
msgid "Left highlight"
msgstr ""

#: ../../library/curses.rst:1404
msgid "Low highlight"
msgstr ""

#: ../../library/curses.rst:1406
msgid "Right highlight"
msgstr ""

#: ../../library/curses.rst:1408
msgid "Top highlight"
msgstr ""

#: ../../library/curses.rst:1410
msgid "Vertical highlight"
msgstr ""

#: ../../library/curses.rst:1413
msgid "``A_ITALIC`` was added."
msgstr ""

#: ../../library/curses.rst:1416
msgid ""
"Several constants are available to extract corresponding attributes returned"
" by some methods."
msgstr ""

#: ../../library/curses.rst:1420
msgid "Bit-mask"
msgstr ""

#: ../../library/curses.rst:1422
msgid "Bit-mask to extract attributes"
msgstr ""

#: ../../library/curses.rst:1425
msgid "Bit-mask to extract a character"
msgstr ""

#: ../../library/curses.rst:1428
msgid "Bit-mask to extract color-pair field information"
msgstr ""

#: ../../library/curses.rst:1432
msgid ""
"Keys are referred to by integer constants with names starting with  "
"``KEY_``. The exact keycaps available are system dependent."
msgstr ""

#: ../../library/curses.rst:1438
msgid "Key constant"
msgstr ""

#: ../../library/curses.rst:1438
msgid "Key"
msgstr ""

#: ../../library/curses.rst:1440
msgid "Minimum key value"
msgstr ""

#: ../../library/curses.rst:1442
msgid "Break key (unreliable)"
msgstr ""

#: ../../library/curses.rst:1444
msgid "Down-arrow"
msgstr ""

#: ../../library/curses.rst:1446
msgid "Up-arrow"
msgstr ""

#: ../../library/curses.rst:1448
msgid "Left-arrow"
msgstr ""

#: ../../library/curses.rst:1450
msgid "Right-arrow"
msgstr ""

#: ../../library/curses.rst:1452
msgid "Home key (upward+left arrow)"
msgstr ""

#: ../../library/curses.rst:1454
msgid "Backspace (unreliable)"
msgstr ""

#: ../../library/curses.rst:1456
msgid "Function keys.  Up to 64 function keys are supported."
msgstr ""

#: ../../library/curses.rst:1459
msgid "Value of function key *n*"
msgstr ""

#: ../../library/curses.rst:1461
msgid "Delete line"
msgstr ""

#: ../../library/curses.rst:1463
msgid "Insert line"
msgstr ""

#: ../../library/curses.rst:1465
msgid "Delete character"
msgstr ""

#: ../../library/curses.rst:1467
msgid "Insert char or enter insert mode"
msgstr ""

#: ../../library/curses.rst:1469
msgid "Exit insert char mode"
msgstr ""

#: ../../library/curses.rst:1471
msgid "Clear screen"
msgstr ""

#: ../../library/curses.rst:1473
msgid "Clear to end of screen"
msgstr ""

#: ../../library/curses.rst:1475
msgid "Clear to end of line"
msgstr ""

#: ../../library/curses.rst:1477
msgid "Scroll 1 line forward"
msgstr ""

#: ../../library/curses.rst:1479
msgid "Scroll 1 line backward (reverse)"
msgstr ""

#: ../../library/curses.rst:1481
msgid "Next page"
msgstr ""

#: ../../library/curses.rst:1483
msgid "Previous page"
msgstr ""

#: ../../library/curses.rst:1485
msgid "Set tab"
msgstr ""

#: ../../library/curses.rst:1487
msgid "Clear tab"
msgstr ""

#: ../../library/curses.rst:1489
msgid "Clear all tabs"
msgstr ""

#: ../../library/curses.rst:1491
msgid "Enter or send (unreliable)"
msgstr ""

#: ../../library/curses.rst:1493
msgid "Soft (partial) reset (unreliable)"
msgstr ""

#: ../../library/curses.rst:1495
msgid "Reset or hard reset (unreliable)"
msgstr ""

#: ../../library/curses.rst:1497
msgid "Print"
msgstr ""

#: ../../library/curses.rst:1499
msgid "Home down or bottom (lower left)"
msgstr ""

#: ../../library/curses.rst:1501
msgid "Upper left of keypad"
msgstr ""

#: ../../library/curses.rst:1503
msgid "Upper right of keypad"
msgstr ""

#: ../../library/curses.rst:1505
msgid "Center of keypad"
msgstr ""

#: ../../library/curses.rst:1507
msgid "Lower left of keypad"
msgstr ""

#: ../../library/curses.rst:1509
msgid "Lower right of keypad"
msgstr ""

#: ../../library/curses.rst:1511
msgid "Back tab"
msgstr ""

#: ../../library/curses.rst:1513
msgid "Beg (beginning)"
msgstr ""

#: ../../library/curses.rst:1515
msgid "Cancel"
msgstr ""

#: ../../library/curses.rst:1517
msgid "Close"
msgstr ""

#: ../../library/curses.rst:1519
msgid "Cmd (command)"
msgstr ""

#: ../../library/curses.rst:1521
msgid "Copy"
msgstr ""

#: ../../library/curses.rst:1523
msgid "Create"
msgstr ""

#: ../../library/curses.rst:1525
msgid "End"
msgstr ""

#: ../../library/curses.rst:1527
msgid "Exit"
msgstr ""

#: ../../library/curses.rst:1529
msgid "Find"
msgstr ""

#: ../../library/curses.rst:1531
msgid "Help"
msgstr ""

#: ../../library/curses.rst:1533
msgid "Mark"
msgstr ""

#: ../../library/curses.rst:1535
msgid "Message"
msgstr ""

#: ../../library/curses.rst:1537
msgid "Move"
msgstr ""

#: ../../library/curses.rst:1539
msgid "Next"
msgstr ""

#: ../../library/curses.rst:1541
msgid "Open"
msgstr ""

#: ../../library/curses.rst:1543
msgid "Options"
msgstr ""

#: ../../library/curses.rst:1545
msgid "Prev (previous)"
msgstr ""

#: ../../library/curses.rst:1547
msgid "Redo"
msgstr ""

#: ../../library/curses.rst:1549
msgid "Ref (reference)"
msgstr ""

#: ../../library/curses.rst:1551
msgid "Refresh"
msgstr ""

#: ../../library/curses.rst:1553
msgid "Replace"
msgstr ""

#: ../../library/curses.rst:1555
msgid "Restart"
msgstr ""

#: ../../library/curses.rst:1557
msgid "Resume"
msgstr ""

#: ../../library/curses.rst:1559
msgid "Save"
msgstr ""

#: ../../library/curses.rst:1561
msgid "Shifted Beg (beginning)"
msgstr ""

#: ../../library/curses.rst:1563
msgid "Shifted Cancel"
msgstr ""

#: ../../library/curses.rst:1565
msgid "Shifted Command"
msgstr ""

#: ../../library/curses.rst:1567
msgid "Shifted Copy"
msgstr ""

#: ../../library/curses.rst:1569
msgid "Shifted Create"
msgstr ""

#: ../../library/curses.rst:1571
msgid "Shifted Delete char"
msgstr ""

#: ../../library/curses.rst:1573
msgid "Shifted Delete line"
msgstr ""

#: ../../library/curses.rst:1575
msgid "Select"
msgstr ""

#: ../../library/curses.rst:1577
msgid "Shifted End"
msgstr ""

#: ../../library/curses.rst:1579
msgid "Shifted Clear line"
msgstr ""

#: ../../library/curses.rst:1581
msgid "Shifted Exit"
msgstr ""

#: ../../library/curses.rst:1583
msgid "Shifted Find"
msgstr ""

#: ../../library/curses.rst:1585
msgid "Shifted Help"
msgstr ""

#: ../../library/curses.rst:1587
msgid "Shifted Home"
msgstr ""

#: ../../library/curses.rst:1589
msgid "Shifted Input"
msgstr ""

#: ../../library/curses.rst:1591
msgid "Shifted Left arrow"
msgstr ""

#: ../../library/curses.rst:1593
msgid "Shifted Message"
msgstr ""

#: ../../library/curses.rst:1595
msgid "Shifted Move"
msgstr ""

#: ../../library/curses.rst:1597
msgid "Shifted Next"
msgstr ""

#: ../../library/curses.rst:1599
msgid "Shifted Options"
msgstr ""

#: ../../library/curses.rst:1601
msgid "Shifted Prev"
msgstr ""

#: ../../library/curses.rst:1603
msgid "Shifted Print"
msgstr ""

#: ../../library/curses.rst:1605
msgid "Shifted Redo"
msgstr ""

#: ../../library/curses.rst:1607
msgid "Shifted Replace"
msgstr ""

#: ../../library/curses.rst:1609
msgid "Shifted Right arrow"
msgstr ""

#: ../../library/curses.rst:1611
msgid "Shifted Resume"
msgstr ""

#: ../../library/curses.rst:1613
msgid "Shifted Save"
msgstr ""

#: ../../library/curses.rst:1615
msgid "Shifted Suspend"
msgstr ""

#: ../../library/curses.rst:1617
msgid "Shifted Undo"
msgstr ""

#: ../../library/curses.rst:1619
msgid "Suspend"
msgstr ""

#: ../../library/curses.rst:1621
msgid "Undo"
msgstr ""

#: ../../library/curses.rst:1623
msgid "Mouse event has occurred"
msgstr ""

#: ../../library/curses.rst:1625
msgid "Terminal resize event"
msgstr ""

#: ../../library/curses.rst:1627
msgid "Maximum key value"
msgstr ""

#: ../../library/curses.rst:1630
msgid ""
"On VT100s and their software emulations, such as X terminal emulators, there"
" are normally at least four function keys (:const:`KEY_F1 <KEY_Fn>`, "
":const:`KEY_F2 <KEY_Fn>`, :const:`KEY_F3 <KEY_Fn>`, :const:`KEY_F4 "
"<KEY_Fn>`) available, and the arrow keys mapped to :const:`KEY_UP`, "
":const:`KEY_DOWN`, :const:`KEY_LEFT` and :const:`KEY_RIGHT` in the obvious "
"way.  If your machine has a PC keyboard, it is safe to expect arrow keys and"
" twelve function keys (older PC keyboards may have only ten function keys); "
"also, the following keypad mappings are standard:"
msgstr ""

#: ../../library/curses.rst:1639
msgid "Keycap"
msgstr ""

#: ../../library/curses.rst:1639 ../../library/curses.rst:1784
#: ../../library/curses.rst:1908
msgid "Constant"
msgstr ""

#: ../../library/curses.rst:1641
msgid ":kbd:`Insert`"
msgstr ""

#: ../../library/curses.rst:1641
msgid "KEY_IC"
msgstr ""

#: ../../library/curses.rst:1643
msgid ":kbd:`Delete`"
msgstr ""

#: ../../library/curses.rst:1643
msgid "KEY_DC"
msgstr ""

#: ../../library/curses.rst:1645
msgid ":kbd:`Home`"
msgstr ""

#: ../../library/curses.rst:1645
msgid "KEY_HOME"
msgstr ""

#: ../../library/curses.rst:1647
msgid ":kbd:`End`"
msgstr ""

#: ../../library/curses.rst:1647
msgid "KEY_END"
msgstr ""

#: ../../library/curses.rst:1649
msgid ":kbd:`Page Up`"
msgstr ""

#: ../../library/curses.rst:1649
msgid "KEY_PPAGE"
msgstr ""

#: ../../library/curses.rst:1651
msgid ":kbd:`Page Down`"
msgstr ""

#: ../../library/curses.rst:1651
msgid "KEY_NPAGE"
msgstr ""

#: ../../library/curses.rst:1656
msgid ""
"The following table lists characters from the alternate character set. These"
" are inherited from the VT100 terminal, and will generally be  available on "
"software emulations such as X terminals.  When there is no graphic "
"available, curses falls back on a crude printable ASCII approximation."
msgstr ""

#: ../../library/curses.rst:1663
msgid "These are available only after :func:`initscr` has  been called."
msgstr ""

#: ../../library/curses.rst:1666
msgid "ACS code"
msgstr ""

#: ../../library/curses.rst:1668
msgid "alternate name for upper right corner"
msgstr ""

#: ../../library/curses.rst:1670
msgid "solid square block"
msgstr ""

#: ../../library/curses.rst:1672
msgid "board of squares"
msgstr ""

#: ../../library/curses.rst:1674
msgid "alternate name for horizontal line"
msgstr ""

#: ../../library/curses.rst:1676
msgid "alternate name for upper left corner"
msgstr ""

#: ../../library/curses.rst:1678
msgid "alternate name for top tee"
msgstr ""

#: ../../library/curses.rst:1680
msgid "bottom tee"
msgstr ""

#: ../../library/curses.rst:1682
msgid "bullet"
msgstr ""

#: ../../library/curses.rst:1684
msgid "checker board (stipple)"
msgstr ""

#: ../../library/curses.rst:1686
msgid "arrow pointing down"
msgstr ""

#: ../../library/curses.rst:1688
msgid "degree symbol"
msgstr ""

#: ../../library/curses.rst:1690
msgid "diamond"
msgstr ""

#: ../../library/curses.rst:1692
msgid "greater-than-or-equal-to"
msgstr ""

#: ../../library/curses.rst:1694
msgid "horizontal line"
msgstr ""

#: ../../library/curses.rst:1696
msgid "lantern symbol"
msgstr ""

#: ../../library/curses.rst:1698
msgid "left arrow"
msgstr ""

#: ../../library/curses.rst:1700
msgid "less-than-or-equal-to"
msgstr ""

#: ../../library/curses.rst:1702
msgid "lower left-hand corner"
msgstr ""

#: ../../library/curses.rst:1704
msgid "lower right-hand corner"
msgstr ""

#: ../../library/curses.rst:1706
msgid "left tee"
msgstr ""

#: ../../library/curses.rst:1708
msgid "not-equal sign"
msgstr ""

#: ../../library/curses.rst:1710
msgid "letter pi"
msgstr ""

#: ../../library/curses.rst:1712
msgid "plus-or-minus sign"
msgstr ""

#: ../../library/curses.rst:1714
msgid "big plus sign"
msgstr ""

#: ../../library/curses.rst:1716
msgid "right arrow"
msgstr ""

#: ../../library/curses.rst:1718
msgid "right tee"
msgstr ""

#: ../../library/curses.rst:1720
msgid "scan line 1"
msgstr ""

#: ../../library/curses.rst:1722
msgid "scan line 3"
msgstr ""

#: ../../library/curses.rst:1724
msgid "scan line 7"
msgstr ""

#: ../../library/curses.rst:1726
msgid "scan line 9"
msgstr ""

#: ../../library/curses.rst:1728
msgid "alternate name for lower right corner"
msgstr ""

#: ../../library/curses.rst:1730
msgid "alternate name for vertical line"
msgstr ""

#: ../../library/curses.rst:1732
msgid "alternate name for right tee"
msgstr ""

#: ../../library/curses.rst:1734
msgid "alternate name for lower left corner"
msgstr ""

#: ../../library/curses.rst:1736
msgid "alternate name for bottom tee"
msgstr ""

#: ../../library/curses.rst:1738
msgid "alternate name for left tee"
msgstr ""

#: ../../library/curses.rst:1740
msgid "alternate name for crossover or big plus"
msgstr ""

#: ../../library/curses.rst:1742
msgid "pound sterling"
msgstr ""

#: ../../library/curses.rst:1744
msgid "top tee"
msgstr ""

#: ../../library/curses.rst:1746
msgid "up arrow"
msgstr ""

#: ../../library/curses.rst:1748
msgid "upper left corner"
msgstr ""

#: ../../library/curses.rst:1750
msgid "upper right corner"
msgstr ""

#: ../../library/curses.rst:1752
msgid "vertical line"
msgstr ""

#: ../../library/curses.rst:1755
msgid ""
"The following table lists mouse button constants used by :meth:`getmouse`:"
msgstr ""

#: ../../library/curses.rst:1758
msgid "Mouse button constant"
msgstr ""

#: ../../library/curses.rst:1760
msgid "Mouse button *n* pressed"
msgstr ""

#: ../../library/curses.rst:1762
msgid "Mouse button *n* released"
msgstr ""

#: ../../library/curses.rst:1764
msgid "Mouse button *n* clicked"
msgstr ""

#: ../../library/curses.rst:1766
msgid "Mouse button *n* double clicked"
msgstr ""

#: ../../library/curses.rst:1768
msgid "Mouse button *n* triple clicked"
msgstr ""

#: ../../library/curses.rst:1770
msgid "Shift was down during button state change"
msgstr ""

#: ../../library/curses.rst:1772 ../../library/curses.rst:1774
msgid "Control was down during button state change"
msgstr ""

#: ../../library/curses.rst:1781
msgid "The following table lists the predefined colors:"
msgstr ""

#: ../../library/curses.rst:1784
msgid "Color"
msgstr ""

#: ../../library/curses.rst:1786
msgid "Black"
msgstr ""

#: ../../library/curses.rst:1788
msgid "Blue"
msgstr ""

#: ../../library/curses.rst:1790
msgid "Cyan (light greenish blue)"
msgstr ""

#: ../../library/curses.rst:1792
msgid "Green"
msgstr ""

#: ../../library/curses.rst:1794
msgid "Magenta (purplish red)"
msgstr ""

#: ../../library/curses.rst:1796
msgid "Red"
msgstr ""

#: ../../library/curses.rst:1798
msgid "White"
msgstr ""

#: ../../library/curses.rst:1800
msgid "Yellow"
msgstr ""

#: ../../library/curses.rst:1805
msgid ":mod:`curses.textpad` --- Text input widget for curses programs"
msgstr ""

#: ../../library/curses.rst:1813
msgid ""
"The :mod:`curses.textpad` module provides a :class:`Textbox` class that "
"handles elementary text editing in a curses window, supporting a set of "
"keybindings resembling those of Emacs (thus, also of Netscape Navigator, "
"BBedit 6.x, FrameMaker, and many other programs).  The module also provides "
"a rectangle-drawing function useful for framing text boxes or for other "
"purposes."
msgstr ""

#: ../../library/curses.rst:1819
msgid "The module :mod:`curses.textpad` defines the following function:"
msgstr ""

#: ../../library/curses.rst:1824
msgid ""
"Draw a rectangle.  The first argument must be a window object; the remaining"
" arguments are coordinates relative to that window.  The second and third "
"arguments are the y and x coordinates of the upper left hand corner of the "
"rectangle to be drawn; the fourth and fifth arguments are the y and x "
"coordinates of the lower right hand corner. The rectangle will be drawn "
"using VT100/IBM PC forms characters on terminals that make this possible "
"(including xterm and most other software terminal emulators).  Otherwise it "
"will be drawn with ASCII  dashes, vertical bars, and plus signs."
msgstr ""

#: ../../library/curses.rst:1837
msgid "Textbox objects"
msgstr ""

#: ../../library/curses.rst:1839
msgid "You can instantiate a :class:`Textbox` object as follows:"
msgstr ""

#: ../../library/curses.rst:1844
msgid ""
"Return a textbox widget object.  The *win* argument should be a curses "
":ref:`window <curses-window-objects>` object in which the textbox is to be "
"contained. The edit cursor of the textbox is initially located at the upper "
"left hand corner of the containing window, with coordinates ``(0, 0)``. The "
"instance's :attr:`stripspaces` flag is initially on."
msgstr ""

#: ../../library/curses.rst:1850
msgid ":class:`Textbox` objects have the following methods:"
msgstr ""

#: ../../library/curses.rst:1855
msgid ""
"This is the entry point you will normally use.  It accepts editing "
"keystrokes until one of the termination keystrokes is entered.  If "
"*validator* is supplied, it must be a function.  It will be called for each "
"keystroke entered with the keystroke as a parameter; command dispatch is "
"done on the result. This method returns the window contents as a string; "
"whether blanks in the window are included is affected by the "
":attr:`stripspaces` attribute."
msgstr ""

#: ../../library/curses.rst:1866
msgid ""
"Process a single command keystroke.  Here are the supported special "
"keystrokes:"
msgstr ""

#: ../../library/curses.rst:1870 ../../library/curses.rst:1908
msgid "Keystroke"
msgstr ""

#: ../../library/curses.rst:1870
msgid "Action"
msgstr ""

#: ../../library/curses.rst:1872
msgid ":kbd:`Control-A`"
msgstr ""

#: ../../library/curses.rst:1872
msgid "Go to left edge of window."
msgstr ""

#: ../../library/curses.rst:1874 ../../library/curses.rst:1910
msgid ":kbd:`Control-B`"
msgstr ""

#: ../../library/curses.rst:1874
msgid "Cursor left, wrapping to previous line if appropriate."
msgstr ""

#: ../../library/curses.rst:1877
msgid ":kbd:`Control-D`"
msgstr ""

#: ../../library/curses.rst:1877
msgid "Delete character under cursor."
msgstr ""

#: ../../library/curses.rst:1879
msgid ":kbd:`Control-E`"
msgstr ""

#: ../../library/curses.rst:1879
msgid "Go to right edge (stripspaces off) or end of line (stripspaces on)."
msgstr ""

#: ../../library/curses.rst:1882 ../../library/curses.rst:1912
msgid ":kbd:`Control-F`"
msgstr ""

#: ../../library/curses.rst:1882
msgid "Cursor right, wrapping to next line when appropriate."
msgstr ""

#: ../../library/curses.rst:1885
msgid ":kbd:`Control-G`"
msgstr ""

#: ../../library/curses.rst:1885
msgid "Terminate, returning the window contents."
msgstr ""

#: ../../library/curses.rst:1887
msgid ":kbd:`Control-H`"
msgstr ""

#: ../../library/curses.rst:1887
msgid "Delete character backward."
msgstr ""

#: ../../library/curses.rst:1889
msgid ":kbd:`Control-J`"
msgstr ""

#: ../../library/curses.rst:1889
msgid "Terminate if the window is 1 line, otherwise insert newline."
msgstr ""

#: ../../library/curses.rst:1892
msgid ":kbd:`Control-K`"
msgstr ""

#: ../../library/curses.rst:1892
msgid "If line is blank, delete it, otherwise clear to end of line."
msgstr ""

#: ../../library/curses.rst:1895
msgid ":kbd:`Control-L`"
msgstr ""

#: ../../library/curses.rst:1895
msgid "Refresh screen."
msgstr ""

#: ../../library/curses.rst:1897 ../../library/curses.rst:1916
msgid ":kbd:`Control-N`"
msgstr ""

#: ../../library/curses.rst:1897
msgid "Cursor down; move down one line."
msgstr ""

#: ../../library/curses.rst:1899
msgid ":kbd:`Control-O`"
msgstr ""

#: ../../library/curses.rst:1899
msgid "Insert a blank line at cursor location."
msgstr ""

#: ../../library/curses.rst:1901 ../../library/curses.rst:1914
msgid ":kbd:`Control-P`"
msgstr ""

#: ../../library/curses.rst:1901
msgid "Cursor up; move up one line."
msgstr ""

#: ../../library/curses.rst:1904
msgid ""
"Move operations do nothing if the cursor is at an edge where the movement is"
" not possible.  The following synonyms are supported where possible:"
msgstr ""

#: ../../library/curses.rst:1910
msgid ":const:`~curses.KEY_LEFT`"
msgstr ""

#: ../../library/curses.rst:1912
msgid ":const:`~curses.KEY_RIGHT`"
msgstr ""

#: ../../library/curses.rst:1914
msgid ":const:`~curses.KEY_UP`"
msgstr ""

#: ../../library/curses.rst:1916
msgid ":const:`~curses.KEY_DOWN`"
msgstr ""

#: ../../library/curses.rst:1918
msgid ":const:`~curses.KEY_BACKSPACE`"
msgstr ""

#: ../../library/curses.rst:1918
msgid ":kbd:`Control-h`"
msgstr ""

#: ../../library/curses.rst:1921
msgid ""
"All other keystrokes are treated as a command to insert the given character "
"and move right (with line wrapping)."
msgstr ""

#: ../../library/curses.rst:1927
msgid ""
"Return the window contents as a string; whether blanks in the window are "
"included is affected by the :attr:`stripspaces` member."
msgstr ""

#: ../../library/curses.rst:1933
msgid ""
"This attribute is a flag which controls the interpretation of blanks in the "
"window.  When it is on, trailing blanks on each line are ignored; any cursor"
" motion that would land the cursor on a trailing blank goes to the end of "
"that line instead, and trailing blanks are stripped when the window contents"
" are gathered."
msgstr ""
