# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2025
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.13\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-07-25 15:00+0000\n"
"PO-Revision-Date: 2025-07-18 19:22+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2025\n"
"Language-Team: Chinese (China) (https://app.transifex.com/python-doc/teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/xml.sax.utils.rst:2
msgid ":mod:`!xml.sax.saxutils` --- SAX Utilities"
msgstr ":mod:`!xml.sax.saxutils` --- SAX 工具集"

#: ../../library/xml.sax.utils.rst:10
msgid "**Source code:** :source:`Lib/xml/sax/saxutils.py`"
msgstr "**源代码:** :source:`Lib/xml/sax/saxutils.py`"

#: ../../library/xml.sax.utils.rst:14
msgid ""
"The module :mod:`xml.sax.saxutils` contains a number of classes and "
"functions that are commonly useful when creating SAX applications, either in"
" direct use, or as base classes."
msgstr ""
":mod:`xml.sax.saxutils` 模块包含一些在创建 SAX 应用程序时十分有用的类和函数，它们可以被直接使用，或者是作为基类使用。"

#: ../../library/xml.sax.utils.rst:21
msgid "Escape ``'&'``, ``'<'``, and ``'>'`` in a string of data."
msgstr "对数据字符串中的 ``'&'``, ``'<'`` 和 ``'>'`` 进行转义。"

#: ../../library/xml.sax.utils.rst:23
msgid ""
"You can escape other strings of data by passing a dictionary as the optional"
" *entities* parameter.  The keys and values must all be strings; each key "
"will be replaced with its corresponding value.  The characters ``'&'``, "
"``'<'`` and ``'>'`` are always escaped, even if *entities* is provided."
msgstr ""
"你可以通过传入一个字典作为可选的 *entities* 形参来对其他字符串数据进行转义。 字典的键和值必须为字符串；每个键将被替换为其所对应的值。 字符"
" ``'&'``, ``'<'`` 和 ``'>'`` 总是会被转义，即使提供了 *entities*。"

#: ../../library/xml.sax.utils.rst:30
msgid ""
"This function should only be used to escape characters that can't be used "
"directly in XML. Do not use this function as a general string translation "
"function."
msgstr "此函数应当仅用于对无法直接在 XML 中使用的字符进行转义。 请不要将此函数用作通用的字符串转换函数。"

#: ../../library/xml.sax.utils.rst:36
msgid "Unescape ``'&amp;'``, ``'&lt;'``, and ``'&gt;'`` in a string of data."
msgstr "对字符串数据中的 ``'&amp;'``, ``'&lt;'`` 和 ``'&gt;'`` 进行反转义。"

#: ../../library/xml.sax.utils.rst:38
msgid ""
"You can unescape other strings of data by passing a dictionary as the "
"optional *entities* parameter.  The keys and values must all be strings; "
"each key will be replaced with its corresponding value.  ``'&amp'``, "
"``'&lt;'``, and ``'&gt;'`` are always unescaped, even if *entities* is "
"provided."
msgstr ""
"你可以通过传入一个字典作为可选的 *entities* 形参来对其他数据字符串进行转义。 字典的键和值必须都为字符串；每个键将被替换为所对应的值。 "
"``'&amp'``, ``'&lt;'`` 和 ``'&gt;'`` 将总是保持不被转义，即使提供了 *entities*。"

#: ../../library/xml.sax.utils.rst:46
msgid ""
"Similar to :func:`escape`, but also prepares *data* to be used as an "
"attribute value.  The return value is a quoted version of *data* with any "
"additional required replacements. :func:`quoteattr` will select a quote "
"character based on the content of *data*, attempting to avoid encoding any "
"quote characters in the string.  If both single- and double-quote characters"
" are already in *data*, the double-quote characters will be encoded and "
"*data* will be wrapped in double-quotes.  The resulting string can be used "
"directly as an attribute value::"
msgstr ""
"类似于 :func:`escape`，但还会对 *data* 进行处理以将其用作属性值。 返回值是 *data* "
"加上任何额外要求的替换的带引号版本。:func:`quoteattr` 将基于 *data* "
"的内容选择一个引号字符，以尽量避免在字符串中编码任何引号字符。 如果单双引号字符在 *data* 中都存在，则双引号字符将被编码并且 *data* "
"将使用双引号来标记。 结果字符串可被直接用作属性值::"

#: ../../library/xml.sax.utils.rst:55
msgid ""
">>> print(\"<element attr=%s>\" % quoteattr(\"ab ' cd \\\" ef\"))\n"
"<element attr=\"ab ' cd &quot; ef\">"
msgstr ""
">>> print(\"<element attr=%s>\" % quoteattr(\"ab ' cd \\\" ef\"))\n"
"<element attr=\"ab ' cd &quot; ef\">"

#: ../../library/xml.sax.utils.rst:58
msgid ""
"This function is useful when generating attribute values for HTML or any "
"SGML using the reference concrete syntax."
msgstr "此函数适用于为 HTML 或任何使用引用实体语法的 SGML 生成属性值。"

#: ../../library/xml.sax.utils.rst:64
msgid ""
"This class implements the :class:`~xml.sax.handler.ContentHandler` interface"
" by writing SAX events back into an XML document. In other words, using an "
":class:`XMLGenerator` as the content handler will reproduce the original "
"document being parsed. *out* should be a file-like object which will default"
" to *sys.stdout*. *encoding* is the encoding of the output stream which "
"defaults to ``'iso-8859-1'``. *short_empty_elements* controls the formatting"
" of elements that contain no content:  if ``False`` (the default) they are "
"emitted as a pair of start/end tags, if set to ``True`` they are emitted as "
"a single self-closed tag."
msgstr ""
"这个类通过将 SAX 事件写回到 XML 文档来实现 :class:`~xml.sax.handler.ContentHandler` 接口。 "
"换句话说，使用 :class:`XMLGenerator` 作为内容处理程序将重新产生所解析的原始文档。 *out* 应当为一个文件型对象，它默认将为 "
"*sys.stdout*。 *encoding* 为输出流的编码格式，它默认将为 ``'iso-8859-1'``。 "
"*short_empty_elements* 控制不包含内容的元素的格式化：如为 ``False`` (默认值) "
"则它们会以开始/结束标记对的形式被发送，如果设为 ``True`` 则它们会以单个自结束标记的形式被发送。"

#: ../../library/xml.sax.utils.rst:74
msgid "Added the *short_empty_elements* parameter."
msgstr "增加了 *short_empty_elements* 形参。"

#: ../../library/xml.sax.utils.rst:80
msgid ""
"This class is designed to sit between an "
":class:`~xml.sax.xmlreader.XMLReader` and the client application's event "
"handlers.  By default, it does nothing but pass requests up to the reader "
"and events on to the handlers unmodified, but subclasses can override "
"specific methods to modify the event stream or the configuration requests as"
" they pass through."
msgstr ""
"这个类被设计用来分隔 :class:`~xml.sax.xmlreader.XMLReader` 和客户端应用的事件处理程序。 "
"在默认情况下，它除了将请求传送给读取器并将事件传送给处理程序之外什么都不做，但其子类可以重载特定的方法以在传送它们的时候修改事件流或配置请求。"

#: ../../library/xml.sax.utils.rst:90
msgid ""
"This function takes an input source and an optional base URL and returns a "
"fully resolved :class:`~xml.sax.xmlreader.InputSource` object ready for "
"reading.  The input source can be given as a string, a file-like object, or "
"an :class:`~xml.sax.xmlreader.InputSource` object; parsers will use this "
"function to implement the polymorphic *source* argument to their "
":meth:`~xml.sax.xmlreader.XMLReader.parse` method."
msgstr ""
"此函数接受一个输入源和一个可选的基准 URL 并返回一个经过完整解析可供读取的 "
":class:`~xml.sax.xmlreader.InputSource` 对象。 输入源的给出形式可以是字节串、文件型对象或 "
":class:`~xml.sax.xmlreader.InputSource` 对象；解析器将使用此函数来针对它们的 "
":meth:`~xml.sax.xmlreader.XMLReader.parse` 方法实现多态 *source* 参数。"
