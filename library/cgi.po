# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2025
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-07-25 18:10+0000\n"
"PO-Revision-Date: 2025-07-18 20:08+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2025\n"
"Language-Team: Chinese (China) (https://app.transifex.com/python-doc/teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/cgi.rst:2
msgid ":mod:`cgi` --- Common Gateway Interface support"
msgstr ":mod:`cgi` --- 通用网关接口支持"

#: ../../library/cgi.rst:8
msgid "**Source code:** :source:`Lib/cgi.py`"
msgstr "**源代码：** :source:`Lib/cgi.py`"

#: ../../library/cgi.rst:18
msgid ""
"The :mod:`cgi` module is deprecated (see :pep:`PEP 594 <594#cgi>` for "
"details and alternatives)."
msgstr ":mod:`cgi` 模块已被弃用（请参阅 :pep:`PEP 594 <594#cgi>` 了解详情及其替代品）。"

#: ../../library/cgi.rst:24
msgid "Support module for Common Gateway Interface (CGI) scripts."
msgstr "通用网关接口 (CGI) 脚本的支持模块"

#: ../../library/cgi.rst:26
msgid ""
"This module defines a number of utilities for use by CGI scripts written in "
"Python."
msgstr "本模块定义了一些工具供以 Python 编写的 CGI 脚本使用。"

#: ../../library/cgi.rst:31
msgid "Introduction"
msgstr "概述"

#: ../../library/cgi.rst:35
msgid ""
"A CGI script is invoked by an HTTP server, usually to process user input "
"submitted through an HTML ``<FORM>`` or ``<ISINDEX>`` element."
msgstr ""
"CGI 脚本是由 HTTP 服务器发起调用，通常用来处理通过 HTML ``<FORM>`` 或 ``<ISINDEX>`` 元素提交的用户输入。"

#: ../../library/cgi.rst:38
msgid ""
"Most often, CGI scripts live in the server's special :file:`cgi-bin` "
"directory. The HTTP server places all sorts of information about the request"
" (such as the client's hostname, the requested URL, the query string, and "
"lots of other goodies) in the script's shell environment, executes the "
"script, and sends the script's output back to the client."
msgstr ""
"在大多数情况下，CGI 脚本存放在服务器的 :file:`cgi-bin` 特殊目录下。 HTTP "
"服务器将有关请求的各种信息（例如客户端的主机名、所请求的 URL、查询字符串以及许多其他内容）放在脚本的 shell "
"环境中，然后执行脚本，并将脚本的输出发回到客户端。"

#: ../../library/cgi.rst:44
msgid ""
"The script's input is connected to the client too, and sometimes the form "
"data is read this way; at other times the form data is passed via the "
"\"query string\" part of the URL.  This module is intended to take care of "
"the different cases and provide a simpler interface to the Python script.  "
"It also provides a number of utilities that help in debugging scripts, and "
"the latest addition is support for file uploads from a form (if your browser"
" supports it)."
msgstr ""
"脚本的输入也会被连接到客户端，并且有时表单数据也会以此方式来读取；在其他时候表单数据会通过 URL 的“查询字符串”部分来传递。 "
"本模块的目标是处理不同的应用场景并向 Python 脚本提供一个更为简单的接口。 "
"它还提供了一些工具为脚本调试提供帮助，而最近增加的还有对通过表单上传文件的支持（如果你的浏览器支持该功能的话）。"

#: ../../library/cgi.rst:51
msgid ""
"The output of a CGI script should consist of two sections, separated by a "
"blank line.  The first section contains a number of headers, telling the "
"client what kind of data is following.  Python code to generate a minimal "
"header section looks like this::"
msgstr ""
"CGI 脚本的输出应当由两部分组成，并由一个空行分隔。 前一部分包含一些标头，它们告诉客户端后面会提供何种数据。 生成一个最小化标头部分的 Python"
" 代码如下所示::"

#: ../../library/cgi.rst:59
msgid ""
"The second section is usually HTML, which allows the client software to "
"display nicely formatted text with header, in-line images, etc. Here's "
"Python code that prints a simple piece of HTML::"
msgstr ""
"后一部分通常为 HTML，提供给客户端软件来显示格式良好包含标题的文本、内联图片等内容。 下面是打印一段简单 HTML 的 Python 代码::"

#: ../../library/cgi.rst:71
msgid "Using the cgi module"
msgstr "使用 cgi 模块"

#: ../../library/cgi.rst:73
msgid "Begin by writing ``import cgi``."
msgstr "先在开头添加 ``import cgi``。"

#: ../../library/cgi.rst:75
msgid "When you write a new script, consider adding these lines::"
msgstr "当你在编写一个新脚本时，请考虑加上这些语句::"

#: ../../library/cgi.rst:80
msgid ""
"This activates a special exception handler that will display detailed "
"reports in the web browser if any errors occur.  If you'd rather not show "
"the guts of your program to users of your script, you can have the reports "
"saved to files instead, with code like this::"
msgstr ""
"这会激活一个特殊的异常处理器，它将在发生任何错误时将详细错误报告显示到 web 浏览器中。 "
"如果你不希望向你的脚本的用户显示你的程序的内部细节，你可以改为将报告保存到文件中，使用这样的代码即可::"

#: ../../library/cgi.rst:88
msgid ""
"It's very helpful to use this feature during script development. The reports"
" produced by :mod:`cgitb` provide information that can save you a lot of "
"time in tracking down bugs.  You can always remove the ``cgitb`` line later "
"when you have tested your script and are confident that it works correctly."
msgstr ""
"在脚本开发期间使用此特性会很有帮助。 :mod:`cgitb` 所产生的报告提供了在追踪程序问题时能为你节省大量时间的信息。 "
"你可以在完成测试你的脚本并确信它能正确工作之后再移除 ``cgitb`` 行。"

#: ../../library/cgi.rst:93
msgid ""
"To get at submitted form data, use the :class:`FieldStorage` class. If the "
"form contains non-ASCII characters, use the *encoding* keyword parameter set"
" to the value of the encoding defined for the document. It is usually "
"contained in the META tag in the HEAD section of the HTML document or by the"
" :mailheader:`Content-Type` header.  This reads the form contents from the "
"standard input or the environment (depending on the value of various "
"environment variables set according to the CGI standard).  Since it may "
"consume standard input, it should be instantiated only once."
msgstr ""
"要获取提交的表单数据，请使用 :class:`FieldStorage` 类。 如果表单包含非 ASCII 字符，请使用 *encoding* "
"关键字参数并设置为文档所定义的编码格式值。 它通常包含在 HTML 文档的 HEAD 部分的 META 标记中或者由 "
":mailheader:`Content-Type` 标头所指明。 这会从标准输入或环境读取表单内容（取决于根据 CGI 标准设置的多个环境变量的值）。"
" 由于它可能会消耗标准输入，它应当只被实例化一次。"

#: ../../library/cgi.rst:102
msgid ""
"The :class:`FieldStorage` instance can be indexed like a Python dictionary. "
"It allows membership testing with the :keyword:`in` operator, and also "
"supports the standard dictionary method :meth:`~dict.keys` and the built-in "
"function :func:`len`.  Form fields containing empty strings are ignored and "
"do not appear in the dictionary; to keep such values, provide a true value "
"for the optional *keep_blank_values* keyword parameter when creating the "
":class:`FieldStorage` instance."
msgstr ""
":class:`FieldStorage` 实例可以像 Python 字典一样来检索。 它允许通过 :keyword:`in` "
"运算符进行成员检测，也支持标准字典方法 :meth:`~dict.keys` 和内置函数 :func:`len`。 "
"包含空字符串的表单字段会被忽略而不会出现在字典中；要保留这样的值，请在创建 :class:`FieldStorage` 实例时为可选的 "
"*keep_blank_values* 关键字形参提供一个真值。"

#: ../../library/cgi.rst:110
msgid ""
"For instance, the following code (which assumes that the "
":mailheader:`Content-Type` header and blank line have already been printed) "
"checks that the fields ``name`` and ``addr`` are both set to a non-empty "
"string::"
msgstr ""
"举例来说，下面的代码（假定 :mailheader:`Content-Type` 标头和空行已经被打印）会检查字段 ``name`` 和 "
"``addr`` 是否均被设为非空字符串::"

#: ../../library/cgi.rst:124
msgid ""
"Here the fields, accessed through ``form[key]``, are themselves instances of"
" :class:`FieldStorage` (or :class:`MiniFieldStorage`, depending on the form "
"encoding). The :attr:`~FieldStorage.value` attribute of the instance yields "
"the string value of the field.  The :meth:`~FieldStorage.getvalue` method "
"returns this string value directly; it also accepts an optional second "
"argument as a default to return if the requested key is not present."
msgstr ""
"在这里的字段通过 ``form[key]`` 来访问，它们本身就是 :class:`FieldStorage` (或 "
":class:`MiniFieldStorage`，取决于表单的编码格式) 的实例。 实例的 :attr:`~FieldStorage.value` "
"属性会产生字段的字符串值。 :meth:`~FieldStorage.getvalue` "
"方法直接返回这个字符串；它还接受可选的第二个参数作为当请求的键不存在时要返回的默认值。"

#: ../../library/cgi.rst:131
msgid ""
"If the submitted form data contains more than one field with the same name, "
"the object retrieved by ``form[key]`` is not a :class:`FieldStorage` or "
":class:`MiniFieldStorage` instance but a list of such instances.  Similarly,"
" in this situation, ``form.getvalue(key)`` would return a list of strings. "
"If you expect this possibility (when your HTML form contains multiple fields"
" with the same name), use the :meth:`~FieldStorage.getlist` method, which "
"always returns a list of values (so that you do not need to special-case the"
" single item case).  For example, this code concatenates any number of "
"username fields, separated by commas::"
msgstr ""
"如果提交的表单数据包含一个以上的同名字段，由 ``form[key]`` 所提取的对象将不是一个 :class:`FieldStorage` 或 "
":class:`MiniFieldStorage` 实例而是由这种实例组成的列表。 类似地，在这种情况下，``form.getvalue(key)`` "
"将会返回一个字符串列表。 如果你预计到这种可能性（当你的 HTML 表单包含多个同名字段时），请使用 "
":meth:`~FieldStorage.getlist` 方法，它总是返回一个值的列表（这样你就不需要对只有单个项的情况进行特别处理）。 "
"例如，这段代码拼接了任意数量的 username 字段，以逗号进行分隔::"

#: ../../library/cgi.rst:144
msgid ""
"If a field represents an uploaded file, accessing the value via the "
":attr:`~FieldStorage.value` attribute or the :meth:`~FieldStorage.getvalue` "
"method reads the entire file in memory as bytes.  This may not be what you "
"want.  You can test for an uploaded file by testing either the "
":attr:`~FieldStorage.filename` attribute or the :attr:`~FieldStorage.file` "
"attribute.  You can then read the data from the :attr:`!file` attribute "
"before it is automatically closed as part of the garbage collection of the "
":class:`FieldStorage` instance (the :func:`~io.RawIOBase.read` and "
":func:`~io.IOBase.readline` methods will return bytes)::"
msgstr ""
"如果一个字段是代表上传的文件，请通过 :attr:`~FieldStorage.value` 属性访问该值或是通过 "
":meth:`~FieldStorage.getvalue` 方法以字节形式将整个文件读入内存。 这可能不是你想要的结果。 你可以通过测试 "
":attr:`~FieldStorage.filename` 属性或 :attr:`~FieldStorage.file` 属性来检测上传的文件。 "
"然后你可以从 :attr:`!file` 属性读取数据，直到它作为 :class:`FieldStorage` 实例的垃圾回收的一部分被自动关闭 "
"(:func:`~io.RawIOBase.read` 和 :func:`~io.IOBase.readline` 方法将返回字节数据)::"

#: ../../library/cgi.rst:164
msgid ""
":class:`FieldStorage` objects also support being used in a :keyword:`with` "
"statement, which will automatically close them when done."
msgstr ":class:`FieldStorage` 对象还支持在 :keyword:`with` 语句中使用，该语句结束时将自动关闭它们。"

#: ../../library/cgi.rst:167
msgid ""
"If an error is encountered when obtaining the contents of an uploaded file "
"(for example, when the user interrupts the form submission by clicking on a "
"Back or Cancel button) the :attr:`~FieldStorage.done` attribute of the "
"object for the field will be set to the value -1."
msgstr ""
"如果在获取上传文件的内容时遇到错误（例如，当用户点击回退或取消按钮中断表单提交时）该字段中对象的 :attr:`~FieldStorage.done` "
"属性值将被设为 -1。"

#: ../../library/cgi.rst:172
msgid ""
"The file upload draft standard entertains the possibility of uploading "
"multiple files from one field (using a recursive :mimetype:`multipart/\\*` "
"encoding). When this occurs, the item will be a dictionary-like "
":class:`FieldStorage` item. This can be determined by testing its "
":attr:`!type` attribute, which should be :mimetype:`multipart/form-data` (or"
" perhaps another MIME type matching :mimetype:`multipart/\\*`).  In this "
"case, it can be iterated over recursively just like the top-level form "
"object."
msgstr ""
"文件上传标准草案考虑到了从一个字段上传多个文件的可能性（使用递归的 :mimetype:`multipart/\\*` 编码格式）。 "
"当这种情况发生时，该条目将是一个类似字典的 :class:`FieldStorage` 条目。 这可以通过检测它的 :attr:`!type` "
"属性来确定，该属性应当是 :mimetype:`multipart/form-data` (或者可能是匹配 "
":mimetype:`multipart/\\*` 的其他 MIME 类型)。 在这种情况下，它可以像最高层级的表单对象一样被递归地迭代处理。"

#: ../../library/cgi.rst:180
msgid ""
"When a form is submitted in the \"old\" format (as the query string or as a "
"single data part of type :mimetype:`application/x-www-form-urlencoded`), the"
" items will actually be instances of the class :class:`MiniFieldStorage`.  "
"In this case, the :attr:`!list`, :attr:`!file`, and :attr:`filename` "
"attributes are always ``None``."
msgstr ""
"当一个表单按“旧”格式提交时（即以查询字符串或是单个 :mimetype:`application/x-www-form-urlencoded` "
"类型的数据部分的形式），这些条目实际上将是 :class:`MiniFieldStorage` 类的实例。 在这种情况下，:attr:`!list`, "
":attr:`!file` 和 :attr:`filename` 属性将总是为 ``None``。"

#: ../../library/cgi.rst:185
msgid ""
"A form submitted via POST that also has a query string will contain both "
":class:`FieldStorage` and :class:`MiniFieldStorage` items."
msgstr ""
"通过 POST 方式提交并且也带有查询字符串的表单将同时包含 :class:`FieldStorage` 和 "
":class:`MiniFieldStorage` 条目。"

#: ../../library/cgi.rst:188
msgid ""
"The :attr:`~FieldStorage.file` attribute is automatically closed upon the "
"garbage collection of the creating :class:`FieldStorage` instance."
msgstr ""
":attr:`~FieldStorage.file` 属性会在创建 :class:`FieldStorage` 实例的垃圾回收操作中被自动关闭。"

#: ../../library/cgi.rst:192
msgid ""
"Added support for the context management protocol to the "
":class:`FieldStorage` class."
msgstr "为 :class:`FieldStorage` 类增加了上下文管理协议支持。"

#: ../../library/cgi.rst:198
msgid "Higher Level Interface"
msgstr "更高层级的接口"

#: ../../library/cgi.rst:200
msgid ""
"The previous section explains how to read CGI form data using the "
":class:`FieldStorage` class.  This section describes a higher level "
"interface which was added to this class to allow one to do it in a more "
"readable and intuitive way.  The interface doesn't make the techniques "
"described in previous sections obsolete --- they are still useful to process"
" file uploads efficiently, for example."
msgstr ""
"前面的部分解释了如何使用 :class:`FieldStorage` 类来读取 CGI 表单数据。 "
"本部分则会描述一个更高层级的接口，它被添加到此类中以允许人们以更为可读和自然的方式行事。 这个接口并不会完全取代前面的部分所描述的技巧 --- "
"例如它们在高效处理文件上传时仍然很有用处。"

#: ../../library/cgi.rst:209
msgid ""
"The interface consists of two simple methods. Using the methods you can "
"process form data in a generic way, without the need to worry whether only "
"one or more values were posted under one name."
msgstr "此接口由两个简单的方法组成。 你可以使用这两个方法以通用的方式处理表单数据，而无需担心在一个名称下提交的值是只有一个还是有多个。"

#: ../../library/cgi.rst:213
msgid ""
"In the previous section, you learned to write following code anytime you "
"expected a user to post more than one value under one name::"
msgstr "在前面的部分中，你已学会当你预期用户在一个名称下提交超过一个值的时候编写以下代码::"

#: ../../library/cgi.rst:222
msgid ""
"This situation is common for example when a form contains a group of "
"multiple checkboxes with the same name::"
msgstr "这种情况很常见，例如当一个表单包含具有相同名称的一组复选框的时候::"

#: ../../library/cgi.rst:228
msgid ""
"In most situations, however, there's only one form control with a particular"
" name in a form and then you expect and need only one value associated with "
"this name.  So you write a script containing for example this code::"
msgstr "但是在多数情况下，一个表单中的一个特定名称只对应一个表单控件。 因此你可能会编写包含以下代码的脚本::"

#: ../../library/cgi.rst:234
msgid ""
"The problem with the code is that you should never expect that a client will"
" provide valid input to your scripts.  For example, if a curious user "
"appends another ``user=foo`` pair to the query string, then the script would"
" crash, because in this situation the ``getvalue(\"user\")`` method call "
"returns a list instead of a string.  Calling the :meth:`~str.upper` method "
"on a list is not valid (since lists do not have a method of this name) and "
"results in an :exc:`AttributeError` exception."
msgstr ""
"这段代码的问题在于你绝不能预期客户端会向你的脚本提供合法的输入。 举例来说，如果一个好奇的用户向查询字符串添加了另一个 ``user=foo`` "
"对，则该脚本将会崩溃，因为在这种情况下 ``getvalue(\"user\")`` 方法调用将返回一个列表而不是字符串。 在一个列表上调用 "
":meth:`~str.upper` 方法是不合法的（因为列表并没有这个方法）因而会引发 :exc:`AttributeError` 异常。"

#: ../../library/cgi.rst:242
msgid ""
"Therefore, the appropriate way to read form data values was to always use "
"the code which checks whether the obtained value is a single value or a list"
" of values.  That's annoying and leads to less readable scripts."
msgstr "因此，读取表单数据值的正确方式应当总是使用检查所获取的值是单一值还是值列表的代码。 这很麻烦并且会使脚本缺乏可读性。"

#: ../../library/cgi.rst:246
msgid ""
"A more convenient approach is to use the methods "
":meth:`~FieldStorage.getfirst` and :meth:`~FieldStorage.getlist` provided by"
" this higher level interface."
msgstr ""
"一种更便捷的方式是使用这个更高层级接口所提供的 :meth:`~FieldStorage.getfirst` 和 "
":meth:`~FieldStorage.getlist` 方法。"

#: ../../library/cgi.rst:252
msgid ""
"This method always returns only one value associated with form field *name*."
" The method returns only the first value in case that more values were "
"posted under such name.  Please note that the order in which the values are "
"received may vary from browser to browser and should not be counted on. [#]_"
"  If no such form field or value exists then the method returns the value "
"specified by the optional parameter *default*.  This parameter defaults to "
"``None`` if not specified."
msgstr ""
"此方法总是只返回与表单字段 *name* 相关联的单一值。 此方法在同一名称下提交了多个值的情况下将仅返回第一个值。 "
"请注意所接收的值顺序在不同浏览器上可能发生变化因而是不确定的。 [#]_  如果指定的表单字段或值不存在则此方法将返回可选形参 *default* "
"所指定的值。 如果未指定此形参则默认值为 ``None``。"

#: ../../library/cgi.rst:263
msgid ""
"This method always returns a list of values associated with form field "
"*name*. The method returns an empty list if no such form field or value "
"exists for *name*.  It returns a list consisting of one item if only one "
"such value exists."
msgstr ""
"此方法总是返回与表单字段 *name* 相关联的值列表。 如果 *name* 指定的表单字段或值不存在则此方法将返回一个空列表。 "
"如果指定的表单字段只包含一个值则它将返回只有一项的列表。"

#: ../../library/cgi.rst:267
msgid "Using these methods you can write nice compact code::"
msgstr "使用这两个方法你将能写出优雅简洁的代码::"

#: ../../library/cgi.rst:279
msgid "Functions"
msgstr "函数"

#: ../../library/cgi.rst:281
msgid ""
"These are useful if you want more control, or if you want to employ some of "
"the algorithms implemented in this module in other circumstances."
msgstr "这些函数在你想要更多控制，或者如果你想要应用一些此模块中在其他场景下实现的算法时很有用处。"

#: ../../library/cgi.rst:287
msgid ""
"Parse a query in the environment or from a file (the file defaults to "
"``sys.stdin``).  The *keep_blank_values*, *strict_parsing* and *separator* "
"parameters are passed to :func:`urllib.parse.parse_qs` unchanged."
msgstr ""
"在环境中或从某个文件中解析一个查询 (文件默认为 ``sys.stdin``)。 *keep_blank_values*, "
"*strict_parsing* 和 *separator* 形参会被原样传给 :func:`urllib.parse.parse_qs`。"

#: ../../library/cgi.rst:294
msgid ""
"Parse input of type :mimetype:`multipart/form-data` (for  file uploads). "
"Arguments are *fp* for the input file, *pdict* for a dictionary containing "
"other parameters in the :mailheader:`Content-Type` header, and *encoding*, "
"the request encoding."
msgstr ""
"解析 :mimetype:`multipart/form-data` 类型（用于文件上传）的输入。 参数中 *fp* 为输入文件，*pdict* 为包含"
" :mailheader:`Content-Type` 标头中的其他形参的字典，*encoding* 为请求的编码格式。"

#: ../../library/cgi.rst:299
msgid ""
"Returns a dictionary just like :func:`urllib.parse.parse_qs`: keys are the "
"field names, each value is a list of values for that field. For non-file "
"fields, the value is a list of strings."
msgstr ""
"像 :func:`urllib.parse.parse_qs` 那样返回一个字典：其中的键为字段名称，值为对应字段的值列表。 "
"对于非文件字段，其值均为字符串列表。"

#: ../../library/cgi.rst:303
msgid ""
"This is easy to use but not much good if you are expecting megabytes to be "
"uploaded --- in that case, use the :class:`FieldStorage` class instead which"
" is much more flexible."
msgstr ""
"这很容易使用，但如果你预期要上传巨量字节数据时就不太适合了 --- 在这种情况下，请改用更为灵活的 :class:`FieldStorage` 类。"

#: ../../library/cgi.rst:307
msgid ""
"Added the *encoding* and *errors* parameters.  For non-file fields, the "
"value is now a list of strings, not bytes."
msgstr "增加了 *encoding* 和 *errors* 形参。 对于非文件字段，其值现在为字符串列表而非字节串列表。"

#: ../../library/cgi.rst:311
msgid "Added the *separator* parameter."
msgstr "增加了 *separator* 形参。"

#: ../../library/cgi.rst:317
msgid ""
"Parse a MIME header (such as :mailheader:`Content-Type`) into a main value "
"and a dictionary of parameters."
msgstr "将一个 MIME 标头 (例如 :mailheader:`Content-Type`) 解析为一个主值和一个参数字典。"

#: ../../library/cgi.rst:323
msgid ""
"Robust test CGI script, usable as main program. Writes minimal HTTP headers "
"and formats all information provided to the script in HTML format."
msgstr "对 CGI 执行健壮性检测，适于作为主程序。 写入最小化的 HTTP 标头并以 HTML 格式来格式化提供给脚本的所有信息。"

#: ../../library/cgi.rst:329
msgid "Format the shell environment in HTML."
msgstr "以 HTML 格式来格式化 shell 环境。"

#: ../../library/cgi.rst:334
msgid "Format a form in HTML."
msgstr "以 HTML 格式来格式化表单。"

#: ../../library/cgi.rst:339
msgid "Format the current directory in HTML."
msgstr "以 HTML 格式来格式化当前目录。"

#: ../../library/cgi.rst:344
msgid "Print a list of useful (used by CGI) environment variables in HTML."
msgstr "以 HTML 格式打印有用的环境变量列表（供 CGI 使用）。"

#: ../../library/cgi.rst:350
msgid "Caring about security"
msgstr "对于安全性的关注"

#: ../../library/cgi.rst:354
msgid ""
"There's one important rule: if you invoke an external program (via "
":func:`os.system`, :func:`os.popen` or other functions with similar "
"functionality), make very sure you don't pass arbitrary strings received "
"from the client to the shell.  This is a well-known security hole whereby "
"clever hackers anywhere on the web can exploit a gullible CGI script to "
"invoke arbitrary shell commands.  Even parts of the URL or field names "
"cannot be trusted, since the request doesn't have to come from your form!"
msgstr ""
"有一条重要的规则：如果你发起调用一个外部程序（通过 :func:`os.system`, :func:`os.popen` "
"或其他具有类似功能的函数），需要非常确定你不会把从客户端接收的任意字符串直接传给 shell。 "
"这是一个著名的安全漏洞，网络中聪明的黑客可以通过它来利用容易上当的 CGI 脚本发起调用任何 shell 命令。 即便 URL "
"的一部分或字段名称也是不可信任的，因为请求并不一定是来自你的表单！"

#: ../../library/cgi.rst:362
msgid ""
"To be on the safe side, if you must pass a string gotten from a form to a "
"shell command, you should make sure the string contains only alphanumeric "
"characters, dashes, underscores, and periods."
msgstr "为了安全起见，如果你必须将从表单获取的字符串传给 shell 命令，你应当确保该字符串仅包含字母数字类字符、连字符、下划线和句点。"

#: ../../library/cgi.rst:368
msgid "Installing your CGI script on a Unix system"
msgstr "在 Unix 系统上安装你的 CGI 脚本"

#: ../../library/cgi.rst:370
msgid ""
"Read the documentation for your HTTP server and check with your local system"
" administrator to find the directory where CGI scripts should be installed; "
"usually this is in a directory :file:`cgi-bin` in the server tree."
msgstr ""
"请阅读你的 HTTP 服务器的文档并咨询你所用系统的管理员来找到 CGI 脚本应当安装到哪个目录；通常是服务器目录树中的 :file:`cgi-bin`"
" 目录。"

#: ../../library/cgi.rst:374
msgid ""
"Make sure that your script is readable and executable by \"others\"; the "
"Unix file mode should be ``0o755`` octal (use ``chmod 0755 filename``).  "
"Make sure that the first line of the script contains ``#!`` starting in "
"column 1 followed by the pathname of the Python interpreter, for instance::"
msgstr ""
"请确保你的脚本可被“其他人”读取和执行；Unix 文件模式应为八进制数 ``0o755`` (使用 ``chmod 0755 filename``)。 "
"请确保脚本的第一行包含 ``#!`` 且位置是从第 1 列开始，后面带有 Python 解释器的路径名，例如::"

#: ../../library/cgi.rst:381
msgid "Make sure the Python interpreter exists and is executable by \"others\"."
msgstr "请确保该 Python 解释器存在并且可被“其他人”执行。"

#: ../../library/cgi.rst:383
msgid ""
"Make sure that any files your script needs to read or write are readable or "
"writable, respectively, by \"others\" --- their mode should be ``0o644`` for"
" readable and ``0o666`` for writable.  This is because, for security "
"reasons, the HTTP server executes your script as user \"nobody\", without "
"any special privileges.  It can only read (write, execute) files that "
"everybody can read (write, execute).  The current directory at execution "
"time is also different (it is usually the server's cgi-bin directory) and "
"the set of environment variables is also different from what you get when "
"you log in.  In particular, don't count on the shell's search path for "
"executables (:envvar:`PATH`) or the Python module search path "
"(:envvar:`PYTHONPATH`) to be set to anything interesting."
msgstr ""
"请确保你的脚本需要读取或写入的任何文件都分别是“其他人”可读取或可写入的 --- 它们的模式应为可读取 ``0o644`` 或可写入 "
"``0o666``。 这是因为出于安全理由，HTTP 服务器是作为没有任何特殊权限的 \"nobody\" 用户来运行脚本的。 "
"它只能读取（写入、执行）任何人都能读取（写入、执行）的文件。 执行时的当前目录（通常为服务器的 cgi-bin "
"目录）和环境变量集合也与你在登录时所得到的不同。 特别地，不可依赖于 shell 的可执行文件搜索路径 (:envvar:`PATH`) 或 "
"Python 模块搜索路径 (:envvar:`PYTHONPATH`) 的任何相关设置。"

#: ../../library/cgi.rst:394
msgid ""
"If you need to load modules from a directory which is not on Python's "
"default module search path, you can change the path in your script, before "
"importing other modules.  For example::"
msgstr "如果你需要从 Python 的默认模块搜索路径之外的目录载入模块，你可以在导入其他模块之前在你的脚本中改变路径。 例如::"

#: ../../library/cgi.rst:402
msgid "(This way, the directory inserted last will be searched first!)"
msgstr "（在此方式下，最后插入的目录将最先被搜索！）"

#: ../../library/cgi.rst:404
msgid ""
"Instructions for non-Unix systems will vary; check your HTTP server's "
"documentation (it will usually have a section on CGI scripts)."
msgstr "针对非 Unix 系统的指导会有所变化；请查看你的 HTTP 服务器的文档（通常会有关于 CGI 脚本的部分）。"

#: ../../library/cgi.rst:409
msgid "Testing your CGI script"
msgstr "测试你的 CGI 脚本"

#: ../../library/cgi.rst:411
msgid ""
"Unfortunately, a CGI script will generally not run when you try it from the "
"command line, and a script that works perfectly from the command line may "
"fail mysteriously when run from the server.  There's one reason why you "
"should still test your script from the command line: if it contains a syntax"
" error, the Python interpreter won't execute it at all, and the HTTP server "
"will most likely send a cryptic error to the client."
msgstr ""
"很不幸，当你在命令行中尝试 CGI 脚本时它通常会无法运行，而能在命令行中完美运行的脚本则可能会在运行于服务器时神秘地失败。 "
"但有一个理由使你仍然应当在命令行中测试你的脚本：如果它包含语法错误，Python 解释器将根本不会执行它，而 HTTP "
"服务器将很可能向客户端发送令人费解的错误信息。"

#: ../../library/cgi.rst:418
msgid ""
"Assuming your script has no syntax errors, yet it does not work, you have no"
" choice but to read the next section."
msgstr "假定你的脚本没有语法错误，但它仍然无法起作用，你将别无选择，只能继续阅读下一节。"

#: ../../library/cgi.rst:423
msgid "Debugging CGI scripts"
msgstr "调试 CGI 脚本"

#: ../../library/cgi.rst:427
msgid ""
"First of all, check for trivial installation errors --- reading the section "
"above on installing your CGI script carefully can save you a lot of time.  "
"If you wonder whether you have understood the installation procedure "
"correctly, try installing a copy of this module file (:file:`cgi.py`) as a "
"CGI script.  When invoked as a script, the file will dump its environment "
"and the contents of the form in HTML format. Give it the right mode etc., "
"and send it a request.  If it's installed in the standard :file:`cgi-bin` "
"directory, it should be possible to send it a request by entering a URL into"
" your browser of the form:"
msgstr ""
"首先，请检查是否有安装上的小错误 --- 仔细阅读上面关于安装 CGI 脚本的部分可以使你节省大量时间。 "
"如果你不确定你是否正确理解了安装过程，请尝试将此模块 (:file:`cgi.py`) 的副本作为 CGI 脚本安装。 "
"当作为脚本被发起调用时，该文件将以 HTML 格式转储其环境和表单内容。 请给它赋予正确的模式等，并向它发送一个请求。 如果它是安装在标准的 "
":file:`cgi-bin` 目录下，应该可以通过在你的浏览器中输入表单的 URL 来向它发送请求。"

#: ../../library/cgi.rst:440
msgid ""
"If this gives an error of type 404, the server cannot find the script -- "
"perhaps you need to install it in a different directory.  If it gives "
"another error, there's an installation problem that you should fix before "
"trying to go any further.  If you get a nicely formatted listing of the "
"environment and form content (in this example, the fields should be listed "
"as \"addr\" with value \"At Home\" and \"name\" with value \"Joe Blow\"), "
"the :file:`cgi.py` script has been installed correctly.  If you follow the "
"same procedure for your own script, you should now be able to debug it."
msgstr ""
"如果此操作给出类型为 404 的错误，说明服务器找不到此脚本 -- 也许你需要将它安装到不同的目录。 "
"如果它给出另一种错误，说明存在安装问题，你应当解决此问题才能继续操作。 如果你得到一个格式良好的环境和表单内容清单（在这个例子中，应当会列出的有字段 "
"\"addr\" 值为 \"At Home\" 以及 \"name\" 值为 \"Joe Blow\"），则说明 :file:`cgi.py` "
"脚本已正确安装。  如果你为自己的脚本执行了同样的过程，现在你应该能够调试它了。"

#: ../../library/cgi.rst:449
msgid ""
"The next step could be to call the :mod:`cgi` module's :func:`test` function"
" from your script: replace its main code with the single statement ::"
msgstr "下一步骤可以是在你的脚本中调用 :mod:`cgi` 模块的 :func:`test` 函数：用这一条语句替换它的主代码 ::"

#: ../../library/cgi.rst:454
msgid ""
"This should produce the same results as those gotten from installing the "
":file:`cgi.py` file itself."
msgstr "这将产生从安装 :file:`cgi.py` 文件本身所得到的相同结果。"

#: ../../library/cgi.rst:457
msgid ""
"When an ordinary Python script raises an unhandled exception (for whatever "
"reason: of a typo in a module name, a file that can't be opened, etc.), the "
"Python interpreter prints a nice traceback and exits.  While the Python "
"interpreter will still do this when your CGI script raises an exception, "
"most likely the traceback will end up in one of the HTTP server's log files,"
" or be discarded altogether."
msgstr ""
"当某个常规 Python 脚本触发了未处理的异常，（无论出于什么原因：模块名称出错、文件无法打开等)，Python "
"解释器就会打印出一条完整的跟踪信息并退出。在 CGI 脚本触发异常时，Python 解释器依然会如此，但最有可能的是，跟踪信息只会停留在某个 HTTP "
"服务日志文件中，或者被完全丢弃。"

#: ../../library/cgi.rst:464
msgid ""
"Fortunately, once you have managed to get your script to execute *some* "
"code, you can easily send tracebacks to the web browser using the "
":mod:`cgitb` module. If you haven't done so already, just add the lines::"
msgstr "幸运的是，只要执行 *某些* 代码，就可以利用 :mod:`cgitb` 模块将跟踪信息发送给浏览器。将以下几行代码加到代码顶部："

#: ../../library/cgi.rst:471
msgid ""
"to the top of your script.  Then try running it again; when a problem "
"occurs, you should see a detailed report that will likely make apparent the "
"cause of the crash."
msgstr "然后再运行一下看；发生问题时应能看到详细的报告，或许能让崩溃的原因更清晰一些。"

#: ../../library/cgi.rst:475
msgid ""
"If you suspect that there may be a problem in importing the :mod:`cgitb` "
"module, you can use an even more robust approach (which only uses built-in "
"modules)::"
msgstr "如果怀疑是 :mod:`cgitb` 模块导入的问题，可以采用一个功能更强的方法（只用到内置模块）："

#: ../../library/cgi.rst:484
msgid ""
"This relies on the Python interpreter to print the traceback.  The content "
"type of the output is set to plain text, which disables all HTML processing."
"  If your script works, the raw HTML will be displayed by your client.  If "
"it raises an exception, most likely after the first two lines have been "
"printed, a traceback will be displayed. Because no HTML interpretation is "
"going on, the traceback will be readable."
msgstr ""
"这得靠 Python 解释器来打印跟踪信息。输出的类型为纯文本，不经过任何 HTML 处理。如果代码正常，则客户端会显示原有的 "
"HTML。如果触发了异常，很可能在输出前两行后会显示一条跟踪信息。因为不会继续进行 HTML 解析，所以跟踪信息肯定能被读到。"

#: ../../library/cgi.rst:493
msgid "Common problems and solutions"
msgstr "常见问题和解决方案"

#: ../../library/cgi.rst:495
msgid ""
"Most HTTP servers buffer the output from CGI scripts until the script is "
"completed.  This means that it is not possible to display a progress report "
"on the client's display while the script is running."
msgstr ""
"大部分 HTTP 服务器会对 CGI 脚本的输出进行缓存，等脚本执行完毕再行输出。这意味着在脚本运行时，不可能在客户端屏幕上显示出进度情况。"

#: ../../library/cgi.rst:499
msgid "Check the installation instructions above."
msgstr "请查看上述安装说明。"

#: ../../library/cgi.rst:501
msgid ""
"Check the HTTP server's log files.  (``tail -f logfile`` in a separate "
"window may be useful!)"
msgstr "请查看 HTTP 服务器的日志文件。（在另一个单独窗口中执行 ``tail -f logfile`` 可能会很有用！）"

#: ../../library/cgi.rst:504
msgid ""
"Always check a script for syntax errors first, by doing something like "
"``python script.py``."
msgstr "一定要先检查脚本是否有语法错误，做法类似：``python script.py`` 。"

#: ../../library/cgi.rst:507
msgid ""
"If your script does not have any syntax errors, try adding ``import cgitb; "
"cgitb.enable()`` to the top of the script."
msgstr "如果脚本没有语法错误，试着在脚本的顶部添加 ``import cgitb; cgitb.enable()``。"

#: ../../library/cgi.rst:510
msgid ""
"When invoking external programs, make sure they can be found. Usually, this "
"means using absolute path names --- :envvar:`PATH` is usually not set to a "
"very useful value in a CGI script."
msgstr ""
"当调用外部程序时，要确保其可被读取。通常这意味着采用绝对路径名------ 在 CGI 脚本中， :envvar:`PATH` 的值通常没什么用。"

#: ../../library/cgi.rst:514
msgid ""
"When reading or writing external files, make sure they can be read or "
"written by the userid under which your CGI script will be running: this is "
"typically the userid under which the web server is running, or some "
"explicitly specified userid for a web server's ``suexec`` feature."
msgstr ""
"在读写外部文件时，要确保其能被 CGI 脚本归属的用户读写：通常是运行网络服务的用户，或由网络服务的 ``suexec`` 功能明确指定的一些用户。"

#: ../../library/cgi.rst:519
msgid ""
"Don't try to give a CGI script a set-uid mode.  This doesn't work on most "
"systems, and is a security liability as well."
msgstr "不要试图给 CGI 脚本赋予 set-uid 模式。这在大多数系统上都行不通，出于安全考虑也不应如此。"

#: ../../library/cgi.rst:523
msgid "Footnotes"
msgstr "备注"

#: ../../library/cgi.rst:524
msgid ""
"Note that some recent versions of the HTML specification do state what order"
" the field values should be supplied in, but knowing whether a request was "
"received from a conforming browser, or even from a browser at all, is "
"tedious and error-prone."
msgstr ""
"请注意，新版的 HTML 规范确实注明了请求字段的顺序，但判断请求是否合法非常繁琐和容易出错，可能来自不符合要求的浏览器，甚至不是来自浏览器。"
