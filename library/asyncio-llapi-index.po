# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2025
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-07-25 18:10+0000\n"
"PO-Revision-Date: 2025-07-18 20:08+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2025\n"
"Language-Team: Chinese (China) (https://app.transifex.com/python-doc/teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/asyncio-llapi-index.rst:6
msgid "Low-level API Index"
msgstr "低层级 API 索引"

#: ../../library/asyncio-llapi-index.rst:8
msgid "This page lists all low-level asyncio APIs."
msgstr "本页列出所有低层级的 asyncio API。"

#: ../../library/asyncio-llapi-index.rst:12
msgid "Obtaining the Event Loop"
msgstr "获取事件循环"

#: ../../library/asyncio-llapi-index.rst:18
msgid ":func:`asyncio.get_running_loop`"
msgstr ":func:`asyncio.get_running_loop`"

#: ../../library/asyncio-llapi-index.rst:19
msgid "The **preferred** function to get the running event loop."
msgstr "获取当前运行的事件循环 **首选** 函数。"

#: ../../library/asyncio-llapi-index.rst:21
msgid ":func:`asyncio.get_event_loop`"
msgstr ":func:`asyncio.get_event_loop`"

#: ../../library/asyncio-llapi-index.rst:22
msgid ""
"Get an event loop instance (running or current via the current policy)."
msgstr "获取一个事件循环实例（正在运行的事件循环或通过当前策略确定的当前事件循环）。"

#: ../../library/asyncio-llapi-index.rst:24
msgid ":func:`asyncio.set_event_loop`"
msgstr ":func:`asyncio.set_event_loop`"

#: ../../library/asyncio-llapi-index.rst:25
msgid "Set the event loop as current via the current policy."
msgstr "通过当前策略将事件循环设置当前事件循环。"

#: ../../library/asyncio-llapi-index.rst:27
msgid ":func:`asyncio.new_event_loop`"
msgstr ":func:`asyncio.new_event_loop`"

#: ../../library/asyncio-llapi-index.rst:28
msgid "Create a new event loop."
msgstr "创建一个新的事件循环。"

#: ../../library/asyncio-llapi-index.rst:32
#: ../../library/asyncio-llapi-index.rst:260
msgid "Examples"
msgstr "例子"

#: ../../library/asyncio-llapi-index.rst:33
msgid ":ref:`Using asyncio.get_running_loop() <asyncio_example_future>`."
msgstr ":ref:`使用asyncio.get_running_loop() <asyncio_example_future>`。"

#: ../../library/asyncio-llapi-index.rst:37
msgid "Event Loop Methods"
msgstr "事件循环方法集"

#: ../../library/asyncio-llapi-index.rst:39
msgid ""
"See also the main documentation section about the :ref:`asyncio-event-loop-"
"methods`."
msgstr "另请参阅有关 :ref:`asyncio-event-loop-methods` 的主文档章节。"

#: ../../library/asyncio-llapi-index.rst:42
msgid "Lifecycle"
msgstr "生命周期"

#: ../../library/asyncio-llapi-index.rst:47
msgid ":meth:`loop.run_until_complete`"
msgstr ":meth:`loop.run_until_complete`"

#: ../../library/asyncio-llapi-index.rst:48
msgid "Run a Future/Task/awaitable until complete."
msgstr "运行一个期程/任务/可等待对象直到完成。"

#: ../../library/asyncio-llapi-index.rst:50
msgid ":meth:`loop.run_forever`"
msgstr ":meth:`loop.run_forever`"

#: ../../library/asyncio-llapi-index.rst:51
msgid "Run the event loop forever."
msgstr "一直运行事件循环。"

#: ../../library/asyncio-llapi-index.rst:53
msgid ":meth:`loop.stop`"
msgstr ":meth:`loop.stop`"

#: ../../library/asyncio-llapi-index.rst:54
msgid "Stop the event loop."
msgstr "停止事件循环。"

#: ../../library/asyncio-llapi-index.rst:56
msgid ":meth:`loop.close`"
msgstr ":meth:`loop.close`"

#: ../../library/asyncio-llapi-index.rst:57
msgid "Close the event loop."
msgstr "关闭事件循环。"

#: ../../library/asyncio-llapi-index.rst:59
msgid ":meth:`loop.is_running()`"
msgstr ":meth:`loop.is_running()`"

#: ../../library/asyncio-llapi-index.rst:60
msgid "Return ``True`` if the event loop is running."
msgstr "返回 ``True`` ， 如果事件循环正在运行。"

#: ../../library/asyncio-llapi-index.rst:62
msgid ":meth:`loop.is_closed()`"
msgstr ":meth:`loop.is_closed()`"

#: ../../library/asyncio-llapi-index.rst:63
msgid "Return ``True`` if the event loop is closed."
msgstr "返回 ``True`` ，如果事件循环已经被关闭 。"

#: ../../library/asyncio-llapi-index.rst:65
msgid "``await`` :meth:`loop.shutdown_asyncgens`"
msgstr "``await`` :meth:`loop.shutdown_asyncgens`"

#: ../../library/asyncio-llapi-index.rst:66
msgid "Close asynchronous generators."
msgstr "关闭异步生成器。"

#: ../../library/asyncio-llapi-index.rst:69
msgid "Debugging"
msgstr "调试"

#: ../../library/asyncio-llapi-index.rst:74
msgid ":meth:`loop.set_debug`"
msgstr ":meth:`loop.set_debug`"

#: ../../library/asyncio-llapi-index.rst:75
msgid "Enable or disable the debug mode."
msgstr "开启或禁用调试模式。"

#: ../../library/asyncio-llapi-index.rst:77
msgid ":meth:`loop.get_debug`"
msgstr ":meth:`loop.get_debug`"

#: ../../library/asyncio-llapi-index.rst:78
msgid "Get the current debug mode."
msgstr "获取当前测试模式。"

#: ../../library/asyncio-llapi-index.rst:81
msgid "Scheduling Callbacks"
msgstr "调度回调函数"

#: ../../library/asyncio-llapi-index.rst:86
msgid ":meth:`loop.call_soon`"
msgstr ":meth:`loop.call_soon`"

#: ../../library/asyncio-llapi-index.rst:87
msgid "Invoke a callback soon."
msgstr "尽快调用回调。"

#: ../../library/asyncio-llapi-index.rst:89
msgid ":meth:`loop.call_soon_threadsafe`"
msgstr ":meth:`loop.call_soon_threadsafe`"

#: ../../library/asyncio-llapi-index.rst:90
msgid "A thread-safe variant of :meth:`loop.call_soon`."
msgstr ":meth:`loop.call_soon` 方法线程安全的变体。"

#: ../../library/asyncio-llapi-index.rst:92
msgid ":meth:`loop.call_later`"
msgstr ":meth:`loop.call_later`"

#: ../../library/asyncio-llapi-index.rst:93
msgid "Invoke a callback *after* the given time."
msgstr "在给定时间 *之后* 调用回调函数。"

#: ../../library/asyncio-llapi-index.rst:95
msgid ":meth:`loop.call_at`"
msgstr ":meth:`loop.call_at`"

#: ../../library/asyncio-llapi-index.rst:96
msgid "Invoke a callback *at* the given time."
msgstr "在 *指定* 时间调用回调函数。"

#: ../../library/asyncio-llapi-index.rst:99
msgid "Thread/Process Pool"
msgstr "线程/进程池"

#: ../../library/asyncio-llapi-index.rst:104
msgid "``await`` :meth:`loop.run_in_executor`"
msgstr "``await`` :meth:`loop.run_in_executor`"

#: ../../library/asyncio-llapi-index.rst:105
msgid ""
"Run a CPU-bound or other blocking function in a :mod:`concurrent.futures` "
"executor."
msgstr "在  :mod:`concurrent.futures` 执行器中运行一个独占CPU或其它阻塞函数。"

#: ../../library/asyncio-llapi-index.rst:108
msgid ":meth:`loop.set_default_executor`"
msgstr ":meth:`loop.set_default_executor`"

#: ../../library/asyncio-llapi-index.rst:109
msgid "Set the default executor for :meth:`loop.run_in_executor`."
msgstr "设置  :meth:`loop.run_in_executor` 默认执行器。"

#: ../../library/asyncio-llapi-index.rst:112
msgid "Tasks and Futures"
msgstr "任务与期程"

#: ../../library/asyncio-llapi-index.rst:117
msgid ":meth:`loop.create_future`"
msgstr ":meth:`loop.create_future`"

#: ../../library/asyncio-llapi-index.rst:118
msgid "Create a :class:`Future` object."
msgstr "创建一个 :class:`Future` 对象。"

#: ../../library/asyncio-llapi-index.rst:120
msgid ":meth:`loop.create_task`"
msgstr ":meth:`loop.create_task`"

#: ../../library/asyncio-llapi-index.rst:121
msgid "Schedule coroutine as a :class:`Task`."
msgstr "将协程当作 :class:`Task` 一样调度。"

#: ../../library/asyncio-llapi-index.rst:123
msgid ":meth:`loop.set_task_factory`"
msgstr ":meth:`loop.set_task_factory`"

#: ../../library/asyncio-llapi-index.rst:124
msgid ""
"Set a factory used by :meth:`loop.create_task` to create :class:`Tasks "
"<Task>`."
msgstr "设置 :meth:`loop.create_task` 使用的工厂，它将用来创建  :class:`Tasks <Task>`  。"

#: ../../library/asyncio-llapi-index.rst:127
msgid ":meth:`loop.get_task_factory`"
msgstr ":meth:`loop.get_task_factory`"

#: ../../library/asyncio-llapi-index.rst:128
msgid ""
"Get the factory :meth:`loop.create_task` uses to create :class:`Tasks "
"<Task>`."
msgstr "获取 :meth:`loop.create_task` 使用的工厂，它用来创建  :class:`Tasks <Task>`  。"

#: ../../library/asyncio-llapi-index.rst:132
msgid "DNS"
msgstr "DNS"

#: ../../library/asyncio-llapi-index.rst:137
msgid "``await`` :meth:`loop.getaddrinfo`"
msgstr "``await`` :meth:`loop.getaddrinfo`"

#: ../../library/asyncio-llapi-index.rst:138
msgid "Asynchronous version of :meth:`socket.getaddrinfo`."
msgstr "异步版的 :meth:`socket.getaddrinfo` 。"

#: ../../library/asyncio-llapi-index.rst:140
msgid "``await`` :meth:`loop.getnameinfo`"
msgstr "``await`` :meth:`loop.getnameinfo`"

#: ../../library/asyncio-llapi-index.rst:141
msgid "Asynchronous version of :meth:`socket.getnameinfo`."
msgstr "异步版的 :meth:`socket.getnameinfo` 。"

#: ../../library/asyncio-llapi-index.rst:144
msgid "Networking and IPC"
msgstr "网络和IPC"

#: ../../library/asyncio-llapi-index.rst:149
msgid "``await`` :meth:`loop.create_connection`"
msgstr "``await`` :meth:`loop.create_connection`"

#: ../../library/asyncio-llapi-index.rst:150
msgid "Open a TCP connection."
msgstr "打开一个TCP链接。"

#: ../../library/asyncio-llapi-index.rst:152
msgid "``await`` :meth:`loop.create_server`"
msgstr "``await`` :meth:`loop.create_server`"

#: ../../library/asyncio-llapi-index.rst:153
msgid "Create a TCP server."
msgstr "创建一个TCP服务。"

#: ../../library/asyncio-llapi-index.rst:155
msgid "``await`` :meth:`loop.create_unix_connection`"
msgstr "``await`` :meth:`loop.create_unix_connection`"

#: ../../library/asyncio-llapi-index.rst:156
msgid "Open a Unix socket connection."
msgstr "打开一个Unix socket连接。"

#: ../../library/asyncio-llapi-index.rst:158
msgid "``await`` :meth:`loop.create_unix_server`"
msgstr "``await`` :meth:`loop.create_unix_server`"

#: ../../library/asyncio-llapi-index.rst:159
msgid "Create a Unix socket server."
msgstr "创建一个Unix socket服务。"

#: ../../library/asyncio-llapi-index.rst:161
msgid "``await`` :meth:`loop.connect_accepted_socket`"
msgstr "``await`` :meth:`loop.connect_accepted_socket`"

#: ../../library/asyncio-llapi-index.rst:162
msgid "Wrap a :class:`~socket.socket` into a ``(transport, protocol)`` pair."
msgstr "将 :class:`~socket.socket` 包装成  ``(transport, protocol)`` 对。"

#: ../../library/asyncio-llapi-index.rst:165
msgid "``await`` :meth:`loop.create_datagram_endpoint`"
msgstr "``await`` :meth:`loop.create_datagram_endpoint`"

#: ../../library/asyncio-llapi-index.rst:166
msgid "Open a datagram (UDP) connection."
msgstr "打开一个数据报(UDP)连接。"

#: ../../library/asyncio-llapi-index.rst:168
msgid "``await`` :meth:`loop.sendfile`"
msgstr "``await`` :meth:`loop.sendfile`"

#: ../../library/asyncio-llapi-index.rst:169
msgid "Send a file over a transport."
msgstr "通过传输通道发送一个文件。"

#: ../../library/asyncio-llapi-index.rst:171
msgid "``await`` :meth:`loop.start_tls`"
msgstr "``await`` :meth:`loop.start_tls`"

#: ../../library/asyncio-llapi-index.rst:172
msgid "Upgrade an existing connection to TLS."
msgstr "将一个已建立的链接升级到TLS。"

#: ../../library/asyncio-llapi-index.rst:174
msgid "``await`` :meth:`loop.connect_read_pipe`"
msgstr "``await`` :meth:`loop.connect_read_pipe`"

#: ../../library/asyncio-llapi-index.rst:175
msgid "Wrap a read end of a pipe into a ``(transport, protocol)`` pair."
msgstr "将管道读取端包装成  ``(transport, protocol)`` 对。"

#: ../../library/asyncio-llapi-index.rst:177
msgid "``await`` :meth:`loop.connect_write_pipe`"
msgstr "``await`` :meth:`loop.connect_write_pipe`"

#: ../../library/asyncio-llapi-index.rst:178
msgid "Wrap a write end of a pipe into a ``(transport, protocol)`` pair."
msgstr "将管道写入端包装成  ``(transport, protocol)`` 对。"

#: ../../library/asyncio-llapi-index.rst:181
msgid "Sockets"
msgstr "套接字"

#: ../../library/asyncio-llapi-index.rst:186
msgid "``await`` :meth:`loop.sock_recv`"
msgstr "``await`` :meth:`loop.sock_recv`"

#: ../../library/asyncio-llapi-index.rst:187
msgid "Receive data from the :class:`~socket.socket`."
msgstr "从 :class:`~socket.socket` 接收数据。"

#: ../../library/asyncio-llapi-index.rst:189
msgid "``await`` :meth:`loop.sock_recv_into`"
msgstr "``await`` :meth:`loop.sock_recv_into`"

#: ../../library/asyncio-llapi-index.rst:190
msgid "Receive data from the :class:`~socket.socket` into a buffer."
msgstr "从 :class:`~socket.socket` 接收数据到一个缓冲区中。"

#: ../../library/asyncio-llapi-index.rst:192
msgid "``await`` :meth:`loop.sock_sendall`"
msgstr "``await`` :meth:`loop.sock_sendall`"

#: ../../library/asyncio-llapi-index.rst:193
msgid "Send data to the :class:`~socket.socket`."
msgstr "发送数据到 :class:`~socket.socket` 。"

#: ../../library/asyncio-llapi-index.rst:195
msgid "``await`` :meth:`loop.sock_connect`"
msgstr "``await`` :meth:`loop.sock_connect`"

#: ../../library/asyncio-llapi-index.rst:196
msgid "Connect the :class:`~socket.socket`."
msgstr "链接 ``await`` :meth:`loop.sock_connect` 。"

#: ../../library/asyncio-llapi-index.rst:198
msgid "``await`` :meth:`loop.sock_accept`"
msgstr "``await`` :meth:`loop.sock_accept`"

#: ../../library/asyncio-llapi-index.rst:199
msgid "Accept a :class:`~socket.socket` connection."
msgstr "接受一个 :class:`~socket.socket` 链接。"

#: ../../library/asyncio-llapi-index.rst:201
msgid "``await`` :meth:`loop.sock_sendfile`"
msgstr "``await`` :meth:`loop.sock_sendfile`"

#: ../../library/asyncio-llapi-index.rst:202
msgid "Send a file over the :class:`~socket.socket`."
msgstr "利用 :class:`~socket.socket` 发送一个文件。"

#: ../../library/asyncio-llapi-index.rst:204
msgid ":meth:`loop.add_reader`"
msgstr ":meth:`loop.add_reader`"

#: ../../library/asyncio-llapi-index.rst:205
msgid "Start watching a file descriptor for read availability."
msgstr "开始对一个文件描述符的可读性的监视。"

#: ../../library/asyncio-llapi-index.rst:207
msgid ":meth:`loop.remove_reader`"
msgstr ":meth:`loop.remove_reader`"

#: ../../library/asyncio-llapi-index.rst:208
msgid "Stop watching a file descriptor for read availability."
msgstr "停止对一个文件描述符的可读性的监视。"

#: ../../library/asyncio-llapi-index.rst:210
msgid ":meth:`loop.add_writer`"
msgstr ":meth:`loop.add_writer`"

#: ../../library/asyncio-llapi-index.rst:211
msgid "Start watching a file descriptor for write availability."
msgstr "开始对一个文件描述符的可写性的监视。"

#: ../../library/asyncio-llapi-index.rst:213
msgid ":meth:`loop.remove_writer`"
msgstr ":meth:`loop.remove_writer`"

#: ../../library/asyncio-llapi-index.rst:214
msgid "Stop watching a file descriptor for write availability."
msgstr "停止对一个文件描述符的可写性的监视。"

#: ../../library/asyncio-llapi-index.rst:217
msgid "Unix Signals"
msgstr "Unix信号"

#: ../../library/asyncio-llapi-index.rst:222
msgid ":meth:`loop.add_signal_handler`"
msgstr ":meth:`loop.add_signal_handler`"

#: ../../library/asyncio-llapi-index.rst:223
msgid "Add a handler for a :mod:`signal`."
msgstr "给 :mod:`signal` 添加一个处理回调函数。"

#: ../../library/asyncio-llapi-index.rst:225
msgid ":meth:`loop.remove_signal_handler`"
msgstr ":meth:`loop.remove_signal_handler`"

#: ../../library/asyncio-llapi-index.rst:226
msgid "Remove a handler for a :mod:`signal`."
msgstr "删除 :mod:`signal` 的处理回调函数。"

#: ../../library/asyncio-llapi-index.rst:229
msgid "Subprocesses"
msgstr "子进程集"

#: ../../library/asyncio-llapi-index.rst:234
msgid ":meth:`loop.subprocess_exec`"
msgstr ":meth:`loop.subprocess_exec`"

#: ../../library/asyncio-llapi-index.rst:235
msgid "Spawn a subprocess."
msgstr "衍生一个子进程"

#: ../../library/asyncio-llapi-index.rst:237
msgid ":meth:`loop.subprocess_shell`"
msgstr ":meth:`loop.subprocess_shell`"

#: ../../library/asyncio-llapi-index.rst:238
msgid "Spawn a subprocess from a shell command."
msgstr "从终端命令衍生一个子进程。"

#: ../../library/asyncio-llapi-index.rst:241
msgid "Error Handling"
msgstr "错误处理"

#: ../../library/asyncio-llapi-index.rst:246
msgid ":meth:`loop.call_exception_handler`"
msgstr ":meth:`loop.call_exception_handler`"

#: ../../library/asyncio-llapi-index.rst:247
msgid "Call the exception handler."
msgstr "调用异常处理器。"

#: ../../library/asyncio-llapi-index.rst:249
msgid ":meth:`loop.set_exception_handler`"
msgstr ":meth:`loop.set_exception_handler`"

#: ../../library/asyncio-llapi-index.rst:250
msgid "Set a new exception handler."
msgstr "设置一个新的异常处理器。"

#: ../../library/asyncio-llapi-index.rst:252
msgid ":meth:`loop.get_exception_handler`"
msgstr ":meth:`loop.get_exception_handler`"

#: ../../library/asyncio-llapi-index.rst:253
msgid "Get the current exception handler."
msgstr "获取当前异常处理器。"

#: ../../library/asyncio-llapi-index.rst:255
msgid ":meth:`loop.default_exception_handler`"
msgstr ":meth:`loop.default_exception_handler`"

#: ../../library/asyncio-llapi-index.rst:256
msgid "The default exception handler implementation."
msgstr "默认异常处理器实现。"

#: ../../library/asyncio-llapi-index.rst:261
msgid ""
":ref:`Using asyncio.get_event_loop() and loop.run_forever() "
"<asyncio_example_lowlevel_helloworld>`."
msgstr ""
":ref:`使用 asyncio.get_event_loop() 和 loop.run_forever() "
"<asyncio_example_lowlevel_helloworld>`."

#: ../../library/asyncio-llapi-index.rst:264
msgid ":ref:`Using loop.call_later() <asyncio_example_call_later>`."
msgstr ":ref:`使用 loop.call_later() <asyncio_example_call_later>`."

#: ../../library/asyncio-llapi-index.rst:266
msgid ""
"Using ``loop.create_connection()`` to implement :ref:`an echo-client "
"<asyncio_example_tcp_echo_client_protocol>`."
msgstr ""
"使用 ``loop.create_connection()`` 实现 :ref:`echo客户端 "
"<asyncio_example_tcp_echo_client_protocol>`."

#: ../../library/asyncio-llapi-index.rst:269
msgid ""
"Using ``loop.create_connection()`` to :ref:`connect a socket "
"<asyncio_example_create_connection>`."
msgstr ""
"使用 ``loop.create_connection()`` 去 :ref:`链接socket "
"<asyncio_example_create_connection>`."

#: ../../library/asyncio-llapi-index.rst:272
msgid ""
":ref:`Using add_reader() to watch an FD for read events "
"<asyncio_example_watch_fd>`."
msgstr ":ref:`使用add_reader()监听FD(文件描述符)的读取事件 <asyncio_example_watch_fd>`."

#: ../../library/asyncio-llapi-index.rst:275
msgid ":ref:`Using loop.add_signal_handler() <asyncio_example_unix_signals>`."
msgstr ":ref:`使用loop.add_signal_handler() <asyncio_example_unix_signals>`."

#: ../../library/asyncio-llapi-index.rst:277
msgid ""
":ref:`Using loop.subprocess_exec() <asyncio_example_subprocess_proto>`."
msgstr ""
":ref:`使用loop.add_signal_handler() <asyncio_example_subprocess_proto>`。"

#: ../../library/asyncio-llapi-index.rst:281
msgid "Transports"
msgstr "传输"

#: ../../library/asyncio-llapi-index.rst:283
msgid "All transports implement the following methods:"
msgstr "所有传输都实现以下方法:"

#: ../../library/asyncio-llapi-index.rst:289
msgid ":meth:`transport.close() <BaseTransport.close>`"
msgstr ":meth:`transport.close() <BaseTransport.close>`"

#: ../../library/asyncio-llapi-index.rst:290
msgid "Close the transport."
msgstr "关闭传输。"

#: ../../library/asyncio-llapi-index.rst:292
msgid ":meth:`transport.is_closing() <BaseTransport.is_closing>`"
msgstr ":meth:`transport.is_closing() <BaseTransport.is_closing>`"

#: ../../library/asyncio-llapi-index.rst:293
msgid "Return ``True`` if the transport is closing or is closed."
msgstr "返回 ``True`` ，如果传输正在关闭或已经关闭。"

#: ../../library/asyncio-llapi-index.rst:295
msgid ":meth:`transport.get_extra_info() <BaseTransport.get_extra_info>`"
msgstr ":meth:`transport.get_extra_info() <BaseTransport.get_extra_info>`"

#: ../../library/asyncio-llapi-index.rst:296
msgid "Request for information about the transport."
msgstr "请求传输的相关信息。"

#: ../../library/asyncio-llapi-index.rst:298
msgid ":meth:`transport.set_protocol() <BaseTransport.set_protocol>`"
msgstr ":meth:`transport.set_protocol() <BaseTransport.set_protocol>`"

#: ../../library/asyncio-llapi-index.rst:299
msgid "Set a new protocol."
msgstr "设置一个新协议。"

#: ../../library/asyncio-llapi-index.rst:301
msgid ":meth:`transport.get_protocol() <BaseTransport.get_protocol>`"
msgstr ":meth:`transport.get_protocol() <BaseTransport.get_protocol>`"

#: ../../library/asyncio-llapi-index.rst:302
msgid "Return the current protocol."
msgstr "返回当前协议。"

#: ../../library/asyncio-llapi-index.rst:305
msgid ""
"Transports that can receive data (TCP and Unix connections, pipes, etc).  "
"Returned from methods like :meth:`loop.create_connection`, "
":meth:`loop.create_unix_connection`, :meth:`loop.connect_read_pipe`, etc:"
msgstr ""
"传输可以接收数据(TCP和Unix链接，管道等)。它通过 :meth:`loop.create_connection`, "
":meth:`loop.create_unix_connection`, :meth:`loop.connect_read_pipe` 等方法返回。"

#: ../../library/asyncio-llapi-index.rst:310
msgid "Read Transports"
msgstr "读取传输"

#: ../../library/asyncio-llapi-index.rst:315
msgid ":meth:`transport.is_reading() <ReadTransport.is_reading>`"
msgstr ":meth:`transport.is_reading() <ReadTransport.is_reading>`"

#: ../../library/asyncio-llapi-index.rst:316
msgid "Return ``True`` if the transport is receiving."
msgstr "返回 ``True`` ，如果传输正在接收。"

#: ../../library/asyncio-llapi-index.rst:318
msgid ":meth:`transport.pause_reading() <ReadTransport.pause_reading>`"
msgstr ":meth:`transport.pause_reading() <ReadTransport.pause_reading>`"

#: ../../library/asyncio-llapi-index.rst:319
msgid "Pause receiving."
msgstr "暂停接收。"

#: ../../library/asyncio-llapi-index.rst:321
msgid ":meth:`transport.resume_reading() <ReadTransport.resume_reading>`"
msgstr ":meth:`transport.resume_reading() <ReadTransport.resume_reading>`"

#: ../../library/asyncio-llapi-index.rst:322
msgid "Resume receiving."
msgstr "继续接收。"

#: ../../library/asyncio-llapi-index.rst:325
msgid ""
"Transports that can Send data (TCP and Unix connections, pipes, etc).  "
"Returned from methods like :meth:`loop.create_connection`, "
":meth:`loop.create_unix_connection`, :meth:`loop.connect_write_pipe`, etc:"
msgstr ""
"传输可以发送数据(TCP和Unix链接，管道等)。它通过 :meth:`loop.create_connection`, "
":meth:`loop.create_unix_connection`, :meth:`loop.connect_write_pipe` 等方法返回。"

#: ../../library/asyncio-llapi-index.rst:330
msgid "Write Transports"
msgstr "写入传输"

#: ../../library/asyncio-llapi-index.rst:335
msgid ":meth:`transport.write() <WriteTransport.write>`"
msgstr ":meth:`transport.write() <WriteTransport.write>`"

#: ../../library/asyncio-llapi-index.rst:336
msgid "Write data to the transport."
msgstr "向传输写入数据。"

#: ../../library/asyncio-llapi-index.rst:338
msgid ":meth:`transport.writelines() <WriteTransport.writelines>`"
msgstr ":meth:`transport.write() <WriteTransport.write>`"

#: ../../library/asyncio-llapi-index.rst:339
msgid "Write buffers to the transport."
msgstr "向传输写入缓冲。"

#: ../../library/asyncio-llapi-index.rst:341
msgid ":meth:`transport.can_write_eof() <WriteTransport.can_write_eof>`"
msgstr ":meth:`transport.can_write_eof() <WriteTransport.can_write_eof>`"

#: ../../library/asyncio-llapi-index.rst:342
msgid "Return :const:`True` if the transport supports sending EOF."
msgstr "返回  :const:`True` ，如果传输支持发送 EOF。"

#: ../../library/asyncio-llapi-index.rst:344
msgid ":meth:`transport.write_eof() <WriteTransport.write_eof>`"
msgstr ":meth:`transport.write_eof() <WriteTransport.write_eof>`"

#: ../../library/asyncio-llapi-index.rst:345
msgid "Close and send EOF after flushing buffered data."
msgstr "在冲洗已缓冲的数据后关闭传输和发送EOF。"

#: ../../library/asyncio-llapi-index.rst:347
msgid ":meth:`transport.abort() <WriteTransport.abort>`"
msgstr ":meth:`transport.abort() <WriteTransport.abort>`"

#: ../../library/asyncio-llapi-index.rst:348
#: ../../library/asyncio-llapi-index.rst:374
msgid "Close the transport immediately."
msgstr "立即关闭传输。"

#: ../../library/asyncio-llapi-index.rst:350
msgid ""
":meth:`transport.get_write_buffer_size() "
"<WriteTransport.get_write_buffer_size>`"
msgstr ""
":meth:`transport.get_write_buffer_size() "
"<WriteTransport.get_write_buffer_size>`"

#: ../../library/asyncio-llapi-index.rst:352
msgid "Return the current size of the output buffer."
msgstr "返回当前输出缓冲区的大小。"

#: ../../library/asyncio-llapi-index.rst:354
msgid ""
":meth:`transport.get_write_buffer_limits() "
"<WriteTransport.get_write_buffer_limits>`"
msgstr ""
":meth:`transport.get_write_buffer_limits() "
"<WriteTransport.get_write_buffer_limits>`"

#: ../../library/asyncio-llapi-index.rst:356
msgid "Return high and low water marks for write flow control."
msgstr "返回写入流控制的高位标记位和低位标记位。"

#: ../../library/asyncio-llapi-index.rst:358
msgid ""
":meth:`transport.set_write_buffer_limits() "
"<WriteTransport.set_write_buffer_limits>`"
msgstr ""
":meth:`transport.set_write_buffer_limits() "
"<WriteTransport.set_write_buffer_limits>`"

#: ../../library/asyncio-llapi-index.rst:360
msgid "Set new high and low water marks for write flow control."
msgstr "设置新的写入流控制的高位标记位和低位标记位。"

#: ../../library/asyncio-llapi-index.rst:363
msgid "Transports returned by :meth:`loop.create_datagram_endpoint`:"
msgstr "由 :meth:`loop.create_datagram_endpoint` 返回的传输:"

#: ../../library/asyncio-llapi-index.rst:365
msgid "Datagram Transports"
msgstr "数据报传输"

#: ../../library/asyncio-llapi-index.rst:370
msgid ":meth:`transport.sendto() <DatagramTransport.sendto>`"
msgstr ":meth:`transport.sendto() <DatagramTransport.sendto>`"

#: ../../library/asyncio-llapi-index.rst:371
msgid "Send data to the remote peer."
msgstr "发送数据到远程链接端。"

#: ../../library/asyncio-llapi-index.rst:373
msgid ":meth:`transport.abort() <DatagramTransport.abort>`"
msgstr ":meth:`transport.abort() <DatagramTransport.abort>`"

#: ../../library/asyncio-llapi-index.rst:377
msgid ""
"Low-level transport abstraction over subprocesses. Returned by "
":meth:`loop.subprocess_exec` and :meth:`loop.subprocess_shell`:"
msgstr ""
"基于子进程的底层抽象传输，它由 :meth:`loop.subprocess_exec` 和 :meth:`loop.subprocess_shell`"
" 返回:"

#: ../../library/asyncio-llapi-index.rst:381
msgid "Subprocess Transports"
msgstr "子进程传输"

#: ../../library/asyncio-llapi-index.rst:386
msgid ":meth:`transport.get_pid() <SubprocessTransport.get_pid>`"
msgstr ":meth:`transport.get_pid() <SubprocessTransport.get_pid>`"

#: ../../library/asyncio-llapi-index.rst:387
msgid "Return the subprocess process id."
msgstr "返回子进程的进程ID。"

#: ../../library/asyncio-llapi-index.rst:389
msgid ""
":meth:`transport.get_pipe_transport() "
"<SubprocessTransport.get_pipe_transport>`"
msgstr ""
":meth:`transport.get_pipe_transport() "
"<SubprocessTransport.get_pipe_transport>`"

#: ../../library/asyncio-llapi-index.rst:391
msgid ""
"Return the transport for the requested communication pipe (*stdin*, "
"*stdout*, or *stderr*)."
msgstr "返回请求通信管道 (*stdin*, *stdout*, 或 *stderr*)的传输。"

#: ../../library/asyncio-llapi-index.rst:394
msgid ""
":meth:`transport.get_returncode() <SubprocessTransport.get_returncode>`"
msgstr ""
":meth:`transport.get_returncode() <SubprocessTransport.get_returncode>`"

#: ../../library/asyncio-llapi-index.rst:395
msgid "Return the subprocess return code."
msgstr "返回子进程的返回代号。"

#: ../../library/asyncio-llapi-index.rst:397
msgid ":meth:`transport.kill() <SubprocessTransport.kill>`"
msgstr ":meth:`transport.kill() <SubprocessTransport.kill>`"

#: ../../library/asyncio-llapi-index.rst:398
msgid "Kill the subprocess."
msgstr "杀死子进程。"

#: ../../library/asyncio-llapi-index.rst:400
msgid ":meth:`transport.send_signal() <SubprocessTransport.send_signal>`"
msgstr ":meth:`transport.send_signal() <SubprocessTransport.send_signal>`"

#: ../../library/asyncio-llapi-index.rst:401
msgid "Send a signal to the subprocess."
msgstr "发送一个信号到子进程。"

#: ../../library/asyncio-llapi-index.rst:403
msgid ":meth:`transport.terminate() <SubprocessTransport.terminate>`"
msgstr ":meth:`transport.terminate() <SubprocessTransport.terminate>`"

#: ../../library/asyncio-llapi-index.rst:404
msgid "Stop the subprocess."
msgstr "停止子进程。"

#: ../../library/asyncio-llapi-index.rst:406
msgid ":meth:`transport.close() <SubprocessTransport.close>`"
msgstr ":meth:`transport.close() <SubprocessTransport.close>`"

#: ../../library/asyncio-llapi-index.rst:407
msgid "Kill the subprocess and close all pipes."
msgstr "杀死子进程并关闭所有管道。"

#: ../../library/asyncio-llapi-index.rst:411
msgid "Protocols"
msgstr "协议"

#: ../../library/asyncio-llapi-index.rst:413
msgid "Protocol classes can implement the following **callback methods**:"
msgstr "协议类可以由下面 **回调方法** 实现："

#: ../../library/asyncio-llapi-index.rst:419
msgid "``callback`` :meth:`connection_made() <BaseProtocol.connection_made>`"
msgstr "``callback`` :meth:`connection_made() <BaseProtocol.connection_made>`"

#: ../../library/asyncio-llapi-index.rst:420
msgid "Called when a connection is made."
msgstr "连接建立时被调用。"

#: ../../library/asyncio-llapi-index.rst:422
msgid "``callback`` :meth:`connection_lost() <BaseProtocol.connection_lost>`"
msgstr "``callback`` :meth:`connection_lost() <BaseProtocol.connection_lost>`"

#: ../../library/asyncio-llapi-index.rst:423
msgid "Called when the connection is lost or closed."
msgstr "连接丢失或关闭时将被调用。"

#: ../../library/asyncio-llapi-index.rst:425
msgid "``callback`` :meth:`pause_writing() <BaseProtocol.pause_writing>`"
msgstr "``callback`` :meth:`pause_writing() <BaseProtocol.pause_writing>`"

#: ../../library/asyncio-llapi-index.rst:426
msgid "Called when the transport's buffer goes over the high water mark."
msgstr "传输的缓冲区超过高位标记位时被调用。"

#: ../../library/asyncio-llapi-index.rst:428
msgid "``callback`` :meth:`resume_writing() <BaseProtocol.resume_writing>`"
msgstr "``callback`` :meth:`resume_writing() <BaseProtocol.resume_writing>`"

#: ../../library/asyncio-llapi-index.rst:429
msgid "Called when the transport's buffer drains below the low water mark."
msgstr "传输的缓冲区传送到低位标记位时被调用。"

#: ../../library/asyncio-llapi-index.rst:432
msgid "Streaming Protocols (TCP, Unix Sockets, Pipes)"
msgstr "流协议 (TCP, Unix 套接字, 管道)"

#: ../../library/asyncio-llapi-index.rst:437
msgid "``callback`` :meth:`data_received() <Protocol.data_received>`"
msgstr "``callback`` :meth:`data_received() <Protocol.data_received>`"

#: ../../library/asyncio-llapi-index.rst:438
msgid "Called when some data is received."
msgstr "接收到数据时被调用。"

#: ../../library/asyncio-llapi-index.rst:440
msgid "``callback`` :meth:`eof_received() <Protocol.eof_received>`"
msgstr "``callback`` :meth:`eof_received() <Protocol.eof_received>`"

#: ../../library/asyncio-llapi-index.rst:441
#: ../../library/asyncio-llapi-index.rst:456
msgid "Called when an EOF is received."
msgstr "接收到EOF时被调用。"

#: ../../library/asyncio-llapi-index.rst:444
msgid "Buffered Streaming Protocols"
msgstr "缓冲流协议"

#: ../../library/asyncio-llapi-index.rst:449
msgid "``callback`` :meth:`get_buffer() <BufferedProtocol.get_buffer>`"
msgstr "``callback`` :meth:`get_buffer() <BufferedProtocol.get_buffer>`"

#: ../../library/asyncio-llapi-index.rst:450
msgid "Called to allocate a new receive buffer."
msgstr "调用后会分配新的接收缓冲区。"

#: ../../library/asyncio-llapi-index.rst:452
msgid ""
"``callback`` :meth:`buffer_updated() <BufferedProtocol.buffer_updated>`"
msgstr ""
"``callback`` :meth:`buffer_updated() <BufferedProtocol.buffer_updated>`"

#: ../../library/asyncio-llapi-index.rst:453
msgid "Called when the buffer was updated with the received data."
msgstr "用接收的数据更新缓冲区时被调用。"

#: ../../library/asyncio-llapi-index.rst:455
msgid "``callback`` :meth:`eof_received() <BufferedProtocol.eof_received>`"
msgstr "``callback`` :meth:`eof_received() <BufferedProtocol.eof_received>`"

#: ../../library/asyncio-llapi-index.rst:459
msgid "Datagram Protocols"
msgstr "数据报协议"

#: ../../library/asyncio-llapi-index.rst:464
msgid ""
"``callback`` :meth:`datagram_received() "
"<DatagramProtocol.datagram_received>`"
msgstr ""
"``callback`` :meth:`datagram_received() "
"<DatagramProtocol.datagram_received>`"

#: ../../library/asyncio-llapi-index.rst:466
msgid "Called when a datagram is received."
msgstr "接收到数据报时被调用。"

#: ../../library/asyncio-llapi-index.rst:468
msgid ""
"``callback`` :meth:`error_received() <DatagramProtocol.error_received>`"
msgstr ""
"``callback`` :meth:`error_received() <DatagramProtocol.error_received>`"

#: ../../library/asyncio-llapi-index.rst:469
msgid ""
"Called when a previous send or receive operation raises an :class:`OSError`."
msgstr "前一个发送或接收操作引发  :class:`OSError` 时被调用。"

#: ../../library/asyncio-llapi-index.rst:473
msgid "Subprocess Protocols"
msgstr "子进程协议"

#: ../../library/asyncio-llapi-index.rst:478
msgid ""
"``callback`` :meth:`pipe_data_received() "
"<SubprocessProtocol.pipe_data_received>`"
msgstr ""
"``callback`` :meth:`pipe_data_received() "
"<SubprocessProtocol.pipe_data_received>`"

#: ../../library/asyncio-llapi-index.rst:480
msgid ""
"Called when the child process writes data into its *stdout* or *stderr* "
"pipe."
msgstr "子进程向 *stdout* 或 *stderr* 管道写入数据时被调用。"

#: ../../library/asyncio-llapi-index.rst:483
msgid ""
"``callback`` :meth:`pipe_connection_lost() "
"<SubprocessProtocol.pipe_connection_lost>`"
msgstr ""
"``callback`` :meth:`pipe_connection_lost() "
"<SubprocessProtocol.pipe_connection_lost>`"

#: ../../library/asyncio-llapi-index.rst:485
msgid ""
"Called when one of the pipes communicating with the child process is closed."
msgstr "与子进程通信的其中一个管道关闭时被调用。"

#: ../../library/asyncio-llapi-index.rst:488
msgid ""
"``callback`` :meth:`process_exited() <SubprocessProtocol.process_exited>`"
msgstr ""
"``callback`` :meth:`process_exited() <SubprocessProtocol.process_exited>`"

#: ../../library/asyncio-llapi-index.rst:490
msgid "Called when the child process has exited."
msgstr "子进程退出时被调用。"

#: ../../library/asyncio-llapi-index.rst:494
msgid "Event Loop Policies"
msgstr "事件循环策略"

#: ../../library/asyncio-llapi-index.rst:496
msgid ""
"Policies is a low-level mechanism to alter the behavior of functions like "
":func:`asyncio.get_event_loop`.  See also the main :ref:`policies section "
"<asyncio-policies>` for more details."
msgstr ""
"策略是改变 :func:`asyncio.get_event_loop` 这类函数行为的一个底层机制。更多细节可以查阅 :ref:`策略部分 "
"<asyncio-policies>`。"

#: ../../library/asyncio-llapi-index.rst:502
msgid "Accessing Policies"
msgstr "访问策略"

#: ../../library/asyncio-llapi-index.rst:507
msgid ":meth:`asyncio.get_event_loop_policy`"
msgstr ":meth:`asyncio.get_event_loop_policy`"

#: ../../library/asyncio-llapi-index.rst:508
msgid "Return the current process-wide policy."
msgstr "返回当前进程域的策略。"

#: ../../library/asyncio-llapi-index.rst:510
msgid ":meth:`asyncio.set_event_loop_policy`"
msgstr ":meth:`asyncio.set_event_loop_policy`"

#: ../../library/asyncio-llapi-index.rst:511
msgid "Set a new process-wide policy."
msgstr "设置一个新的进程域策略。"

#: ../../library/asyncio-llapi-index.rst:513
msgid ":class:`AbstractEventLoopPolicy`"
msgstr ":class:`AbstractEventLoopPolicy`"

#: ../../library/asyncio-llapi-index.rst:514
msgid "Base class for policy objects."
msgstr "策略对象的基类。"
