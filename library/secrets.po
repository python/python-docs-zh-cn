# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-07-25 16:48+0000\n"
"PO-Revision-Date: 2025-07-18 20:06+0000\n"
"Language-Team: Chinese (China) (https://app.transifex.com/python-doc/teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/secrets.rst:2
msgid ":mod:`secrets` --- Generate secure random numbers for managing secrets"
msgstr ""

#: ../../library/secrets.rst:16
msgid "**Source code:** :source:`Lib/secrets.py`"
msgstr ""

#: ../../library/secrets.rst:20
msgid ""
"The :mod:`secrets` module is used for generating cryptographically strong "
"random numbers suitable for managing data such as passwords, account "
"authentication, security tokens, and related secrets."
msgstr ""

#: ../../library/secrets.rst:24
msgid ""
"In particular, :mod:`secrets` should be used in preference to the default "
"pseudo-random number generator in the :mod:`random` module, which is "
"designed for modelling and simulation, not security or cryptography."
msgstr ""

#: ../../library/secrets.rst:30
msgid ":pep:`506`"
msgstr ""

#: ../../library/secrets.rst:34
msgid "Random numbers"
msgstr ""

#: ../../library/secrets.rst:36
msgid ""
"The :mod:`secrets` module provides access to the most secure source of "
"randomness that your operating system provides."
msgstr ""

#: ../../library/secrets.rst:41
msgid ""
"A class for generating random numbers using the highest-quality sources "
"provided by the operating system.  See :class:`random.SystemRandom` for "
"additional details."
msgstr ""

#: ../../library/secrets.rst:47
msgid "Return a randomly chosen element from a non-empty sequence."
msgstr ""

#: ../../library/secrets.rst:51
msgid "Return a random int in the range [0, *n*)."
msgstr ""

#: ../../library/secrets.rst:55
msgid "Return an int with *k* random bits."
msgstr ""

#: ../../library/secrets.rst:59
msgid "Generating tokens"
msgstr ""

#: ../../library/secrets.rst:61
msgid ""
"The :mod:`secrets` module provides functions for generating secure tokens, "
"suitable for applications such as password resets, hard-to-guess URLs, and "
"similar."
msgstr ""

#: ../../library/secrets.rst:67
msgid ""
"Return a random byte string containing *nbytes* number of bytes. If *nbytes*"
" is ``None`` or not supplied, a reasonable default is used."
msgstr ""

#: ../../library/secrets.rst:79
msgid ""
"Return a random text string, in hexadecimal.  The string has *nbytes* random"
" bytes, each byte converted to two hex digits.  If *nbytes* is ``None`` or "
"not supplied, a reasonable default is used."
msgstr ""

#: ../../library/secrets.rst:90
msgid ""
"Return a random URL-safe text string, containing *nbytes* random bytes.  The"
" text is Base64 encoded, so on average each byte results in approximately "
"1.3 characters.  If *nbytes* is ``None`` or not supplied, a reasonable "
"default is used."
msgstr ""

#: ../../library/secrets.rst:102
msgid "How many bytes should tokens use?"
msgstr ""

#: ../../library/secrets.rst:104
msgid ""
"To be secure against `brute-force attacks "
"<https://en.wikipedia.org/wiki/Brute-force_attack>`_, tokens need to have "
"sufficient randomness.  Unfortunately, what is considered sufficient will "
"necessarily increase as computers get more powerful and able to make more "
"guesses in a shorter period.  As of 2015, it is believed that 32 bytes (256 "
"bits) of randomness is sufficient for the typical use-case expected for the "
":mod:`secrets` module."
msgstr ""

#: ../../library/secrets.rst:112
msgid ""
"For those who want to manage their own token length, you can explicitly "
"specify how much randomness is used for tokens by giving an :class:`int` "
"argument to the various ``token_*`` functions.  That argument is taken as "
"the number of bytes of randomness to use."
msgstr ""

#: ../../library/secrets.rst:117
msgid ""
"Otherwise, if no argument is provided, or if the argument is ``None``, the "
"``token_*`` functions will use a reasonable default instead."
msgstr ""

#: ../../library/secrets.rst:122
msgid ""
"That default is subject to change at any time, including during maintenance "
"releases."
msgstr ""

#: ../../library/secrets.rst:127
msgid "Other functions"
msgstr ""

#: ../../library/secrets.rst:131
msgid ""
"Return ``True`` if strings or :term:`bytes-like objects <bytes-like object>`"
" *a* and *b* are equal, otherwise ``False``, using a \"constant-time "
"compare\" to reduce the risk of `timing attacks "
"<https://codahale.com/a-lesson-in-timing-attacks/>`_. See "
":func:`hmac.compare_digest` for additional details."
msgstr ""

#: ../../library/secrets.rst:140
msgid "Recipes and best practices"
msgstr ""

#: ../../library/secrets.rst:142
msgid ""
"This section shows recipes and best practices for using :mod:`secrets` to "
"manage a basic level of security."
msgstr ""

#: ../../library/secrets.rst:145
msgid "Generate an eight-character alphanumeric password:"
msgstr ""

#: ../../library/secrets.rst:157
msgid ""
"Applications should not `store passwords in a recoverable format "
"<https://cwe.mitre.org/data/definitions/257.html>`_, whether plain text or "
"encrypted.  They should be salted and hashed using a cryptographically "
"strong one-way (irreversible) hash function."
msgstr ""

#: ../../library/secrets.rst:163
msgid ""
"Generate a ten-character alphanumeric password with at least one lowercase "
"character, at least one uppercase character, and at least three digits:"
msgstr ""

#: ../../library/secrets.rst:180
msgid "Generate an `XKCD-style passphrase <https://xkcd.com/936/>`_:"
msgstr ""

#: ../../library/secrets.rst:192
msgid ""
"Generate a hard-to-guess temporary URL containing a security token suitable "
"for password recovery applications:"
msgstr ""
