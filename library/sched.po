# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2025
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-05-08 02:53-0300\n"
"PO-Revision-Date: 2025-07-18 18:49+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2025\n"
"Language-Team: Chinese (China) (https://app.transifex.com/python-doc/teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/sched.rst:2
msgid ":mod:`!sched` --- Event scheduler"
msgstr ":mod:`!sched` --- 事件调度器"

#: ../../library/sched.rst:9
msgid "**Source code:** :source:`Lib/sched.py`"
msgstr "**源码：** :source:`Lib/sched.py`"

#: ../../library/sched.rst:15
msgid ""
"The :mod:`sched` module defines a class which implements a general purpose "
"event scheduler:"
msgstr ":mod:`sched` 模块定义了一个实现通用事件调度程序的类："

#: ../../library/sched.rst:20
msgid ""
"The :class:`scheduler` class defines a generic interface to scheduling "
"events. It needs two functions to actually deal with the \"outside world\" "
"--- *timefunc* should be callable without arguments, and return  a number "
"(the \"time\", in any units whatsoever).  The *delayfunc* function should be"
" callable with one argument, compatible with the output of *timefunc*, and "
"should delay that many time units. *delayfunc* will also be called with the "
"argument ``0`` after each event is run to allow other threads an opportunity"
" to run in multi-threaded applications."
msgstr ""
":class:`scheduler` 类定义了一个调度事件的通用接口。 它需要两个函数来实际处理“外部世界” —— *timefunc* "
"应当不带参数地调用，并返回一个数字（“时间”，可以为任意单位）。 *delayfunc* 函数应当带一个参数调用，与 *timefunc* "
"的输出相兼容，并且应当延迟其所指定的时间单位。 每个事件运行后还将调用 *delayfunc* 并传入参数 ``0`` "
"以允许其他线程有机会在多线程应用中运行。"

#: ../../library/sched.rst:29
msgid "*timefunc* and *delayfunc* parameters are optional."
msgstr "*timefunc* 和 *delayfunc* 参数是可选的。"

#: ../../library/sched.rst:32
msgid ""
":class:`scheduler` class can be safely used in multi-threaded environments."
msgstr ":class:`scheduler` 类可以安全的在多线程环境中使用。"

#: ../../library/sched.rst:36
msgid "Example::"
msgstr "示例::"

#: ../../library/sched.rst:38
msgid ""
">>> import sched, time\n"
">>> s = sched.scheduler(time.time, time.sleep)\n"
">>> def print_time(a='default'):\n"
"...     print(\"From print_time\", time.time(), a)\n"
"...\n"
">>> def print_some_times():\n"
"...     print(time.time())\n"
"...     s.enter(10, 1, print_time)\n"
"...     s.enter(5, 2, print_time, argument=('positional',))\n"
"...     # despite having higher priority, 'keyword' runs after 'positional' as enter() is relative\n"
"...     s.enter(5, 1, print_time, kwargs={'a': 'keyword'})\n"
"...     s.enterabs(1_650_000_000, 10, print_time, argument=(\"first enterabs\",))\n"
"...     s.enterabs(1_650_000_000, 5, print_time, argument=(\"second enterabs\",))\n"
"...     s.run()\n"
"...     print(time.time())\n"
"...\n"
">>> print_some_times()\n"
"1652342830.3640375\n"
"From print_time 1652342830.3642538 second enterabs\n"
"From print_time 1652342830.3643398 first enterabs\n"
"From print_time 1652342835.3694863 positional\n"
"From print_time 1652342835.3696074 keyword\n"
"From print_time 1652342840.369612 default\n"
"1652342840.3697174"
msgstr ""
">>> import sched, time\n"
">>> s = sched.scheduler(time.time, time.sleep)\n"
">>> def print_time(a='default'):\n"
"...     print(\"From print_time\", time.time(), a)\n"
"...\n"
">>> def print_some_times():\n"
"...     print(time.time())\n"
"...     s.enter(10, 1, print_time)\n"
"...     s.enter(5, 2, print_time, argument=('positional',))\n"
"...     # 虽然具有更高的优先级，'keyword' 将在 'positional' 之后运行因为 enter() 是相对的\n"
"...     s.enter(5, 1, print_time, kwargs={'a': 'keyword'})\n"
"...     s.enterabs(1_650_000_000, 10, print_time, argument=(\"first enterabs\",))\n"
"...     s.enterabs(1_650_000_000, 5, print_time, argument=(\"second enterabs\",))\n"
"...     s.run()\n"
"...     print(time.time())\n"
"...\n"
">>> print_some_times()\n"
"1652342830.3640375\n"
"From print_time 1652342830.3642538 second enterabs\n"
"From print_time 1652342830.3643398 first enterabs\n"
"From print_time 1652342835.3694863 positional\n"
"From print_time 1652342835.3696074 keyword\n"
"From print_time 1652342840.369612 default\n"
"1652342840.3697174"

#: ../../library/sched.rst:67
msgid "Scheduler Objects"
msgstr "调度器对象"

#: ../../library/sched.rst:69
msgid ""
":class:`scheduler` instances have the following methods and attributes:"
msgstr ":class:`scheduler` 实例拥有以下方法和属性："

#: ../../library/sched.rst:74
msgid ""
"Schedule a new event. The *time* argument should be a numeric type "
"compatible with the return value of the *timefunc* function passed  to the "
"constructor. Events scheduled for the same *time* will be executed in the "
"order of their *priority*. A lower number represents a higher priority."
msgstr ""
"安排一个新事件。 *time* 参数应该有一个数字类型兼容的返回值，与传递给构造函数的 *timefunc* 函数的返回值兼容。 计划在相同 "
"*time* 的事件将按其 *priority* 的顺序执行。 数字越小表示优先级越高。"

#: ../../library/sched.rst:79
msgid ""
"Executing the event means executing ``action(*argument, **kwargs)``. "
"*argument* is a sequence holding the positional arguments for *action*. "
"*kwargs* is a dictionary holding the keyword arguments for *action*."
msgstr ""
"执行事件意为执行 ``action(*argument, **kwargs)``。 *argument* 是包含有 *action* 的位置参数的序列。"
" *kwargs* 是包含 *action* 的关键字参数的字典。"

#: ../../library/sched.rst:83
msgid ""
"Return value is an event which may be used for later cancellation of the "
"event (see :meth:`cancel`)."
msgstr "返回值是一个事件，可用于以后取消事件（ 参见 :meth:`cancel` ）。"

#: ../../library/sched.rst:86 ../../library/sched.rst:99
msgid "*argument* parameter is optional."
msgstr "*argument* 参数是可选的。"

#: ../../library/sched.rst:89 ../../library/sched.rst:102
msgid "*kwargs* parameter was added."
msgstr "添加了 *kwargs* 形参。"

#: ../../library/sched.rst:95
msgid ""
"Schedule an event for *delay* more time units. Other than the relative time,"
" the other arguments, the effect and the return value are the same as those "
"for :meth:`enterabs`."
msgstr "安排延后 *delay* 时间单位的事件。 除了时间是相对的，其他参数、效果和返回值与 :meth:`enterabs` 相同。"

#: ../../library/sched.rst:107
msgid ""
"Remove the event from the queue. If *event* is not an event currently in the"
" queue, this method will raise a :exc:`ValueError`."
msgstr "从队列中删除事件。 如果 *event* 不是当前队列中的事件，则此方法将引发 :exc:`ValueError`。"

#: ../../library/sched.rst:113
msgid "Return ``True`` if the event queue is empty."
msgstr "如果事件队列为空则返回 ``True``。"

#: ../../library/sched.rst:118
msgid ""
"Run all scheduled events. This method will wait  (using the *delayfunc* "
"function passed to the constructor) for the next event, then execute it and "
"so on until there are no more scheduled events."
msgstr ""
"运行所有计划事件。 此方法将等待（使用传递给构造器的 *delayfunc* 函数）进行下一个事件，然后执行它，依此类推直到没有更多的计划事件。"

#: ../../library/sched.rst:122
msgid ""
"If *blocking* is false executes the scheduled events due to expire soonest "
"(if any) and then return the deadline of the next scheduled call in the "
"scheduler (if any)."
msgstr "如果 *blocking* 为false，则执行最快到期（如果有）的预定事件，然后在调度程序中返回下一个预定调用的截止时间（如果有）。"

#: ../../library/sched.rst:126
msgid ""
"Either *action* or *delayfunc* can raise an exception.  In either case, the "
"scheduler will maintain a consistent state and propagate the exception.  If "
"an exception is raised by *action*, the event will not be attempted in "
"future calls to :meth:`run`."
msgstr ""
"*action* 或 *delayfunc* 都可以引发异常。 在任何一种情况下，调度程序都将保持一致状态并传播异常。 如果 *action* "
"引发异常，则在将来调用 :meth:`run` 时不会尝试该事件。"

#: ../../library/sched.rst:131
msgid ""
"If a sequence of events takes longer to run than the time available before "
"the next event, the scheduler will simply fall behind.  No events will be "
"dropped; the calling code is responsible for canceling  events which are no "
"longer pertinent."
msgstr "如果一系列事件的运行时间大于下一个事件发生前的可用时间，那么调度程序只会保持落后。 没有事件会被丢弃；调用代码负责取消不再相关的事件。"

#: ../../library/sched.rst:136
msgid "*blocking* parameter was added."
msgstr "添加了 *blocking* 形参。"

#: ../../library/sched.rst:141
msgid ""
"Read-only attribute returning a list of upcoming events in the order they "
"will be run.  Each event is shown as a :term:`named tuple` with the "
"following fields:  time, priority, action, argument, kwargs."
msgstr ""
"只读属性，按照计划运行的顺序返回即将发生的事件列表。 每个事件都显示为 :term:`named tuple` "
"，包含以下字段：time、priority、action、argument、kwargs。"

#: ../../library/sched.rst:11
msgid "event scheduling"
msgstr "事件排期"
