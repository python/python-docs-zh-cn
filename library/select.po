# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2025
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.9\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-07-25 19:10+0000\n"
"PO-Revision-Date: 2025-07-18 19:17+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2025\n"
"Language-Team: Chinese (China) (https://app.transifex.com/python-doc/teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/select.rst:2
msgid ":mod:`select` --- Waiting for I/O completion"
msgstr ""

#: ../../library/select.rst:9
msgid ""
"This module provides access to the :c:func:`select` and :c:func:`poll` "
"functions available in most operating systems, :c:func:`devpoll` available "
"on Solaris and derivatives, :c:func:`epoll` available on Linux 2.5+ and "
":c:func:`kqueue` available on most BSD. Note that on Windows, it only works "
"for sockets; on other operating systems, it also works for other file types "
"(in particular, on Unix, it works on pipes). It cannot be used on regular "
"files to determine whether a file has grown since it was last read."
msgstr ""

#: ../../library/select.rst:20
msgid ""
"The :mod:`selectors` module allows high-level and efficient I/O "
"multiplexing, built upon the :mod:`select` module primitives. Users are "
"encouraged to use the :mod:`selectors` module instead, unless they want "
"precise control over the OS-level primitives used."
msgstr ""

#: ../../library/select.rst:26
msgid "The module defines the following:"
msgstr ""

#: ../../library/select.rst:31
msgid "A deprecated alias of :exc:`OSError`."
msgstr ""

#: ../../library/select.rst:33
msgid "Following :pep:`3151`, this class was made an alias of :exc:`OSError`."
msgstr ""

#: ../../library/select.rst:39
msgid ""
"(Only supported on Solaris and derivatives.)  Returns a ``/dev/poll`` "
"polling object; see section :ref:`devpoll-objects` below for the methods "
"supported by devpoll objects."
msgstr ""

#: ../../library/select.rst:43
msgid ""
":c:func:`devpoll` objects are linked to the number of file descriptors "
"allowed at the time of instantiation. If your program reduces this value, "
":c:func:`devpoll` will fail. If your program increases this value, "
":c:func:`devpoll` may return an incomplete list of active file descriptors."
msgstr ""

#: ../../library/select.rst:49 ../../library/select.rst:78
#: ../../library/select.rst:105
msgid "The new file descriptor is :ref:`non-inheritable <fd_inheritance>`."
msgstr ""

#: ../../library/select.rst:53 ../../library/select.rst:107
msgid "The new file descriptor is now non-inheritable."
msgstr ""

#: ../../library/select.rst:58
msgid ""
"(Only supported on Linux 2.5.44 and newer.) Return an edge polling object, "
"which can be used as Edge or Level Triggered interface for I/O events."
msgstr ""

#: ../../library/select.rst:62
msgid ""
"*sizehint* informs epoll about the expected number of events to be "
"registered.  It must be positive, or `-1` to use the default. It is only "
"used on older systems where :c:func:`epoll_create1` is not available; "
"otherwise it has no effect (though its value is still checked)."
msgstr ""

#: ../../library/select.rst:67
msgid ""
"*flags* is deprecated and completely ignored.  However, when supplied, its "
"value must be ``0`` or ``select.EPOLL_CLOEXEC``, otherwise ``OSError`` is "
"raised."
msgstr ""

#: ../../library/select.rst:71
msgid ""
"See the :ref:`epoll-objects` section below for the methods supported by "
"epolling objects."
msgstr ""

#: ../../library/select.rst:74
msgid ""
"``epoll`` objects support the context management protocol: when used in a "
":keyword:`with` statement, the new file descriptor is automatically closed "
"at the end of the block."
msgstr ""

#: ../../library/select.rst:80
msgid "Added the *flags* parameter."
msgstr ""

#: ../../library/select.rst:83
msgid ""
"Support for the :keyword:`with` statement was added. The new file descriptor"
" is now non-inheritable."
msgstr ""

#: ../../library/select.rst:87
msgid ""
"The *flags* parameter.  ``select.EPOLL_CLOEXEC`` is used by default now. Use"
" :func:`os.set_inheritable` to make the file descriptor inheritable."
msgstr ""

#: ../../library/select.rst:94
msgid ""
"(Not supported by all operating systems.)  Returns a polling object, which "
"supports registering and unregistering file descriptors, and then polling "
"them for I/O events; see section :ref:`poll-objects` below for the methods "
"supported by polling objects."
msgstr ""

#: ../../library/select.rst:102
msgid ""
"(Only supported on BSD.)  Returns a kernel queue object; see section "
":ref:`kqueue-objects` below for the methods supported by kqueue objects."
msgstr ""

#: ../../library/select.rst:113
msgid ""
"(Only supported on BSD.)  Returns a kernel event object; see section "
":ref:`kevent-objects` below for the methods supported by kevent objects."
msgstr ""

#: ../../library/select.rst:119
msgid ""
"This is a straightforward interface to the Unix :c:func:`select` system "
"call. The first three arguments are iterables of 'waitable objects': either "
"integers representing file descriptors or objects with a parameterless "
"method named :meth:`~io.IOBase.fileno` returning such an integer:"
msgstr ""

#: ../../library/select.rst:124
msgid "*rlist*: wait until ready for reading"
msgstr ""

#: ../../library/select.rst:125
msgid "*wlist*: wait until ready for writing"
msgstr ""

#: ../../library/select.rst:126
msgid ""
"*xlist*: wait for an \"exceptional condition\" (see the manual page for what"
" your system considers such a condition)"
msgstr ""

#: ../../library/select.rst:129
msgid ""
"Empty iterables are allowed, but acceptance of three empty iterables is "
"platform-dependent. (It is known to work on Unix but not on Windows.)  The "
"optional *timeout* argument specifies a time-out as a floating point number "
"in seconds.  When the *timeout* argument is omitted the function blocks "
"until at least one file descriptor is ready.  A time-out value of zero "
"specifies a poll and never blocks."
msgstr ""

#: ../../library/select.rst:136
msgid ""
"The return value is a triple of lists of objects that are ready: subsets of "
"the first three arguments.  When the time-out is reached without a file "
"descriptor becoming ready, three empty lists are returned."
msgstr ""

#: ../../library/select.rst:144
msgid ""
"Among the acceptable object types in the iterables are Python :term:`file "
"objects <file object>` (e.g. ``sys.stdin``, or objects returned by "
":func:`open` or :func:`os.popen`), socket objects returned by "
":func:`socket.socket`.  You may also define a :dfn:`wrapper` class yourself,"
" as long as it has an appropriate :meth:`~io.IOBase.fileno` method (that "
"really returns a file descriptor, not just a random integer)."
msgstr ""

#: ../../library/select.rst:155
msgid ""
"File objects on Windows are not acceptable, but sockets are.  On Windows, "
"the underlying :c:func:`select` function is provided by the WinSock library,"
" and does not handle file descriptors that don't originate from WinSock."
msgstr ""

#: ../../library/select.rst:160 ../../library/select.rst:266
#: ../../library/select.rst:366 ../../library/select.rst:454
#: ../../library/select.rst:495
msgid ""
"The function is now retried with a recomputed timeout when interrupted by a "
"signal, except if the signal handler raises an exception (see :pep:`475` for"
" the rationale), instead of raising :exc:`InterruptedError`."
msgstr ""

#: ../../library/select.rst:169
msgid ""
"The minimum number of bytes which can be written without blocking to a pipe "
"when the pipe has been reported as ready for writing by "
":func:`~select.select`, :func:`poll` or another interface in this module.  "
"This doesn't apply to other kind of file-like objects such as sockets."
msgstr ""

#: ../../library/select.rst:174
msgid "This value is guaranteed by POSIX to be at least 512."
msgstr ""

#: ../../library/select.rst:177
msgid ":ref:`Availability <availability>`: Unix"
msgstr ""

#: ../../library/select.rst:184
msgid "``/dev/poll`` Polling Objects"
msgstr ""

#: ../../library/select.rst:186
msgid ""
"Solaris and derivatives have ``/dev/poll``. While :c:func:`select` is "
"O(highest file descriptor) and :c:func:`poll` is O(number of file "
"descriptors), ``/dev/poll`` is O(active file descriptors)."
msgstr ""

#: ../../library/select.rst:190
msgid ""
"``/dev/poll`` behaviour is very close to the standard :c:func:`poll` object."
msgstr ""

#: ../../library/select.rst:196
msgid "Close the file descriptor of the polling object."
msgstr ""

#: ../../library/select.rst:203
msgid "``True`` if the polling object is closed."
msgstr ""

#: ../../library/select.rst:210
msgid "Return the file descriptor number of the polling object."
msgstr ""

#: ../../library/select.rst:217 ../../library/select.rst:389
msgid ""
"Register a file descriptor with the polling object.  Future calls to the "
":meth:`poll` method will then check whether the file descriptor has any "
"pending I/O events.  *fd* can be either an integer, or an object with a "
":meth:`~io.IOBase.fileno` method that returns an integer.  File objects "
"implement :meth:`!fileno`, so they can also be used as the argument."
msgstr ""

#: ../../library/select.rst:223
msgid ""
"*eventmask* is an optional bitmask describing the type of events you want to"
" check for. The constants are the same that with :c:func:`poll` object. The "
"default value is a combination of the constants :const:`POLLIN`, "
":const:`POLLPRI`, and :const:`POLLOUT`."
msgstr ""

#: ../../library/select.rst:230
msgid ""
"Registering a file descriptor that's already registered is not an error, but"
" the result is undefined. The appropriate action is to unregister or modify "
"it first. This is an important difference compared with :c:func:`poll`."
msgstr ""

#: ../../library/select.rst:238
msgid ""
"This method does an :meth:`unregister` followed by a :meth:`register`. It is"
" (a bit) more efficient that doing the same explicitly."
msgstr ""

#: ../../library/select.rst:245 ../../library/select.rst:433
msgid ""
"Remove a file descriptor being tracked by a polling object.  Just like the "
":meth:`register` method, *fd* can be an integer or an object with a "
":meth:`~io.IOBase.fileno` method that returns an integer."
msgstr ""

#: ../../library/select.rst:249
msgid ""
"Attempting to remove a file descriptor that was never registered is safely "
"ignored."
msgstr ""

#: ../../library/select.rst:255
msgid ""
"Polls the set of registered file descriptors, and returns a possibly-empty "
"list containing ``(fd, event)`` 2-tuples for the descriptors that have "
"events or errors to report. *fd* is the file descriptor, and *event* is a "
"bitmask with bits set for the reported events for that descriptor --- "
":const:`POLLIN` for waiting input, :const:`POLLOUT` to indicate that the "
"descriptor can be written to, and so forth. An empty list indicates that the"
" call timed out and no file descriptors had any events to report. If "
"*timeout* is given, it specifies the length of time in milliseconds which "
"the system will wait for events before returning. If *timeout* is omitted, "
"-1, or :const:`None`, the call will block until there is an event for this "
"poll object."
msgstr ""

#: ../../library/select.rst:276
msgid "Edge and Level Trigger Polling (epoll) Objects"
msgstr ""

#: ../../library/select.rst:278
msgid "https://linux.die.net/man/4/epoll"
msgstr ""

#: ../../library/select.rst:280
msgid "*eventmask*"
msgstr ""

#: ../../library/select.rst:283 ../../library/select.rst:401
#: ../../library/select.rst:521 ../../library/select.rst:550
#: ../../library/select.rst:581 ../../library/select.rst:589
#: ../../library/select.rst:609 ../../library/select.rst:632
msgid "Constant"
msgstr "常量"

#: ../../library/select.rst:283 ../../library/select.rst:401
#: ../../library/select.rst:521 ../../library/select.rst:550
#: ../../library/select.rst:581 ../../library/select.rst:589
#: ../../library/select.rst:609 ../../library/select.rst:632
msgid "Meaning"
msgstr "含意"

#: ../../library/select.rst:285
msgid ":const:`EPOLLIN`"
msgstr ""

#: ../../library/select.rst:285
msgid "Available for read"
msgstr ""

#: ../../library/select.rst:287
msgid ":const:`EPOLLOUT`"
msgstr ""

#: ../../library/select.rst:287
msgid "Available for write"
msgstr ""

#: ../../library/select.rst:289
msgid ":const:`EPOLLPRI`"
msgstr ""

#: ../../library/select.rst:289
msgid "Urgent data for read"
msgstr ""

#: ../../library/select.rst:291
msgid ":const:`EPOLLERR`"
msgstr ""

#: ../../library/select.rst:291
msgid "Error condition happened on the assoc. fd"
msgstr ""

#: ../../library/select.rst:293
msgid ":const:`EPOLLHUP`"
msgstr ""

#: ../../library/select.rst:293
msgid "Hang up happened on the assoc. fd"
msgstr ""

#: ../../library/select.rst:295
msgid ":const:`EPOLLET`"
msgstr ""

#: ../../library/select.rst:295
msgid "Set Edge Trigger behavior, the default is Level Trigger behavior"
msgstr ""

#: ../../library/select.rst:298
msgid ":const:`EPOLLONESHOT`"
msgstr ""

#: ../../library/select.rst:298
msgid ""
"Set one-shot behavior. After one event is pulled out, the fd is internally "
"disabled"
msgstr ""

#: ../../library/select.rst:301
msgid ":const:`EPOLLEXCLUSIVE`"
msgstr ""

#: ../../library/select.rst:301
msgid ""
"Wake only one epoll object when the associated fd has an event. The default "
"(if this flag is not set) is to wake all epoll objects polling on a fd."
msgstr ""

#: ../../library/select.rst:306
msgid ":const:`EPOLLRDHUP`"
msgstr ""

#: ../../library/select.rst:306
msgid ""
"Stream socket peer closed connection or shut down writing half of "
"connection."
msgstr ""

#: ../../library/select.rst:309
msgid ":const:`EPOLLRDNORM`"
msgstr ""

#: ../../library/select.rst:309
msgid "Equivalent to :const:`EPOLLIN`"
msgstr ""

#: ../../library/select.rst:311
msgid ":const:`EPOLLRDBAND`"
msgstr ""

#: ../../library/select.rst:311
msgid "Priority data band can be read."
msgstr ""

#: ../../library/select.rst:313
msgid ":const:`EPOLLWRNORM`"
msgstr ""

#: ../../library/select.rst:313
msgid "Equivalent to :const:`EPOLLOUT`"
msgstr ""

#: ../../library/select.rst:315
msgid ":const:`EPOLLWRBAND`"
msgstr ""

#: ../../library/select.rst:315
msgid "Priority data may be written."
msgstr ""

#: ../../library/select.rst:317
msgid ":const:`EPOLLMSG`"
msgstr ""

#: ../../library/select.rst:317
msgid "Ignored."
msgstr ""

#: ../../library/select.rst:320
msgid ""
":const:`EPOLLEXCLUSIVE` was added.  It's only supported by Linux Kernel 4.5 "
"or later."
msgstr ""

#: ../../library/select.rst:326
msgid "Close the control file descriptor of the epoll object."
msgstr ""

#: ../../library/select.rst:331
msgid "``True`` if the epoll object is closed."
msgstr ""

#: ../../library/select.rst:336 ../../library/select.rst:478
msgid "Return the file descriptor number of the control fd."
msgstr ""

#: ../../library/select.rst:341
msgid "Create an epoll object from a given file descriptor."
msgstr ""

#: ../../library/select.rst:346
msgid "Register a fd descriptor with the epoll object."
msgstr ""

#: ../../library/select.rst:351
msgid "Modify a registered file descriptor."
msgstr ""

#: ../../library/select.rst:356
msgid "Remove a registered file descriptor from the epoll object."
msgstr ""

#: ../../library/select.rst:358
msgid "The method no longer ignores the :data:`~errno.EBADF` error."
msgstr ""

#: ../../library/select.rst:364
msgid "Wait for events. timeout in seconds (float)"
msgstr ""

#: ../../library/select.rst:376
msgid "Polling Objects"
msgstr ""

#: ../../library/select.rst:378
msgid ""
"The :c:func:`poll` system call, supported on most Unix systems, provides "
"better scalability for network servers that service many, many clients at "
"the same time. :c:func:`poll` scales better because the system call only "
"requires listing the file descriptors of interest, while :c:func:`select` "
"builds a bitmap, turns on bits for the fds of interest, and then afterward "
"the whole bitmap has to be linearly scanned again. :c:func:`select` is "
"O(highest file descriptor), while :c:func:`poll` is O(number of file "
"descriptors)."
msgstr ""

#: ../../library/select.rst:395
msgid ""
"*eventmask* is an optional bitmask describing the type of events you want to"
" check for, and can be a combination of the constants :const:`POLLIN`, "
":const:`POLLPRI`, and :const:`POLLOUT`, described in the table below.  If "
"not specified, the default value used will check for all 3 types of events."
msgstr ""

#: ../../library/select.rst:403
msgid ":const:`POLLIN`"
msgstr ""

#: ../../library/select.rst:403
msgid "There is data to read"
msgstr ""

#: ../../library/select.rst:405
msgid ":const:`POLLPRI`"
msgstr ""

#: ../../library/select.rst:405
msgid "There is urgent data to read"
msgstr ""

#: ../../library/select.rst:407
msgid ":const:`POLLOUT`"
msgstr ""

#: ../../library/select.rst:407
msgid "Ready for output: writing will not block"
msgstr ""

#: ../../library/select.rst:409
msgid ":const:`POLLERR`"
msgstr ""

#: ../../library/select.rst:409
msgid "Error condition of some sort"
msgstr ""

#: ../../library/select.rst:411
msgid ":const:`POLLHUP`"
msgstr ""

#: ../../library/select.rst:411
msgid "Hung up"
msgstr ""

#: ../../library/select.rst:413
msgid ":const:`POLLRDHUP`"
msgstr ""

#: ../../library/select.rst:413
msgid ""
"Stream socket peer closed connection, or shut down writing half of "
"connection"
msgstr ""

#: ../../library/select.rst:416
msgid ":const:`POLLNVAL`"
msgstr ""

#: ../../library/select.rst:416
msgid "Invalid request: descriptor not open"
msgstr ""

#: ../../library/select.rst:419
msgid ""
"Registering a file descriptor that's already registered is not an error, and"
" has the same effect as registering the descriptor exactly once."
msgstr ""

#: ../../library/select.rst:425
msgid ""
"Modifies an already registered fd. This has the same effect as "
"``register(fd, eventmask)``.  Attempting to modify a file descriptor that "
"was never registered causes an :exc:`OSError` exception with errno "
":const:`ENOENT` to be raised."
msgstr ""

#: ../../library/select.rst:437
msgid ""
"Attempting to remove a file descriptor that was never registered causes a "
":exc:`KeyError` exception to be raised."
msgstr ""

#: ../../library/select.rst:443
msgid ""
"Polls the set of registered file descriptors, and returns a possibly-empty "
"list containing ``(fd, event)`` 2-tuples for the descriptors that have "
"events or errors to report. *fd* is the file descriptor, and *event* is a "
"bitmask with bits set for the reported events for that descriptor --- "
":const:`POLLIN` for waiting input, :const:`POLLOUT` to indicate that the "
"descriptor can be written to, and so forth. An empty list indicates that the"
" call timed out and no file descriptors had any events to report. If "
"*timeout* is given, it specifies the length of time in milliseconds which "
"the system will wait for events before returning. If *timeout* is omitted, "
"negative, or :const:`None`, the call will block until there is an event for "
"this poll object."
msgstr ""

#: ../../library/select.rst:464
msgid "Kqueue Objects"
msgstr ""

#: ../../library/select.rst:468
msgid "Close the control file descriptor of the kqueue object."
msgstr ""

#: ../../library/select.rst:473
msgid "``True`` if the kqueue object is closed."
msgstr ""

#: ../../library/select.rst:483
msgid "Create a kqueue object from a given file descriptor."
msgstr ""

#: ../../library/select.rst:488
msgid "Low level interface to kevent"
msgstr ""

#: ../../library/select.rst:490
msgid "changelist must be an iterable of kevent objects or ``None``"
msgstr ""

#: ../../library/select.rst:491
msgid "max_events must be 0 or a positive integer"
msgstr ""

#: ../../library/select.rst:492
msgid ""
"timeout in seconds (floats possible); the default is ``None``, to wait "
"forever"
msgstr ""

#: ../../library/select.rst:505
msgid "Kevent Objects"
msgstr ""

#: ../../library/select.rst:507
msgid "https://www.freebsd.org/cgi/man.cgi?query=kqueue&sektion=2"
msgstr ""

#: ../../library/select.rst:511
msgid ""
"Value used to identify the event. The interpretation depends on the filter "
"but it's usually the file descriptor. In the constructor ident can either be"
" an int or an object with a :meth:`~io.IOBase.fileno` method. kevent stores "
"the integer internally."
msgstr ""

#: ../../library/select.rst:518
msgid "Name of the kernel filter."
msgstr ""

#: ../../library/select.rst:523
msgid ":const:`KQ_FILTER_READ`"
msgstr ""

#: ../../library/select.rst:523
msgid ""
"Takes a descriptor and returns whenever there is data available to read"
msgstr ""

#: ../../library/select.rst:526
msgid ":const:`KQ_FILTER_WRITE`"
msgstr ""

#: ../../library/select.rst:526
msgid ""
"Takes a descriptor and returns whenever there is data available to write"
msgstr ""

#: ../../library/select.rst:529
msgid ":const:`KQ_FILTER_AIO`"
msgstr ""

#: ../../library/select.rst:529
msgid "AIO requests"
msgstr ""

#: ../../library/select.rst:531
msgid ":const:`KQ_FILTER_VNODE`"
msgstr ""

#: ../../library/select.rst:531
msgid ""
"Returns when one or more of the requested events watched in *fflag* occurs"
msgstr ""

#: ../../library/select.rst:534
msgid ":const:`KQ_FILTER_PROC`"
msgstr ""

#: ../../library/select.rst:534
msgid "Watch for events on a process id"
msgstr ""

#: ../../library/select.rst:536
msgid ":const:`KQ_FILTER_NETDEV`"
msgstr ""

#: ../../library/select.rst:536
msgid "Watch for events on a network device [not available on macOS]"
msgstr ""

#: ../../library/select.rst:539
msgid ":const:`KQ_FILTER_SIGNAL`"
msgstr ""

#: ../../library/select.rst:539
msgid "Returns whenever the watched signal is delivered to the process"
msgstr ""

#: ../../library/select.rst:542
msgid ":const:`KQ_FILTER_TIMER`"
msgstr ""

#: ../../library/select.rst:542
msgid "Establishes an arbitrary timer"
msgstr ""

#: ../../library/select.rst:547
msgid "Filter action."
msgstr ""

#: ../../library/select.rst:552
msgid ":const:`KQ_EV_ADD`"
msgstr ""

#: ../../library/select.rst:552
msgid "Adds or modifies an event"
msgstr ""

#: ../../library/select.rst:554
msgid ":const:`KQ_EV_DELETE`"
msgstr ""

#: ../../library/select.rst:554
msgid "Removes an event from the queue"
msgstr ""

#: ../../library/select.rst:556
msgid ":const:`KQ_EV_ENABLE`"
msgstr ""

#: ../../library/select.rst:556
msgid "Permitscontrol() to returns the event"
msgstr ""

#: ../../library/select.rst:558
msgid ":const:`KQ_EV_DISABLE`"
msgstr ""

#: ../../library/select.rst:558
msgid "Disablesevent"
msgstr ""

#: ../../library/select.rst:560
msgid ":const:`KQ_EV_ONESHOT`"
msgstr ""

#: ../../library/select.rst:560
msgid "Removes event after first occurrence"
msgstr ""

#: ../../library/select.rst:562
msgid ":const:`KQ_EV_CLEAR`"
msgstr ""

#: ../../library/select.rst:562
msgid "Reset the state after an event is retrieved"
msgstr ""

#: ../../library/select.rst:564
msgid ":const:`KQ_EV_SYSFLAGS`"
msgstr ""

#: ../../library/select.rst:564 ../../library/select.rst:566
msgid "internal event"
msgstr ""

#: ../../library/select.rst:566
msgid ":const:`KQ_EV_FLAG1`"
msgstr ""

#: ../../library/select.rst:568
msgid ":const:`KQ_EV_EOF`"
msgstr ""

#: ../../library/select.rst:568
msgid "Filter specific EOF condition"
msgstr ""

#: ../../library/select.rst:570
msgid ":const:`KQ_EV_ERROR`"
msgstr ""

#: ../../library/select.rst:570
msgid "See return values"
msgstr ""

#: ../../library/select.rst:576
msgid "Filter specific flags."
msgstr ""

#: ../../library/select.rst:578
msgid ":const:`KQ_FILTER_READ` and  :const:`KQ_FILTER_WRITE` filter flags:"
msgstr ""

#: ../../library/select.rst:583
msgid ":const:`KQ_NOTE_LOWAT`"
msgstr ""

#: ../../library/select.rst:583
msgid "low water mark of a socket buffer"
msgstr ""

#: ../../library/select.rst:586
msgid ":const:`KQ_FILTER_VNODE` filter flags:"
msgstr ""

#: ../../library/select.rst:591
msgid ":const:`KQ_NOTE_DELETE`"
msgstr ""

#: ../../library/select.rst:591
msgid "*unlink()* was called"
msgstr ""

#: ../../library/select.rst:593
msgid ":const:`KQ_NOTE_WRITE`"
msgstr ""

#: ../../library/select.rst:593
msgid "a write occurred"
msgstr ""

#: ../../library/select.rst:595
msgid ":const:`KQ_NOTE_EXTEND`"
msgstr ""

#: ../../library/select.rst:595
msgid "the file was extended"
msgstr ""

#: ../../library/select.rst:597
msgid ":const:`KQ_NOTE_ATTRIB`"
msgstr ""

#: ../../library/select.rst:597
msgid "an attribute was changed"
msgstr ""

#: ../../library/select.rst:599
msgid ":const:`KQ_NOTE_LINK`"
msgstr ""

#: ../../library/select.rst:599
msgid "the link count has changed"
msgstr ""

#: ../../library/select.rst:601
msgid ":const:`KQ_NOTE_RENAME`"
msgstr ""

#: ../../library/select.rst:601
msgid "the file was renamed"
msgstr ""

#: ../../library/select.rst:603
msgid ":const:`KQ_NOTE_REVOKE`"
msgstr ""

#: ../../library/select.rst:603
msgid "access to the file was revoked"
msgstr ""

#: ../../library/select.rst:606
msgid ":const:`KQ_FILTER_PROC` filter flags:"
msgstr ""

#: ../../library/select.rst:611
msgid ":const:`KQ_NOTE_EXIT`"
msgstr ""

#: ../../library/select.rst:611
msgid "the process has exited"
msgstr ""

#: ../../library/select.rst:613
msgid ":const:`KQ_NOTE_FORK`"
msgstr ""

#: ../../library/select.rst:613
msgid "the process has called *fork()*"
msgstr ""

#: ../../library/select.rst:615
msgid ":const:`KQ_NOTE_EXEC`"
msgstr ""

#: ../../library/select.rst:615
msgid "the process has executed a new process"
msgstr ""

#: ../../library/select.rst:617
msgid ":const:`KQ_NOTE_PCTRLMASK`"
msgstr ""

#: ../../library/select.rst:617 ../../library/select.rst:619
msgid "internal filter flag"
msgstr ""

#: ../../library/select.rst:619
msgid ":const:`KQ_NOTE_PDATAMASK`"
msgstr ""

#: ../../library/select.rst:621
msgid ":const:`KQ_NOTE_TRACK`"
msgstr ""

#: ../../library/select.rst:621
msgid "follow a process across *fork()*"
msgstr ""

#: ../../library/select.rst:623
msgid ":const:`KQ_NOTE_CHILD`"
msgstr ""

#: ../../library/select.rst:623
msgid "returned on the child process for *NOTE_TRACK*"
msgstr ""

#: ../../library/select.rst:626
msgid ":const:`KQ_NOTE_TRACKERR`"
msgstr ""

#: ../../library/select.rst:626
msgid "unable to attach to a child"
msgstr ""

#: ../../library/select.rst:629
msgid ":const:`KQ_FILTER_NETDEV` filter flags (not available on macOS):"
msgstr ""

#: ../../library/select.rst:634
msgid ":const:`KQ_NOTE_LINKUP`"
msgstr ""

#: ../../library/select.rst:634
msgid "link is up"
msgstr ""

#: ../../library/select.rst:636
msgid ":const:`KQ_NOTE_LINKDOWN`"
msgstr ""

#: ../../library/select.rst:636
msgid "link is down"
msgstr ""

#: ../../library/select.rst:638
msgid ":const:`KQ_NOTE_LINKINV`"
msgstr ""

#: ../../library/select.rst:638
msgid "link state is invalid"
msgstr ""

#: ../../library/select.rst:644
msgid "Filter specific data."
msgstr ""

#: ../../library/select.rst:649
msgid "User defined value."
msgstr ""
