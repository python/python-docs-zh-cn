# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2025
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-05-09 14:19+0000\n"
"PO-Revision-Date: 2025-07-18 18:49+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2025\n"
"Language-Team: Chinese (China) (https://app.transifex.com/python-doc/teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/idle.rst:4
msgid "IDLE --- Python editor and shell"
msgstr "IDLE --- Python 编辑器和 shell"

#: ../../library/idle.rst:8
msgid "**Source code:** :source:`Lib/idlelib/`"
msgstr "**源代码：** :source:`Lib/idlelib/`"

#: ../../library/idle.rst:20
msgid "IDLE is Python's Integrated Development and Learning Environment."
msgstr "IDLE 是 Python 所内置的开发与学习环境。"

#: ../../library/idle.rst:22
msgid "IDLE has the following features:"
msgstr "IDLE 具有以下特性："

#: ../../library/idle.rst:24
msgid "cross-platform: works mostly the same on Windows, Unix, and macOS"
msgstr "跨平台：在 Windows、Unix 和 macOS 上工作近似。"

#: ../../library/idle.rst:26
msgid ""
"Python shell window (interactive interpreter) with colorizing of code input,"
" output, and error messages"
msgstr "提供输入输出高亮和错误信息的 Python 命令行窗口 （交互解释器）"

#: ../../library/idle.rst:29
msgid ""
"multi-window text editor with multiple undo, Python colorizing, smart "
"indent, call tips, auto completion, and other features"
msgstr "提供多次撤销操作、Python 语法高亮、智能缩进、函数调用提示、自动补全等功能的多窗口文本编辑器"

#: ../../library/idle.rst:32
msgid ""
"search within any window, replace within editor windows, and search through "
"multiple files (grep)"
msgstr "在多个窗口中检索，在编辑器中替换文本，以及在多个文件中检索（通过 grep）"

#: ../../library/idle.rst:35
msgid ""
"debugger with persistent breakpoints, stepping, and viewing of global and "
"local namespaces"
msgstr "提供持久保存的断点调试、单步调试、查看本地和全局命名空间功能的调试器"

#: ../../library/idle.rst:38
msgid "configuration, browsers, and other dialogs"
msgstr "配置、浏览以及其它对话框"

#: ../../library/idle.rst:41
msgid "Menus"
msgstr "目录"

#: ../../library/idle.rst:43
msgid ""
"IDLE has two main window types, the Shell window and the Editor window.  It "
"is possible to have multiple editor windows simultaneously.  On Windows and "
"Linux, each has its own top menu.  Each menu documented below indicates "
"which window type it is associated with."
msgstr ""
"IDEL 有两种主要的窗口类型：Shell窗口和编辑器窗口。其中编辑器窗口可以同时打开多个。并且对于 Windows 和 Linux "
"平台，窗口顶部主菜单各不相同。以下每个菜单说明项，都标识了与之关联的平台类型。"

#: ../../library/idle.rst:48
msgid ""
"Output windows, such as used for Edit => Find in Files, are a subtype of "
"editor window.  They currently have the same top menu but a different "
"default title and context menu."
msgstr "导出窗口，例如使用 编辑=>在文件中查找 是编辑器窗口的的一个子类型。它们目前有着相同的主菜单，但是默认标题和上下文菜单不同。"

#: ../../library/idle.rst:52
msgid ""
"On macOS, there is one application menu.  It dynamically changes according "
"to the window currently selected.  It has an IDLE menu, and some entries "
"described below are moved around to conform to Apple guidelines."
msgstr ""
"在macOS上，只有一个应用程序菜单。它会根据当前选择的窗口动态变化。它具有一个IDLE菜单，并且下面描述的某些条目已移动到符合Apple准则的位置。"

#: ../../library/idle.rst:57
msgid "File menu (Shell and Editor)"
msgstr "文件菜单 （命令行和编辑器）"

#: ../../library/idle.rst:59
msgid "New File"
msgstr "新建文件"

#: ../../library/idle.rst:60
msgid "Create a new file editing window."
msgstr "创建一个文件编辑器窗口。"

#: ../../library/idle.rst:62
msgid "Open..."
msgstr "打开..."

#: ../../library/idle.rst:63
msgid "Open an existing file with an Open dialog."
msgstr "使用打开窗口以打开一个已存在的文件。"

#: ../../library/idle.rst:65
msgid "Open Module..."
msgstr "打开模块..."

#: ../../library/idle.rst:66
msgid "Open an existing module (searches sys.path)."
msgstr "打开一个已存在的模块 （搜索 sys.path）"

#: ../../library/idle.rst:68
msgid "Recent Files"
msgstr "近期文件"

#: ../../library/idle.rst:69
msgid "Open a list of recent files.  Click one to open it."
msgstr "打开一个近期文件列表，选取一个以打开它。"

#: ../../library/idle.rst:75
msgid "Module Browser"
msgstr "模块浏览器"

#: ../../library/idle.rst:76
msgid ""
"Show functions, classes, and methods in the current Editor file in a tree "
"structure.  In the shell, open a module first."
msgstr "于当前所编辑的文件中使用树形结构展示函数、类以及方法。在命令行中，首先打开一个模块。"

#: ../../library/idle.rst:79
msgid "Path Browser"
msgstr "路径浏览"

#: ../../library/idle.rst:80
msgid ""
"Show sys.path directories, modules, functions, classes and methods in a tree"
" structure."
msgstr "在树状结构中展示 sys.path 目录、模块、函数、类和方法。"

#: ../../library/idle.rst:83
msgid "Save"
msgstr "保存"

#: ../../library/idle.rst:84
msgid ""
"Save the current window to the associated file, if there is one.  Windows "
"that have been changed since being opened or last saved have a \\* before "
"and after the window title.  If there is no associated file, do Save As "
"instead."
msgstr ""
"如果文件已经存在，则将当前窗口保存至对应的文件。自打开或上次保存之后经过修改的文件的窗口标题栏首尾将出现星号 \\* "
"。如果没有对应的文件，则使用“另存为”代替。"

#: ../../library/idle.rst:89
msgid "Save As..."
msgstr "保存为..."

#: ../../library/idle.rst:90
msgid ""
"Save the current window with a Save As dialog.  The file saved becomes the "
"new associated file for the window. (If your file namager is set to hide "
"extensions, the current extension will be omitted in the file name box. If "
"the new filename has no '.', '.py' and '.txt' will be added for Python and "
"text files, except that on macOS Aqua,'.py' is added for all files.)"
msgstr ""
"通过 Save As 对话框保存当前窗口。 被保存的文件将成为关联到该窗口的新文件。 "
"（如果你的文件管理器被设为隐藏扩展名，则当前扩展名将在文件名文本框中被省略。 如果新的文件名不带 '.'，则将为 Python 和文本文件添加 "
"'.py' 和 '.txt'，除非是在 macOS Aqua, 上，这时将为所有文件添加 '.py'。）"

#: ../../library/idle.rst:96
msgid "Save Copy As..."
msgstr "另存为副本..."

#: ../../library/idle.rst:97
msgid ""
"Save the current window to different file without changing the associated "
"file.  (See Save As note above about filename extensions.)"
msgstr "将当前窗口保存到不同的文件而不改变已关联的文件。 （请参阅上文 Save As 中有关文件扩展名的说明。）"

#: ../../library/idle.rst:100
msgid "Print Window"
msgstr "打印窗口"

#: ../../library/idle.rst:101
msgid "Print the current window to the default printer."
msgstr "通过默认打印机打印当前窗口。"

#: ../../library/idle.rst:103
msgid "Close Window"
msgstr "关闭窗口"

#: ../../library/idle.rst:104
msgid ""
"Close the current window (if an unsaved editor, ask to save; if an unsaved "
"Shell, ask to quit execution).  Calling ``exit()`` or ``close()`` in the "
"Shell window also closes Shell.  If this is the only window, also exit IDLE."
msgstr ""
"关闭当前窗口（如果是未保存的编辑器窗口，则会提示保存；如果是未保存的 Shell 窗口，则会提示退出执行）。 在Shell 窗口中调用 "
"``exit()`` 或 ``close()`` 也会关闭 Shell 窗口。 如果这是唯一的窗口，则还会退出 IDLE。"

#: ../../library/idle.rst:108
msgid "Exit IDLE"
msgstr "退出 IDLE"

#: ../../library/idle.rst:109
msgid "Close all windows and quit IDLE (ask to save unsaved edit windows)."
msgstr "关闭所有窗口并退出 IDLE (将提示保存未保存的编辑窗口）。"

#: ../../library/idle.rst:112
msgid "Edit menu (Shell and Editor)"
msgstr "编辑菜单（命令行和编辑器）"

#: ../../library/idle.rst:114
msgid "Undo"
msgstr "撤销操作"

#: ../../library/idle.rst:115
msgid ""
"Undo the last change to the current window.  A maximum of 1000 changes may "
"be undone."
msgstr "撤销当前窗口的最近一次操作。最高可以撤回 1000 条操作记录。"

#: ../../library/idle.rst:118
msgid "Redo"
msgstr "重做"

#: ../../library/idle.rst:119
msgid "Redo the last undone change to the current window."
msgstr "重做当前窗口最近一次所撤销的操作。"

#: ../../library/idle.rst:121
msgid "Select All"
msgstr "全选"

#: ../../library/idle.rst:122
msgid "Select the entire contents of the current window."
msgstr "选择当前窗口的全部内容。"

#: ../../library/idle.rst:124 ../../library/idle.rst:356
#: ../../library/idle.rst:370
msgid "Cut"
msgstr "剪切"

#: ../../library/idle.rst:125 ../../library/idle.rst:371
msgid ""
"Copy selection into the system-wide clipboard; then delete the selection."
msgstr "复制选区至系统剪贴板，然后删除选区。"

#: ../../library/idle.rst:127 ../../library/idle.rst:356
#: ../../library/idle.rst:373
msgid "Copy"
msgstr "复制"

#: ../../library/idle.rst:128 ../../library/idle.rst:374
msgid "Copy selection into the system-wide clipboard."
msgstr "复制选区至系统剪贴板。"

#: ../../library/idle.rst:130 ../../library/idle.rst:356
#: ../../library/idle.rst:376
msgid "Paste"
msgstr "粘贴"

#: ../../library/idle.rst:131 ../../library/idle.rst:377
msgid "Insert contents of the system-wide clipboard into the current window."
msgstr "插入系统剪贴板的内容至当前窗口。"

#: ../../library/idle.rst:133
msgid "The clipboard functions are also available in context menus."
msgstr "剪贴板功能也可用于上下文目录。"

#: ../../library/idle.rst:135
msgid "Find..."
msgstr "查找..."

#: ../../library/idle.rst:136
msgid "Open a search dialog with many options"
msgstr "打开一个提供多选项的查找窗口。"

#: ../../library/idle.rst:138
msgid "Find Again"
msgstr "再次查找"

#: ../../library/idle.rst:139
msgid "Repeat the last search, if there is one."
msgstr "重复上一次搜索（如果有的话）。"

#: ../../library/idle.rst:141
msgid "Find Selection"
msgstr "查找选区"

#: ../../library/idle.rst:142
msgid "Search for the currently selected string, if there is one."
msgstr "查找当前选中的字符串，如果存在"

#: ../../library/idle.rst:144
msgid "Find in Files..."
msgstr "在文件中查找..."

#: ../../library/idle.rst:145
msgid "Open a file search dialog.  Put results in a new output window."
msgstr "打开文件查找对话框。将结果输出至新的输出窗口。"

#: ../../library/idle.rst:147
msgid "Replace..."
msgstr "替换..."

#: ../../library/idle.rst:148
msgid "Open a search-and-replace dialog."
msgstr "打开 查找并替换 对话框。"

#: ../../library/idle.rst:150
msgid "Go to Line"
msgstr "前往行"

#: ../../library/idle.rst:151
msgid ""
"Move the cursor to the beginning of the line requested and make that line "
"visible.  A request past the end of the file goes to the end. Clear any "
"selection and update the line and column status."
msgstr "将光标移到所请求行的开头并使该行可见。 对于超过文件尾的请求将会移到文件尾。 清除所有选区并更新行列状态。"

#: ../../library/idle.rst:155
msgid "Show Completions"
msgstr "显示补全信息"

#: ../../library/idle.rst:156
msgid ""
"Open a scrollable list allowing selection of existing names. See "
":ref:`Completions <completions>` in the Editing and navigation section "
"below."
msgstr "打开一个可滚动列表以允许选择现有的名称。 请参阅下面编辑与导航一节中的 :ref:`自动补全 <completions>`。"

#: ../../library/idle.rst:159
msgid "Expand Word"
msgstr "展开文本"

#: ../../library/idle.rst:160
msgid ""
"Expand a prefix you have typed to match a full word in the same window; "
"repeat to get a different expansion."
msgstr "展开键入的前缀以匹配同一窗口中的完整单词；重复以获得不同的扩展。"

#: ../../library/idle.rst:163
msgid "Show Call Tip"
msgstr "显示调用提示"

#: ../../library/idle.rst:164
msgid ""
"After an unclosed parenthesis for a function, open a small window with "
"function parameter hints.  See :ref:`Calltips <calltips>` in the Editing and"
" navigation section below."
msgstr "在函数的右括号后，打开一个带有函数参数提示的小窗口。 请参阅下面的“编辑和导航”部分中的 :ref:`调用提示 <calltips>`。"

#: ../../library/idle.rst:168
msgid "Show Surrounding Parens"
msgstr "显示周围括号"

#: ../../library/idle.rst:169
msgid "Highlight the surrounding parenthesis."
msgstr "突出显示周围的括号。"

#: ../../library/idle.rst:174
msgid "Format menu (Editor window only)"
msgstr "格式菜单（仅 window 编辑器）"

#: ../../library/idle.rst:176
msgid "Format Paragraph"
msgstr "格式段落"

#: ../../library/idle.rst:177
msgid ""
"Reformat the current blank-line-delimited paragraph in comment block or "
"multiline string or selected line in a string.  All lines in the paragraph "
"will be formatted to less than N columns, where N defaults to 72."
msgstr "在注释块或多行字符串或字符串中的选定行中，重新格式化当前以空行分隔的段落。段落中的所有行的格式都将少于N列，其中N默认为72。"

#: ../../library/idle.rst:181
msgid "Indent Region"
msgstr "增加缩进"

#: ../../library/idle.rst:182
msgid "Shift selected lines right by the indent width (default 4 spaces)."
msgstr "将选定的行右缩进（默认为4个空格）。"

#: ../../library/idle.rst:184
msgid "Dedent Region"
msgstr "减少缩进"

#: ../../library/idle.rst:185
msgid "Shift selected lines left by the indent width (default 4 spaces)."
msgstr "将选定的行左缩进（默认为4个空格）。"

#: ../../library/idle.rst:187
msgid "Comment Out Region"
msgstr "注释"

#: ../../library/idle.rst:188
msgid "Insert ## in front of selected lines."
msgstr "在所选行的前面插入 ##。"

#: ../../library/idle.rst:190
msgid "Uncomment Region"
msgstr "取消注释"

#: ../../library/idle.rst:191
msgid "Remove leading # or ## from selected lines."
msgstr "从所选行中删除开头的 ＃ 或 ##。"

#: ../../library/idle.rst:193
msgid "Tabify Region"
msgstr "制表符化"

#: ../../library/idle.rst:194
msgid ""
"Turn *leading* stretches of spaces into tabs. (Note: We recommend using 4 "
"space blocks to indent Python code.)"
msgstr "将 *前导* 空格变成制表符。 （注意：我们建议使用4个空格来缩进Python代码。）"

#: ../../library/idle.rst:197
msgid "Untabify Region"
msgstr "取消制表符化"

#: ../../library/idle.rst:198
msgid "Turn *all* tabs into the correct number of spaces."
msgstr "将 *所有* 制表符转换为正确的空格数。"

#: ../../library/idle.rst:200
msgid "Toggle Tabs"
msgstr "缩进方式切换"

#: ../../library/idle.rst:201
msgid "Open a dialog to switch between indenting with spaces and tabs."
msgstr "打开一个对话框，以在制表符和空格之间切换。"

#: ../../library/idle.rst:203
msgid "New Indent Width"
msgstr "缩进宽度调整"

#: ../../library/idle.rst:204
msgid ""
"Open a dialog to change indent width. The accepted default by the Python "
"community is 4 spaces."
msgstr "打开一个对话框以更改缩进宽度。 Python社区接受的默认值为4个空格。"

#: ../../library/idle.rst:207
msgid "Strip Trailing Chitespace"
msgstr "去除尾随空格"

#: ../../library/idle.rst:208
msgid ""
"Remove trailing space and other whitespace characters after the last non-"
"whitespace character of a line by applying str.rstrip to each line, "
"including lines within multiline strings.  Except for Shell windows, remove "
"extra newlines at the end of the file."
msgstr ""
"通过将 str.rstrip "
"应用于每行（包括多行字符串中的行），删除行尾非空白字符之后的尾随空格和其他空白字符。除Shell窗口外，在文件末尾删除多余的换行符。"

#: ../../library/idle.rst:217
msgid "Run menu (Editor window only)"
msgstr "运行菜单（仅 window 编辑器）"

#: ../../library/idle.rst:221
msgid "Run Module"
msgstr "运行模块"

#: ../../library/idle.rst:222
msgid ""
"Do :ref:`Check Module <check-module>`.  If no error, restart the shell to "
"clean the environment, then execute the module.  Output is displayed in the "
"Shell window.  Note that output requires use of ``print`` or ``write``. When"
" execution is complete, the Shell retains focus and displays a prompt. At "
"this point, one may interactively explore the result of execution. This is "
"similar to executing a file with ``python -i file`` at a command line."
msgstr ""
"执行 :ref:`检查模块 <check-module>` 。如果没有错误，重新启动 shell 以清理环境，然后执行模块。输出显示在 shell "
"窗口中。请注意，输出需要使用 “打印” 或 “写入”。执行完成后，Shell "
"将保留焦点并显示提示。此时，可以交互地探索执行的结果。这类似于在命令行执行带有 ``python -i file`` 的文件。"

#: ../../library/idle.rst:232
msgid "Run... Customized"
msgstr "运行... 定制"

#: ../../library/idle.rst:233
msgid ""
"Same as :ref:`Run Module <run-module>`, but run the module with customized "
"settings.  *Command Line Arguments* extend :data:`sys.argv` as if passed on "
"a command line. The module can be run in the Shell without restarting."
msgstr ""
"与 :ref:`运行模块 <run-module>` 相同，但使用自定义设置运行该模块。*命令行参数* 扩展 :data:`sys.argv` "
"，就像在命令行上传递一样。该模块可以在命令行管理程序中运行，而无需重新启动。"

#: ../../library/idle.rst:239
msgid "Check Module"
msgstr "检查模块"

#: ../../library/idle.rst:240
msgid ""
"Check the syntax of the module currently open in the Editor window. If the "
"module has not been saved IDLE will either prompt the user to save or "
"autosave, as selected in the General tab of the Idle Settings dialog.  If "
"there is a syntax error, the approximate location is indicated in the Editor"
" window."
msgstr ""
"检查 “编辑器” 窗口中当前打开的模块的语法。如果尚未保存该模块，则 IDLE会提示用户保存或自动保存，如在 “空闲设置” 对话框的 “常规” "
"选项卡中所选择的那样。如果存在语法错误，则会在 “编辑器” 窗口中指示大概位置。"

#: ../../library/idle.rst:248
msgid "Python Shell"
msgstr "Python Shell"

#: ../../library/idle.rst:249
msgid "Open or wake up the Python Shell window."
msgstr "打开或唤醒Python Shell窗口。"

#: ../../library/idle.rst:253
msgid "Shell menu (Shell window only)"
msgstr "Shell 菜单（仅限 Shell 窗口）"

#: ../../library/idle.rst:255
msgid "View Last Restart"
msgstr "查看最近重启"

#: ../../library/idle.rst:256
msgid "Scroll the shell window to the last Shell restart."
msgstr "将Shell窗口滚动到上一次Shell重启。"

#: ../../library/idle.rst:258
msgid "Restart Shell"
msgstr "重启Shell"

#: ../../library/idle.rst:259
msgid ""
"Restart the shell to clean the environment and reset display and exception "
"handling."
msgstr "重启 shell 以清理环境，重置显示和异常处理。"

#: ../../library/idle.rst:261
msgid "Previous History"
msgstr "上一条历史记录"

#: ../../library/idle.rst:262
msgid ""
"Cycle through earlier commands in history which match the current entry."
msgstr "循环浏览历史记录中与当前条目匹配的早期命令。"

#: ../../library/idle.rst:264
msgid "Next History"
msgstr "下一条历史记录"

#: ../../library/idle.rst:265
msgid "Cycle through later commands in history which match the current entry."
msgstr "循环浏览历史记录中与当前条目匹配的后续命令。"

#: ../../library/idle.rst:267
msgid "Interrupt Execution"
msgstr "中断执行"

#: ../../library/idle.rst:268
msgid "Stop a running program."
msgstr "停止正在运行的程序。"

#: ../../library/idle.rst:271
msgid "Debug menu (Shell window only)"
msgstr "调试菜单（仅限 Shell 窗口）"

#: ../../library/idle.rst:273
msgid "Go to File/Line"
msgstr "跳转到文件/行"

#: ../../library/idle.rst:274
msgid ""
"Look on the current line. with the cursor, and the line above for a filename"
" and line number.  If found, open the file if not already open, and show the"
" line.  Use this to view source lines referenced in an exception traceback "
"and lines found by Find in Files. Also available in the context menu of the "
"Shell window and Output windows."
msgstr ""
"查看当前行。 以光标提示，且上一行为文件名和行号。 如果找到目标，如果文件尚未打开则打开该文件，并显示目标行。 "
"使用此菜单项来查看异常回溯中引用的源代码行以及用文件中查找功能找到的行。 也可在 Shell 窗口和 Output 窗口的上下文菜单中使用。"

#: ../../library/idle.rst:284
msgid "Debugger (toggle)"
msgstr "调试器（切换）"

#: ../../library/idle.rst:285
msgid ""
"When activated, code entered in the Shell or run from an Editor will run "
"under the debugger.  In the Editor, breakpoints can be set with the context "
"menu.  This feature is still incomplete and somewhat experimental."
msgstr "激活后，在Shell中输入的代码或从编辑器中运行的代码将在调试器下运行。在编辑器中，可以使用上下文菜单设置断点。此功能不完整，具有实验性。"

#: ../../library/idle.rst:289
msgid "Stack Viewer"
msgstr "堆栈查看器"

#: ../../library/idle.rst:290
msgid ""
"Show the stack traceback of the last exception in a tree widget, with access"
" to locals and globals."
msgstr "在树状目录中显示最后一个异常的堆栈回溯，可以访问本地和全局。"

#: ../../library/idle.rst:293
msgid "Auto-open Stack Viewer"
msgstr "自动打开堆栈查看器"

#: ../../library/idle.rst:294
msgid ""
"Toggle automatically opening the stack viewer on an unhandled exception."
msgstr "在未处理的异常上切换自动打开堆栈查看器。"

#: ../../library/idle.rst:297
msgid "Options menu (Shell and Editor)"
msgstr "选项菜单（命令行和编辑器）"

#: ../../library/idle.rst:299
msgid "Configure IDLE"
msgstr "配置 IDLE"

#: ../../library/idle.rst:300
msgid ""
"Open a configuration dialog and change preferences for the following: fonts,"
" indentation, keybindings, text color themes, startup windows and size, "
"additional help sources, and extensions.  On macOS, open the configuration "
"dialog by selecting Preferences in the application menu. For more details, "
"see :ref:`Setting preferences <preferences>` under Help and preferences."
msgstr ""
"打开配置对话框并更改以下各项的首选项：字体、缩进、键绑定、文本颜色主题、启动窗口和大小、其他帮助源和扩展名。在MacOS上，通过在应用程序菜单中选择首选项来打开配置对话框。有关详细信息，请参阅：帮助和首选项下的"
" :ref:`首选项设置 <preferences>`。"

#: ../../library/idle.rst:307
msgid ""
"Most configuration options apply to all windows or all future windows. The "
"option items below only apply to the active window."
msgstr "大多数配置选项适用于所有窗口或将来的所有窗口。以下选项仅适用于活动窗口。"

#: ../../library/idle.rst:310
msgid "Show/Hide Code Context (Editor Window only)"
msgstr "显示/隐藏代码上下文（仅限编辑器窗口）"

#: ../../library/idle.rst:311
msgid ""
"Open a pane at the top of the edit window which shows the block context of "
"the code which has scrolled above the top of the window.  See :ref:`Code "
"Context <code-context>` in the Editing and Navigation section below."
msgstr ""
"在编辑窗口顶部打开一个面板来显示在窗口顶部滚动的代码块上下文。 请参阅下文“编辑与导航”章节中的 :ref:`代码上下文 <code-"
"context>`。"

#: ../../library/idle.rst:316
msgid "Show/Hide Line Numbers (Editor Window only)"
msgstr "显示/隐藏行号（仅限 Editor 窗口）"

#: ../../library/idle.rst:317
msgid ""
"Open a column to the left of the edit window which shows the number of each "
"line of text.  The default is off, which may be changed in the preferences "
"(see :ref:`Setting preferences <preferences>`)."
msgstr ""
"在编辑窗口左侧打开一个显示代码文本行编号的列。 默认为关闭显示，这可以在首选项中修改 (参见 :ref:`设置首选项 <preferences>`)。"

#: ../../library/idle.rst:321
msgid "Zoom/Restore Height"
msgstr "缩放/还原高度"

#: ../../library/idle.rst:322
msgid ""
"Toggles the window between normal size and maximum height. The initial size "
"defaults to 40 lines by 80 chars unless changed on the General tab of the "
"Configure IDLE dialog.  The maximum height for a screen is determined by "
"momentarily maximizing a window the first time one is zoomed on the screen. "
"Changing screen settings may invalidate the saved height.  This toggle has "
"no effect when a window is maximized."
msgstr ""
"在窗口的正常尺寸和最大高度之间进行切换。 初始尺寸默认为 40 行每行 80 字符，除非在配置 IDLE 对话框的通用选项卡中做了修改。 "
"屏幕的最大高度由首次在屏幕上将缩小的窗口最大化的操作来确定。 改变屏幕设置可能使保存的高度失效。 此切换操作在窗口最大化状态下无效。"

#: ../../library/idle.rst:330
msgid "Window menu (Shell and Editor)"
msgstr "Window 菜单（命令行和编辑器）"

#: ../../library/idle.rst:332
msgid ""
"Lists the names of all open windows; select one to bring it to the "
"foreground (deiconifying it if necessary)."
msgstr "列出所有打开的窗口的名称；选择一个将其带到前台（必要时对其进行去符号化）。"

#: ../../library/idle.rst:336
msgid "Help menu (Shell and Editor)"
msgstr "帮助菜单（命令行和编辑器）"

#: ../../library/idle.rst:338
msgid "About IDLE"
msgstr "关于 IDLE"

#: ../../library/idle.rst:339
msgid "Display version, copyright, license, credits, and more."
msgstr "显示版本，版权，许可证，荣誉等。"

#: ../../library/idle.rst:341
msgid "IDLE Help"
msgstr "IDLE 帮助"

#: ../../library/idle.rst:342
msgid ""
"Display this IDLE document, detailing the menu options, basic editing and "
"navigation, and other tips."
msgstr "显示此 IDLE 文档，详细介绍菜单选项，基本编辑和导航以及其他技巧。"

#: ../../library/idle.rst:345
msgid "Python Docs"
msgstr "Python 文档"

#: ../../library/idle.rst:346
msgid ""
"Access local Python documentation, if installed, or start a web browser and "
"open docs.python.org showing the latest Python documentation."
msgstr "访问本地Python文档（如果已安装），或启动Web浏览器并打开docs.python.org显示最新的Python文档。"

#: ../../library/idle.rst:349
msgid "Turtle Demo"
msgstr "海龟演示"

#: ../../library/idle.rst:350
msgid ""
"Run the turtledemo module with example Python code and turtle drawings."
msgstr "使用示例 Python 代码运行 turtledemo 模块和海龟绘图"

#: ../../library/idle.rst:352
msgid ""
"Additional help sources may be added here with the Configure IDLE dialog "
"under the General tab. See the :ref:`Help sources <help-sources>` subsection"
" below for more on Help menu choices."
msgstr ""
"可以在 “常规” 选项卡下的 “配置IDLE” 对话框中添加其他帮助源。有关“帮助”菜单选项的更多信息，请参见下面的 :ref:`帮助源 <help-"
"sources>` 小节。"

#: ../../library/idle.rst:365
msgid "Context menus"
msgstr "上下文菜单"

#: ../../library/idle.rst:367
msgid ""
"Open a context menu by right-clicking in a window (Control-click on macOS). "
"Context menus have the standard clipboard functions also on the Edit menu."
msgstr "通过在窗口中右击（在 macOS 上则为按住 Control 键点击）来打开一个上下文菜单。 上下文菜单也具有编辑菜单中的标准剪贴板功能。"

#: ../../library/idle.rst:379
msgid ""
"Editor windows also have breakpoint functions.  Lines with a breakpoint set "
"are specially marked.  Breakpoints only have an effect when running under "
"the debugger.  Breakpoints for a file are saved in the user's ``.idlerc`` "
"directory."
msgstr ""
"编辑器窗口也具有断点功能。 设置了断点的行会被特别标记。 断点仅在启用调试器运行时有效。 文件的断点会被保存在用户的 ``.idlerc`` 目录中。"

#: ../../library/idle.rst:356 ../../library/idle.rst:384
msgid "Set Breakpoint"
msgstr "设置断点"

#: ../../library/idle.rst:385
msgid "Set a breakpoint on the current line."
msgstr "在当前行设置断点"

#: ../../library/idle.rst:356 ../../library/idle.rst:387
msgid "Clear Breakpoint"
msgstr "清除断点"

#: ../../library/idle.rst:388
msgid "Clear the breakpoint on that line."
msgstr "清除当前行断点"

#: ../../library/idle.rst:390
msgid "Shell and Output windows also have the following."
msgstr "shell 和输出窗口还具有以下内容。"

#: ../../library/idle.rst:392
msgid "Go to file/line"
msgstr "跳转到文件/行"

#: ../../library/idle.rst:393
msgid "Same as in Debug menu."
msgstr "与调试菜单相同。"

#: ../../library/idle.rst:395
msgid ""
"The Shell window also has an output squeezing facility explained in the "
"*Python Shell window* subsection below."
msgstr "Shell 窗口也有一个输出折叠功能，参见下文的 *Python Shell 窗口* 小节。"

#: ../../library/idle.rst:398
msgid "Squeeze"
msgstr "压缩"

#: ../../library/idle.rst:399
msgid ""
"If the cursor is over an output line, squeeze all the output between the "
"code above and the prompt below down to a 'Squeezed text' label."
msgstr "如果将光标位于输出行上，则会折叠在上方代码和下方提示直到 'Squeezed text' 标签之间的所有输出。"

#: ../../library/idle.rst:406
msgid "Editing and Navigation"
msgstr "编辑和导航"

#: ../../library/idle.rst:409
msgid "Editor windows"
msgstr "编辑窗口"

#: ../../library/idle.rst:411
msgid ""
"IDLE may open editor windows when it starts, depending on settings and how "
"you start IDLE.  Thereafter, use the File menu.  There can be only one open "
"editor window for a given file."
msgstr ""
"IDLE 可以在启动时打开编辑器窗口，这取决于选项设置和你启动 IDLE 的方式。 在此之后，请使用 File 菜单。 "
"对于给定的文件只能打开一个编辑器窗口。"

#: ../../library/idle.rst:415
msgid ""
"The title bar contains the name of the file, the full path, and the version "
"of Python and IDLE running the window.  The status bar contains the line "
"number ('Ln') and column number ('Col').  Line numbers start with 1; column "
"numbers with 0."
msgstr ""
"标题栏包含文件名称、完整路径，以及运行该窗口的 Python 和 IDLE 版本。 状态栏包含行号 ('Ln') 和列号 ('Col')。 行号从 1 "
"开始；列号则从 0 开始。"

#: ../../library/idle.rst:420
msgid ""
"IDLE assumes that files with a known .py* extension contain Python code and "
"that other files do not.  Run Python code with the Run menu."
msgstr "IDE 会定扩展名为 .py* 的文件包含 Python 代码而其他文件不包含。 可使用 Run 菜单来运行 Python 代码。"

#: ../../library/idle.rst:424
msgid "Key bindings"
msgstr "按键绑定"

#: ../../library/idle.rst:426
msgid ""
"The IDLE insertion cursor is a thin vertical bar between character "
"positions.  When characters are entered, the insertion cursor and everything"
" to its right moves right one character and the new character is entered in "
"the new space."
msgstr "IDLE 插入光标是字符位置之间的一个细竖条。 当输入字符时，插入光标及其右侧的所有内容将右移一个字符并使新字符输入到新空位中。"

#: ../../library/idle.rst:431
msgid ""
"Several non-character keys move the cursor and possibly delete characters.  "
"Deletion does not puts text on the clipboard, but IDLE has an undo list.  "
"Wherever this doc discusses keys, 'C' refers to the :kbd:`Control` key on "
"Windows and Unix and the :kbd:`Command` key on macOS.  (And all such "
"discussions assume that the keys have not been re-bound to something else.)"
msgstr ""
"某些非字符类按键会移动光标并可能会删除字符。 删除操作不会将文本放入剪贴板，但 IDLE 有一个撤销列表。 当本文档讨论到按键时，'C' 是指 "
"Windows 和 Unix 上的 :kbd:`Control` 键和 macOS 上的 :kbd:`Command` 键。 "
"（并且这样的讨论并假定这些按键没有被重新绑定到其他目标。）"

#: ../../library/idle.rst:438
msgid "Arrow keys move the cursor one character or line."
msgstr "方向键会使光标移动一个字符或一行。"

#: ../../library/idle.rst:440
msgid ""
":kbd:`C-LeftArrow` and :kbd:`C-RightArrow` moves left or right one word."
msgstr ":kbd:`C-LeftArrow` 和 :kbd:`C-RightArrow` 会左移或右移一个单词。"

#: ../../library/idle.rst:442
msgid ":kbd:`Home` and :kbd:`End` go to the beginning or end of the line."
msgstr ":kbd:`Home` 和 :kbd:`End` 会移至行的开头或末尾。"

#: ../../library/idle.rst:444
msgid ":kbd:`Page Up` and :kbd:`Page Down` go up or down one screen."
msgstr ":kbd:`Page Up` 和 :kbd:`Page Down` 会上移或下移一屏。"

#: ../../library/idle.rst:446
msgid ":kbd:`C-Home` and :kbd:`C-End` go to beginning or end of the file."
msgstr ":kbd:`C-Home` 会 :kbd:`C-End` 移至文档的开头或末尾。"

#: ../../library/idle.rst:448
msgid ""
":kbd:`Backspace` and :kbd:`Del` (or :kbd:`C-d`) delete the previous or next "
"character."
msgstr ":kbd:`Backspace` 和 :kbd:`Del` (或 :kbd:`C-d`) 会删除上一个或下一个字符。"

#: ../../library/idle.rst:451
msgid ":kbd:`C-Backspace` and :kbd:`C-Del` delete one word left or right."
msgstr ":kbd:`C-Backspace` 和 :kbd:`C-Del` 会向左或向右删除一个单词。"

#: ../../library/idle.rst:453
msgid ":kbd:`C-k` deletes ('kills') everything to the right."
msgstr ":kbd:`C-k` 会删除 ('杀掉') 右侧的所有内容。"

#: ../../library/idle.rst:455
msgid ""
"Standard keybindings (like :kbd:`C-c` to copy and :kbd:`C-v` to paste) may "
"work.  Keybindings are selected in the Configure IDLE dialog."
msgstr "标准的键绑定（例如 :kbd:`C-c` 复制和 :kbd:`C-v` 粘贴）仍会有效。 键绑定可在配置 IDLE 对话框中选择。"

#: ../../library/idle.rst:459
msgid "Automatic indentation"
msgstr "自动缩进"

#: ../../library/idle.rst:461
msgid ""
"After a block-opening statement, the next line is indented by 4 spaces (in "
"the Python Shell window by one tab).  After certain keywords (break, return "
"etc.) the next line is dedented.  In leading indentation, :kbd:`Backspace` "
"deletes up to 4 spaces if they are there. :kbd:`Tab` inserts spaces (in the "
"Python Shell window one tab), number depends on Indent width. Currently, "
"tabs are restricted to four spaces due to Tcl/Tk limitations."
msgstr ""
"在一个代码块开头的语句之后，下一行会缩进 4 个空格符（在 Python Shell 窗口中是一个制表符）。 在特定关键字之后（break, "
"return 等），下一行将不再缩进。 在开头的缩进中，按 :kbd:`Backspace` 将会删除 4 个空格符。 :kbd:`Tab` "
"则会插入空格符（在 Python Shell 窗口中是一个制表符），具体数量取决于缩进宽度。 目前，Tab 键按照 Tcl/Tk "
"的规定设置为四个空格符。"

#: ../../library/idle.rst:468
msgid ""
"See also the indent/dedent region commands on the :ref:`Format menu <format-"
"menu>`."
msgstr "另请参阅 :ref:`Format 菜单 <format-menu>` 的缩进/取消缩进区的命令。"

#: ../../library/idle.rst:472
msgid "Search and Replace"
msgstr "搜索和替换"

#: ../../library/idle.rst:474
msgid ""
"Any selection becomes a search target.  However, only selections within a "
"line work because searches are only performed within lines with the terminal"
" newline removed.  If ``[x] Regular expression`` is checked, the target is "
"interpreted according to the Python re module."
msgstr ""
"任何选择都将成为搜索目标。 但是，只有在同一行内的选择才有效因为搜索只针对行进行并会移除换行符。 如果勾选了 ``[x] Regular "
"expression``，目标将按照 Python re 模块的规则来解读。"

#: ../../library/idle.rst:482
msgid "Completions"
msgstr "补全"

#: ../../library/idle.rst:484
msgid ""
"Completions are supplied, when requested and available, for module names, "
"attributes of classes or functions, or filenames.  Each request method "
"displays a completion box with existing names.  (See tab completions below "
"for an exception.) For any box, change the name being completed and the item"
" highlighted in the box by typing and deleting characters; by hitting "
":kbd:`Up`, :kbd:`Down`, :kbd:`PageUp`, :kbd:`PageDown`, :kbd:`Home`, and "
":kbd:`End` keys; and by a single click within the box.  Close the box with "
":kbd:`Escape`, :kbd:`Enter`, and double :kbd:`Tab` keys or clicks outside "
"the box. A double click within the box selects and closes."
msgstr ""
"当被请求并且可用时，将为模块名、类属性、函数或文件名提供补全。 每次请求方法将显示包含现有名称的补全提示框。 （例外情况参见下文的 Tab 补全。） "
"对于任意提示框，要改变被补全的名称和提示框中被高亮的条目，可以通过输入和删除字符、按 :kbd:`Up`, :kbd:`Down`, "
":kbd:`PageUp`, :kbd:`PageDown`, :kbd:`Home` 和 :kbd:`End` 键；或是在提示框中单击。 "
"要关闭补全提示框可以通过 :kbd:`Escape`, :kbd:`Enter` 或按两次 :kbd:`Tab` 键或是在提示框外单击。 "
"在提示框内双击则将执行选择并关闭。"

#: ../../library/idle.rst:495
msgid ""
"One way to open a box is to type a key character and wait for a predefined "
"interval.  This defaults to 2 seconds; customize it in the settings dialog."
"  (To prevent auto popups, set the delay to a large number of milliseconds, "
"such as 100000000.) For imported module names or class or function "
"attributes, type '.'. For filenames in the root directory, type "
":data:`os.sep` or :data:`os.altsep` immediately after an opening quote.  (On"
" Windows, one can specify a drive first.)  Move into subdirectories by "
"typing a directory name and a separator."
msgstr ""
"有一种打开提示框的方式是输入一个关键字符并等待预设的一段间隔。 此间隔默认为 2 秒；这可以在设置对话框中定制。 "
"（要防止自动弹出，可将时延设为一个很大的豪秒数值，例如 100000000。） 对于导入的模块名或者类和函数属性，请输入 '.'。 "
"对于根目录下的文件名，请在开头引号之后立即输入 :data:`os.sep` 或 :data:`os.altsep`。 （在 Windows "
"下，可以先指定一个驱动器。） 可通过输入目录名和分隔符来进入子目录。"

#: ../../library/idle.rst:505
msgid ""
"Instead of waiting, or after a box is closed, open a completion box "
"immediately with Show Completions on the Edit menu.  The default hot key is "
":kbd:`C-space`.  If one types a prefix for the desired name before opening "
"the box, the first match or near miss is made visible. The result is the "
"same as if one enters a prefix after the box is displayed.  Show Completions"
" after a quote completes filenames in the current directory instead of a "
"root directory."
msgstr ""
"除了等待，或是在提示框关闭之后，可以使用 Edit 菜单的 Show Completions 来立即打开一个补全提示框。 默认的热键是 "
":kbd:`C-space`。 如果在打开提示框之前输入一某个名称的前缀，则将显示第一个匹配项或最接近的项。 结果将与在提示框已显示之后输入前缀时相同。"
" 在一个引号之后执行 Show Completions 将会实例当前目录下的文件名而不是根目录下的。"

#: ../../library/idle.rst:513
msgid ""
"Hitting :kbd:`Tab` after a prefix usually has the same effect as Show "
"Completions.  (With no prefix, it indents.)  However, if there is only one "
"match to the prefix, that match is immediately added to the editor text "
"without opening a box."
msgstr ""
"在输入前缀后按 :kbd:`Tab` 键的效果通常与 Show Completions 相同。 （如果未输入前缀则为缩进。） "
"但是，如果输入的前缀只有一个匹配项，则该匹配项会立即被添加到编辑器文本中而不打开补全提示框。"

#: ../../library/idle.rst:518
msgid ""
"Invoking 'Show Completions', or hitting :kbd:`Tab` after a prefix, outside "
"of a string and without a preceding '.' opens a box with keywords, builtin "
"names, and available module-level names."
msgstr ""
"在字符串以外且开头不带 '.' 地输入前缀并执行 'Show Completions' 或按 :kbd:`Tab` "
"键将打开一个包含关键字、内置名称和现有模块级名称的补全提示框。"

#: ../../library/idle.rst:522
msgid ""
"When editing code in an editor (as oppose to Shell), increase the available "
"module-level names by running your code and not restarting the Shell "
"thereafter.  This is especially useful after adding imports at the top of a "
"file.  This also increases possible attribute completions."
msgstr ""
"当在编辑器（而非 Shell）中编辑代码时，可以通过运行你的代码并在此后不重启 Shell 来增加可用的模块级名称。 "
"这在文件顶部添加了导入语句之后会特别有用。 这还会增加可用的属性补全。"

#: ../../library/idle.rst:528
msgid ""
"Completion boxes initially exclude names beginning with '_' or, for modules,"
" not included in '__all__'.  The hidden names can be accessed by typing '_' "
"after '.', either before or after the box is opened."
msgstr ""
"补全提示框在初始时会排除以 '_' 打头的名称，对于模块还会排除未包括在 '__all__' 中的名称。 这些隐藏名称可通过在 '.' 之后输入 '_'"
" 来访问，这在提示框打开之前或之后都是有效的。"

#: ../../library/idle.rst:535
msgid "Calltips"
msgstr "提示"

#: ../../library/idle.rst:537
msgid ""
"A calltip is shown automatically when one types :kbd:`(` after the name of "
"an *accessible* function.  A function name expression may include dots and "
"subscripts.  A calltip remains until it is clicked, the cursor is moved out "
"of the argument area, or :kbd:`)` is typed.  Whenever the cursor is in the "
"argument part of a definition, select Edit and \"Show Call Tip\" on the menu"
" or enter its shortcut to display a calltip."
msgstr ""
"当在一个 *可用的* 函数名称之后输入 :kbd:`(` 时将自动显示一个调用提示。 函数名称表达式可以包括点号和方括号索引操作。 "
"调用提示将保持打开直到它被点击、光标移出参数区、或是输入了 :kbd:`)`。 当光标位于某个定义的参数区时，可以在菜单中选择 Edit 的 "
"\"Show Call Tip\" 或是输入其快捷键来显示调用提示。"

#: ../../library/idle.rst:544
msgid ""
"The calltip consists of the function's signature and docstring up to the "
"latter's first blank line or the fifth non-blank line.  (Some builtin "
"functions lack an accessible signature.)  A '/' or '*' in the signature "
"indicates that the preceding or following arguments are passed by position "
"or name (keyword) only.  Details are subject to change."
msgstr ""
"调用提示是由函数的签名和文档字符串到第一个空行或第五个非空行为止的内容组成的。 （某些内置函数没有可访问的签名。） 签名中的 '/' 或 '*' "
"指明其前面或后面的参数仅限以位置或名称（关键字）方式传入。 具体细节可能会改变。"

#: ../../library/idle.rst:550
msgid ""
"In Shell, the accessible functions depends on what modules have been "
"imported into the user process, including those imported by Idle itself, and"
" which definitions have been run, all since the last restart."
msgstr ""
"在 Shell 中，可访问的函数取决于有哪些模块已被导入用户进程，包括由 IDLE 本身导入的模块，以及哪些定义已被运行，以上均从最近的重启动开始算起。"

#: ../../library/idle.rst:554
msgid ""
"For example, restart the Shell and enter ``itertools.count(``.  A calltip "
"appears because Idle imports itertools into the user process for its own "
"use.  (This could change.)  Enter ``turtle.write(`` and nothing appears. "
"Idle does not itself import turtle.  The menu entry and shortcut also do "
"nothing.  Enter ``import turtle``.  Thereafter, ``turtle.write(`` will "
"display a calltip."
msgstr ""
"例如，重启动 Shell 并输入 ``itertools.count(``。 将显示调用提示，因为 IDLE 出于自身需要已将 itertools "
"导入了用户进程。 （此行为可能会改变。） 输入 ``turtle.write(`` 则不显示任何提示。 因为 IDLE 本身不会导入 turtle。 "
"菜单项和快捷键同样不会有任何反应。 输入 ``import turtle``。 则在此之后，``turtle.write(`` 将显示调用提示。"

#: ../../library/idle.rst:561
msgid ""
"In an editor, import statements have no effect until one runs the file. One "
"might want to run a file after writing import statements, after adding "
"function definitions, or after opening an existing file."
msgstr ""
"在编辑器中，import 语句在文件运行之前是没有效果的。 在输入 import "
"语句之后、添加函数定义之后，或是打开一个现有文件之后可以先运行一下文件。"

#: ../../library/idle.rst:568
msgid "Code Context"
msgstr "代码上下文"

#: ../../library/idle.rst:570
msgid ""
"Within an editor window containing Python code, code context can be toggled "
"in order to show or hide a pane at the top of the window.  When shown, this "
"pane freezes the opening lines for block code, such as those beginning with "
"``class``, ``def``, or ``if`` keywords, that would have otherwise scrolled "
"out of view.  The size of the pane will be expanded and contracted as needed"
" to show the all current levels of context, up to the maximum number of "
"lines defined in the Configure IDLE dialog (which defaults to 15).  If there"
" are no current context lines and the feature is toggled on, a single blank "
"line will display.  Clicking on a line in the context pane will move that "
"line to the top of the editor."
msgstr ""
"在一个包含 Python 代码的编辑器窗口内部，可以切换代码上下文以便显示或隐藏窗口顶部的面板。 当显示时，此面板可以冻结代码块的开头行，例如以 "
"``class``, ``def`` 或 ``if`` 关键字开头的行，这样的行在不显示时面板时可能离开视野。 "
"此面板的大小将根据需要扩展和收缩以显示当前层级的全部上下文，直至达到配置 IDLE 对话框中所定义的最大行数（默认为 15）。 "
"如果如果没有当前上下文行而此功能被启用，则将显示一个空行。 点击上下文面板中的某一行将把该行移至编辑器顶部。"

#: ../../library/idle.rst:581
msgid ""
"The text and background colors for the context pane can be configured under "
"the Highlights tab in the Configure IDLE dialog."
msgstr "上下文面板的文本和背景颜色可在配置 IDLE 对话框的 Highlights 选项卡中进行配置。"

#: ../../library/idle.rst:585
msgid "Shell window"
msgstr "Shell 窗口"

#: ../../library/idle.rst:587
msgid ""
"In IDLE's Shell, enter, edit, and recall complete statements. (Most consoles"
" and terminals only work with a single physical line at a time)."
msgstr "在 IDLE 的 Shell 中，输入、编辑和重新执行完整的语句。 （多数控制台和终端每次只能操作一个物理行）。"

#: ../../library/idle.rst:590
msgid ""
"Submit a single-line statement for execution by hitting :kbd:`Return` with "
"the cursor anywhere on the line.  If a line is extended with Backslash "
"(:kbd:`\\\\`), the cursor must be on the last physical line. Submit a multi-"
"line compound statement by entering a blank line after the statement."
msgstr ""
"在光标位于行内任意位置的情况下按 :kbd:`Return` 键来将单行语句提交执行。 如果带有强制换行的反斜杠 "
"(:kbd:`\\\\`)，则光标必须位于最后一个物理行。 对于包含多行的复合语句要通过在语句之后额外输入一个空行来提交执行。"

#: ../../library/idle.rst:596
msgid ""
"When one pastes code into Shell, it is not compiled and possibly executed "
"until one hits :kbd:`Return`, as specified above. One may edit pasted code "
"first. If one pastes more than one statement into Shell, the result will be "
"a :exc:`SyntaxError` when multiple statements are compiled as if they were "
"one."
msgstr ""
"当将代码粘贴到 Shell 中时，它并不会被编译并执行除非如上所述地再按下 :kbd:`Return` 键。 可以先对粘贴的代码进行编辑。 "
"如果将多条语句粘贴到 Shell 中，则多条语句被当作一条语句来编译并引发 :exc:`SyntaxError`。"

#: ../../library/idle.rst:602
msgid ""
"Lines containing ``RESTART`` mean that the user execution process has been "
"re-started.  This occurs when the user execution process has crashed, when "
"one requests a restart on the Shell menu, or when one runs code in an editor"
" window."
msgstr ""
"包含 ``RESTART`` 的行表明用户执行进程已被重启。 这种情况会在用户执行进程崩溃、在 Shell "
"菜单中选择重启，或在编辑器窗口中运行代码时发生。"

#: ../../library/idle.rst:607
msgid ""
"The editing features described in previous subsections work when entering "
"code interactively.  IDLE's Shell window also responds to the following:"
msgstr "之前小节中介绍的编辑功能在交互式地输入代码时也适用。 IDLE 的 Shell 窗口还会响应以下按键："

#: ../../library/idle.rst:610
msgid ":kbd:`C-c` attempts to interrupt statement execution (but may fail)."
msgstr ":kbd:`C-c` 会尝试中断语句执行（但可能会失败）。"

#: ../../library/idle.rst:612
msgid ":kbd:`C-d` closes Shell if typed at a ``>>>`` prompt."
msgstr ":kbd:`C-d` 如果是在 ``>>>`` 提示符后按下会关闭窗口。"

#: ../../library/idle.rst:614
msgid ""
":kbd:`Alt-p` and :kbd:`Alt-n` (:kbd:`C-p` and :kbd:`C-n` on macOS) retrieve "
"to the current prompt the previous or next previously entered statement that"
" matches anything already typed."
msgstr ""
":kbd:`Alt-p` 和 :kbd:`Alt-n` (在 macOS 上为 :kbd:`C-p` 和 :kbd:`C-n`) "
"将在当前提示符下恢复与已输入内容匹配的上一条或下一条之前输入的语句。"

#: ../../library/idle.rst:618
msgid ""
":kbd:`Return` while the cursor is on any previous statement appends the "
"latter to anything already typed at the prompt."
msgstr "当光标位于任何之前的语句上时按下 :kbd:`Return` 将把该语句添加到在提示符下已输入的内容之后。"

#: ../../library/idle.rst:622
msgid "Text colors"
msgstr "文本颜色"

#: ../../library/idle.rst:624
msgid ""
"Idle defaults to black on white text, but colors text with special meanings."
" For the shell, these are shell output, shell error, user output, and user "
"error.  For Python code, at the shell prompt or in an editor, these are "
"keywords, builtin class and function names, names following ``class`` and "
"``def``, strings, and comments. For any text window, these are the cursor "
"(when present), found text (when possible), and selected text."
msgstr ""
"IDLE 文本默认为白底黑字，但有特殊含义的文本将以彩色显示。 对于 Shell 来说包括 Shell 输出，Shell 错误，用户输出和用户错误。 "
"对于 Shell 提示符下或编辑器中的 Python 代码来说则包括关键字，内置类和函数名称，``class`` 和 ``def`` "
"之后的名称，字符串和注释等。 对于任意文本窗口来说则包括光标（如果存在）、找到的文本（如果可能）和选定的文本。"

#: ../../library/idle.rst:631
msgid ""
"IDLE also highlights the :ref:`soft keywords <soft-keywords>` "
":keyword:`match`, :keyword:`case <match>`, and :keyword:`_ <wildcard-"
"patterns>` in pattern-matching statements. However, this highlighting is not"
" perfect and will be incorrect in some rare cases, including some ``_``-s in"
" ``case`` patterns."
msgstr ""
"IDLE 还会高亮显示模式匹配语句中的 :ref:`软关键字 <soft-keywords>` :keyword:`match`, "
":keyword:`case <match>` 和 :keyword:`_ <wildcard-patterns>`。 "
"但是，这种高亮显示并不完美，在某些极端情况下还会出现错误，包括 ``_`` 在 ``case`` 模式中出现的时候。"

#: ../../library/idle.rst:637
msgid ""
"Text coloring is done in the background, so uncolorized text is occasionally"
" visible.  To change the color scheme, use the Configure IDLE dialog "
"Highlighting tab.  The marking of debugger breakpoint lines in the editor "
"and text in popups and dialogs is not user-configurable."
msgstr ""
"广西着色是在背景上完成的，因此有时会看到非着色的文本。 要改变颜色方案，请使用配置 IDLE 对话框的高亮选项卡。 "
"编辑器中的调试器断点行标记和弹出面板和对话框中的文本则是用户不可配置的。"

#: ../../library/idle.rst:644
msgid "Startup and Code Execution"
msgstr "启动和代码执行"

#: ../../library/idle.rst:646
msgid ""
"Upon startup with the ``-s`` option, IDLE will execute the file referenced "
"by the environment variables :envvar:`IDLESTARTUP` or "
":envvar:`PYTHONSTARTUP`. IDLE first checks for ``IDLESTARTUP``; if "
"``IDLESTARTUP`` is present the file referenced is run.  If ``IDLESTARTUP`` "
"is not present, IDLE checks for ``PYTHONSTARTUP``.  Files referenced by "
"these environment variables are convenient places to store functions that "
"are used frequently from the IDLE shell, or for executing import statements "
"to import common modules."
msgstr ""
"在附带 ``-s`` 选项启用的情况下，IDLE 将会执行环境变量 :envvar:`IDLESTARTUP` 或 "
":envvar:`PYTHONSTARTUP` 所引用的文件。 IDLE 会先检查 ``IDLESTARTUP``；如果 ``IDLESTARTUP``"
" 存在则会运行被引用的文件。 如果 ``IDLESTARTUP`` 不存在，则 IDLE 会检查 ``PYTHONSTARTUP``。 "
"这些环境变量所引用的文件是存放经常被 IDLE Shell 所使用的函数，或者执行导入常用模块的 import 语句的便捷场所。"

#: ../../library/idle.rst:654
msgid ""
"In addition, ``Tk`` also loads a startup file if it is present.  Note that "
"the Tk file is loaded unconditionally.  This additional file is ``.Idle.py``"
" and is looked for in the user's home directory.  Statements in this file "
"will be executed in the Tk namespace, so this file is not useful for "
"importing functions to be used from IDLE's Python shell."
msgstr ""
"此外，``Tk`` 也会在存在启动文件时加载它。 请注意 Tk 文件会被无条件地加载。 此附加文件名为 ``.Idle.py`` "
"并且会在用户的家目录下查找。 此文件中的语句将在 Tk 的命名空间中执行，所以此文件不适用于导入要在 IDLE 的 Python Shell "
"中使用的函数。"

#: ../../library/idle.rst:661
msgid "Command line usage"
msgstr "命令行用法"

#: ../../library/idle.rst:665
msgid ""
"IDLE can be invoked from the command line with various options. The general "
"syntax is:"
msgstr "IDLE 可从命令行附带多种选项来唤起。 基本语法为："

#: ../../library/idle.rst:667
msgid "python -m idlelib [options] [file ...]"
msgstr "python -m idlelib [options] [file ...]"

#: ../../library/idle.rst:671
msgid "The following options are available:"
msgstr "有以下几种选项："

#: ../../library/idle.rst:675
msgid ""
"Run the specified Python command in the shell window. For example, pass ``-c"
" \"print('Hello, World!')\"``. On Windows, the outer quotes must be double "
"quotes as shown."
msgstr ""
"在 shell 窗口中运行指定的 Python 命令。 例如，传入 ``-c \"print('Hello, World!')\"``。 在 "
"Windows 上，外面的引号如上面所显示的那样必须为双引号。"

#: ../../library/idle.rst:681
msgid "Enable the debugger and open the shell window."
msgstr "启用调试器并打开 shell 窗口。"

#: ../../library/idle.rst:685
msgid "Open an editor window."
msgstr "打开一个 editor 窗口。"

#: ../../library/idle.rst:689
msgid "Print a help message with legal combinations of options and exit."
msgstr "打印一条带有一组合法选项的帮助消息框并退出。"

#: ../../library/idle.rst:693
msgid "Open a shell window."
msgstr "打开一个 shell 窗口。"

#: ../../library/idle.rst:697
msgid "Run the specified file in the shell window."
msgstr "在 shell 窗口中运行指定的文件。"

#: ../../library/idle.rst:701
msgid ""
"Run the startup file (as defined by the environment variables "
":envvar:`IDLESTARTUP` or :envvar:`PYTHONSTARTUP`) before opening the shell "
"window."
msgstr ""
"在打开 shell 窗口之前运行启动文件（由环境变量 :envvar:`IDLESTARTUP` 或 :envvar:`PYTHONSTARTUP` "
"定义）。"

#: ../../library/idle.rst:705
msgid "Set the title of the shell window."
msgstr "设置 shell 窗口的标题。"

#: ../../library/idle.rst:709
msgid ""
"Read and execute standard input in the shell window. This option must be the"
" last one before any arguments."
msgstr "读取并执行 shell 窗口中的标准输入。 此选项必须是位于其他参数之前的最后一项。"

#: ../../library/idle.rst:711
msgid "If arguments are provided:"
msgstr "如果提供了参数："

#: ../../library/idle.rst:713
msgid ""
"If ``-``, ``-c``, or ``-r`` is used, all arguments are placed in "
"``sys.argv[1:]``, and ``sys.argv[0]`` is set to ``''``, ``'-c'``, or "
"``'-r'`` respectively. No editor window is opened, even if that is the "
"default set in the *Options* dialog."
msgstr ""
"如果使用了 ``-``, ``-c`` 或 ``-r``，则所有参数将放在 ``sys.argv[1:]`` 中，而 ``sys.argv[0]`` "
"将分别被设为 ``''``，, ``'-c'`` 或 ``'-r'``。 不会打开任何 editor 窗口，即使这是在 *Options* "
"对象框中的默认设置。"

#: ../../library/idle.rst:716
msgid ""
"Otherwise, arguments are treated as files to be opened for editing, and "
"``sys.argv`` reflects the arguments passed to IDLE itself."
msgstr "在其他情况下，参数将作为要被打开编辑的文件来处理，而 ``sys.argv`` 反映的则是传给 IDLE 本身的参数。"

#: ../../library/idle.rst:720
msgid "Startup failure"
msgstr "启动失败"

#: ../../library/idle.rst:722
msgid ""
"IDLE uses a socket to communicate between the IDLE GUI process and the user "
"code execution process.  A connection must be established whenever the Shell"
" starts or restarts.  (The latter is indicated by a divider line that says "
"'RESTART'). If the user process fails to connect to the GUI process, it "
"usually displays a ``Tk`` error box with a 'cannot connect' message that "
"directs the user here.  It then exits."
msgstr ""
"IDLE 使用一个套接字在 IDLE GUI 进程和用户代码执行进程之间通信。 当 Shell 启动或重启动时必须建立一个连接。 （重启动会以一个内容为"
" 'RESTART' 的分隔行来标示）。 如果用户进程无法连接到 GUI 进程，它通常会显示一个包含 'cannot connect' 消息的  "
"``Tk`` 错误提示框来引导用户。 随后将会退出程序。"

#: ../../library/idle.rst:729
msgid ""
"One specific connection failure on Unix systems results from misconfigured "
"masquerading rules somewhere in a system's network setup. When IDLE is "
"started from a terminal, one will see a message starting with ``** Invalid "
"host:``. The valid value is ``127.0.0.1 (idlelib.rpc.LOCALHOST)``. One can "
"diagnose with ``tcpconnect -irv 127.0.0.1 6543`` in one terminal window and "
"``tcplisten <same args>`` in another."
msgstr ""
"有一个 Unix 系统专属的连接失败是由系统网络设置中错误配置的掩码规则导致的。 当从一个终端启动 IDLE 时，用户将看到一条以 ``** "
"Invalid host:`` 开头的消息。 有效的值为 ``127.0.0.1 (idlelib.rpc.LOCALHOST)``。 "
"用户可以在一个终端窗口输入 ``tcpconnect -irv 127.0.0.1 6543`` 并在另一个终端窗口中输入 ``tcplisten "
"<same args>`` 来进行诊断。"

#: ../../library/idle.rst:737
msgid ""
"A common cause of failure is a user-written file with the same name as a "
"standard library module, such as *random.py* and *tkinter.py*. When such a "
"file is located in the same directory as a file that is about to be run, "
"IDLE cannot import the stdlib file.  The current fix is to rename the user "
"file."
msgstr ""
"导致连接失败的一个常见原因是用户创建的文件与标准库模块同名，例如 *random.py* 和 *tkinter.py*。 "
"当这样的文件与要运行的文件位于同一目录中时，IDLE 将无法导入标准库模块。 可用的解决办法是重命名用户文件。"

#: ../../library/idle.rst:743
msgid ""
"Though less common than in the past, an antivirus or firewall program may "
"stop the connection.  If the program cannot be taught to allow the "
"connection, then it must be turned off for IDLE to work.  It is safe to "
"allow this internal connection because no data is visible on external ports."
"  A similar problem is a network mis-configuration that blocks connections."
msgstr ""
"虽然现在已不太常见，但杀毒软件或防火墙程序也有可能会阻止连接。 如果无法将此类程序设为允许连接，那么为了运行 IDLE 就必须将其关闭。 "
"允许这样的内部连接是安全的，因为数据在外部端口上不可见。 一个类似的问题是错误的网络配置阻止了连接。"

#: ../../library/idle.rst:750
msgid ""
"Python installation issues occasionally stop IDLE: multiple versions can "
"clash, or a single installation might need admin access.  If one undo the "
"clash, or cannot or does not want to run as admin, it might be easiest to "
"completely remove Python and start over."
msgstr ""
"Python 的安装问题有时会使 IDLE 退出：存在多个版本时可能导致程序崩溃，或者单独安装时可能需要管理员权限。 "
"如果想要避免程序崩溃，或是不想以管理员身份运行，最简单的做法是完全卸载 Python 并重新安装。"

#: ../../library/idle.rst:755
msgid ""
"A zombie pythonw.exe process could be a problem.  On Windows, use Task "
"Manager to check for one and stop it if there is.  Sometimes a restart "
"initiated by a program crash or Keyboard Interrupt (control-C) may fail to "
"connect.  Dismissing the error box or using Restart Shell on the Shell menu "
"may fix a temporary problem."
msgstr ""
"有时会出现 pythonw.exe 僵尸进程问题。 在 Windows 上，可以使用任务管理员来检查并停止该进程。 "
"有时由程序崩溃或键盘中断（control-C）所发起的重启动可能会出现连接失败。 关闭错误提示框或使用 Shell 菜单中的 Restart Shell"
" 可能会修复此类临时性错误。"

#: ../../library/idle.rst:761
msgid ""
"When IDLE first starts, it attempts to read user configuration files in "
"``~/.idlerc/`` (~ is one's home directory).  If there is a problem, an error"
" message should be displayed.  Leaving aside random disk glitches, this can "
"be prevented by never editing the files by hand.  Instead, use the "
"configuration dialog, under Options.  Once there is an error in a user "
"configuration file, the best solution may be to delete it and start over "
"with the settings dialog."
msgstr ""
"当 IDLE 首次启动时，它会尝试读取 ``~/.idlerc/`` 中的用户配置文件（~ 是用户的家目录）。 如果配置有问题，则应当显示一条错误消息。"
" 除随机磁盘错误之外，此类错误均可通过不手动编辑这些文件来避免。 请使用 Options 菜单来打开配置对话框。 "
"一旦用户配置文件出现错误，最好的解决办法就是删除它并使用配置对话框重新设置。"

#: ../../library/idle.rst:769
msgid ""
"If IDLE quits with no message, and it was not started from a console, try "
"starting it from a console or terminal (``python -m idlelib``) and see if "
"this results in an error message."
msgstr ""
"如果 IDLE 退出时没有发出任何错误消息，并且它不是通过控制台启动的，请尝试通过控制台或终端 (``python -m idlelib``) "
"来启动它以查看是否会出现错误消息。"

#: ../../library/idle.rst:773
msgid ""
"On Unix-based systems with tcl/tk older than ``8.6.11`` (see ``About IDLE``)"
" certain characters of certain fonts can cause a tk failure with a message "
"to the terminal.  This can happen either if one starts IDLE to edit a file "
"with such a character or later when entering such a character.  If one "
"cannot upgrade tcl/tk, then re-configure IDLE to use a font that works "
"better."
msgstr ""
"在基于 Unix 的系统上使用 tcl/tk 低于 ``8.6.11`` 的版本 (查看 ``About IDLE``) "
"时特定字体的特定字符可能导致终端提示 tk 错误消息。 这可能发生在启动 IDLE 编辑包此种字符的文件或是在之后输入此种字符的时候。 如果无法升级 "
"tcl/tk，可以重新配置 IDLE 来使用其他的字体。"

#: ../../library/idle.rst:781
msgid "Running user code"
msgstr "运行用户代码"

#: ../../library/idle.rst:783
msgid ""
"With rare exceptions, the result of executing Python code with IDLE is "
"intended to be the same as executing the same code by the default method, "
"directly with Python in a text-mode system console or terminal window. "
"However, the different interface and operation occasionally affect visible "
"results.  For instance, ``sys.modules`` starts with more entries, and "
"``threading.active_count()`` returns 2 instead of 1."
msgstr ""
"除了少量例外，使用 IDLE 执行 Python 代码的结果应当与使用默认方法，即在文本模式的系统控制台或终端窗口中直接通过 Python "
"解释器执行同样的代码相同。 但是，不同的界面和操作有时会影响显示的结果。 例如，``sys.modules`` 初始时具有更多条目，而 "
"``threading.active_count()`` 将返回 2 而不是 1。"

#: ../../library/idle.rst:790
msgid ""
"By default, IDLE runs user code in a separate OS process rather than in the "
"user interface process that runs the shell and editor.  In the execution "
"process, it replaces ``sys.stdin``, ``sys.stdout``, and ``sys.stderr`` with "
"objects that get input from and send output to the Shell window. The "
"original values stored in ``sys.__stdin__``, ``sys.__stdout__``, and "
"``sys.__stderr__`` are not touched, but may be ``None``."
msgstr ""
"在默认情况下，IDLE 会在单独的 OS 进程中运行用户代码而不是在运行 Shell 和编辑器的用户界面进程中运行。 在执行进程中，它会将 "
"``sys.stdin``, ``sys.stdout`` 和 ``sys.stderr`` 替换为从 Shell 窗口获取输入并向其发送输出的对象。 "
"保存在 ``sys.__stdin__``, ``sys.__stdout__`` 和 ``sys.__stderr__`` "
"中的原始值不会被改变，但可能会为 ``None``。"

#: ../../library/idle.rst:797
msgid ""
"Sending print output from one process to a text widget in another is slower "
"than printing to a system terminal in the same process. This has the most "
"effect when printing multiple arguments, as the string for each argument, "
"each separator, the newline are sent separately. For development, this is "
"usually not a problem, but if one wants to print faster in IDLE, format and "
"join together everything one wants displayed together and then print a "
"single string.  Both format strings and :meth:`str.join` can help combine "
"fields and lines."
msgstr ""
"将打印输出从一个进程发送到另一个进程中的文本部件要比打印到同一个进程中的系统终端慢。 "
"这在打印多个参数时将有更明显的影响，因为每个参数、每个分隔符和换行符对应的字符串都要单独发送。 在开发中，这通常不算是问题，但如果希望能在 IDLE "
"中更快地打印，可以将想要显示的所有内容先格式化并拼接到一起然后打印单个字符串。 格式字符串和 :meth:`str.join` "
"都可以被用于合并字段和文本行。"

#: ../../library/idle.rst:806
msgid ""
"IDLE's standard stream replacements are not inherited by subprocesses "
"created in the execution process, whether directly by user code or by "
"modules such as multiprocessing.  If such subprocess use ``input`` from "
"sys.stdin or ``print`` or ``write`` to sys.stdout or sys.stderr, IDLE should"
" be started in a command line window.  (On Windows, use ``python`` or ``py``"
" rather than ``pythonw`` or ``pyw``.) The secondary subprocess will then be "
"attached to that window for input and output."
msgstr ""
"IDLE 的标准流替换不会被执行进程中创建的子进程所继承，不论它是由用户代码直接创建还是由 multiprocessing 之类的模块创建的。 "
"如果这样的子进程使用了 ``input`` 从 sys.stdin 输入或者使用了 ``print`` 或 ``write`` 向 sys.stdout"
" 或 sys.stderr 输出，则应当在命令行窗口中启动 IDLE。 （在 Windows 中，要使用 ``python`` 或 ``py`` 而不是"
" ``pythonw`` 或 ``pyw``。）  这样二级子进程将会被附加到该窗口进行输入和输出。"

#: ../../library/idle.rst:815
msgid ""
"If ``sys`` is reset by user code, such as with ``importlib.reload(sys)``, "
"IDLE's changes are lost and input from the keyboard and output to the screen"
" will not work correctly."
msgstr ""
"如果 ``sys`` 被用户代码重置，例如使用了 ``importlib.reload(sys)``，则 IDLE "
"的修改将丢失，来自键盘的输入和向屏幕的输出将无法正确运作。"

#: ../../library/idle.rst:819
msgid ""
"When Shell has the focus, it controls the keyboard and screen.  This is "
"normally transparent, but functions that directly access the keyboard and "
"screen will not work.  These include system-specific functions that "
"determine whether a key has been pressed and if so, which."
msgstr ""
"当 Shell 获得焦点时，它将控制键盘与屏幕。 这通常会保持透明，但一些直接访问键盘和屏幕的函数将会不起作用。 "
"这也包括那些确定是否有键被按下以及是哪个键被按下的系统专属函数。"

#: ../../library/idle.rst:824
msgid ""
"The IDLE code running in the execution process adds frames to the call stack"
" that would not be there otherwise.  IDLE wraps ``sys.getrecursionlimit`` "
"and ``sys.setrecursionlimit`` to reduce the effect of the additional stack "
"frames."
msgstr ""
"在执行进程中运行的 IDLE 代码会向调用栈添加在其他情况下不存在的帧。 IDLE 包装了 ``sys.getrecursionlimit`` 和 "
"``sys.setrecursionlimit`` 以减少额外栈帧的影响。"

#: ../../library/idle.rst:829
msgid ""
"When user code raises SystemExit either directly or by calling sys.exit, "
"IDLE returns to a Shell prompt instead of exiting."
msgstr "当用户代码直接或者通过调用 sys.exit 引发 SystemExit 时，IDLE 将返回 Shell 提示符而非完全退出。"

#: ../../library/idle.rst:833
msgid "User output in Shell"
msgstr "Shell中的用户输出"

#: ../../library/idle.rst:835
msgid ""
"When a program outputs text, the result is determined by the corresponding "
"output device.  When IDLE executes user code, ``sys.stdout`` and "
"``sys.stderr`` are connected to the display area of IDLE's Shell.  Some of "
"its features are inherited from the underlying Tk Text widget.  Others are "
"programmed additions.  Where it matters, Shell is designed for development "
"rather than production runs."
msgstr ""
"当一个程序输出文本时，结果将由相应的输出设备来确定。 当 IDLE 执行用户代码时，``sys.stdout`` 和 ``sys.stderr`` "
"会被连接到 IDLE Shell 的显示区。 它的某些特性是从底层的 Tk Text 部件继承而来。 其他特性则是程序所添加的。 总之，Shell "
"被设计用于开发环境而非生产环境运行。"

#: ../../library/idle.rst:842
msgid ""
"For instance, Shell never throws away output.  A program that sends "
"unlimited output to Shell will eventually fill memory, resulting in a memory"
" error. In contrast, some system text windows only keep the last n lines of "
"output. A Windows console, for instance, keeps a user-settable 1 to 9999 "
"lines, with 300 the default."
msgstr ""
"例如，Shell 绝不会丢弃输出。 一个向 Shell 发送无限输出的程序将最终占满内存，导致内存错误。 "
"作为对比，某些系统文本模式窗口只会保留输出的最后 n 行。 例如，Windows 控制台可由用户设置保留 1 至 9999 行，默认为 300 行。"

#: ../../library/idle.rst:848
msgid ""
"A Tk Text widget, and hence IDLE's Shell, displays characters (codepoints) "
"in the BMP (Basic Multilingual Plane) subset of Unicode.  Which characters "
"are displayed with a proper glyph and which with a replacement box depends "
"on the operating system and installed fonts.  Tab characters cause the "
"following text to begin after the next tab stop. (They occur every 8 "
"'characters').  Newline characters cause following text to appear on a new "
"line.  Other control characters are ignored or displayed as a space, box, or"
" something else, depending on the operating system and font.  (Moving the "
"text cursor through such output with arrow keys may exhibit some surprising "
"spacing behavior.) ::"
msgstr ""
"IDLE 的 Shell 所使用的 Tk Text 部件可显示的字符 (码位) 为 Unicode 的 BMP (基本多语言平面) 子集。 "
"具体哪些字符会显示为正确的字形而哪些会以方框代替取决于操作系统和所安装的字体。 制表符会使之后的文本从下一个制表位开始。 (每 8 个 '字符' "
"对应一个制表位)。 换行符会使之后的文本开始新的一行。 其他控制符会被忽略或是显示为空格、方框或其他形式，具体取决于操作系统和字体。 "
"(使用方向键在这样的输出中移动文本光标有可能让显示间距发生怪异的变化。) ::"

#: ../../library/idle.rst:858
msgid ""
">>> s = 'a\\tb\\a<\\x02><\\r>\\bc\\nd'  # Enter 22 chars.\n"
">>> len(s)\n"
"14\n"
">>> s  # Display repr(s)\n"
"'a\\tb\\x07<\\x02><\\r>\\x08c\\nd'\n"
">>> print(s, end='')  # Display s as is.\n"
"# Result varies by OS and font.  Try it."
msgstr ""
">>> s = 'a\\tb\\a<\\x02><\\r>\\bc\\nd'  # 输入 22 个字符。\n"
">>> len(s)\n"
"14\n"
">>> s  # 显示 repr(s)\n"
"'a\\tb\\x07<\\x02><\\r>\\x08c\\nd'\n"
">>> print(s, end='')  # 原样显示 s。\n"
"# 结果会因 OS 和字体而不同。 请试一下。"

#: ../../library/idle.rst:866
msgid ""
"The ``repr`` function is used for interactive echo of expression values.  It"
" returns an altered version of the input string in which control codes, some"
" BMP codepoints, and all non-BMP codepoints are replaced with escape codes. "
"As demonstrated above, it allows one to identify the characters in a string,"
" regardless of how they are displayed."
msgstr ""
"``repr`` 函数会被用于表达式值的交互式回显。 它将返回输入字符串的一个修改版本，其中的控制代码、部分 BMP 码位以及所有非 BMP "
"码位都将被替换为转义代码。 如上面所演示的，它使用户可以辨识字符串中的字符，无论它们会如何显示。"

#: ../../library/idle.rst:872
msgid ""
"Normal and error output are generally kept separate (on separate lines) from"
" code input and each other.  They each get different highlight colors."
msgstr "普通的与错误的输出通常会在与代码输入和彼此之间保持区分 (显示于不同的行)。 它们也会分别使用不同的高亮颜色。"

#: ../../library/idle.rst:875
msgid ""
"For SyntaxError tracebacks, the normal '^' marking where the error was "
"detected is replaced by coloring the text with an error highlight. When code"
" run from a file causes other exceptions, one may right click on a traceback"
" line to jump to the corresponding line in an IDLE editor. The file will be "
"opened if necessary."
msgstr ""
"对于 SyntaxError 回溯信息，表示检测到错误位置的正常 '^' 标记被替换为带有代表错误的文本颜色高亮。 "
"当从文件运行的代码导致了其他异常时，用户可以右击回溯信息行在 IDLE 编辑器中跳转到相应的行。 如有必要将打开相应的文件。"

#: ../../library/idle.rst:881
msgid ""
"Shell has a special facility for squeezing output lines down to a 'Squeezed "
"text' label.  This is done automatically for output over N lines (N = 50 by "
"default). N can be changed in the PyShell section of the General page of the"
" Settings dialog.  Output with fewer lines can be squeezed by right clicking"
" on the output.  This can be useful lines long enough to slow down "
"scrolling."
msgstr ""
"Shell 具有将输出行折叠为一个 'Squeezed text' 标签的特殊功能。 此功能将自动应用于超过 N 行的输出 (默认 N = 50)。 N"
" 可以在设置对话框中 General 页的 PyShell 区域中修改。 行数更少的输出也可通过在输出上右击来折叠。 "
"此功能适用于过多的输出行数导致滚动操作变慢的情况。"

#: ../../library/idle.rst:889
msgid ""
"Squeezed output is expanded in place by double-clicking the label. It can "
"also be sent to the clipboard or a separate view window by right-clicking "
"the label."
msgstr "已折叠的输出可通过双击该标签来原地展开。 也可通过右击该标签将其发送到剪贴板或单独的查看窗口。"

#: ../../library/idle.rst:894
msgid "Developing tkinter applications"
msgstr "开发 tkinter 应用程序"

#: ../../library/idle.rst:896
msgid ""
"IDLE is intentionally different from standard Python in order to facilitate "
"development of tkinter programs.  Enter ``import tkinter as tk; root = "
"tk.Tk()`` in standard Python and nothing appears.  Enter the same in IDLE "
"and a tk window appears.  In standard Python, one must also enter "
"``root.update()`` to see the window.  IDLE does the equivalent in the "
"background, about 20 times a second, which is about every 50 milliseconds. "
"Next enter ``b = tk.Button(root, text='button'); b.pack()``.  Again, nothing"
" visibly changes in standard Python until one enters ``root.update()``."
msgstr ""
"IDLE 有意与标准 Python 保持区别以方便 tkinter 程序的开发。 在标准 Python 中输入 ``import tkinter as "
"tk; root = tk.Tk()`` 不会显示任何东西。 在 IDLE 中输入同样的代码则会显示一个 tk 窗口。 在标准 Python "
"中，还必须输入 ``root.update()`` 才会将窗口显示出来。 IDLE 会在幕后执行同样的方法，每秒大约 20 次，即每隔大约 50 毫秒。"
" 下面输入 ``b = tk.Button(root, text='button'); b.pack()``。 在标准 Python "
"中仍然不会有任何可见的变化，直到输入 ``root.update()``。"

#: ../../library/idle.rst:905
msgid ""
"Most tkinter programs run ``root.mainloop()``, which usually does not return"
" until the tk app is destroyed.  If the program is run with ``python -i`` or"
" from an IDLE editor, a ``>>>`` shell prompt does not appear until "
"``mainloop()`` returns, at which time there is nothing left to interact "
"with."
msgstr ""
"大多数 tkinter 程序都会运行 ``root.mainloop()``，它通常直到 tk 应用被销毁时才会返回。 如果程序是通过 ``python"
" -i`` 或 IDLE 编辑器运行的，则 ``>>>`` Shell 提示符将直到 ``mainloop()`` "
"返回时才会出现，这时将结束程序的交互。"

#: ../../library/idle.rst:911
msgid ""
"When running a tkinter program from an IDLE editor, one can comment out the "
"mainloop call.  One then gets a shell prompt immediately and can interact "
"with the live application.  One just has to remember to re-enable the "
"mainloop call when running in standard Python."
msgstr ""
"当通过 IDLE 编辑器运行 tkinter 程序时，可以注释掉 mainloop 调用。 这样将立即回到 Shell "
"提示符并可与正在运行的应用程序交互。 请记得当在标准 Python 中运行时重新启用 mainloop 调用。"

#: ../../library/idle.rst:917
msgid "Running without a subprocess"
msgstr "在没有子进程的情况下运行"

#: ../../library/idle.rst:919
msgid ""
"By default, IDLE executes user code in a separate subprocess via a socket, "
"which uses the internal loopback interface.  This connection is not "
"externally visible and no data is sent to or received from the internet. If "
"firewall software complains anyway, you can ignore it."
msgstr ""
"在默认情况下，IDLE 是通过一个套接字在单独的子进程中执行用户代码，它将使用内部的环回接口。 这个连接在外部不可见并且不会在互联网上发送或接收数据。 "
"如果防火墙仍然会报警，你完全可以忽略。"

#: ../../library/idle.rst:924
msgid ""
"If the attempt to make the socket connection fails, Idle will notify you. "
"Such failures are sometimes transient, but if persistent, the problem may be"
" either a firewall blocking the connection or misconfiguration of a "
"particular system.  Until the problem is fixed, one can run Idle with the -n"
" command line switch."
msgstr ""
"如果创建套接字连接的尝试失败，IDLE 将会通知你。 这样的失败可能是暂时性的，但是如果持续存在，问题可能是防火墙阻止了连接或某个系统配置错误。 "
"在问题得到解决之前，可以使用 -n 命令行开关来运行 IDLE。"

#: ../../library/idle.rst:930
msgid ""
"If IDLE is started with the -n command line switch it will run in a single "
"process and will not create the subprocess which runs the RPC Python "
"execution server.  This can be useful if Python cannot create the subprocess"
" or the RPC socket interface on your platform.  However, in this mode user "
"code is not isolated from IDLE itself.  Also, the environment is not "
"restarted when Run/Run Module (F5) is selected.  If your code has been "
"modified, you must reload() the affected modules and re-import any specific "
"items (e.g. from foo import baz) if the changes are to take effect.  For "
"these reasons, it is preferable to run IDLE with the default subprocess if "
"at all possible."
msgstr ""
"如果 IDLE 启动时使用了 -n 命令行开关则它将在单个进程中运行并且将不再创建运行 RPC Python 执行服务器的子进程。 这适用于 "
"Python 无法在你的系统平台上创建子进程或 RPC 套接字接口的情况。 但是，在这种模式下用户代码没有与 IDLE 本身相隔离。 而且，当选择 "
"Run/Run Module (F5) 时运行环境也不会重启。 如果你的代码已被修改，你必须为受影响的模块执行 reload() 并重新导入特定的条目 "
"(例如 from foo import baz) 才能让修改生效。 出于这些原因，在可能的情况下最好还是使用默认的子进程来运行 IDLE。"

#: ../../library/idle.rst:945
msgid "Help and Preferences"
msgstr "帮助和首选项Help and Preferences"

#: ../../library/idle.rst:950
msgid "Help sources"
msgstr "帮助源"

#: ../../library/idle.rst:952
msgid ""
"Help menu entry \"IDLE Help\" displays a formatted html version of the IDLE "
"chapter of the Library Reference.  The result, in a read-only tkinter text "
"window, is close to what one sees in a web browser. Navigate through the "
"text with a mousewheel, the scrollbar, or up and down arrow keys held down. "
"Or click the TOC (Table of Contents) button and select a section header in "
"the opened box."
msgstr ""
"Help 菜单项 \"IDLE Help\" 会显示标准库参考中 IDLE 一章的带格式 HTML 版本。 这些内容放在只读的 tkinter "
"文本窗口中，与在浏览器中看到的内容类似。 可使用鼠标滚轮、滚动条或上下方向键来浏览文本。 或是点击 TOC (Table of Contents) "
"按钮并在打开的选项框中选择一个节标题。"

#: ../../library/idle.rst:960
msgid ""
"Help menu entry \"Python Docs\" opens the extensive sources of help, "
"including tutorials, available at ``docs.python.org/x.y``, where 'x.y' is "
"the currently running Python version.  If your system has an off-line copy "
"of the docs (this may be an installation option), that will be opened "
"instead."
msgstr ""
"Help 菜单项 \"Python Docs\" 会打开更丰富的帮助源，包括教程，通过 ``docs.python.org/x.y`` 来访问，其中 "
"'x.y' 是当前运行的 Python 版本。 如果你的系统有此文档的离线副本 (这可能是一个安装选项)，则将打开这个副本。"

#: ../../library/idle.rst:966
msgid ""
"Selected URLs can be added or removed from the help menu at any time using "
"the General tab of the Configure IDLE dialog."
msgstr "选定的 URL 可以使用配置 IDLE 对话框的 General 选项卡随时在帮助菜单中添加或移除。"

#: ../../library/idle.rst:972
msgid "Setting preferences"
msgstr "首选项设置"

#: ../../library/idle.rst:974
msgid ""
"The font preferences, highlighting, keys, and general preferences can be "
"changed via Configure IDLE on the Option menu. Non-default user settings are"
" saved in a ``.idlerc`` directory in the user's home directory.  Problems "
"caused by bad user configuration files are solved by editing or deleting one"
" or more of the files in ``.idlerc``."
msgstr ""
"字体首选项、高亮、按键和通用首选项可通过 Option 菜单的配置 IDLE 项来修改。 非默认的用户设置将保存在用户家目录下的 ``.idlerc``"
" 目录中。 用户配置文件错误导致的问题可通过编辑或删除 ``.idlerc`` 中的一个或多个文件来解决。"

#: ../../library/idle.rst:980
msgid ""
"On the Font tab, see the text sample for the effect of font face and size on"
" multiple characters in multiple languages.  Edit the sample to add other "
"characters of personal interest.  Use the sample to select monospaced fonts."
"  If particular characters have problems in Shell or an editor, add them to "
"the top of the sample and try changing first size and then font."
msgstr ""
"在 Font 选项卡中，可以查看使用多种语言的多个字符的示例文本来了解字体或字号效果。 可以编辑示例文本来添加想要的其他字符。 "
"请使用示例文本选择等宽字体。 如果某些字符在 Shell 或编辑器中的显示有问题，可以将它们添加到示例文本的开头并尝试改变字号和字体。"

#: ../../library/idle.rst:987
msgid ""
"On the Highlights and Keys tab, select a built-in or custom color theme and "
"key set.  To use a newer built-in color theme or key set with older IDLEs, "
"save it as a new custom theme or key set and it well be accessible to older "
"IDLEs."
msgstr ""
"在 Highlights 和 Keys 选项卡中，可以选择内置或自定义的颜色主题和按键集合。 要将更新的内置颜色主题或按键集合与旧版 IDLE "
"一起使用，可以将其保存为新的自定义主题或按键集合就将可在旧版 IDLE 中使用。"

#: ../../library/idle.rst:993
msgid "IDLE on macOS"
msgstr "macOS 上的IDLE"

#: ../../library/idle.rst:995
msgid ""
"Under System Preferences: Dock, one can set \"Prefer tabs when opening "
"documents\" to \"Always\".  This setting is not compatible with the "
"tk/tkinter GUI framework used by IDLE, and it breaks a few IDLE features."
msgstr ""
"在 System Preferences: Dock 中，可以将 \"Prefer tabs when opening documents\" 设为 "
"\"Always\"。 但是该设置不能兼容 IDLE 所使用的 tk/tkinter GUI 框架，并会使得部分 IDLE 特性失效。"

#: ../../library/idle.rst:1000
msgid "Extensions"
msgstr "扩展"

#: ../../library/idle.rst:1002
msgid ""
"IDLE contains an extension facility.  Preferences for extensions can be "
"changed with the Extensions tab of the preferences dialog. See the beginning"
" of config-extensions.def in the idlelib directory for further information."
"  The only current default extension is zzdummy, an example also used for "
"testing."
msgstr ""
"IDLE 可以包含扩展插件。 扩展插件的首选项可通过首选项对话框的 Extensions 选项卡来修改。 请查看 idlelib 目录下 config-"
"extensions.def 的开头来了解详情。 目前唯一的扩展插件是 zzdummy，它也是一个测试用的示例。"

#: ../../library/idle.rst:1010
msgid "idlelib --- implementation of IDLE application"
msgstr "idlelib --- IDLE 应用程序的实现"

#: ../../library/idle.rst:1015
msgid "**Source code:** :source:`Lib/idlelib`"
msgstr "**源代码:** :source:`Lib/idlelib`"

#: ../../library/idle.rst:1019
msgid ""
"The Lib/idlelib package implements the IDLE application.  See the rest of "
"this page for how to use IDLE."
msgstr "Lib/idlelib 包实现了 IDLE 应用程序。 请查看本页面的其余的内容来了解如何使用 IDLE。"

#: ../../library/idle.rst:1022
msgid ""
"The files in idlelib are described in idlelib/README.txt.  Access it either "
"in idlelib or click Help => About IDLE on the IDLE menu.  This file also "
"maps IDLE menu items to the code that implements the item. Except for files "
"listed under 'Startup', the idlelib code is 'private' in sense that feature "
"changes can be backported (see :pep:`434`)."
msgstr ""
"有关 idlelib 中文件的描述见 idlelib/README.txt。 可以在 idlelib 中或者在 IDLE 中点击 Help => "
"About IDLE 来查看它。 此文件还将 IDLE 菜单条目映射到了实现这些条目的代码。 除了在 'Startup' "
"中列出的文件以外，idlelib 代码都是 '私有' 的意即特性的修改可以被向下移植 (参见 :pep:`434`)。"

#: ../../library/idle.rst:10
msgid "IDLE"
msgstr "IDLE"

#: ../../library/idle.rst:10
msgid "Python Editor"
msgstr "Python 编辑器"

#: ../../library/idle.rst:10
msgid "Integrated Development Environment"
msgstr "集成开发环境"

#: ../../library/idle.rst:71
msgid "Module browser"
msgstr "模块浏览器"

#: ../../library/idle.rst:71
msgid "Path browser"
msgstr "路径浏览器"

#: ../../library/idle.rst:213
msgid "Run script"
msgstr "运行脚本"

#: ../../library/idle.rst:280
msgid "debugger"
msgstr "调试器"

#: ../../library/idle.rst:280
msgid "stack viewer"
msgstr "栈查看器"

#: ../../library/idle.rst:356
msgid "breakpoints"
msgstr "中断点"
