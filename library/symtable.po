# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Nyuan Zhang, 2025
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-07-25 16:48+0000\n"
"PO-Revision-Date: 2025-07-18 20:06+0000\n"
"Last-Translator: Nyuan Zhang, 2025\n"
"Language-Team: Chinese (China) (https://app.transifex.com/python-doc/teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/symtable.rst:2
msgid ":mod:`symtable` --- Access to the compiler's symbol tables"
msgstr ":mod:`symtable` ——访问编译器的符号表"

#: ../../library/symtable.rst:7
msgid "**Source code:** :source:`Lib/symtable.py`"
msgstr "**Source code：** :source:`Lib/symtable.py`"

#: ../../library/symtable.rst:15
msgid ""
"Symbol tables are generated by the compiler from AST just before bytecode is"
" generated.  The symbol table is responsible for calculating the scope of "
"every identifier in the code.  :mod:`symtable` provides an interface to "
"examine these tables."
msgstr ""
"符号表由编译器在生成字节码之前根据 AST 生成。符号表负责计算代码中每个标识符的作用域。 :mod:`symtable` 提供了一个查看这些表的接口。"

#: ../../library/symtable.rst:22
msgid "Generating Symbol Tables"
msgstr "符号表的生成"

#: ../../library/symtable.rst:26
msgid ""
"Return the toplevel :class:`SymbolTable` for the Python source *code*. "
"*filename* is the name of the file containing the code.  *compile_type* is "
"like the *mode* argument to :func:`compile`."
msgstr ""
"返回 Python 源 *代码* 顶层的 :class:`SymbolTable`。*filename* 是代码文件名。 *compile_type* "
"的含义类似 :func:`compile` 的 *mode* 参数。"

#: ../../library/symtable.rst:32
msgid "Examining Symbol Tables"
msgstr "符号表的查看"

#: ../../library/symtable.rst:36
msgid "A namespace table for a block.  The constructor is not public."
msgstr "某个代码块的命名空间表。构造函数不公开。"

#: ../../library/symtable.rst:40
msgid ""
"Return the type of the symbol table.  Possible values are ``'class'``, "
"``'module'``, and ``'function'``."
msgstr "返回符号表的类型。可能是 ``'class'`` 、``'module'`` 或 ``'function'``。"

#: ../../library/symtable.rst:45
msgid "Return the table's identifier."
msgstr "返回符号表的标识符"

#: ../../library/symtable.rst:49
msgid ""
"Return the table's name.  This is the name of the class if the table is for "
"a class, the name of the function if the table is for a function, or "
"``'top'`` if the table is global (:meth:`get_type` returns ``'module'``)."
msgstr ""
"返回符号表的名称。 若为类的符号表则返回类名；若为函数的符号表则为函数名；若是全局符号表则为 ``'top'`` (:meth:`get_type` "
"返回 ``'module'``)。"

#: ../../library/symtable.rst:55
msgid ""
"Return the number of the first line in the block this table represents."
msgstr "返回符号表所代表代码块的第一行编号。"

#: ../../library/symtable.rst:59
msgid "Return ``True`` if the locals in this table can be optimized."
msgstr "如果符号表中的局部变量可能被优化过，则返回 ``True``。"

#: ../../library/symtable.rst:63
msgid "Return ``True`` if the block is a nested class or function."
msgstr "如果代码块是嵌套类或函数，则返回 ``True``。"

#: ../../library/symtable.rst:67
msgid ""
"Return ``True`` if the block has nested namespaces within it.  These can be "
"obtained with :meth:`get_children`."
msgstr "如果代码块中有嵌套的命名空间，则返回 ``True``。可通过  :meth:`get_children` 读取。"

#: ../../library/symtable.rst:72
msgid ""
"Return a view object containing the names of symbols in the table. See the "
":ref:`documentation of view objects <dict-views>`."
msgstr "返回一个包含表中符号名称的视图对象。 参见 :ref:`视图对象文档 <dict-views>`。"

#: ../../library/symtable.rst:77
msgid "Lookup *name* in the table and return a :class:`Symbol` instance."
msgstr "在符号表中查找 *name* 并返回一个 :class:`Symbol` 实例。"

#: ../../library/symtable.rst:81
msgid "Return a list of :class:`Symbol` instances for names in the table."
msgstr "返回符号表中所有符号的 :class:`Symbol` 实例的列表。"

#: ../../library/symtable.rst:85
msgid "Return a list of the nested symbol tables."
msgstr "返回嵌套符号表的列表。"

#: ../../library/symtable.rst:90
msgid ""
"A namespace for a function or method.  This class inherits from "
":class:`SymbolTable`."
msgstr "函数或方法的命名空间。 该类继承自 :class:`SymbolTable`。"

#: ../../library/symtable.rst:95
msgid "Return a tuple containing names of parameters to this function."
msgstr "返回由函数的参数名组成的元组。"

#: ../../library/symtable.rst:99
msgid "Return a tuple containing names of locals in this function."
msgstr "返回函数中局部变量名组成的元组。"

#: ../../library/symtable.rst:103
msgid "Return a tuple containing names of globals in this function."
msgstr "返回函数中全局变量名组成的元组。"

#: ../../library/symtable.rst:107
msgid "Return a tuple containing names of nonlocals in this function."
msgstr "返回函数中非局部变量名组成的元组。"

#: ../../library/symtable.rst:111
msgid "Return a tuple containing names of free variables in this function."
msgstr "返回函数中自由变量名组成的元组。"

#: ../../library/symtable.rst:116
msgid ""
"A namespace of a class.  This class inherits from :class:`SymbolTable`."
msgstr "类的命名空间。 该类继承自 :class:`SymbolTable`。"

#: ../../library/symtable.rst:120
msgid "Return a tuple containing the names of methods declared in the class."
msgstr "返回类中声明的方法名组成的元组。"

#: ../../library/symtable.rst:125
msgid ""
"An entry in a :class:`SymbolTable` corresponding to an identifier in the "
"source.  The constructor is not public."
msgstr ":class:`SymbolTable` 中的数据项，对应于源码中的某个标识符。构造函数不公开。"

#: ../../library/symtable.rst:130
msgid "Return the symbol's name."
msgstr "返回符号名"

#: ../../library/symtable.rst:134
msgid "Return ``True`` if the symbol is used in its block."
msgstr "如果符号在代码块中被引用了，则返回 ``True``。"

#: ../../library/symtable.rst:138
msgid "Return ``True`` if the symbol is created from an import statement."
msgstr "如果符号是由导入语句创建的，则返回 ``True``。"

#: ../../library/symtable.rst:142
msgid "Return ``True`` if the symbol is a parameter."
msgstr "如果符号是参数，返回 ``True``。"

#: ../../library/symtable.rst:146
msgid "Return ``True`` if the symbol is global."
msgstr "如果符号是全局变量，则返回 ``True``。"

#: ../../library/symtable.rst:150
msgid "Return ``True`` if the symbol is nonlocal."
msgstr "如果符号为非局部变量，则返回 ``True``。"

#: ../../library/symtable.rst:154
msgid ""
"Return ``True`` if the symbol is declared global with a global statement."
msgstr "如果符号用 global 声明为全局变量，则返回 ``True``。"

#: ../../library/symtable.rst:158
msgid "Return ``True`` if the symbol is local to its block."
msgstr "如果符号是代码块内的局部变量，则返回 ``True``。"

#: ../../library/symtable.rst:162
msgid "Return ``True`` if the symbol is annotated."
msgstr "如果符号带有注解，则返回 ``True``。"

#: ../../library/symtable.rst:168
msgid ""
"Return ``True`` if the symbol is referenced in its block, but not assigned "
"to."
msgstr "如果符号在代码块中被引用，但未赋值，则返回 ``True``。"

#: ../../library/symtable.rst:173
msgid "Return ``True`` if the symbol is assigned to in its block."
msgstr "如果符号在代码块中赋值，则返回 ``True``。"

#: ../../library/symtable.rst:177
msgid "Return ``True`` if name binding introduces new namespace."
msgstr "如果符号名绑定引入了新的命名空间，则返回 ``True``。"

#: ../../library/symtable.rst:179
msgid ""
"If the name is used as the target of a function or class statement, this "
"will be true."
msgstr "如果符号名用于函数或类定义语句，则为 True。"

#: ../../library/symtable.rst:182
msgid "For example::"
msgstr "例如："

#: ../../library/symtable.rst:188
msgid ""
"Note that a single name can be bound to multiple objects.  If the result is "
"``True``, the name may also be bound to other objects, like an int or list, "
"that does not introduce a new namespace."
msgstr ""
"注意，一个符号名可以与多个对象绑定。如果结果为 ``True``，则该符号名还可以绑定到其他对象上，比如 int 或 list "
"，且不会引入新的命名空间。"

#: ../../library/symtable.rst:194
msgid "Return a list of namespaces bound to this name."
msgstr "返回与符号名绑定的命名空间的列表。"

#: ../../library/symtable.rst:198
msgid ""
"Return the namespace bound to this name. If more than one or no namespace is"
" bound to this name, a :exc:`ValueError` is raised."
msgstr "返回绑定到这个名称的命名空间。 如果有多个命名空间或没有命名空间被绑定到这个名称，则会引发 :exc:`ValueError`。"
