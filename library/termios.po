# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.9\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-07-25 19:10+0000\n"
"PO-Revision-Date: 2025-07-18 19:18+0000\n"
"Language-Team: Chinese (China) (https://app.transifex.com/python-doc/teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/termios.rst:2
msgid ":mod:`termios` --- POSIX style tty control"
msgstr ""

#: ../../library/termios.rst:14
msgid ""
"This module provides an interface to the POSIX calls for tty I/O control. "
"For a complete description of these calls, see :manpage:`termios(3)` Unix "
"manual page.  It is only available for those Unix versions that support "
"POSIX *termios* style tty I/O control configured during installation."
msgstr ""

#: ../../library/termios.rst:19
msgid ""
"All functions in this module take a file descriptor *fd* as their first "
"argument.  This can be an integer file descriptor, such as returned by "
"``sys.stdin.fileno()``, or a :term:`file object`, such as ``sys.stdin`` "
"itself."
msgstr ""

#: ../../library/termios.rst:23
msgid ""
"This module also defines all the constants needed to work with the functions"
" provided here; these have the same name as their counterparts in C.  Please"
" refer to your system documentation for more information on using these "
"terminal control interfaces."
msgstr ""

#: ../../library/termios.rst:28
msgid "The module defines the following functions:"
msgstr ""

#: ../../library/termios.rst:33
msgid ""
"Return a list containing the tty attributes for file descriptor *fd*, as "
"follows: ``[iflag, oflag, cflag, lflag, ispeed, ospeed, cc]`` where *cc* is "
"a list of the tty special characters (each a string of length 1, except the "
"items with indices :const:`VMIN` and :const:`VTIME`, which are integers when"
" these fields are defined).  The interpretation of the flags and the speeds "
"as well as the indexing in the *cc* array must be done using the symbolic "
"constants defined in the :mod:`termios` module."
msgstr ""

#: ../../library/termios.rst:44
msgid ""
"Set the tty attributes for file descriptor *fd* from the *attributes*, which"
" is a list like the one returned by :func:`tcgetattr`.  The *when* argument "
"determines when the attributes are changed: :const:`TCSANOW` to change "
"immediately, :const:`TCSADRAIN` to change after transmitting all queued "
"output, or :const:`TCSAFLUSH` to change after transmitting all queued output"
" and discarding all queued input."
msgstr ""

#: ../../library/termios.rst:54
msgid ""
"Send a break on file descriptor *fd*.  A zero *duration* sends a break for "
"0.25--0.5 seconds; a nonzero *duration* has a system dependent meaning."
msgstr ""

#: ../../library/termios.rst:60
msgid ""
"Wait until all output written to file descriptor *fd* has been transmitted."
msgstr ""

#: ../../library/termios.rst:65
msgid ""
"Discard queued data on file descriptor *fd*.  The *queue* selector specifies"
" which queue: :const:`TCIFLUSH` for the input queue, :const:`TCOFLUSH` for "
"the output queue, or :const:`TCIOFLUSH` for both queues."
msgstr ""

#: ../../library/termios.rst:72
msgid ""
"Suspend or resume input or output on file descriptor *fd*.  The *action* "
"argument can be :const:`TCOOFF` to suspend output, :const:`TCOON` to restart"
" output, :const:`TCIOFF` to suspend input, or :const:`TCION` to restart "
"input."
msgstr ""

#: ../../library/termios.rst:79
msgid "Module :mod:`tty`"
msgstr ""

#: ../../library/termios.rst:80
msgid "Convenience functions for common terminal control operations."
msgstr ""

#: ../../library/termios.rst:86
msgid "Example"
msgstr ""

#: ../../library/termios.rst:88
msgid ""
"Here's a function that prompts for a password with echoing turned off.  Note"
" the technique using a separate :func:`tcgetattr` call and a :keyword:`try` "
"... :keyword:`finally` statement to ensure that the old tty attributes are "
"restored exactly no matter what happens::"
msgstr ""
