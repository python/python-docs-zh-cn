# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.9\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-07-25 19:10+0000\n"
"PO-Revision-Date: 2025-07-18 19:17+0000\n"
"Language-Team: Chinese (China) (https://app.transifex.com/python-doc/teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/cgitb.rst:2
msgid ":mod:`cgitb` --- Traceback manager for CGI scripts"
msgstr ""

#: ../../library/cgitb.rst:11
msgid "**Source code:** :source:`Lib/cgitb.py`"
msgstr ""

#: ../../library/cgitb.rst:19
msgid ""
"The :mod:`cgitb` module is deprecated (see :pep:`PEP 594 <594#cgitb>` for "
"details)."
msgstr ""

#: ../../library/cgitb.rst:25
msgid ""
"The :mod:`cgitb` module provides a special exception handler for Python "
"scripts. (Its name is a bit misleading.  It was originally designed to "
"display extensive traceback information in HTML for CGI scripts.  It was "
"later generalized to also display this information in plain text.)  After "
"this module is activated, if an uncaught exception occurs, a detailed, "
"formatted report will be displayed.  The report includes a traceback showing"
" excerpts of the source code for each level, as well as the values of the "
"arguments and local variables to currently running functions, to help you "
"debug the problem.  Optionally, you can save this information to a file "
"instead of sending it to the browser."
msgstr ""

#: ../../library/cgitb.rst:35
msgid ""
"To enable this feature, simply add this to the top of your CGI script::"
msgstr ""

#: ../../library/cgitb.rst:40
msgid ""
"The options to the :func:`enable` function control whether the report is "
"displayed in the browser and whether the report is logged to a file for "
"later analysis."
msgstr ""

#: ../../library/cgitb.rst:49
msgid ""
"This function causes the :mod:`cgitb` module to take over the interpreter's "
"default handling for exceptions by setting the value of "
":attr:`sys.excepthook`."
msgstr ""

#: ../../library/cgitb.rst:52
msgid ""
"The optional argument *display* defaults to ``1`` and can be set to ``0`` to"
" suppress sending the traceback to the browser. If the argument *logdir* is "
"present, the traceback reports are written to files.  The value of *logdir* "
"should be a directory where these files will be placed. The optional "
"argument *context* is the number of lines of context to display around the "
"current line of source code in the traceback; this defaults to ``5``. If the"
" optional argument *format* is ``\"html\"``, the output is formatted as "
"HTML.  Any other value forces plain text output.  The default value is "
"``\"html\"``."
msgstr ""

#: ../../library/cgitb.rst:64
msgid ""
"This function handles the exception described by *info* (a 3-tuple "
"containing the result of :func:`sys.exc_info`), formatting its traceback as "
"text and returning the result as a string. The optional argument *context* "
"is the number of lines of context to display around the current line of "
"source code in the traceback; this defaults to ``5``."
msgstr ""

#: ../../library/cgitb.rst:73
msgid ""
"This function handles the exception described by *info* (a 3-tuple "
"containing the result of :func:`sys.exc_info`), formatting its traceback as "
"HTML and returning the result as a string. The optional argument *context* "
"is the number of lines of context to display around the current line of "
"source code in the traceback; this defaults to ``5``."
msgstr ""

#: ../../library/cgitb.rst:82
msgid ""
"This function handles an exception using the default settings (that is, show"
" a report in the browser, but don't log to a file). This can be used when "
"you've caught an exception and want to report it using :mod:`cgitb`.  The "
"optional *info* argument should be a 3-tuple containing an exception type, "
"exception value, and traceback object, exactly like the tuple returned by "
":func:`sys.exc_info`.  If the *info* argument is not supplied, the current "
"exception is obtained from :func:`sys.exc_info`."
msgstr ""
