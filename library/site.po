# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Zombie110year <zombie110year@gmail.com>, 2021
# Alpha Du <alphanow@gmail.com>, 2021
# helloworldSB <warningfor163@foxmail.com>, 2021
# Dai Xu <daixu61@hotmail.com>, 2023
# WH-2099 <wh2099@outlook.com>, 2024
# Freesand Leo <yuqinju@163.com>, 2025
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-05-08 02:53-0300\n"
"PO-Revision-Date: 2021-06-28 01:13+0000\n"
"Last-Translator: Freesand Leo <yuqinju@163.com>, 2025\n"
"Language-Team: Chinese (China) (https://app.transifex.com/python-doc/teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/site.rst:2
msgid ":mod:`!site` --- Site-specific configuration hook"
msgstr ":mod:`!site` --- 站点专属的配置钩子"

#: ../../library/site.rst:7
msgid "**Source code:** :source:`Lib/site.py`"
msgstr "**源代码:** :source:`Lib/site.py`"

#: ../../library/site.rst:13
msgid ""
"**This module is automatically imported during initialization.** The "
"automatic import can be suppressed using the interpreter's :option:`-S` "
"option."
msgstr "**这个模块将在初始化时被自动导入。** 此自动导入可以通过使用解释器的 :option:`-S` 选项来屏蔽。"

#: ../../library/site.rst:18
msgid ""
"Importing this module normally appends site-specific paths to the module "
"search path and adds :ref:`callables <site-consts>`, including :func:`help` "
"to the built-in namespace. However, Python startup option :option:`-S` "
"blocks this and this module can be safely imported with no automatic "
"modifications to the module search path or additions to the builtins.  To "
"explicitly trigger the usual site-specific additions, call the :func:`main` "
"function."
msgstr ""
"正常导入此模块将会把站点专属的路径添加到模块搜索路径并将一些 :ref:`可调用对象 <site-consts>`，包括 :func:`help` "
"添加到内置命名空间。 不过，Python 启动选项 :option:`-S` "
"会阻止此行为且此模块可被安全地导入而不会自动修改模块搜索路径或添加内置对象。 要显式地触发通常的站点专属附加项，请调用 :func:`main` 函数。"

#: ../../library/site.rst:25
msgid ""
"Importing the module used to trigger paths manipulation even when using "
":option:`-S`."
msgstr "在之前即便使用了 :option:`-S`，导入此模块仍然会触发路径操纵。"

#: ../../library/site.rst:32
msgid ""
"It starts by constructing up to four directories from a head and a tail "
"part. For the head part, it uses ``sys.prefix`` and ``sys.exec_prefix``; "
"empty heads are skipped.  For the tail part, it uses the empty string and "
"then :file:`lib/site-packages` (on Windows) or "
":file:`lib/python{X.Y[t]}/site-packages` (on Unix and macOS). (The optional "
"suffix \"t\" indicates the :term:`free threading` build, and is appended if "
"``\"t\"`` is present in the :data:`sys.abiflags` constant.) For each of the "
"distinct head-tail combinations, it sees if it refers to an existing "
"directory, and if so, adds it to ``sys.path`` and also inspects the newly "
"added path for configuration files."
msgstr ""
"它会以一个头部和尾部来构造至多四个目录作为起点。 对于头部，它将使用 ``sys.prefix`` 和 "
"``sys.exec_prefix``；空的头部会被跳过。 对于尾部，它将使用空字符串然后是 :file:`lib/site-packages` (在 "
"Windows 上) 或 :file:`lib/python{X.Y[t]}/site-packages` (在 Unix 和 macOS 上)。 "
"(可选后缀 \"t\" 表示 :term:`free threading` 构建版，并会在 ``\"t\"`` 存在于 "
":data:`sys.abiflags` 常量中时被添加。) 对于每个不同的头部-尾部组合，它会查看其是否指向现有的目录，如果确实如此，则将其添加到 "
"``sys.path`` 并且还会检查新添加目录中的配置文件。"

#: ../../library/site.rst:44
msgid "Support for the \"site-python\" directory has been removed."
msgstr "对 \"site-python\" 目录的支持已被移除。"

#: ../../library/site.rst:47
msgid ""
"On Unix, :term:`Free threading <free threading>` Python installations are "
"identified by the \"t\" suffix in the version-specific directory name, such "
"as :file:`lib/python3.13t/`."
msgstr ""
"在 Unix 上，:term:`自由线程 <free threading>` Python 安装版是在版本专属的目录名称中以 \"t\" "
"后缀来标识的，例如 :file:`lib/python3.13t/`。"

#: ../../library/site.rst:54
msgid ""
":mod:`site` is no longer responsible for updating :data:`sys.prefix` and "
":data:`sys.exec_prefix` on :ref:`sys-path-init-virtual-environments`. This "
"is now done during the :ref:`path initialization <sys-path-init>`. As a "
"result, under :ref:`sys-path-init-virtual-environments`, :data:`sys.prefix` "
"and :data:`sys.exec_prefix` no longer depend on the :mod:`site` "
"initialization, and are therefore unaffected by :option:`-S`."
msgstr ""

#: ../../library/site.rst:63
msgid ""
"When running under a :ref:`virtual environment <sys-path-init-virtual-"
"environments>`, the ``pyvenv.cfg`` file in :data:`sys.prefix` is checked for"
" site-specific configurations. If the ``include-system-site-packages`` key "
"exists and is set to ``true`` (case-insensitive), the system-level prefixes "
"will be searched for site-packages, otherwise they won't."
msgstr ""

#: ../../library/site.rst:73
msgid ""
"A path configuration file is a file whose name has the form "
":file:`{name}.pth` and exists in one of the four directories mentioned "
"above; its contents are additional items (one per line) to be added to "
"``sys.path``.  Non-existing items are never added to ``sys.path``, and no "
"check is made that the item refers to a directory rather than a file.  No "
"item is added to ``sys.path`` more than once.  Blank lines and lines "
"beginning with ``#`` are skipped.  Lines starting with ``import`` (followed "
"by space or tab) are executed."
msgstr ""
"一个路径配置文件是具有 :file:`{name}.pth` 命名格式的文件，并且存在上面提到的四个目录之一中；它的内容是要添加到 "
"``sys.path`` 中的额外项目（每行一个）。不存在的项目不会添加到 "
"``sys.path``，并且不会检查项目指向的是目录还是文件。项目不会被添加到 ``sys.path`` 超过一次。空行和由 ``#`` "
"起始的行会被跳过。以 ``import`` 开始的行（跟着空格或 TAB）会被执行。"

#: ../../library/site.rst:83
msgid ""
"An executable line in a :file:`.pth` file is run at every Python startup, "
"regardless of whether a particular module is actually going to be used. Its "
"impact should thus be kept to a minimum. The primary intended purpose of "
"executable lines is to make the corresponding module(s) importable (load "
"3rd-party import hooks, adjust :envvar:`PATH` etc). Any other initialization"
" is supposed to be done upon a module's actual import, if and when it "
"happens. Limiting a code chunk to a single line is a deliberate measure to "
"discourage putting anything more complex here."
msgstr ""
"每次启动 Python，在 :file:`.pth` 文件中的可执行行都将会被运行，而不管特定的模块实际上是否需要被使用。 "
"因此，其影响应降至最低。可执行行的主要预期目的是使相关模块可导入（加载第三方导入钩子，调整 :envvar:`PATH` "
"等）。如果它发生了，任何其他的初始化都应当在模块实际导入之前完成。将代码块限制为一行是一种有意采取的措施，不鼓励在此处放置更复杂的内容。"

#: ../../library/site.rst:94
msgid ""
"The :file:`.pth` files are now decoded by UTF-8 at first and then by the "
":term:`locale encoding` if it fails."
msgstr ""
"现在 :file:`.pth` 文件会首先使用 UTF-8 来解码，如果失败会再改用 :term:`locale encoding` 来解码。"

#: ../../library/site.rst:102
msgid ""
"For example, suppose ``sys.prefix`` and ``sys.exec_prefix`` are set to "
":file:`/usr/local`.  The Python X.Y library is then installed in "
":file:`/usr/local/lib/python{X.Y}`.  Suppose this has a subdirectory "
":file:`/usr/local/lib/python{X.Y}/site-packages` with three "
"subsubdirectories, :file:`foo`, :file:`bar` and :file:`spam`, and two path "
"configuration files, :file:`foo.pth` and :file:`bar.pth`.  Assume "
":file:`foo.pth` contains the following::"
msgstr ""
"例如，假设 ``sys.prefix`` 和 ``sys.exec_prefix`` 已经被设置为 :file:`/usr/local`。 Python"
" X.Y 的库之后被安装为 :file:`/usr/local/lib/python{X.Y}`。假设有一个拥有三个孙目录 :file:`foo`, "
":file:`bar` 和 :file:`spam` 的子目录 :file:`/usr/local/lib/python{X.Y}/site-"
"packages`，并且有两个路径配置文件 :file:`foo.pth` 和 :file:`bar.pth`。假定 :file:`foo.pth` "
"内容如下::"

#: ../../library/site.rst:110
msgid ""
"# foo package configuration\n"
"\n"
"foo\n"
"bar\n"
"bletch"
msgstr ""
"# foo 包配置\n"
"\n"
"foo\n"
"bar\n"
"bletch"

#: ../../library/site.rst:116
msgid "and :file:`bar.pth` contains::"
msgstr "并且 :file:`bar.pth` 包含::"

#: ../../library/site.rst:118
msgid ""
"# bar package configuration\n"
"\n"
"bar"
msgstr ""
"# bar 包配置\n"
"\n"
"bar"

#: ../../library/site.rst:122
msgid ""
"Then the following version-specific directories are added to ``sys.path``, "
"in this order::"
msgstr "则下面特定版目录将以如下顺序被添加到 ``sys.path``。"

#: ../../library/site.rst:125
msgid ""
"/usr/local/lib/pythonX.Y/site-packages/bar\n"
"/usr/local/lib/pythonX.Y/site-packages/foo"
msgstr ""
"/usr/local/lib/pythonX.Y/site-packages/bar\n"
"/usr/local/lib/pythonX.Y/site-packages/foo"

#: ../../library/site.rst:128
msgid ""
"Note that :file:`bletch` is omitted because it doesn't exist; the "
":file:`bar` directory precedes the :file:`foo` directory because "
":file:`bar.pth` comes alphabetically before :file:`foo.pth`; and "
":file:`spam` is omitted because it is not mentioned in either path "
"configuration file."
msgstr ""
"请注意 :file:`bletch` 已被省略因为它并不存在；:file:`bar` 目前在 :file:`foo` 目录之前因为 "
":file:`bar.pth` 按字母顺序排在 :file:`foo.pth` 之前；而 :file:`spam` "
"已被省略因为它在两个路径配置文件中都未被提及。"

#: ../../library/site.rst:134
msgid ":mod:`sitecustomize`"
msgstr ":mod:`sitecustomize`"

#: ../../library/site.rst:138
msgid ""
"After these path manipulations, an attempt is made to import a module named "
":mod:`sitecustomize`, which can perform arbitrary site-specific "
"customizations. It is typically created by a system administrator in the "
"site-packages directory.  If this import fails with an :exc:`ImportError` or"
" its subclass exception, and the exception's :attr:`~ImportError.name` "
"attribute equals to ``'sitecustomize'``, it is silently ignored.  If Python "
"is started without output streams available, as with :file:`pythonw.exe` on "
"Windows (which is used by default to start IDLE), attempted output from "
":mod:`sitecustomize` is ignored.  Any other exception causes a silent and "
"perhaps mysterious failure of the process."
msgstr ""
"在这些路径操作之后，会尝试导入 一个名为 :mod:`sitecustomize` 的模块，它可以执行任意站点专属的定制。 它通常是由系统管理员在 "
"site-packages 目录下创建的。 如果此导入失败并引发 :exc:`ImportError` 或其子类的异常，并且异常的 "
":attr:`~ImportError.name` 属性等于 ``'sitecustomize'``，则它会被静默地忽略。 如果 Python "
"是在没有可用输出流的情况下启动的，例如在 Windows 上使用 :file:`pythonw.exe` (它被默认被用于 IDLE)，则来自 "
":mod:`sitecustomize` 的输出尝试会被忽略。 任何其他异常都会导致静默且可能令人困惑的进程失败。"

#: ../../library/site.rst:150
msgid ":mod:`usercustomize`"
msgstr ":mod:`usercustomize`"

#: ../../library/site.rst:154
msgid ""
"After this, an attempt is made to import a module named "
":mod:`usercustomize`, which can perform arbitrary user-specific "
"customizations, if :data:`~site.ENABLE_USER_SITE` is true.  This file is "
"intended to be created in the user site-packages directory (see below), "
"which is part of ``sys.path`` unless disabled by :option:`-s`.  If this "
"import fails with an :exc:`ImportError` or its subclass exception, and the "
"exception's :attr:`~ImportError.name` attribute equals to "
"``'usercustomize'``, it is silently ignored."
msgstr ""
"在此之后，会尝试导入一个名为 :mod:`usercustomize` 的模块，如果 :data:`~site.ENABLE_USER_SITE` "
"为真值，则它可以执行任意的用户专属定制。 这个文件应在用户的 site-packages 目录中创建（见下文），除非被 :option:`-s` "
"所禁用，在其他情况下该目录都是 ``sys.path`` 的组成部分。 如果此导入失败并引发 :exc:`ImportError` "
"或其子类异常，并且异常的 :attr:`~ImportError.name` 属性等于 ``'usercustomize'``，它会被静默地忽略。"

#: ../../library/site.rst:162
msgid ""
"Note that for some non-Unix systems, ``sys.prefix`` and ``sys.exec_prefix`` "
"are empty, and the path manipulations are skipped; however the import of "
":mod:`sitecustomize` and :mod:`usercustomize` is still attempted."
msgstr ""
"请注意对于某些非 Unix 系统来说，``sys.prefix`` 和 ``sys.exec_prefix`` "
"均为空值，并且路径操作会被跳过；但是仍然会尝试导入 :mod:`sitecustomize` 和 :mod:`usercustomize`。"

#: ../../library/site.rst:171
msgid "Readline configuration"
msgstr "Readline 配置"

#: ../../library/site.rst:173
msgid ""
"On systems that support :mod:`readline`, this module will also import and "
"configure the :mod:`rlcompleter` module, if Python is started in "
":ref:`interactive mode <tut-interactive>` and without the :option:`-S` "
"option. The default behavior is enable tab-completion and to use "
":file:`~/.python_history` as the history save file.  To disable it, delete "
"(or override) the :data:`sys.__interactivehook__` attribute in your "
":mod:`sitecustomize` or :mod:`usercustomize` module or your "
":envvar:`PYTHONSTARTUP` file."
msgstr ""
"在支持 :mod:`readline` 的系统上，这个模块也将导入并配置 :mod:`rlcompleter` 模块，如果 Python 是以 "
":ref:`交互模式 <tut-interactive>` 启动并且不带 :option:`-S` 选项的话。  默认的行为是启用 tab 键补全并使用"
" :file:`~/.python_history` 作为历史存档文件。 要禁用它，请删除（或重载）你的 :mod:`sitecustomize` 或 "
":mod:`usercustomize` 模块或 :envvar:`PYTHONSTARTUP` 文件中的 "
":data:`sys.__interactivehook__` 属性。"

#: ../../library/site.rst:182
msgid "Activation of rlcompleter and history was made automatic."
msgstr "rlcompleter 和 history 会被自动激活。"

#: ../../library/site.rst:187
msgid "Module contents"
msgstr "模块内容"

#: ../../library/site.rst:191
msgid "A list of prefixes for site-packages directories."
msgstr "site-packages 目录的前缀列表。"

#: ../../library/site.rst:196
msgid ""
"Flag showing the status of the user site-packages directory.  ``True`` means"
" that it is enabled and was added to ``sys.path``.  ``False`` means that it "
"was disabled by user request (with :option:`-s` or "
":envvar:`PYTHONNOUSERSITE`).  ``None`` means it was disabled for security "
"reasons (mismatch between user or group id and effective id) or by an "
"administrator."
msgstr ""
"显示用户 site-packages 目录状态的旗标。 ``True`` 意味着它被启用并被添加到 ``sys.path``。 ``False`` "
"意味着它按照用户请求被禁用 (通过 :option:`-s` 或 :envvar:`PYTHONNOUSERSITE`)。 ``None`` "
"意味着它因安全理由（user 或 group id 和 effective id 之间不匹配）或是被管理员所禁用。"

#: ../../library/site.rst:206
msgid ""
"Path to the user site-packages for the running Python.  Can be ``None`` if "
":func:`getusersitepackages` hasn't been called yet.  Default value is "
":file:`~/.local/lib/python{X.Y}[t]/site-packages` for UNIX and non-framework"
" macOS builds, :file:`~/Library/Python/{X.Y}/lib/python/site-packages` for "
"macOS framework builds, and "
":file:`{%APPDATA%}\\\\Python\\\\Python{XY}\\\\site-packages` on Windows.  "
"The optional \"t\" indicates the free-threaded build.  This directory is a "
"site directory, which means that :file:`.pth` files in it will be processed."
msgstr ""
"运行中的 Python 的用户级 site-packages 的路径。 它可以为 ``None``，如果 "
":func:`getusersitepackages` 尚未被调用的话。 默认值在 UNIX 和 macOS 非框架构建版上为 "
":file:`~/.local/lib/python{X.Y}[t]/site-packages`，在 macOS 框架构建版上为 "
":file:`~/Library/Python/{X.Y}/lib/python/site-packages`，而在 Windows 上为 "
":file:`{%APPDATA%}\\\\Python\\\\Python{XY}\\\\site-packages`。 可选的 \"t\" "
"表示自由线程构建版。 此目录属于 site 目录，这意味着其中的 :file:`.pth` 文件将会被处理。files in it will be "
"processed."

#: ../../library/site.rst:218
msgid ""
"Path to the base directory for the user site-packages.  Can be ``None`` if "
":func:`getuserbase` hasn't been called yet.  Default value is "
":file:`~/.local` for UNIX and macOS non-framework builds, "
":file:`~/Library/Python/{X.Y}` for macOS framework builds, and "
":file:`{%APPDATA%}\\\\Python` for Windows.  This value is used to compute "
"the installation directories for scripts, data files, Python modules, etc. "
"for the :ref:`user installation scheme <sysconfig-user-scheme>`. See also "
":envvar:`PYTHONUSERBASE`."
msgstr ""
"用户级 site-packages 目录的路径。 如果尚未调用 :func:`getuserbase` 则它可以为 ``None``。默认值在 Unix"
" 和 macOS 非框架编译版上为 :file:`~/.local`，在 macOS框架编译版上为 "
":file:`~/Library/Python/{X.Y}`，而在 Windows 上则为 :file:`{%APPDATA%}\\\\Python`。"
" 这个值会被用于计算针对 :ref:`用户安装方案 <sysconfig-user-scheme>` 的脚本、数据文件、Python 模块等的安装目录。"
" 另请参阅 :envvar:`PYTHONUSERBASE`。"

#: ../../library/site.rst:230
msgid ""
"Adds all the standard site-specific directories to the module search path.  "
"This function is called automatically when this module is imported, unless "
"the Python interpreter was started with the :option:`-S` flag."
msgstr ""
"将所有的标准站点专属目录添加到模块搜索路径。 这个函数会在导入此模块时被自动调用，除非 Python 解释器启动时附带了 :option:`-S` "
"旗标。"

#: ../../library/site.rst:234
msgid "This function used to be called unconditionally."
msgstr "这个函数使用无条件调用。"

#: ../../library/site.rst:240
msgid ""
"Add a directory to sys.path and process its :file:`.pth` files.  Typically "
"used in :mod:`sitecustomize` or :mod:`usercustomize` (see above)."
msgstr ""
"将一个目录添加到 sys.path 并处理其 :file:`.pth` 文件。 通常被用于 :mod:`sitecustomize` 或 "
":mod:`usercustomize` (见下文)。"

#: ../../library/site.rst:246
msgid "Return a list containing all global site-packages directories."
msgstr "返回包含所有全局 site-packages 目录的列表。"

#: ../../library/site.rst:253
msgid ""
"Return the path of the user base directory, :data:`USER_BASE`.  If it is not"
" initialized yet, this function will also set it, respecting "
":envvar:`PYTHONUSERBASE`."
msgstr ""
"返回用户基准目录的路径 :data:`USER_BASE`。 如果它尚未被初始化，则此函数还将参照 :envvar:`PYTHONUSERBASE` "
"来设置它。"

#: ../../library/site.rst:262
msgid ""
"Return the path of the user-specific site-packages directory, "
":data:`USER_SITE`.  If it is not initialized yet, this function will also "
"set it, respecting :data:`USER_BASE`.  To determine if the user-specific "
"site-packages was added to ``sys.path`` :data:`ENABLE_USER_SITE` should be "
"used."
msgstr ""
"返回用户专属 site-packages 目录的路径 :data:`USER_SITE`。 如果它尚未被初始化，则此函数还将参照 "
":data:`USER_BASE` 来设置它。 要确定用户专属 site-packages 是否已被添加到 ``sys.path`` 则应当使用 "
":data:`ENABLE_USER_SITE`。"

#: ../../library/site.rst:274
msgid "Command Line Interface"
msgstr "命令行界面"

#: ../../library/site.rst:278
msgid ""
"The :mod:`site` module also provides a way to get the user directories from "
"the command line:"
msgstr ":mod:`site` 模块还提供了一个从命令行获取用户目录的方式:"

#: ../../library/site.rst:281
msgid ""
"$ python -m site --user-site\n"
"/home/user/.local/lib/python3.11/site-packages"
msgstr ""
"$ python -m site --user-site\n"
"/home/user/.local/lib/python3.11/site-packages"

#: ../../library/site.rst:286
msgid ""
"If it is called without arguments, it will print the contents of "
":data:`sys.path` on the standard output, followed by the value of "
":data:`USER_BASE` and whether the directory exists, then the same thing for "
":data:`USER_SITE`, and finally the value of :data:`ENABLE_USER_SITE`."
msgstr ""
"如果它被不带参数地调用，它将在标准输出打印 :data:`sys.path` 的内容，再打印 :data:`USER_BASE` "
"的值以及该目录是否存在，然后打印 :data:`USER_SITE` 的相应信息，最后打印 :data:`ENABLE_USER_SITE` 的值。"

#: ../../library/site.rst:293
msgid "Print the path to the user base directory."
msgstr "输出用户基本的路径。"

#: ../../library/site.rst:297
msgid "Print the path to the user site-packages directory."
msgstr "输出用户site-packages目录的路径。"

#: ../../library/site.rst:299
msgid ""
"If both options are given, user base and user site will be printed (always "
"in this order), separated by :data:`os.pathsep`."
msgstr "如果同时给出了两个选项，则将打印用户基准目录和用户站点信息（总是按此顺序），并以 :data:`os.pathsep` 分隔。"

#: ../../library/site.rst:302
msgid ""
"If any option is given, the script will exit with one of these values: ``0``"
" if the user site-packages directory is enabled, ``1`` if it was disabled by"
" the user, ``2`` if it is disabled for security reasons or by an "
"administrator, and a value greater than 2 if there is an error."
msgstr ""
"如果给出了其中一个选项，脚本将退出并返回以下值中的一个：如果用户级 site-packages 目录被启用则为 ``0``，如果它被用户禁用则为 "
"``1``，如果它因安全理由或被管理员禁用则为 ``2``，如果发生错误则为大于 2 的值。"

#: ../../library/site.rst:309
msgid ":pep:`370` -- Per user site-packages directory"
msgstr ":pep:`370` -- 分用户的 site-packages 目录"

#: ../../library/site.rst:310
msgid ":ref:`sys-path-init` -- The initialization of :data:`sys.path`."
msgstr ":ref:`sys-path-init` -- :data:`sys.path` 的初始化。"

#: ../../library/site.rst:16
msgid "module"
msgstr "module"

#: ../../library/site.rst:16
msgid "search"
msgstr "搜索"

#: ../../library/site.rst:16 ../../library/site.rst:98
msgid "path"
msgstr "path"

#: ../../library/site.rst:29
msgid "site-packages"
msgstr "site-packages"

#: ../../library/site.rst:29
msgid "directory"
msgstr "directory"

#: ../../library/site.rst:69
msgid "# (hash)"
msgstr "# (hash)"

#: ../../library/site.rst:69
msgid "comment"
msgstr "注释"

#: ../../library/site.rst:69
msgid "statement"
msgstr "statement -- 语句"

#: ../../library/site.rst:69
msgid "import"
msgstr "import"

#: ../../library/site.rst:98
msgid "package"
msgstr "包"

#: ../../library/site.rst:98
msgid "configuration"
msgstr "配置"

#: ../../library/site.rst:98
msgid "file"
msgstr "文件"
