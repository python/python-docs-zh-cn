# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2025
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-07-25 18:10+0000\n"
"PO-Revision-Date: 2025-07-18 20:09+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2025\n"
"Language-Team: Chinese (China) (https://app.transifex.com/python-doc/teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/operator.rst:2
msgid ":mod:`operator` --- Standard operators as functions"
msgstr ":mod:`operator` --- 标准运算符替代函数"

#: ../../library/operator.rst:9
msgid "**Source code:** :source:`Lib/operator.py`"
msgstr "**源代码:** :source:`Lib/operator.py`"

#: ../../library/operator.rst:18
msgid ""
"The :mod:`operator` module exports a set of efficient functions "
"corresponding to the intrinsic operators of Python.  For example, "
"``operator.add(x, y)`` is equivalent to the expression ``x+y``. Many "
"function names are those used for special methods, without the double "
"underscores.  For backward compatibility, many of these have a variant with "
"the double underscores kept. The variants without the double underscores are"
" preferred for clarity."
msgstr ""
":mod:`operator` 模块提供了一套与Python的内置运算符对应的高效率函数。例如，``operator.add(x, y)`` 与表达式 "
"``x+y`` 相同。 "
"许多函数名与特殊方法名相同，只是没有双下划线。为了向后兼容性，也保留了许多包含双下划线的函数。为了表述清楚，建议使用没有双下划线的函数。"

#: ../../library/operator.rst:25
msgid ""
"The functions fall into categories that perform object comparisons, logical "
"operations, mathematical operations and sequence operations."
msgstr "函数包含的种类有：对象的比较运算、逻辑运算、数学运算以及序列运算。"

#: ../../library/operator.rst:28
msgid ""
"The object comparison functions are useful for all objects, and are named "
"after the rich comparison operators they support:"
msgstr "对象比较函数适用于所有的对象，函数名根据它们对应的比较运算符命名。"

#: ../../library/operator.rst:45
msgid ""
"Perform \"rich comparisons\" between *a* and *b*. Specifically, ``lt(a, b)``"
" is equivalent to ``a < b``, ``le(a, b)`` is equivalent to ``a <= b``, "
"``eq(a, b)`` is equivalent to ``a == b``, ``ne(a, b)`` is equivalent to ``a "
"!= b``, ``gt(a, b)`` is equivalent to ``a > b`` and ``ge(a, b)`` is "
"equivalent to ``a >= b``.  Note that these functions can return any value, "
"which may or may not be interpretable as a Boolean value.  See "
":ref:`comparisons` for more information about rich comparisons."
msgstr ""
"在 *a* 和 *b* 之间进行全比较。具体的，``lt(a, b)`` 与 ``a < b`` 相同， ``le(a, b)`` 与 ``a <= "
"b`` 相同，``eq(a, b)`` 与 ``a == b`` 相同，``ne(a, b)`` 与 ``a != b`` 相同，``gt(a, "
"b)`` 与 ``a > b`` 相同，``ge(a, b)`` 与 ``a >= b`` "
"相同。注意这些函数可以返回任何值，无论它是否可当作布尔值。关于全比较的更多信息请参考 :ref:`comparisons` 。"

#: ../../library/operator.rst:54
msgid ""
"The logical operations are also generally applicable to all objects, and "
"support truth tests, identity tests, and boolean operations:"
msgstr "逻辑运算通常也适用于所有对象，并且支持真值检测、标识检测和布尔运算："

#: ../../library/operator.rst:61
msgid ""
"Return the outcome of :keyword:`not` *obj*.  (Note that there is no "
":meth:`__not__` method for object instances; only the interpreter core "
"defines this operation.  The result is affected by the :meth:`__bool__` and "
":meth:`__len__` methods.)"
msgstr ""
"返回 :keyword:`not` *obj* 的结果。 （请注意对象实例并没有 :meth:`__not__` 方法；只有解释器核心可定义此操作。 "
"结果会受 :meth:`__bool__` 和 :meth:`__len__` 方法影响。）"

#: ../../library/operator.rst:69
msgid ""
"Return :const:`True` if *obj* is true, and :const:`False` otherwise.  This "
"is equivalent to using the :class:`bool` constructor."
msgstr ""
"如果 *obj* 为真值则返回 :const:`True`，否则返回 :const:`False`。 这等价于使用 :class:`bool` 构造器。"

#: ../../library/operator.rst:75
msgid "Return ``a is b``.  Tests object identity."
msgstr "返回 ``a is b``。 检测对象标识。"

#: ../../library/operator.rst:80
msgid "Return ``a is not b``.  Tests object identity."
msgstr "返回 ``a is not b``。 检测对象标识。"

#: ../../library/operator.rst:83
msgid "The mathematical and bitwise operations are the most numerous:"
msgstr "数学和按位运算的种类是最多的："

#: ../../library/operator.rst:89
msgid "Return the absolute value of *obj*."
msgstr "返回 *obj* 的绝对值。"

#: ../../library/operator.rst:95
msgid "Return ``a + b``, for *a* and *b* numbers."
msgstr "对于数字 *a* 和 *b*，返回 ``a + b``。"

#: ../../library/operator.rst:101
msgid "Return the bitwise and of *a* and *b*."
msgstr "返回 *x* 和 *y* 按位与的结果。"

#: ../../library/operator.rst:107
msgid "Return ``a // b``."
msgstr "返回 ``a // b``。"

#: ../../library/operator.rst:113
msgid "Return *a* converted to an integer.  Equivalent to ``a.__index__()``."
msgstr "返回 *a* 转换为整数的结果。 等价于 ``a.__index__()``。"

#: ../../library/operator.rst:115
msgid ""
"The result always has exact type :class:`int`.  Previously, the result could"
" have been an instance of a subclass of ``int``."
msgstr "结果总是为 :class:`int` 类型。 在之前版本中，结果可能为 ``int`` 的子类的实例。"

#: ../../library/operator.rst:125
msgid ""
"Return the bitwise inverse of the number *obj*.  This is equivalent to "
"``~obj``."
msgstr "返回数字 *obj* 按位取反的结果。 这等价于 ``~obj``。"

#: ../../library/operator.rst:131
msgid "Return *a* shifted left by *b*."
msgstr "返回 *a* 左移 *b* 位的结果。"

#: ../../library/operator.rst:137
msgid "Return ``a % b``."
msgstr "返回 ``a % b``。"

#: ../../library/operator.rst:143
msgid "Return ``a * b``, for *a* and *b* numbers."
msgstr "对于数字 *a* 和 *b*，返回 ``a * b``。"

#: ../../library/operator.rst:149
msgid "Return ``a @ b``."
msgstr "返回 ``a @ b``。"

#: ../../library/operator.rst:157
msgid "Return *obj* negated (``-obj``)."
msgstr "返回 *obj* 取负的结果 (``-obj``)。"

#: ../../library/operator.rst:163
msgid "Return the bitwise or of *a* and *b*."
msgstr "返回 *a* 和 *b* 按位或的结果。"

#: ../../library/operator.rst:169
msgid "Return *obj* positive (``+obj``)."
msgstr "返回 *obj* 取正的结果 (``+obj``)。"

#: ../../library/operator.rst:175
msgid "Return ``a ** b``, for *a* and *b* numbers."
msgstr "对于数字 *a* 和 *b*，返回 ``a ** b``。"

#: ../../library/operator.rst:181
msgid "Return *a* shifted right by *b*."
msgstr "返回 *a* 右移 *b* 位的结果。"

#: ../../library/operator.rst:187
msgid "Return ``a - b``."
msgstr "返回 ``a - b``。"

#: ../../library/operator.rst:193
msgid ""
"Return ``a / b`` where 2/3 is .66 rather than 0.  This is also known as "
"\"true\" division."
msgstr "返回 ``a / b`` 例如 2/3 将等于 .66 而不是 0。 这也被称为“真”除法。"

#: ../../library/operator.rst:200
msgid "Return the bitwise exclusive or of *a* and *b*."
msgstr "返回 *a* 和 *b* 按位异或的结果。"

#: ../../library/operator.rst:203
msgid ""
"Operations which work with sequences (some of them with mappings too) "
"include:"
msgstr "适用于序列的操作（其中一些也适用于映射）包括："

#: ../../library/operator.rst:208
msgid "Return ``a + b`` for *a* and *b* sequences."
msgstr "对于序列 *a* 和 *b*，返回 ``a + b``。"

#: ../../library/operator.rst:214
msgid "Return the outcome of the test ``b in a``. Note the reversed operands."
msgstr "返回 ``b in a`` 检测的结果。 请注意操作数是反序的。"

#: ../../library/operator.rst:219
msgid "Return the number of occurrences of *b* in *a*."
msgstr "返回 *b* 在 *a* 中的出现次数。"

#: ../../library/operator.rst:225
msgid "Remove the value of *a* at index *b*."
msgstr "移除 *a* 中索引号为 *b* 的值。"

#: ../../library/operator.rst:231
msgid "Return the value of *a* at index *b*."
msgstr "返回 *a* 中索引为 *b* 的值。"

#: ../../library/operator.rst:236
msgid "Return the index of the first of occurrence of *b* in *a*."
msgstr "返回 *b* 在 *a* 中首次出现所在的索引号。"

#: ../../library/operator.rst:242
msgid "Set the value of *a* at index *b* to *c*."
msgstr "将 *a* 中索引号为 *b* 的值设为 *c*。"

#: ../../library/operator.rst:247
msgid ""
"Return an estimated length for the object *o*. First try to return its "
"actual length, then an estimate using :meth:`object.__length_hint__`, and "
"finally return the default value."
msgstr ""
"返回对象 *o* 的估计长度。 首先尝试返回其实际长度，再使用 :meth:`object.__length_hint__` "
"得出估计值，最后返回默认值。"

#: ../../library/operator.rst:253
msgid ""
"The :mod:`operator` module also defines tools for generalized attribute and "
"item lookups.  These are useful for making fast field extractors as "
"arguments for :func:`map`, :func:`sorted`, :meth:`itertools.groupby`, or "
"other functions that expect a function argument."
msgstr ""
":mod:`operator` 模块还定义了一些用于常规属性和条目查找的工具。 这些工具适合用来编写快速字段提取器作为 :func:`map`, "
":func:`sorted`, :meth:`itertools.groupby` 或其他需要相应函数参数的函数的参数。"

#: ../../library/operator.rst:262
msgid ""
"Return a callable object that fetches *attr* from its operand. If more than "
"one attribute is requested, returns a tuple of attributes. The attribute "
"names can also contain dots. For example:"
msgstr "返回一个可从操作数中获取 *attr* 的可调用对象。 如果请求了一个以上的属性，则返回一个属性元组。 属性名称还可包含点号。 例如："

#: ../../library/operator.rst:266
msgid ""
"After ``f = attrgetter('name')``, the call ``f(b)`` returns ``b.name``."
msgstr "在 ``f = attrgetter('name')`` 之后，调用 ``f(b)`` 将返回 ``b.name``。"

#: ../../library/operator.rst:268
msgid ""
"After ``f = attrgetter('name', 'date')``, the call ``f(b)`` returns "
"``(b.name, b.date)``."
msgstr ""
"在 ``f = attrgetter('name', 'date')`` 之后，调用 ``f(b)`` 将返回 ``(b.name, "
"b.date)``。"

#: ../../library/operator.rst:271
msgid ""
"After ``f = attrgetter('name.first', 'name.last')``, the call ``f(b)`` "
"returns ``(b.name.first, b.name.last)``."
msgstr ""
"在 ``f = attrgetter('name.first', 'name.last')`` 之后，调用 ``f(b)`` 将返回 "
"``(b.name.first, b.name.last)``。"

#: ../../library/operator.rst:274 ../../library/operator.rst:306
#: ../../library/operator.rst:354
msgid "Equivalent to::"
msgstr "等价于::"

#: ../../library/operator.rst:297
msgid ""
"Return a callable object that fetches *item* from its operand using the "
"operand's :meth:`__getitem__` method.  If multiple items are specified, "
"returns a tuple of lookup values.  For example:"
msgstr ""
"返回一个使用操作数的 :meth:`__getitem__` 方法从操作数中获取 *item* 的可调用对象。 "
"如果指定了多个条目，则返回一个查找值的元组。 例如："

#: ../../library/operator.rst:301
msgid "After ``f = itemgetter(2)``, the call ``f(r)`` returns ``r[2]``."
msgstr "在 ``f = itemgetter(2)`` 之后，调用 ``f(r)`` 将返回 ``r[2]``。"

#: ../../library/operator.rst:303
msgid ""
"After ``g = itemgetter(2, 5, 3)``, the call ``g(r)`` returns ``(r[2], r[5], "
"r[3])``."
msgstr ""
"在 ``g = itemgetter(2, 5, 3)`` 之后，调用 ``g(r)`` 将返回 ``(r[2], r[5], r[3])``。"

#: ../../library/operator.rst:318
msgid ""
"The items can be any type accepted by the operand's :meth:`__getitem__` "
"method.  Dictionaries accept any :term:`hashable` value.  Lists, tuples, and"
" strings accept an index or a slice:"
msgstr ""
"条目可以是操作数的 :meth:`__getitem__` 方法 所接受的任何类型。 字典接受任意 :term:`hashable` 值。 "
"列表、元组和字符串接受索引或切片对象:"

#: ../../library/operator.rst:332
msgid ""
"Example of using :func:`itemgetter` to retrieve specific fields from a tuple"
" record:"
msgstr "使用 :func:`itemgetter` 从元组的记录中提取特定字段的例子："

#: ../../library/operator.rst:345
msgid ""
"Return a callable object that calls the method *name* on its operand.  If "
"additional arguments and/or keyword arguments are given, they will be given "
"to the method as well.  For example:"
msgstr "返回一个在操作数上调用 *name* 方法的可调用对象。 如果给出额外的参数和/或关键字参数，它们也将被传给该方法。 例如："

#: ../../library/operator.rst:349
msgid ""
"After ``f = methodcaller('name')``, the call ``f(b)`` returns ``b.name()``."
msgstr "在 ``f = methodcaller('name')`` 之后，调用 ``f(b)`` 将返回 ``b.name()``。"

#: ../../library/operator.rst:351
msgid ""
"After ``f = methodcaller('name', 'foo', bar=1)``, the call ``f(b)`` returns "
"``b.name('foo', bar=1)``."
msgstr ""
"在 ``f = methodcaller('name', 'foo', bar=1)`` 之后，调用 ``f(b)`` 将返回 "
"``b.name('foo', bar=1)``。"

#: ../../library/operator.rst:365
msgid "Mapping Operators to Functions"
msgstr "将运算符映射到函数"

#: ../../library/operator.rst:367
msgid ""
"This table shows how abstract operations correspond to operator symbols in "
"the Python syntax and the functions in the :mod:`operator` module."
msgstr "以下表格显示了抽象运算是如何对应于 Python 语法中的运算符和 :mod:`operator` 模块中的函数的。"

#: ../../library/operator.rst:371
msgid "Operation"
msgstr "运算"

#: ../../library/operator.rst:371
msgid "Syntax"
msgstr "语法"

#: ../../library/operator.rst:371
msgid "Function"
msgstr "函数"

#: ../../library/operator.rst:373
msgid "Addition"
msgstr "加法"

#: ../../library/operator.rst:373
msgid "``a + b``"
msgstr "``a + b``"

#: ../../library/operator.rst:373
msgid "``add(a, b)``"
msgstr "``add(a, b)``"

#: ../../library/operator.rst:375
msgid "Concatenation"
msgstr "字符串拼接"

#: ../../library/operator.rst:375
msgid "``seq1 + seq2``"
msgstr "``seq1 + seq2``"

#: ../../library/operator.rst:375
msgid "``concat(seq1, seq2)``"
msgstr "``concat(seq1, seq2)``"

#: ../../library/operator.rst:377
msgid "Containment Test"
msgstr "包含测试"

#: ../../library/operator.rst:377
msgid "``obj in seq``"
msgstr "``obj in seq``"

#: ../../library/operator.rst:377
msgid "``contains(seq, obj)``"
msgstr "``contains(seq, obj)``"

#: ../../library/operator.rst:379 ../../library/operator.rst:381
msgid "Division"
msgstr "除法"

#: ../../library/operator.rst:379
msgid "``a / b``"
msgstr "``a / b``"

#: ../../library/operator.rst:379
msgid "``truediv(a, b)``"
msgstr "``truediv(a, b)``"

#: ../../library/operator.rst:381
msgid "``a // b``"
msgstr "``a // b``"

#: ../../library/operator.rst:381
msgid "``floordiv(a, b)``"
msgstr "``floordiv(a, b)``"

#: ../../library/operator.rst:383
msgid "Bitwise And"
msgstr "按位与"

#: ../../library/operator.rst:383
msgid "``a & b``"
msgstr "``a & b``"

#: ../../library/operator.rst:383
msgid "``and_(a, b)``"
msgstr "``and_(a, b)``"

#: ../../library/operator.rst:385
msgid "Bitwise Exclusive Or"
msgstr "按位异或"

#: ../../library/operator.rst:385
msgid "``a ^ b``"
msgstr "``a ^ b``"

#: ../../library/operator.rst:385
msgid "``xor(a, b)``"
msgstr "``xor(a, b)``"

#: ../../library/operator.rst:387
msgid "Bitwise Inversion"
msgstr "按位取反"

#: ../../library/operator.rst:387
msgid "``~ a``"
msgstr "``~ a``"

#: ../../library/operator.rst:387
msgid "``invert(a)``"
msgstr "``invert(a)``"

#: ../../library/operator.rst:389
msgid "Bitwise Or"
msgstr "按位或"

#: ../../library/operator.rst:389
msgid "``a | b``"
msgstr "``a | b``"

#: ../../library/operator.rst:389
msgid "``or_(a, b)``"
msgstr "``or_(a, b)``"

#: ../../library/operator.rst:391
msgid "Exponentiation"
msgstr "取幂"

#: ../../library/operator.rst:391
msgid "``a ** b``"
msgstr "``a ** b``"

#: ../../library/operator.rst:391
msgid "``pow(a, b)``"
msgstr "``pow(a, b)``"

#: ../../library/operator.rst:393 ../../library/operator.rst:395
msgid "Identity"
msgstr "标识"

#: ../../library/operator.rst:393
msgid "``a is b``"
msgstr "``a is b``"

#: ../../library/operator.rst:393
msgid "``is_(a, b)``"
msgstr "``is_(a, b)``"

#: ../../library/operator.rst:395
msgid "``a is not b``"
msgstr "``a is not b``"

#: ../../library/operator.rst:395
msgid "``is_not(a, b)``"
msgstr "``is_not(a, b)``"

#: ../../library/operator.rst:397
msgid "Indexed Assignment"
msgstr "索引赋值"

#: ../../library/operator.rst:397
msgid "``obj[k] = v``"
msgstr "``obj[k] = v``"

#: ../../library/operator.rst:397
msgid "``setitem(obj, k, v)``"
msgstr "``setitem(obj, k, v)``"

#: ../../library/operator.rst:399
msgid "Indexed Deletion"
msgstr "索引删除"

#: ../../library/operator.rst:399
msgid "``del obj[k]``"
msgstr "``del obj[k]``"

#: ../../library/operator.rst:399
msgid "``delitem(obj, k)``"
msgstr "``delitem(obj, k)``"

#: ../../library/operator.rst:401
msgid "Indexing"
msgstr "索引取值"

#: ../../library/operator.rst:401
msgid "``obj[k]``"
msgstr "``obj[k]``"

#: ../../library/operator.rst:401
msgid "``getitem(obj, k)``"
msgstr "``getitem(obj, k)``"

#: ../../library/operator.rst:403
msgid "Left Shift"
msgstr "左移"

#: ../../library/operator.rst:403
msgid "``a << b``"
msgstr "``a << b``"

#: ../../library/operator.rst:403
msgid "``lshift(a, b)``"
msgstr "``lshift(a, b)``"

#: ../../library/operator.rst:405
msgid "Modulo"
msgstr "取模"

#: ../../library/operator.rst:405
msgid "``a % b``"
msgstr "``a % b``"

#: ../../library/operator.rst:405
msgid "``mod(a, b)``"
msgstr "``mod(a, b)``"

#: ../../library/operator.rst:407
msgid "Multiplication"
msgstr "乘法"

#: ../../library/operator.rst:407
msgid "``a * b``"
msgstr "``a * b``"

#: ../../library/operator.rst:407
msgid "``mul(a, b)``"
msgstr "``mul(a, b)``"

#: ../../library/operator.rst:409
msgid "Matrix Multiplication"
msgstr "矩阵乘法"

#: ../../library/operator.rst:409
msgid "``a @ b``"
msgstr "``a @ b``"

#: ../../library/operator.rst:409
msgid "``matmul(a, b)``"
msgstr "``matmul(a, b)``"

#: ../../library/operator.rst:411
msgid "Negation (Arithmetic)"
msgstr "取反（算术）"

#: ../../library/operator.rst:411
msgid "``- a``"
msgstr "``- a``"

#: ../../library/operator.rst:411
msgid "``neg(a)``"
msgstr "``neg(a)``"

#: ../../library/operator.rst:413
msgid "Negation (Logical)"
msgstr "取反（逻辑）"

#: ../../library/operator.rst:413
msgid "``not a``"
msgstr "``not a``"

#: ../../library/operator.rst:413
msgid "``not_(a)``"
msgstr "``not_(a)``"

#: ../../library/operator.rst:415
msgid "Positive"
msgstr "正数"

#: ../../library/operator.rst:415
msgid "``+ a``"
msgstr "``+ a``"

#: ../../library/operator.rst:415
msgid "``pos(a)``"
msgstr "``pos(a)``"

#: ../../library/operator.rst:417
msgid "Right Shift"
msgstr "右移"

#: ../../library/operator.rst:417
msgid "``a >> b``"
msgstr "``a >> b``"

#: ../../library/operator.rst:417
msgid "``rshift(a, b)``"
msgstr "``rshift(a, b)``"

#: ../../library/operator.rst:419
msgid "Slice Assignment"
msgstr "切片赋值"

#: ../../library/operator.rst:419
msgid "``seq[i:j] = values``"
msgstr "``seq[i:j] = values``"

#: ../../library/operator.rst:419
msgid "``setitem(seq, slice(i, j), values)``"
msgstr "``setitem(seq, slice(i, j), values)``"

#: ../../library/operator.rst:421
msgid "Slice Deletion"
msgstr "切片删除"

#: ../../library/operator.rst:421
msgid "``del seq[i:j]``"
msgstr "``del seq[i:j]``"

#: ../../library/operator.rst:421
msgid "``delitem(seq, slice(i, j))``"
msgstr "``delitem(seq, slice(i, j))``"

#: ../../library/operator.rst:423
msgid "Slicing"
msgstr "切片取值"

#: ../../library/operator.rst:423
msgid "``seq[i:j]``"
msgstr "``seq[i:j]``"

#: ../../library/operator.rst:423
msgid "``getitem(seq, slice(i, j))``"
msgstr "``getitem(seq, slice(i, j))``"

#: ../../library/operator.rst:425
msgid "String Formatting"
msgstr "字符串格式化"

#: ../../library/operator.rst:425
msgid "``s % obj``"
msgstr "``s % obj``"

#: ../../library/operator.rst:425
msgid "``mod(s, obj)``"
msgstr "``mod(s, obj)``"

#: ../../library/operator.rst:427
msgid "Subtraction"
msgstr "减法"

#: ../../library/operator.rst:427
msgid "``a - b``"
msgstr "``a - b``"

#: ../../library/operator.rst:427
msgid "``sub(a, b)``"
msgstr "``sub(a, b)``"

#: ../../library/operator.rst:429
msgid "Truth Test"
msgstr "真值测试"

#: ../../library/operator.rst:429
msgid "``obj``"
msgstr "``obj``"

#: ../../library/operator.rst:429
msgid "``truth(obj)``"
msgstr "``truth(obj)``"

#: ../../library/operator.rst:431 ../../library/operator.rst:433
#: ../../library/operator.rst:439 ../../library/operator.rst:441
msgid "Ordering"
msgstr "比较"

#: ../../library/operator.rst:431
msgid "``a < b``"
msgstr "``a < b``"

#: ../../library/operator.rst:431
msgid "``lt(a, b)``"
msgstr "``lt(a, b)``"

#: ../../library/operator.rst:433
msgid "``a <= b``"
msgstr "``a <= b``"

#: ../../library/operator.rst:433
msgid "``le(a, b)``"
msgstr "``le(a, b)``"

#: ../../library/operator.rst:435
msgid "Equality"
msgstr "相等"

#: ../../library/operator.rst:435
msgid "``a == b``"
msgstr "``a == b``"

#: ../../library/operator.rst:435
msgid "``eq(a, b)``"
msgstr "``eq(a, b)``"

#: ../../library/operator.rst:437
msgid "Difference"
msgstr "不等"

#: ../../library/operator.rst:437
msgid "``a != b``"
msgstr "``a != b``"

#: ../../library/operator.rst:437
msgid "``ne(a, b)``"
msgstr "``ne(a, b)``"

#: ../../library/operator.rst:439
msgid "``a >= b``"
msgstr "``a >= b``"

#: ../../library/operator.rst:439
msgid "``ge(a, b)``"
msgstr "``ge(a, b)``"

#: ../../library/operator.rst:441
msgid "``a > b``"
msgstr "``a > b``"

#: ../../library/operator.rst:441
msgid "``gt(a, b)``"
msgstr "``gt(a, b)``"

#: ../../library/operator.rst:445
msgid "In-place Operators"
msgstr "原地运算符"

#: ../../library/operator.rst:447
msgid ""
"Many operations have an \"in-place\" version.  Listed below are functions "
"providing a more primitive access to in-place operators than the usual "
"syntax does; for example, the :term:`statement` ``x += y`` is equivalent to "
"``x = operator.iadd(x, y)``.  Another way to put it is to say that ``z = "
"operator.iadd(x, y)`` is equivalent to the compound statement ``z = x; z += "
"y``."
msgstr ""
"许多运算都有“原地”版本。 以下列出的是提供对原地运算符相比通常语法更底层访问的函数，例如 :term:`statement` ``x += y`` "
"相当于 ``x = operator.iadd(x, y)``。 换一种方式来讲就是 ``z = operator.iadd(x, y)`` "
"等价于语句块 ``z = x; z += y``。"

#: ../../library/operator.rst:454
msgid ""
"In those examples, note that when an in-place method is called, the "
"computation and assignment are performed in two separate steps.  The in-"
"place functions listed below only do the first step, calling the in-place "
"method.  The second step, assignment, is not handled."
msgstr ""
"在这些例子中，请注意当调用一个原地方法时，运算和赋值是分成两个步骤来执行的。 下面列出的原地函数只执行第一步即调用原地方法。 第二步赋值则不加处理。"

#: ../../library/operator.rst:459
msgid ""
"For immutable targets such as strings, numbers, and tuples, the updated "
"value is computed, but not assigned back to the input variable:"
msgstr "对于不可变的目标例如字符串、数字和元组，更新的值会被计算，但不会被再被赋值给输入变量："

#: ../../library/operator.rst:468
msgid ""
"For mutable targets such as lists and dictionaries, the in-place method will"
" perform the update, so no subsequent assignment is necessary:"
msgstr "对于可变的目标例如列表和字典，原地方法将执行更新，因此不需要后续赋值操作："

#: ../../library/operator.rst:480
msgid "``a = iadd(a, b)`` is equivalent to ``a += b``."
msgstr "``a = iadd(a, b)`` 等价于 ``a += b``。"

#: ../../library/operator.rst:486
msgid "``a = iand(a, b)`` is equivalent to ``a &= b``."
msgstr "``a = iand(a, b)`` 等价于 ``a &= b``。"

#: ../../library/operator.rst:492
msgid ""
"``a = iconcat(a, b)`` is equivalent to ``a += b`` for *a* and *b* sequences."
msgstr "``a = iconcat(a, b)`` 等价于 ``a += b`` 其中 *a* 和 *b* 为序列。"

#: ../../library/operator.rst:498
msgid "``a = ifloordiv(a, b)`` is equivalent to ``a //= b``."
msgstr "``a = ifloordiv(a, b)`` 等价于 ``a //= b``。"

#: ../../library/operator.rst:504
msgid "``a = ilshift(a, b)`` is equivalent to ``a <<= b``."
msgstr "``a = ilshift(a, b)`` 等价于 ``a <<= b``。"

#: ../../library/operator.rst:510
msgid "``a = imod(a, b)`` is equivalent to ``a %= b``."
msgstr "``a = imod(a, b)`` 等价于 ``a %= b``。"

#: ../../library/operator.rst:516
msgid "``a = imul(a, b)`` is equivalent to ``a *= b``."
msgstr "``a = imul(a, b)`` 等价于 ``a *= b``。"

#: ../../library/operator.rst:522
msgid "``a = imatmul(a, b)`` is equivalent to ``a @= b``."
msgstr "``a = imatmul(a, b)`` 等价于 ``a @= b``。"

#: ../../library/operator.rst:530
msgid "``a = ior(a, b)`` is equivalent to ``a |= b``."
msgstr "``a = ior(a, b)`` 等价于 ``a |= b``。"

#: ../../library/operator.rst:536
msgid "``a = ipow(a, b)`` is equivalent to ``a **= b``."
msgstr "``a = ipow(a, b)`` 等价于 ``a **= b``。"

#: ../../library/operator.rst:542
msgid "``a = irshift(a, b)`` is equivalent to ``a >>= b``."
msgstr "``a = irshift(a, b)`` 等价于 ``a >>= b``。"

#: ../../library/operator.rst:548
msgid "``a = isub(a, b)`` is equivalent to ``a -= b``."
msgstr "``a = isub(a, b)`` 等价于 ``a -= b``。"

#: ../../library/operator.rst:554
msgid "``a = itruediv(a, b)`` is equivalent to ``a /= b``."
msgstr "``a = itruediv(a, b)`` 等价于 ``a /= b``。"

#: ../../library/operator.rst:560
msgid "``a = ixor(a, b)`` is equivalent to ``a ^= b``."
msgstr "``a = ixor(a, b)`` 等价于 ``a ^= b``。"
