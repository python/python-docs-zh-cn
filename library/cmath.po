# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Nyuan Zhang, 2025
# Stan Ulbrych, 2025
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-05 17:03+0000\n"
"PO-Revision-Date: 2025-07-18 20:05+0000\n"
"Last-Translator: Stan Ulbrych, 2025\n"
"Language-Team: Chinese (China) (https://app.transifex.com/python-doc/teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/cmath.rst:2
msgid ":mod:`cmath` --- Mathematical functions for complex numbers"
msgstr ":mod:`cmath` --- 关于复数的数学函数"

#: ../../library/cmath.rst:9
msgid ""
"This module provides access to mathematical functions for complex numbers.  "
"The functions in this module accept integers, floating-point numbers or "
"complex numbers as arguments. They will also accept any Python object that "
"has either a :meth:`~object.__complex__` or a :meth:`~object.__float__` "
"method: these methods are used to convert the object to a complex or "
"floating-point number, respectively, and the function is then applied to the"
" result of the conversion."
msgstr ""
"本模块提供了一些适用于复数的数学函数。 本模块中的函数接受整数、浮点数或复数作为参数。 它们也接受任意具有 "
":meth:`~object.__complex__` 或 :meth:`~object.__float__` 方法的 Python "
"对象：这些方法分别用于将对象转换为复数或浮点数，然后再将函数应用于转换后的结果。"

#: ../../library/cmath.rst:18
msgid ""
"For functions involving branch cuts, we have the problem of deciding how to "
"define those functions on the cut itself. Following Kahan's \"Branch cuts "
"for complex elementary functions\" paper, as well as Annex G of C99 and "
"later C standards, we use the sign of zero to distinguish one side of the "
"branch cut from the other: for a branch cut along (a portion of) the real "
"axis we look at the sign of the imaginary part, while for a branch cut along"
" the imaginary axis we look at the sign of the real part."
msgstr ""
"对于涉及分支切割的函数，我们会有确定如何在切割本身上定义这些函数的问题。 根据 Kahan 的论文 \"Branch cuts for complex "
"elementary functions\"，以及 C99 的附录 G 和之后的 C "
"标准，我们使用零符号来区别分支切割的一侧和另一侧：对于沿实轴（一部分）的分支切割我们要看虚部的符号，而对于沿虚轴的分支切割我们则要看实部的符号。"

#: ../../library/cmath.rst:26
msgid ""
"For example, the :func:`cmath.sqrt` function has a branch cut along the "
"negative real axis. An argument of ``complex(-2.0, -0.0)`` is treated as "
"though it lies *below* the branch cut, and so gives a result on the negative"
" imaginary axis::"
msgstr ""
"例如，:func:`cmath.sqrt` 函数有一个沿着负实轴的分支切割。 参数 ``complex(-2.0, -0.0)`` "
"会被当作位于切支切割的 *下方* 来处理，因而将给出一个负虚轴上的结果。"

#: ../../library/cmath.rst:34
msgid ""
"But an argument of ``complex(-2.0, 0.0)`` is treated as though it lies above"
" the branch cut::"
msgstr "但是参数 ``complex(-2.0, 0.0)`` 则会被当作是位于支割线的上方来处理::"

#: ../../library/cmath.rst:42
msgid "Conversions to and from polar coordinates"
msgstr "到极坐标和从极坐标的转换"

#: ../../library/cmath.rst:44
msgid ""
"A Python complex number ``z`` is stored internally using *rectangular* or "
"*Cartesian* coordinates.  It is completely determined by its *real part* "
"``z.real`` and its *imaginary part* ``z.imag``.  In other words::"
msgstr ""
"使用 *矩形坐标* 或 *笛卡尔坐标* 在内部存储 Python 复数 ``z``。 这完全取决于它的 *实部* ``z.real`` 和 *虚部* "
"``z.imag``。 换句话说::"

#: ../../library/cmath.rst:51
msgid ""
"*Polar coordinates* give an alternative way to represent a complex number.  "
"In polar coordinates, a complex number *z* is defined by the modulus *r* and"
" the phase angle *phi*. The modulus *r* is the distance from *z* to the "
"origin, while the phase *phi* is the counterclockwise angle, measured in "
"radians, from the positive x-axis to the line segment that joins the origin "
"to *z*."
msgstr ""
"*极坐标* 提供了另一种复数的表示方法。在极坐标中，一个复数 *z* 由模量 *r* 和相位角 *phi* 来定义。模量 *r* 是从 *z* "
"到坐标原点的距离，而相位角 *phi* 是以弧度为单位的，逆时针的，从正X轴到连接原点和 *z* 的线段间夹角的角度。"

#: ../../library/cmath.rst:58
msgid ""
"The following functions can be used to convert from the native rectangular "
"coordinates to polar coordinates and back."
msgstr "下面的函数可用于原生直角坐标与极坐标的相互转换。"

#: ../../library/cmath.rst:63
msgid ""
"Return the phase of *x* (also known as the *argument* of *x*), as a float. "
"``phase(x)`` is equivalent to ``math.atan2(x.imag, x.real)``.  The result "
"lies in the range [-\\ *π*, *π*], and the branch cut for this operation lies"
" along the negative real axis.  The sign of the result is the same as the "
"sign of ``x.imag``, even when ``x.imag`` is zero::"
msgstr ""
"将 *x* 的相位 (或称 *x* 的 *参数*) 作为一个浮点数返回。 ``phase(x)`` 等价于 ``math.atan2(x.imag, "
"x.real)``。 结果将位于 [-\\ *π*, *π*] 范围内，且此操作的支割线将位于负实轴上。 结果的符号将与 ``x.imag`` "
"的符号相同，即使 ``x.imag`` 的值为零::"

#: ../../library/cmath.rst:77
msgid ""
"The modulus (absolute value) of a complex number *x* can be computed using "
"the built-in :func:`abs` function.  There is no separate :mod:`cmath` module"
" function for this operation."
msgstr ""
"一个复数 *x* 的模数（绝对值）可以通过内置函数 :func:`abs` 计算。没有单独的 :mod:`cmath` 模块函数用于这个操作。"

#: ../../library/cmath.rst:84
msgid ""
"Return the representation of *x* in polar coordinates.  Returns a pair ``(r,"
" phi)`` where *r* is the modulus of *x* and phi is the phase of *x*.  "
"``polar(x)`` is equivalent to ``(abs(x), phase(x))``."
msgstr ""
"在极坐标中返回 *x* 的表达方式。返回一个数对 ``(r, phi)``，*r* 是 *x* 的模数，*phi* 是 *x* 的相位角。 "
"``polar(x)`` 相当于 ``(abs(x), phase(x))``。"

#: ../../library/cmath.rst:92
msgid ""
"Return the complex number *x* with polar coordinates *r* and *phi*. "
"Equivalent to ``r * (math.cos(phi) + math.sin(phi)*1j)``."
msgstr ""
"通过极坐标的 *r* 和 *phi* 返回复数 *x*。相当于 ``r * (math.cos(phi) + math.sin(phi)*1j)``。"

#: ../../library/cmath.rst:97
msgid "Power and logarithmic functions"
msgstr "幂函数与对数函数"

#: ../../library/cmath.rst:101
msgid ""
"Return *e* raised to the power *x*, where *e* is the base of natural "
"logarithms."
msgstr "返回 *e* 的 *x* 次方，*e* 是自然对数的底数。"

#: ../../library/cmath.rst:107
msgid ""
"Returns the logarithm of *x* to the given *base*. If the *base* is not "
"specified, returns the natural logarithm of *x*. There is one branch cut, "
"from 0 along the negative real axis to -∞."
msgstr ""
"返回 *x* 的以 *base* 为底的对数。 如果没有指定 *base*，则返回 *x* 的自然对数。 存在一条支割线，即沿着负实轴从 0 到 -∞。"

#: ../../library/cmath.rst:114
msgid ""
"Return the base-10 logarithm of *x*. This has the same branch cut as "
":func:`log`."
msgstr "返回底数为 10 的 *x* 的对数。它具有与 :func:`log` 相同的支割线。"

#: ../../library/cmath.rst:120
msgid ""
"Return the square root of *x*. This has the same branch cut as :func:`log`."
msgstr "返回 *x* 的平方根。 它具有与 :func:`log` 相同的支割线。"

#: ../../library/cmath.rst:124
msgid "Trigonometric functions"
msgstr "三角函数"

#: ../../library/cmath.rst:128
msgid ""
"Return the arc cosine of *x*. There are two branch cuts: One extends right "
"from 1 along the real axis to ∞. The other extends left from -1 along the "
"real axis to -∞."
msgstr "返回 *x* 的反余弦。 存在两条支割线：一条沿着实轴从 1 到 ∞。 另一条沿着实轴从 -1 向左延伸到 -∞。"

#: ../../library/cmath.rst:135
msgid ""
"Return the arc sine of *x*. This has the same branch cuts as :func:`acos`."
msgstr "返回 *x* 的反正弦。它与 :func:`acos` 有相同的支割线。"

#: ../../library/cmath.rst:140
msgid ""
"Return the arc tangent of *x*. There are two branch cuts: One extends from "
"``1j`` along the imaginary axis to ``∞j``. The other extends from ``-1j`` "
"along the imaginary axis to ``-∞j``."
msgstr ""
"返回 *x* 的反正切。 存在两条支割线：一条沿着虚轴从 ``1j`` 延伸到 ``∞j``。 另一条沿着虚轴从 ``-1j`` 延伸到 "
"``-∞j``。"

#: ../../library/cmath.rst:147
msgid "Return the cosine of *x*."
msgstr "返回 *x* 的余弦。"

#: ../../library/cmath.rst:152
msgid "Return the sine of *x*."
msgstr "返回 *x* 的正弦。"

#: ../../library/cmath.rst:157
msgid "Return the tangent of *x*."
msgstr "返回 *x* 的正切。"

#: ../../library/cmath.rst:161
msgid "Hyperbolic functions"
msgstr "双曲函数"

#: ../../library/cmath.rst:165
msgid ""
"Return the inverse hyperbolic cosine of *x*. There is one branch cut, "
"extending left from 1 along the real axis to -∞."
msgstr "返回 *x* 的反双曲余弦。 存在一条支割线，沿着实轴从 1 向左延伸到 -∞。"

#: ../../library/cmath.rst:171
msgid ""
"Return the inverse hyperbolic sine of *x*. There are two branch cuts: One "
"extends from ``1j`` along the imaginary axis to ``∞j``.  The other extends "
"from ``-1j`` along the imaginary axis to ``-∞j``."
msgstr ""
"返回 *x* 的反双曲正弦。 存在两条支割线：一条沿着虚轴从 ``1j`` 延伸到 ``∞j``。 另一条沿着虚轴从 ``-1j`` 延伸到 "
"``-∞j``。"

#: ../../library/cmath.rst:178
msgid ""
"Return the inverse hyperbolic tangent of *x*. There are two branch cuts: One"
" extends from ``1`` along the real axis to ``∞``. The other extends from "
"``-1`` along the real axis to ``-∞``."
msgstr ""
"返回 *x* 反双曲正切。 存在两条支割线：一条沿着实轴从 ``1`` 延伸到 ``∞``。 另一条沿着实轴从 ``-1`` 延伸到 ``-∞``。"

#: ../../library/cmath.rst:185
msgid "Return the hyperbolic cosine of *x*."
msgstr "返回 *x* 的双曲余弦值。"

#: ../../library/cmath.rst:190
msgid "Return the hyperbolic sine of *x*."
msgstr "返回 *x* 的双曲正弦值。"

#: ../../library/cmath.rst:195
msgid "Return the hyperbolic tangent of *x*."
msgstr "返回 *x* 的双曲正切值。"

#: ../../library/cmath.rst:199
msgid "Classification functions"
msgstr "分类函数"

#: ../../library/cmath.rst:203
msgid ""
"Return ``True`` if both the real and imaginary parts of *x* are finite, and "
"``False`` otherwise."
msgstr "如果 *x* 的实部和虚部都是有限的，则返回 ``True``，否则返回 ``False``。"

#: ../../library/cmath.rst:211
msgid ""
"Return ``True`` if either the real or the imaginary part of *x* is an "
"infinity, and ``False`` otherwise."
msgstr "如果 *x* 的实部或者虚部是无穷大的，则返回 ``True``，否则返回 ``False``。"

#: ../../library/cmath.rst:217
msgid ""
"Return ``True`` if either the real or the imaginary part of *x* is a NaN, "
"and ``False`` otherwise."
msgstr "如果 *x* 的实部或者虚部是 NaN，则返回 ``True`` ，否则返回 ``False``。"

#: ../../library/cmath.rst:223
msgid ""
"Return ``True`` if the values *a* and *b* are close to each other and "
"``False`` otherwise."
msgstr "若 *a* 和 *b* 的值比较接近则返回 ``True``，否则返回 ``False``。"

#: ../../library/cmath.rst:226
msgid ""
"Whether or not two values are considered close is determined according to "
"given absolute and relative tolerances."
msgstr "根据给定的绝对和相对容差确定两个值是否被认为是接近的。"

#: ../../library/cmath.rst:229
msgid ""
"*rel_tol* is the relative tolerance -- it is the maximum allowed difference "
"between *a* and *b*, relative to the larger absolute value of *a* or *b*. "
"For example, to set a tolerance of 5%, pass ``rel_tol=0.05``.  The default "
"tolerance is ``1e-09``, which assures that the two values are the same "
"within about 9 decimal digits.  *rel_tol* must be greater than zero."
msgstr ""
"*rel_tol* 是相对容差 —— 它是 *a* 和 *b* 之间允许的最大差值，相对于 *a* 或 *b* "
"的较大绝对值。例如，要设置5％的容差，请传递 ``rel_tol=0.05`` 。默认容差为 ``1e-09``，确保两个值在大约9位十进制数字内相同。"
" *rel_tol* 必须大于零。"

#: ../../library/cmath.rst:235
msgid ""
"*abs_tol* is the minimum absolute tolerance -- useful for comparisons near "
"zero. *abs_tol* must be at least zero."
msgstr "*abs_tol* 是最小绝对容差 —— 对于接近零的比较很有用。 *abs_tol* 必须至少为零。"

#: ../../library/cmath.rst:238
msgid ""
"If no errors occur, the result will be: ``abs(a-b) <= max(rel_tol * "
"max(abs(a), abs(b)), abs_tol)``."
msgstr ""
"如果没有错误发生，结果将是： ``abs(a-b) <= max(rel_tol * max(abs(a), abs(b)), abs_tol)`` 。"

#: ../../library/cmath.rst:241
msgid ""
"The IEEE 754 special values of ``NaN``, ``inf``, and ``-inf`` will be "
"handled according to IEEE rules.  Specifically, ``NaN`` is not considered "
"close to any other value, including ``NaN``.  ``inf`` and ``-inf`` are only "
"considered close to themselves."
msgstr ""
"IEEE 754特殊值 ``NaN`` ， ``inf`` 和 ``-inf`` 将根据IEEE规则处理。具体来说， ``NaN`` "
"不被认为接近任何其他值，包括 ``NaN`` 。 ``inf`` 和 ``-inf`` 只被认为接近自己。"

#: ../../library/cmath.rst:250
msgid ":pep:`485` -- A function for testing approximate equality"
msgstr ":pep:`485` —— 用于测试近似相等的函数"

#: ../../library/cmath.rst:254
msgid "Constants"
msgstr "常量"

#: ../../library/cmath.rst:258
msgid "The mathematical constant *π*, as a float."
msgstr "数学常数 *π* ，作为一个浮点数。"

#: ../../library/cmath.rst:263
msgid "The mathematical constant *e*, as a float."
msgstr "数学常数 *e* ，作为一个浮点数。"

#: ../../library/cmath.rst:268
msgid "The mathematical constant *τ*, as a float."
msgstr "数学常数 *τ* ，作为一个浮点数。"

#: ../../library/cmath.rst:275
msgid "Floating-point positive infinity. Equivalent to ``float('inf')``."
msgstr "浮点正无穷大。相当于 ``float('inf')``。"

#: ../../library/cmath.rst:282
msgid ""
"Complex number with zero real part and positive infinity imaginary part. "
"Equivalent to ``complex(0.0, float('inf'))``."
msgstr "具有零实部和正无穷虚部的复数。相当于 ``complex(0.0, float('inf'))``。"

#: ../../library/cmath.rst:290
msgid ""
"A floating-point \"not a number\" (NaN) value.  Equivalent to "
"``float('nan')``."
msgstr "浮点“非数字”（NaN）值。相当于 ``float('nan')``。"

#: ../../library/cmath.rst:298
msgid ""
"Complex number with zero real part and NaN imaginary part. Equivalent to "
"``complex(0.0, float('nan'))``."
msgstr "具有零实部和 NaN 虚部的复数。相当于 ``complex(0.0, float('nan'))``。"

#: ../../library/cmath.rst:306
msgid ""
"Note that the selection of functions is similar, but not identical, to that "
"in module :mod:`math`.  The reason for having two modules is that some users"
" aren't interested in complex numbers, and perhaps don't even know what they"
" are.  They would rather have ``math.sqrt(-1)`` raise an exception than "
"return a complex number. Also note that the functions defined in "
":mod:`cmath` always return a complex number, even if the answer can be "
"expressed as a real number (in which case the complex number has an "
"imaginary part of zero)."
msgstr ""
"请注意，函数的选择与模块 :mod:`math` 中的函数选择相似，但不完全相同。 "
"拥有两个模块的原因是因为有些用户对复数不感兴趣，甚至根本不知道它们是什么。它们宁愿 ``math.sqrt(-1)`` 引发异常，也不想返回一个复数。 "
"另请注意，被 :mod:`cmath` 定义的函数始终会返回一个复数，尽管答案可以表示为一个实数（在这种情况下，复数的虚数部分为零）。"

#: ../../library/cmath.rst:314
msgid ""
"A note on branch cuts: They are curves along which the given function fails "
"to be continuous.  They are a necessary feature of many complex functions.  "
"It is assumed that if you need to compute with complex functions, you will "
"understand about branch cuts.  Consult almost any (not too elementary) book "
"on complex variables for enlightenment.  For information of the proper "
"choice of branch cuts for numerical purposes, a good reference should be the"
" following:"
msgstr ""
"关于支割线的注释：它们是沿着给定函数无法连续的曲线。它们是许多复变函数的必要特征。 假设您需要使用复变函数进行计算，您将会了解支割线的概念。 "
"请参阅几乎所有关于复变函数的（不太基本）的书来获得启发。 对于如何正确地基于数值目的来选择支割线的相关信息，一个良好的参考如下："

#: ../../library/cmath.rst:324
msgid ""
"Kahan, W:  Branch cuts for complex elementary functions; or, Much ado about "
"nothing's sign bit.  In Iserles, A., and Powell, M. (eds.), The state of the"
" art in numerical analysis. Clarendon Press (1987) pp165--211."
msgstr ""
"Kahan, W: Branch cuts for complex elementary functions; or, Much ado about "
"nothing's sign bit. In Iserles, A., and Powell, M. (eds.), The state of the "
"art in numerical analysis. Clarendon Press (1987) pp165--211."

#: ../../library/cmath.rst:304
msgid "module"
msgstr "module"

#: ../../library/cmath.rst:304
msgid "math"
msgstr "math"
