# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# python-doc bot, 2025
# Freesand Leo <yuqinju@163.com>, 2025
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-29 14:17+0000\n"
"PO-Revision-Date: 2025-08-02 17:33+0000\n"
"Last-Translator: Freesand Leo <yuqinju@163.com>, 2025\n"
"Language-Team: Chinese (China) (https://app.transifex.com/python-doc/teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/compression.zstd.rst:2
msgid ""
":mod:`!compression.zstd` --- Compression compatible with the Zstandard "
"format"
msgstr ":mod:`!compression.zstd` --- 与 Zstandard 格式兼容的压缩"

#: ../../library/compression.zstd.rst:10
msgid "**Source code:** :source:`Lib/compression/zstd/__init__.py`"
msgstr "**源代码:** :source:`Lib/compression/zstd/__init__.py`"

#: ../../library/compression.zstd.rst:14
msgid ""
"This module provides classes and functions for compressing and decompressing"
" data using the Zstandard (or *zstd*) compression algorithm. The `zstd "
"manual <https://facebook.github.io/zstd/doc/api_manual_latest.html>`__ "
"describes Zstandard as \"a fast lossless compression algorithm, targeting "
"real-time compression scenarios at zlib-level and better compression "
"ratios.\" Also included is a file interface that supports reading and "
"writing the contents of ``.zst`` files created by the :program:`zstd` "
"utility, as well as raw zstd compressed streams."
msgstr ""
"本模块提供了有关使用 Zstandard (或称 *zstd*) 压缩算法压缩和解压缩数据的类和函数。 `zstd 指南 "
"<https://facebook.github.io/zstd/doc/api_manual_latest.html>`__ 将 Zstandard "
"描述为“一种快速的无损压缩算法，针对在 zlib 层级和更高压缩率的实时压缩应用场景。” 本模块还包括了一个支持读写由 :program:`zstd` "
"工具创建的 ``.zst`` 文件以及原始 zstd 压缩流内容的文件接口。"

#: ../../library/compression.zstd.rst:23
msgid "The :mod:`!compression.zstd` module contains:"
msgstr ":mod:`!compression.zstd` 模块包含："

#: ../../library/compression.zstd.rst:25
msgid ""
"The :func:`.open` function and :class:`ZstdFile` class for reading and "
"writing compressed files."
msgstr ":func:`.open` 函数和 :class:`ZstdFile` 类用于读写压缩文件。"

#: ../../library/compression.zstd.rst:27
msgid ""
"The :class:`ZstdCompressor` and :class:`ZstdDecompressor` classes for "
"incremental (de)compression."
msgstr "用于增量（解）压缩的 :class:`ZstdCompressor` 和 :class:`ZstdDecompressor` 类。"

#: ../../library/compression.zstd.rst:29
msgid ""
"The :func:`compress` and :func:`decompress` functions for one-shot "
"(de)compression."
msgstr "用于一次性压缩和解压的 :func:`compress` 和 :func:`decompress` 函数。"

#: ../../library/compression.zstd.rst:31
msgid ""
"The :func:`train_dict` and :func:`finalize_dict` functions and the "
":class:`ZstdDict` class to train and manage Zstandard dictionaries."
msgstr ""
":func:`train_dict` 和 :func:`finalize_dict` 函数以及 :class:`ZstdDict` 类用于训练和管理 "
"Zstandard 字典。"

#: ../../library/compression.zstd.rst:33
msgid ""
"The :class:`CompressionParameter`, :class:`DecompressionParameter`, and "
":class:`Strategy` classes for setting advanced (de)compression parameters."
msgstr ""
":class:`CompressionParameter`, :class:`DecompressionParameter` 和 "
":class:`Strategy` 类用于设置高级的（解）压缩形参。"

#: ../../library/compression.zstd.rst:38
msgid "Exceptions"
msgstr "异常"

#: ../../library/compression.zstd.rst:42
msgid ""
"This exception is raised when an error occurs during compression or "
"decompression, or while initializing the (de)compressor state."
msgstr "当在压缩或解压缩期间或是在初始化（解）压缩器状态期间发生错误时此异常会被引发。"

#: ../../library/compression.zstd.rst:47
msgid "Reading and writing compressed files"
msgstr "读写压缩文件"

#: ../../library/compression.zstd.rst:52
msgid ""
"Open a Zstandard-compressed file in binary or text mode, returning a "
":term:`file object`."
msgstr "以二进制或文本模式打开一个 Zstandard 压缩文件，返回一个 :term:`file object`。"

#: ../../library/compression.zstd.rst:55
msgid ""
"The *file* argument can be either a file name (given as a :class:`str`, "
":class:`bytes` or :term:`path-like <path-like object>` object), in which "
"case the named file is opened, or it can be an existing file object to read "
"from or write to."
msgstr ""
"*file* 参数可以是一个文件名（以 :class:`str`, :class:`bytes` 或 :term:`路径型 <path-like "
"object>` 对象的形式给出），在此情况下会打开指定名称的文件，或者可以是一个用于读写的现有文件对象。"

#: ../../library/compression.zstd.rst:60
msgid ""
"The mode argument can be either ``'rb'`` for reading (default), ``'wb'`` for"
" overwriting, ``'ab'`` for appending, or ``'xb'`` for exclusive creation. "
"These can equivalently be given as ``'r'``, ``'w'``, ``'a'``, and ``'x'`` "
"respectively. You may also open in text mode with ``'rt'``, ``'wt'``, "
"``'at'``, and ``'xt'`` respectively."
msgstr ""
"mode 参数可以是表示读取的 ``'rb'`` (默认值)，表示覆写的 ``'wb'``，表示追加的 ``'ab'``，或者表示独占创建的 "
"``'xb'``。 这些模式还可分别以 ``'r'``, ``'w'``, ``'a'`` 和 ``'x'`` 的等价形式给出。 你还可以分别使用 "
"``'rt'``, ``'wt'``, ``'at'`` 和 ``'xt'`` 以文本模式打开。"

#: ../../library/compression.zstd.rst:66
#: ../../library/compression.zstd.rst:110
msgid ""
"When reading, the *options* argument can be a dictionary providing advanced "
"decompression parameters; see :class:`DecompressionParameter` for detailed "
"information about supported parameters. The *zstd_dict* argument is a "
":class:`ZstdDict` instance to be used during decompression. When reading, if"
" the *level* argument is not None, a :exc:`!TypeError` will be raised."
msgstr ""
"在读取时，*options* 参数可以是一个提供高级解压缩形参的字典；请参阅 :class:`DecompressionParameter` "
"获取有关受支持形参的详情。 *zstd_dict* 参数是一个将在解压缩期间使用的 :class:`ZstdDict` 实例。 在读取时，如果 "
"*level* 参数不为 None，则会引发 :exc:`!TypeError`。"

#: ../../library/compression.zstd.rst:73
msgid ""
"When writing, the *options* argument can be a dictionary providing advanced "
"decompression parameters; see :class:`CompressionParameter` for detailed "
"information about supported parameters. The *level* argument is the "
"compression level to use when writing compressed data. Only one of *level* "
"or *options* may be non-None. The *zstd_dict* argument is a "
":class:`ZstdDict` instance to be used during compression."
msgstr ""
"在写入时，*options* 参数可以是一个提供高级压缩形参的字典；请参阅 :class:`CompressionParameter` "
"获取有关受支持形参的详情。 *level* 参数是一个将在写入压缩数据时使用的压缩级别。 *level* 或 *options* 只有一个可以为非 "
"None 值。 *zstd_dict* 参数是一个将在压缩期间使用的 :class:`ZstdDict` 实例。"

#: ../../library/compression.zstd.rst:81
msgid ""
"In binary mode, this function is equivalent to the :class:`ZstdFile` "
"constructor: ``ZstdFile(file, mode, ...)``. In this case, the *encoding*, "
"*errors*, and *newline* parameters must not be provided."
msgstr ""
"在二进制模式下，此函数等同于 :class:`ZstdFile` 构造器：``ZstdFile(file, mode, "
"...)``。在这种情况下，不得提供 *encoding*、*errors* 和 *newline* 参数。"

#: ../../library/compression.zstd.rst:85
msgid ""
"In text mode, a :class:`ZstdFile` object is created, and wrapped in an "
":class:`io.TextIOWrapper` instance with the specified encoding, error "
"handling behavior, and line endings."
msgstr ""
"在文本模式下，创建一个 :class:`ZstdFile` 对象，并将其包装在一个 :class:`io.TextIOWrapper` "
"实例中，该实例具有指定的编码、错误处理行为和行结束符。"

#: ../../library/compression.zstd.rst:93
msgid "Open a Zstandard-compressed file in binary mode."
msgstr "以二进制模式打开一个 Zstandard 压缩文件。"

#: ../../library/compression.zstd.rst:95
msgid ""
"A :class:`ZstdFile` can wrap an already-open :term:`file object`, or operate"
" directly on a named file. The *file* argument specifies either the file "
"object to wrap, or the name of the file to open (as a :class:`str`, "
":class:`bytes` or :term:`path-like <path-like object>` object). If wrapping "
"an existing file object, the wrapped file will not be closed when the "
":class:`ZstdFile` is closed."
msgstr ""
"一个 :class:`ZstdFile` 可以包装一个已经打开的 :term:`file object`，或者直接操作一个命名文件。*file* "
"参数指定要包装的文件对象，或者要打开的文件名（作为 :class:`str`、:class:`bytes` 或 :term:`路径类 <path-"
"like object>` 对象）。如果包装现有的文件对象，当 :class:`ZstdFile` 关闭时，包装的文件不会被关闭。"

#: ../../library/compression.zstd.rst:102
msgid ""
"The *mode* argument can be either ``'rb'`` for reading (default), ``'wb'`` "
"for overwriting, ``'xb'`` for exclusive creation, or ``'ab'`` for appending."
" These can equivalently be given as ``'r'``, ``'w'``, ``'x'`` and ``'a'`` "
"respectively."
msgstr ""
"*mode* 参数可以是 ``'rb'`` 用于读取（默认），``'wb'`` 用于覆盖，``'xb'`` 用于独占创建，或者 ``'ab'`` "
"用于追加。 上述模式也可等价地简写为对应的单字符形式: ``'r'``、``'w'``、``'x'`` 和 ``'a'``。"

#: ../../library/compression.zstd.rst:107
msgid ""
"If *file* is a file object (rather than an actual file name), a mode of "
"``'w'`` does not truncate the file, and is instead equivalent to ``'a'``."
msgstr "如果 *file* 是文件对象（而不是实际的文件名），``'w'`` 模式不会截断文件，而是等同于 ``'a'``。"

#: ../../library/compression.zstd.rst:117
msgid ""
"When writing, the *options* argument can be a dictionary providing advanced "
"decompression parameters; see :class:`CompressionParameter` for detailed "
"information about supported parameters. The *level* argument is the "
"compression level to use when writing compressed data. Only one of *level* "
"or *options* may be passed. The *zstd_dict* argument is a :class:`ZstdDict` "
"instance to be used during compression."
msgstr ""
"在写入时，*options* 参数可以是一个提供高级解压缩参数的字典；有关支持参数的详细信息，请参阅 "
":class:`CompressionParameter`。*level* 参数是写入压缩数据时要使用的压缩级别。只能传递 *level* 或 "
"*options* 中的一个。*zstd_dict* 参数是一个在压缩过程中使用的 :class:`ZstdDict` 实例。"

#: ../../library/compression.zstd.rst:125
msgid ""
":class:`!ZstdFile` supports all the members specified by "
":class:`io.BufferedIOBase`, except for :meth:`~io.BufferedIOBase.detach` and"
" :meth:`~io.IOBase.truncate`. Iteration and the :keyword:`with` statement "
"are supported."
msgstr ""
":class:`!ZstdFile` 支持由 :class:`io.BufferedIOBase` 指定的所有成员，除了 "
":meth:`~io.BufferedIOBase.detach` 和 :meth:`~io.IOBase.truncate`。支持迭代和 "
":keyword:`with` 语句。"

#: ../../library/compression.zstd.rst:130
msgid "The following method and attributes are also provided:"
msgstr "还提供了下列方法和属性："

#: ../../library/compression.zstd.rst:134
msgid ""
"Return buffered data without advancing the file position. At least one byte "
"of data will be returned, unless EOF has been reached. The exact number of "
"bytes returned is unspecified (the *size* argument is ignored)."
msgstr "返回缓冲的数据而不前移文件位置。 至少将返回一个字节的数据，除非已经到达 EOF。 实际返回的字节数不确定（会忽略 *size* 参数）。"

#: ../../library/compression.zstd.rst:138
msgid ""
"While calling :meth:`peek` does not change the file position of the "
":class:`ZstdFile`, it may change the position of the underlying file object "
"(for example, if the :class:`ZstdFile` was constructed by passing a file "
"object for *file*)."
msgstr ""
"调用 :meth:`peek` 不会改变 :class:`ZstdFile` 的文件位置，但它可能会改变底层文件对象的位置（例如，如果 "
":class:`ZstdFile` 是通过传递一个文件对象作为 *file* 参数来构造的）。"

#: ../../library/compression.zstd.rst:145
msgid "``'rb'`` for reading and ``'wb'`` for writing."
msgstr "``'rb'`` 用于读取而 ``'wb'`` 用于写入。"

#: ../../library/compression.zstd.rst:149
msgid ""
"The name of the Zstandard file. Equivalent to the :attr:`~io.FileIO.name` "
"attribute of the underlying :term:`file object`."
msgstr ""
"Zstandard 文件的名称。等同于底层 :term:`file object` 的 :attr:`~io.FileIO.name` 属性。"

#: ../../library/compression.zstd.rst:154
msgid "Compressing and decompressing data in memory"
msgstr "在内存中压缩和解压缩数据"

#: ../../library/compression.zstd.rst:158
msgid ""
"Compress *data* (a :term:`bytes-like object`), returning the compressed data"
" as a :class:`bytes` object."
msgstr ""
"压缩 *data* (一个 :term:`bytes-like object`)，返回压缩后的数据作为一个 :class:`bytes` 对象。"

#: ../../library/compression.zstd.rst:161
#: ../../library/compression.zstd.rst:205
msgid ""
"The *level* argument is an integer controlling the level of compression. "
"*level* is an alternative to setting "
":attr:`CompressionParameter.compression_level` in *options*. Use "
":meth:`~CompressionParameter.bounds` on "
":attr:`~CompressionParameter.compression_level` to get the values that can "
"be passed for *level*. If advanced compression options are needed, the "
"*level* argument must be omitted and in the *options* dictionary the "
":attr:`!CompressionParameter.compression_level` parameter should be set."
msgstr ""
"*level* 参数是一个控制压缩级别的整数。*level* 是设置 *options* 中 "
":attr:`CompressionParameter.compression_level` 的替代方案。使用 "
":attr:`~CompressionParameter.compression_level` 上的 "
":meth:`~CompressionParameter.bounds` 方法获取可以传递给 *level* 的值。如果需要高级压缩选项，必须省略 "
"*level* 参数，并在 *options* 字典中设置 "
":attr:`!CompressionParameter.compression_level` 参数。"

#: ../../library/compression.zstd.rst:170
#: ../../library/compression.zstd.rst:214
msgid ""
"The *options* argument is a Python dictionary containing advanced "
"compression parameters. The valid keys and values for compression parameters"
" are documented as part of the :class:`CompressionParameter` documentation."
msgstr ""
"*options* 参数是一个包含高级压缩参数的 Python 字典。压缩参数的有效键和值在 :class:`CompressionParameter`"
" 文档中有说明。"

#: ../../library/compression.zstd.rst:174
msgid ""
"The *zstd_dict* argument is an instance of :class:`ZstdDict` containing "
"trained data to improve compression efficiency. The function "
":func:`train_dict` can be used to generate a Zstandard dictionary."
msgstr ""
"*zstd_dict* 参数是一个 :class:`ZstdDict` 实例，包含训练数据以提升压缩效率。可以使用 :func:`train_dict`"
" 函数生成一个 Zstandard 字典。"

#: ../../library/compression.zstd.rst:181
msgid ""
"Decompress *data* (a :term:`bytes-like object`), returning the uncompressed "
"data as a :class:`bytes` object."
msgstr ""
"解压缩 *data* (一个 :term:`bytes-like object`)，返回解压缩后的数据作为一个 :class:`bytes` 对象。"

#: ../../library/compression.zstd.rst:184
#: ../../library/compression.zstd.rst:306
msgid ""
"The *options* argument is a Python dictionary containing advanced "
"decompression parameters. The valid keys and values for compression "
"parameters are documented as part of the :class:`DecompressionParameter` "
"documentation."
msgstr ""
"*options* 参数是一个包含高级解压缩参数的 Python 字典。解压缩参数的有效键和值在 "
":class:`DecompressionParameter` 文档中有说明。"

#: ../../library/compression.zstd.rst:189
#: ../../library/compression.zstd.rst:311
msgid ""
"The *zstd_dict* argument is an instance of :class:`ZstdDict` containing "
"trained data used during compression. This must be the same Zstandard "
"dictionary used during compression."
msgstr ""
"*zstd_dict* 参数是一个 :class:`ZstdDict` 实例，包含在压缩过程中使用的训练数据。这必须是与压缩时使用的相同的 "
"Zstandard 字典。"

#: ../../library/compression.zstd.rst:193
msgid ""
"If *data* is the concatenation of multiple distinct compressed frames, "
"decompress all of these frames, and return the concatenation of the results."
msgstr "如果 *data* 参数是由多个独立压缩帧拼接而成的数据，则会解压所有这些帧，并返回解压结果的拼接串。"

#: ../../library/compression.zstd.rst:199
msgid ""
"Create a compressor object, which can be used to compress data "
"incrementally."
msgstr "创建一个压缩器对象，此对象可被用来执行增量压缩。"

#: ../../library/compression.zstd.rst:202
msgid ""
"For a more convenient way of compressing a single chunk of data, see the "
"module-level function :func:`compress`."
msgstr "有关压缩单个数据块的更便捷方法，请参阅模块级函数 :func:`compress`。"

#: ../../library/compression.zstd.rst:218
msgid ""
"The *zstd_dict* argument is an optional instance of :class:`ZstdDict` "
"containing trained data to improve compression efficiency. The function "
":func:`train_dict` can be used to generate a Zstandard dictionary."
msgstr ""
"*zstd_dict* 参数是可选的 :class:`ZstdDict` 实例，包含训练数据以改进压缩效率。可以使用函数 "
":func:`train_dict` 生成 Zstandard 字典。"

#: ../../library/compression.zstd.rst:225
msgid ""
"Compress *data* (a :term:`bytes-like object`), returning a :class:`bytes` "
"object with compressed data if possible, or otherwise an empty "
":class:`!bytes` object. Some of *data* may be buffered internally, for use "
"in later calls to :meth:`!compress` and :meth:`~.flush`. The returned data "
"should be concatenated with the output of any previous calls to "
":meth:`~.compress`."
msgstr ""
"压缩 *data* (一个 :term:`bytes-like object`)，如果可能，返回包含压缩数据的 :class:`bytes` "
"对象，否则返回一个空的 :class:`!bytes` 对象。*data* 的一部分可能会在内部缓冲，用于后续调用 :meth:`!compress` "
"和 :meth:`~.flush`。返回的数据应与之前任何对 :meth:`~.compress` 的调用的输出连接起来。"

#: ../../library/compression.zstd.rst:232
msgid ""
"The *mode* argument is a :class:`ZstdCompressor` attribute, either "
":attr:`~.CONTINUE`, :attr:`~.FLUSH_BLOCK`, or :attr:`~.FLUSH_FRAME`."
msgstr ""
"*mode* 参数是 :class:`ZstdCompressor` 属性，可以是 "
":attr:`~.CONTINUE`、:attr:`~.FLUSH_BLOCK` 或 :attr:`~.FLUSH_FRAME`。"

#: ../../library/compression.zstd.rst:236
msgid ""
"When all data has been provided to the compressor, call the :meth:`~.flush` "
"method to finish the compression process. If :meth:`~.compress` is called "
"with *mode* set to :attr:`~.FLUSH_FRAME`, :meth:`~.flush` should not be "
"called, as it would write out a new empty frame."
msgstr ""
"当所有数据都已提供给压缩器时，调用 :meth:`~.flush` 方法以完成压缩过程。如果 :meth:`~.compress` 被调用且 "
"*mode* 设置为 :attr:`~.FLUSH_FRAME`，则不应调用 :meth:`~.flush`，因为它会写入一个新的空帧。"

#: ../../library/compression.zstd.rst:244
msgid ""
"Finish the compression process, returning a :class:`bytes` object containing"
" any data stored in the compressor's internal buffers."
msgstr "结束压缩进程，返回包含保存在压缩器的内部缓冲区中的任意数据的 :class:`bytes` 对象。"

#: ../../library/compression.zstd.rst:247
msgid ""
"The *mode* argument is a :class:`ZstdCompressor` attribute, either "
":attr:`~.FLUSH_BLOCK`, or :attr:`~.FLUSH_FRAME`."
msgstr ""
"*mode* 参数是 :class:`ZstdCompressor` 属性，可以是 :attr:`~.FLUSH_BLOCK` 或 "
":attr:`~.FLUSH_FRAME`。"

#: ../../library/compression.zstd.rst:252
msgid ""
"Specify the amount of uncompressed data *size* that will be provided for the"
" next frame. *size* will be written into the frame header of the next frame "
"unless :attr:`CompressionParameter.content_size_flag` is ``False`` or ``0``."
" A size of ``0`` means that the frame is empty. If *size* is ``None``, the "
"frame header will omit the frame size. Frames that include the uncompressed "
"data size require less memory to decompress, especially at higher "
"compression levels."
msgstr ""
"指定将为下一个帧提供的未压缩数据 *size*。除非 :attr:`CompressionParameter.content_size_flag` 为 "
"``False`` 或 ``0``，否则 *size* 将写入下一个帧的帧头。大小为 ``0`` 表示帧为空。如果 *size* 为 "
"``None``，帧头将省略帧大小。包含未压缩数据大小的帧在解压缩时需要更少的内存，尤其是在更高的压缩级别下。"

#: ../../library/compression.zstd.rst:260
msgid ""
"If :attr:`last_mode` is not :attr:`FLUSH_FRAME`, a :exc:`ValueError` is "
"raised as the compressor is not at the start of a frame. If the pledged size"
" does not match the actual size of data provided to :meth:`.compress`, "
"future calls to :meth:`!compress` or :meth:`flush` may raise "
":exc:`ZstdError` and the last chunk of data may be lost."
msgstr ""
"如果 :attr:`last_mode` 不是 :attr:`FLUSH_FRAME`，则会引发 "
":exc:`ValueError`，因为压缩器未处于帧的开始位置。如果承诺的大小与提供给 :meth:`.compress` "
"的实际数据大小不匹配，未来的对 :meth:`!compress` 或 :meth:`flush` 的调用可能会引发 "
":exc:`ZstdError`，并且最后一个数据块可能会丢失。"

#: ../../library/compression.zstd.rst:267
msgid ""
"After :meth:`flush` or :meth:`.compress` are called with mode "
":attr:`FLUSH_FRAME`, the next frame will not include the frame size into the"
" header unless :meth:`!set_pledged_input_size` is called again."
msgstr ""
"在以 :attr:`FLUSH_FRAME` 模式调用 :meth:`flush` 或 :meth:`.compress` 后，除非再次调用 "
":meth:`!set_pledged_input_size`，否则下一个帧的头部将不包括帧大小。"

#: ../../library/compression.zstd.rst:273
msgid ""
"Collect more data for compression, which may or may not generate output "
"immediately. This mode optimizes the compression ratio by maximizing the "
"amount of data per block and frame."
msgstr "收集更多数据进行压缩，这可能立即生成输出，也可能不立即生成。此模式通过最大化每个块和帧的数据量来优化压缩率。"

#: ../../library/compression.zstd.rst:279
msgid ""
"Complete and write a block to the data stream. The data returned so far can "
"be immediately decompressed. Past data can still be referenced in future "
"blocks generated by calls to :meth:`~.compress`, improving compression."
msgstr ""
"完成并写入一个块到数据流。至此返回的数据可以立即解压缩。过去的数据仍然可以在通过调用 :meth:`~.compress` "
"生成的未来块中被引用，从而提高压缩效果。"

#: ../../library/compression.zstd.rst:286
msgid ""
"Complete and write out a frame. Future data provided to :meth:`~.compress` "
"will be written into a new frame and *cannot* reference past data."
msgstr "完成并写出帧。提供给 :meth:`~.compress` 的未来数据将被写入新帧，并且 *不能* 引用过去的数据。"

#: ../../library/compression.zstd.rst:292
msgid ""
"The last mode passed to either :meth:`~.compress` or :meth:`~.flush`. The "
"value can be one of :attr:`~.CONTINUE`, :attr:`~.FLUSH_BLOCK`, or "
":attr:`~.FLUSH_FRAME`. The initial value is :attr:`~.FLUSH_FRAME`, "
"signifying that the compressor is at the start of a new frame."
msgstr ""
"最后一个传递给 :meth:`~.compress` 或 :meth:`~.flush` 的模式。值可以是 "
":attr:`~.CONTINUE`、:attr:`~.FLUSH_BLOCK` 或 :attr:`~.FLUSH_FRAME`。初始值为 "
":attr:`~.FLUSH_FRAME`，表示压缩器处于新帧的开始位置。"

#: ../../library/compression.zstd.rst:300
msgid ""
"Create a decompressor object, which can be used to decompress data "
"incrementally."
msgstr "创建一个压缩器对象，此对象可被用来执行增量解压缩。"

#: ../../library/compression.zstd.rst:303
msgid ""
"For a more convenient way of decompressing an entire compressed stream at "
"once, see the module-level function :func:`decompress`."
msgstr "要一次性解压缩整个压缩流，请参阅模块级函数 :func:`decompress`。"

#: ../../library/compression.zstd.rst:316
msgid ""
"This class does not transparently handle inputs containing multiple "
"compressed frames, unlike the :func:`decompress` function and "
":class:`ZstdFile` class. To decompress a multi-frame input, you should use "
":func:`decompress`, :class:`ZstdFile` if working with a :term:`file object`,"
" or multiple :class:`!ZstdDecompressor` instances."
msgstr ""
"此类不会透明化处理包含多个压缩帧的输入，与 :func:`decompress` 函数和 :class:`ZstdFile` "
"类不同。要解压缩多帧输入，您应使用 :func:`decompress`，如果处理的是 :term:`file object`，则使用 "
":class:`ZstdFile` 类，或者使用多个 :class:`!ZstdDecompressor` 实例分别处理。"

#: ../../library/compression.zstd.rst:324
msgid ""
"Decompress *data* (a :term:`bytes-like object`), returning uncompressed data"
" as bytes. Some of *data* may be buffered internally, for use in later calls"
" to :meth:`!decompress`. The returned data should be concatenated with the "
"output of any previous calls to :meth:`!decompress`."
msgstr ""
"解压缩 *data* (一个 :term:`bytes-like object`)，返回未压缩的数据作为字节。部分 *data* "
"可能会在内部缓冲，以便在后续调用 :meth:`!decompress` 时使用。返回的数据应与之前调用 :meth:`!decompress` "
"的输出连接起来。"

#: ../../library/compression.zstd.rst:330
msgid ""
"If *max_length* is non-negative, the method returns at most *max_length* "
"bytes of decompressed data. If this limit is reached and further output can "
"be produced, the :attr:`~.needs_input` attribute will be set to ``False``. "
"In this case, the next call to :meth:`~.decompress` may provide *data* as "
"``b''`` to obtain more of the output."
msgstr ""
"如果 *max_length* 参数为非负值，该方法最多返回 *max_length* "
"字节的解压数据。当达到此限制但仍有可输出数据时，:attr:`~.needs_input` 属性将被设为 ``False``。此时，下次调用 "
":meth:`~.decompress` 方法时可传入 *data* 为 ``b''`` 以获取更多输出数据。"

#: ../../library/compression.zstd.rst:337
msgid ""
"If all of the input data was decompressed and returned (either because this "
"was less than *max_length* bytes, or because *max_length* was negative), the"
" :attr:`~.needs_input` attribute will be set to ``True``."
msgstr ""
"如果所有输入数据都已被解压缩并返回（或是因为它少于 *max_length* 个字节，或是因为 *max_length* 为负数），则 "
":attr:`~.needs_input` 属性将被设为 ``True``。"

#: ../../library/compression.zstd.rst:342
msgid ""
"Attempting to decompress data after the end of a frame will raise a "
":exc:`ZstdError`. Any data found after the end of the frame is ignored and "
"saved in the :attr:`~.unused_data` attribute."
msgstr ""
"尝试在帧结束后解压缩数据将引发 :exc:`ZstdError`。帧结束后的任何数据将被忽略并保存在 :attr:`~.unused_data` "
"属性中。"

#: ../../library/compression.zstd.rst:348
msgid "``True`` if the end-of-stream marker has been reached."
msgstr "若达到了数据流的末尾标记则为 ``True``。"

#: ../../library/compression.zstd.rst:352
msgid "Data found after the end of the compressed stream."
msgstr "在压缩数据流的末尾之后获取的数据。"

#: ../../library/compression.zstd.rst:354
msgid "Before the end of the stream is reached, this will be ``b''``."
msgstr "在达到流的末尾之前，这将始终为 ``b''``。"

#: ../../library/compression.zstd.rst:358
msgid ""
"``False`` if the :meth:`.decompress` method can provide more decompressed "
"data before requiring new compressed input."
msgstr "如果 :meth:`.decompress` 方法在需要新的压缩输入之前可以提供更多解压缩数据，则为 ``False``。"

#: ../../library/compression.zstd.rst:363
msgid "Zstandard dictionaries"
msgstr "Zstandard 字典"

#: ../../library/compression.zstd.rst:368
msgid ""
"Train a Zstandard dictionary, returning a :class:`ZstdDict` instance. "
"Zstandard dictionaries enable more efficient compression of smaller sizes of"
" data, which is traditionally difficult to compress due to less repetition. "
"If you are compressing multiple similar groups of data (such as similar "
"files), Zstandard dictionaries can improve compression ratios and speed "
"significantly."
msgstr ""
"训练一个 Zstandard 字典，返回一个 :class:`ZstdDict` 实例。Zstandard "
"字典能够更有效地压缩较小规模的数据，这些数据由于重复较少而传统上难以压缩。如果您正在压缩多个相似的数据组（例如相似文件），Zstandard "
"字典可以显著提高压缩率和速度。"

#: ../../library/compression.zstd.rst:375
msgid ""
"The *samples* argument (an iterable of :class:`bytes` objects), is the "
"population of samples used to train the Zstandard dictionary."
msgstr "参数 *samples* (一个 :class:`bytes` 对象的可迭代对象) 是用于训练 Zstandard 字典的样本集。"

#: ../../library/compression.zstd.rst:378
msgid ""
"The *dict_size* argument, an integer, is the maximum size (in bytes) the "
"Zstandard dictionary should be. The Zstandard documentation suggests an "
"absolute maximum of no more than 100 KB, but the maximum can often be "
"smaller depending on the data. Larger dictionaries generally slow down "
"compression, but improve compression ratios. Smaller dictionaries lead to "
"faster compression, but reduce the compression ratio."
msgstr ""
"参数 *dict_size*，一个整数，是 Zstandard 字典应达到的最大大小（以字节为单位）。Zstandard 文档建议绝对最大值不超过 "
"100 KB，但最大值通常取决于数据，可能会更小。较大的字典通常会减慢压缩速度，但提高压缩率。较小的字典导致更快的压缩，但降低压缩率。"

#: ../../library/compression.zstd.rst:388
msgid ""
"An advanced function for converting a \"raw content\" Zstandard dictionary "
"into a regular Zstandard dictionary. \"Raw content\" dictionaries are a "
"sequence of bytes that do not need to follow the structure of a normal "
"Zstandard dictionary."
msgstr ""
"一个高级函数，用于将“原始内容”Zstandard字典转换为常规Zstandard字典。“原始内容”字典是一系列字节，不需要遵循正常Zstandard字典的结构。"

#: ../../library/compression.zstd.rst:393
msgid ""
"The *zstd_dict* argument is a :class:`ZstdDict` instance with the "
":attr:`~ZstdDict.dict_content` containing the raw dictionary contents."
msgstr ""
"*zstd_dict* 参数是一个 :class:`ZstdDict` 实例，其 :attr:`~ZstdDict.dict_content` "
"包含原始字典内容。"

#: ../../library/compression.zstd.rst:396
msgid ""
"The *samples* argument (an iterable of :class:`bytes` objects), contains "
"sample data for generating the Zstandard dictionary."
msgstr "*samples* 参数（一个 :class:`bytes` 对象的可迭代集合），包含用于生成Zstandard字典的样本数据。"

#: ../../library/compression.zstd.rst:399
msgid ""
"The *dict_size* argument, an integer, is the maximum size (in bytes) the "
"Zstandard dictionary should be. See :func:`train_dict` for suggestions on "
"the maximum dictionary size."
msgstr ""
"*dict_size* 参数，一个整数，是Zstandard字典应达到的最大大小（以字节为单位）。参见 :func:`train_dict` "
"以获取关于最大字典大小的建议。"

#: ../../library/compression.zstd.rst:403
msgid ""
"The *level* argument (an integer) is the compression level expected to be "
"passed to the compressors using this dictionary. The dictionary information "
"varies for each compression level, so tuning for the proper compression "
"level can make compression more efficient."
msgstr ""
"*level* 参数（一个整数）是预期传递给使用此字典的压缩器的压缩级别。每个压缩级别的字典信息不同，因此针对适当的压缩级别进行调整可以使压缩更高效。"

#: ../../library/compression.zstd.rst:411
msgid ""
"A wrapper around Zstandard dictionaries. Dictionaries can be used to improve"
" the compression of many small chunks of data. Use :func:`train_dict` if you"
" need to train a new dictionary from sample data."
msgstr ""
"Zstandard字典的包装器。字典可用于提高许多小数据块的压缩效果。如果需要从样本数据训练新字典，请使用 :func:`train_dict`。"

#: ../../library/compression.zstd.rst:415
msgid ""
"The *dict_content* argument (a :term:`bytes-like object`), is the already "
"trained dictionary information."
msgstr "*dict_content* 参数 (一个 :term:`bytes-like object`)，是已经训练好的字典信息。"

#: ../../library/compression.zstd.rst:418
msgid ""
"The *is_raw* argument, a boolean, is an advanced parameter controlling the "
"meaning of *dict_content*. ``True`` means *dict_content* is a \"raw "
"content\" dictionary, without any format restrictions. ``False`` means "
"*dict_content* is an ordinary Zstandard dictionary, created from Zstandard "
"functions, for example, :func:`train_dict` or the external :program:`zstd` "
"CLI."
msgstr ""
"*is_raw* 参数，一个布尔值，是一个高级参数，控制 *dict_content* 的含义。``True`` 表示 *dict_content* "
"是一个“原始内容”字典，没有任何格式限制。``False`` 表示 *dict_content* "
"是一个普通的Zstandard字典，由Zstandard函数例如 :func:`train_dict` ，或外部 :program:`zstd` "
"CLI创建。"

#: ../../library/compression.zstd.rst:424
msgid ""
"When passing a :class:`!ZstdDict` to a function, the "
":attr:`!as_digested_dict` and :attr:`!as_undigested_dict` attributes can "
"control how the dictionary is loaded by passing them as the ``zstd_dict`` "
"argument, for example, ``compress(data, zstd_dict=zd.as_digested_dict)``. "
"Digesting a dictionary is a costly operation that occurs when loading a "
"Zstandard dictionary. When making multiple calls to compression or "
"decompression, passing a digested dictionary will reduce the overhead of "
"loading the dictionary."
msgstr ""
"当将一个 :class:`!ZstdDict` 传递给函数时，可以通过传递 :attr:`!as_digested_dict` 和 "
":attr:`!as_undigested_dict` "
"属性作为``zstd_dict``参数来控制字典的加载方式，例如，``compress(data, "
"zstd_dict=zd.as_digested_dict)``。消化字典是一个成本较高的操作，它在加载Zstandard字典时发生。在进行多次压缩或解压缩调用时，传递已消化的字典将减少加载字典的开销。"

#: ../../library/compression.zstd.rst:433
msgid "Difference for compression"
msgstr "压缩差异"

#: ../../library/compression.zstd.rst:438
msgid "Digested dictionary"
msgstr "已消化字典"

#: ../../library/compression.zstd.rst:439
msgid "Undigested dictionary"
msgstr "未消化字典"

#: ../../library/compression.zstd.rst:440
msgid ""
"Advanced parameters of the compressor which may be overridden by the "
"dictionary's parameters"
msgstr "压缩器的高级参数，可能会被字典的参数覆盖"

#: ../../library/compression.zstd.rst:442
msgid ""
"``window_log``, ``hash_log``, ``chain_log``, ``search_log``, ``min_match``, "
"``target_length``, ``strategy``, ``enable_long_distance_matching``, "
"``ldm_hash_log``, ``ldm_min_match``, ``ldm_bucket_size_log``, "
"``ldm_hash_rate_log``, and some non-public parameters."
msgstr ""
"``window_log``, ``hash_log``, ``chain_log``, ``search_log``, ``min_match``, "
"``target_length``, ``strategy``, ``enable_long_distance_matching``, "
"``ldm_hash_log``, ``ldm_min_match``, ``ldm_bucket_size_log``, "
"``ldm_hash_rate_log``，以及一些非公开参数。"

#: ../../library/compression.zstd.rst:447
msgid "None"
msgstr "None"

#: ../../library/compression.zstd.rst:448
msgid ":class:`!ZstdDict` internally caches the dictionary"
msgstr ":class:`!ZstdDict` 类会在内部缓存字典数据。"

#: ../../library/compression.zstd.rst:449
msgid ""
"Yes. It's faster when loading a digested dictionary again with the same "
"compression level."
msgstr "是的。在再次加载相同压缩级别的已消化字典时，速度更快。"

#: ../../library/compression.zstd.rst:451
msgid ""
"No. If you wish to load an undigested dictionary multiple times, consider "
"reusing a compressor object."
msgstr "否。如果希望多次加载未消化字典，考虑重用压缩器对象。"

#: ../../library/compression.zstd.rst:454
msgid ""
"If passing a :class:`!ZstdDict` without any attribute, an undigested "
"dictionary is passed by default when compressing and a digested dictionary "
"is generated if necessary and passed by default when decompressing."
msgstr ""
"如果传递一个不带任何属性的:class:`!ZstdDict`，则在压缩时默认传递未消化字典，在解压缩时如果需要会生成并默认传递已消化字典。"

#: ../../library/compression.zstd.rst:460
msgid ""
"The content of the Zstandard dictionary, a ``bytes`` object. It's the same "
"as the *dict_content* argument in the ``__init__`` method. It can be used "
"with other programs, such as the ``zstd`` CLI program."
msgstr ""
"Zstandard字典的内容，一个 ``bytes`` 对象。它与 ``__init__`` 方法中的 *dict_content* "
"参数相同。它可以与其他程序一起使用，例如 ``zstd`` CLI程序。"

#: ../../library/compression.zstd.rst:466
msgid "Identifier of the Zstandard dictionary, a non-negative int value."
msgstr "Zstandard字典的标识符，一个非负整数值。"

#: ../../library/compression.zstd.rst:468
msgid ""
"Non-zero means the dictionary is ordinary, created by Zstandard functions "
"and following the Zstandard format."
msgstr "非零表示字典是普通的，由Zstandard函数创建并遵循Zstandard格式。"

#: ../../library/compression.zstd.rst:471
msgid ""
"``0`` means a \"raw content\" dictionary, free of any format restriction, "
"used for advanced users."
msgstr "``0`` 表示一个“原始内容”字典，没有任何格式限制，供高级用户使用。"

#: ../../library/compression.zstd.rst:476
msgid ""
"The meaning of ``0`` for :attr:`!ZstdDict.dict_id` is different from the "
"``dictionary_id`` attribute to the :func:`get_frame_info` function."
msgstr ""
"对于 :attr:`!ZstdDict.dict_id`，``0`` 的含义与 :func:`get_frame_info` 函数的 "
"``dictionary_id`` 属性不同。"

#: ../../library/compression.zstd.rst:482
msgid "Load as a digested dictionary."
msgstr "作为已消化的字典加载。"

#: ../../library/compression.zstd.rst:486
msgid "Load as an undigested dictionary."
msgstr "作为未消化的字典加载。"

#: ../../library/compression.zstd.rst:490
msgid "Advanced parameter control"
msgstr "高级参数控制"

#: ../../library/compression.zstd.rst:494
msgid ""
"An :class:`~enum.IntEnum` containing the advanced compression parameter keys"
" that can be used when compressing data."
msgstr "一个 :class:`~enum.IntEnum`，包含在压缩数据时可以使用的高级压缩参数键。"

#: ../../library/compression.zstd.rst:497
#: ../../library/compression.zstd.rst:731
msgid ""
"The :meth:`~.bounds` method can be used on any attribute to get the valid "
"values for that parameter."
msgstr "可以使用 :meth:`~.bounds` 方法在任何属性上获取该参数的有效值。"

#: ../../library/compression.zstd.rst:500
msgid ""
"Parameters are optional; any omitted parameter will have it's value selected"
" automatically."
msgstr "参数是可选的；任何省略的参数将自动选择其值。"

#: ../../library/compression.zstd.rst:503
msgid ""
"Example getting the lower and upper bound of :attr:`~.compression_level`::"
msgstr "获取 :attr:`~.compression_level` 的下界和上界的示例："

#: ../../library/compression.zstd.rst:505
msgid "lower, upper = CompressionParameter.compression_level.bounds()"
msgstr "lower, upper = CompressionParameter.compression_level.bounds()"

#: ../../library/compression.zstd.rst:507
msgid "Example setting the :attr:`~.window_log` to the maximum size::"
msgstr "将 :attr:`~.window_log` 设置为最大值的示例："

#: ../../library/compression.zstd.rst:509
msgid ""
"_lower, upper = CompressionParameter.window_log.bounds()\n"
"options = {CompressionParameter.window_log: upper}\n"
"compress(b'venezuelan beaver cheese', options=options)"
msgstr ""
"_lower, upper = CompressionParameter.window_log.bounds()\n"
"options = {CompressionParameter.window_log: upper}\n"
"compress(b'venezuelan beaver cheese', options=options)"

#: ../../library/compression.zstd.rst:515
msgid ""
"Return the tuple of int bounds, ``(lower, upper)``, of a compression "
"parameter. This method should be called on the attribute you wish to "
"retrieve the bounds of. For example, to get the valid values for "
":attr:`~.compression_level`, one may check the result of "
"``CompressionParameter.compression_level.bounds()``."
msgstr ""
"返回压缩参数的整型边界元组 ``(lower, upper)``。此方法应调用在你希望获取边界的属性上。例如，要获取 "
":attr:`~.compression_level` 的有效值，可以检查 "
"``CompressionParameter.compression_level.bounds()`` 的结果。"

#: ../../library/compression.zstd.rst:521
#: ../../library/compression.zstd.rst:749
msgid "Both the lower and upper bounds are inclusive."
msgstr "下界和上界都是包含在内的。"

#: ../../library/compression.zstd.rst:525
msgid ""
"A high-level means of setting other compression parameters that affect the "
"speed and ratio of compressing data."
msgstr "一种高级方法，用于设置其他影响数据压缩速度和比例的压缩参数。"

#: ../../library/compression.zstd.rst:528
msgid ""
"Regular compression levels are greater than ``0``. Values greater than "
"``20`` are considered \"ultra\" compression and require more memory than "
"other levels. Negative values can be used to trade off faster compression "
"for worse compression ratios."
msgstr ""
"常规压缩等级需大于 ``0``。当等级值超过 ``20`` "
"时，将被视为\"极致\"压缩级别，该级别需要比其他等级消耗更多内存。负数值可用于以牺牲压缩率为代价换取更快的压缩速度。"

#: ../../library/compression.zstd.rst:533
msgid "Setting the level to zero uses :attr:`COMPRESSION_LEVEL_DEFAULT`."
msgstr "将级别设置为零使用 :attr:`COMPRESSION_LEVEL_DEFAULT`。"

#: ../../library/compression.zstd.rst:537
msgid ""
"Maximum allowed back-reference distance the compressor can use when "
"compressing data, expressed as power of two, ``1 << window_log`` bytes. This"
" parameter greatly influences the memory usage of compression. Higher values"
" require more memory but gain better compression values."
msgstr ""
"压缩器在压缩数据时可以使用的最大允许后向引用距离，表示为二的幂，``1 << window_log`` "
"字节。此参数极大地影响压缩的内存使用。更高的值需要更多内存，但可以获得更好的压缩值。"

#: ../../library/compression.zstd.rst:542
#: ../../library/compression.zstd.rst:551
#: ../../library/compression.zstd.rst:562
#: ../../library/compression.zstd.rst:570
#: ../../library/compression.zstd.rst:581
#: ../../library/compression.zstd.rst:596
#: ../../library/compression.zstd.rst:627
#: ../../library/compression.zstd.rst:634
#: ../../library/compression.zstd.rst:642
#: ../../library/compression.zstd.rst:650
#: ../../library/compression.zstd.rst:709
#: ../../library/compression.zstd.rst:758
msgid "A value of zero causes the value to be selected automatically."
msgstr "值为零会导致自动选择该值。"

#: ../../library/compression.zstd.rst:546
msgid ""
"Size of the initial probe table, as a power of two. The resulting memory "
"usage is ``1 << (hash_log+2)`` bytes. Larger tables improve compression "
"ratio of strategies <= :attr:`~Strategy.dfast`, and improve compression "
"speed of strategies > :attr:`~Strategy.dfast`."
msgstr ""
"初始探测表的大小为2的幂次方。实际内存占用为 ``1 << (hash_log+2)`` 字节。较大的探测表能提升 <= "
":attr:`~Strategy.dfast` 策略的压缩率，并加快 > :attr:`~Strategy.dfast` 策略的压缩速度。"

#: ../../library/compression.zstd.rst:555
msgid ""
"Size of the multi-probe search table, as a power of two. The resulting "
"memory usage is ``1 << (chain_log+2)`` bytes. Larger tables result in better"
" and slower compression. This parameter has no effect for the "
":attr:`~Strategy.fast` strategy. It's still useful when using "
":attr:`~Strategy.dfast` strategy, in which case it defines a secondary probe"
" table."
msgstr ""
"多探测搜索表的大小，以2的幂表示。由此产生的内存使用量为 ``1 << (chain_log+2)`` 字节。较大的表会导致更好的但更慢的压缩。此参数对"
" :attr:`~Strategy.fast` 策略无效。在使用 :attr:`~Strategy.dfast` "
"策略时仍然有用，在这种情况下，它定义了一个二级探测表。"

#: ../../library/compression.zstd.rst:566
msgid ""
"Number of search attempts, as a power of two. More attempts result in better"
" and slower compression. This parameter is useless for "
":attr:`~Strategy.fast` and :attr:`~Strategy.dfast` strategies."
msgstr ""
"搜索尝试的次数，以2的幂表示。更多的尝试会导致更好的但更慢的压缩。此参数对 :attr:`~Strategy.fast` 和 "
":attr:`~Strategy.dfast` 策略无用。"

#: ../../library/compression.zstd.rst:574
msgid ""
"Minimum size of searched matches. Larger values increase compression and "
"decompression speed, but decrease ratio. Note that Zstandard can still find "
"matches of smaller size, it just tweaks its search algorithm to look for "
"this size and larger. For all strategies < :attr:`~Strategy.btopt`, the "
"effective minimum is ``4``; for all strategies > :attr:`~Strategy.fast`, the"
" effective maximum is ``6``."
msgstr ""
"搜索匹配的最小大小。较大的值会增加压缩和解压速度，但会降低压缩率。请注意，Zstandard "
"仍然可以找到较小大小的匹配，它只是调整其搜索算法以查找此大小及更大的匹配。对于所有策略 < :attr:`~Strategy.btopt`，有效最小值为"
" ``4``；对于所有策略 > :attr:`~Strategy.fast`，有效最大值为 ``6``。"

#: ../../library/compression.zstd.rst:585
msgid "The impact of this field depends on the selected :class:`Strategy`."
msgstr "此字段的影响取决于所选的 :class:`Strategy`。"

#: ../../library/compression.zstd.rst:587
msgid ""
"For strategies :attr:`~Strategy.btopt`, :attr:`~Strategy.btultra` and "
":attr:`~Strategy.btultra2`, the value is the length of a match considered "
"\"good enough\" to stop searching. Larger values make compression ratios "
"better, but compresses slower."
msgstr ""
"对于策略 :attr:`~Strategy.btopt`、:attr:`~Strategy.btultra` 和 "
":attr:`~Strategy.btultra2`，该值被视为“足够好”的匹配长度以停止搜索。较大的值会提高压缩率，但压缩速度较慢。"

#: ../../library/compression.zstd.rst:592
msgid ""
"For strategy :attr:`~Strategy.fast`, it is the distance between match "
"sampling. Larger values make compression faster, but with a worse "
"compression ratio."
msgstr "对于策略 :attr:`~Strategy.fast`，它是匹配采样的间隔距离。较大的值会使压缩更快，但压缩率较差。"

#: ../../library/compression.zstd.rst:600
msgid ""
"The higher the value of selected strategy, the more complex the compression "
"technique used by zstd, resulting in higher compression ratios but slower "
"compression."
msgstr "所选策略的值越高，zstd 使用的压缩技术越复杂，导致压缩率更高但压缩速度更慢。"

#: ../../library/compression.zstd.rst:604
msgid ":class:`Strategy`"
msgstr ":class:`Strategy`"

#: ../../library/compression.zstd.rst:608
msgid ""
"Long distance matching can be used to improve compression for large inputs "
"by finding large matches at greater distances. It increases memory usage and"
" window size."
msgstr "长距离匹配可以通过在更远距离找到大匹配来提高大输入的压缩效果。这会增加内存使用和窗口大小。"

#: ../../library/compression.zstd.rst:612
msgid ""
"``True`` or ``1`` enable long distance matching while ``False`` or ``0`` "
"disable it."
msgstr "``True`` 或 ``1`` 启用长距离匹配，而 ``False`` 或 ``0`` 禁用长距离匹配。"

#: ../../library/compression.zstd.rst:615
msgid ""
"Enabling this parameter increases default "
":attr:`~CompressionParameter.window_log` to 128 MiB except when expressly "
"set to a different value. This setting is enabled by default if "
":attr:`!window_log` >= 128 MiB and the compression strategy >= "
":attr:`~Strategy.btopt` (compression level 16+)."
msgstr ""
"启用此参数会将默认的 :attr:`~CompressionParameter.window_log` 增加到 128 "
"MiB，除非明确设置为其他值。如果 :attr:`!window_log` >= 128 MiB 且压缩策略 >= "
":attr:`~Strategy.btopt` (压缩级别 16+)，此设置默认启用。"

#: ../../library/compression.zstd.rst:623
msgid ""
"Size of the table for long distance matching, as a power of two. Larger "
"values increase memory usage and compression ratio, but decrease compression"
" speed."
msgstr "长距离匹配表的尺寸，以二的幂表示。较大的值会增加内存使用和压缩率，但会降低压缩速度。"

#: ../../library/compression.zstd.rst:631
msgid ""
"Minimum match size for long distance matcher. Larger or too small values can"
" often decrease the compression ratio."
msgstr "长距离匹配器的最小匹配大小。过大或过小的值通常会降低压缩率。"

#: ../../library/compression.zstd.rst:638
msgid ""
"Log size of each bucket in the long distance matcher hash table for "
"collision resolution. Larger values improve collision resolution but "
"decrease compression speed."
msgstr "长距离匹配器哈希表中每个桶的日志大小，用于冲突解决。较大的值会改善冲突解决，但会降低压缩速度。"

#: ../../library/compression.zstd.rst:646
msgid ""
"Frequency of inserting/looking up entries into the long distance matcher "
"hash table. Larger values improve compression speed. Deviating far from the "
"default value will likely result in a compression ratio decrease."
msgstr "向长距离匹配器哈希表插入/查找条目的频率。较大的值会提高压缩速度。偏离默认值过远可能会降低压缩率。"

#: ../../library/compression.zstd.rst:654
msgid ""
"Write the size of the data to be compressed into the Zstandard frame header "
"when known prior to compressing."
msgstr "若在压缩前已知待压缩数据的大小，则将该数据大小写入Zstandard帧头。"

#: ../../library/compression.zstd.rst:657
msgid "This flag only takes effect under the following scenarios:"
msgstr "此标志仅在以下情况下生效："

#: ../../library/compression.zstd.rst:659
msgid "Calling :func:`compress` for one-shot compression"
msgstr "调用 :func:`compress` 进行一次性压缩"

#: ../../library/compression.zstd.rst:660
msgid ""
"Providing all of the data to be compressed in the frame in a single "
":meth:`ZstdCompressor.compress` call, with the "
":attr:`ZstdCompressor.FLUSH_FRAME` mode."
msgstr ""
"在单次 :meth:`ZstdCompressor.compress` 调用中提供所有待压缩数据，并使用 "
":attr:`ZstdCompressor.FLUSH_FRAME` 模式。"

#: ../../library/compression.zstd.rst:663
msgid ""
"Calling :meth:`ZstdCompressor.set_pledged_input_size` with the exact amount "
"of data that will be provided to the compressor prior to any calls to "
":meth:`ZstdCompressor.compress` for the current frame. "
":meth:`!ZstdCompressor.set_pledged_input_size` must be called for each new "
"frame."
msgstr ""
"在调用 :meth:`ZstdCompressor.compress` 压缩当前帧的任何数据之前，使用 "
":meth:`ZstdCompressor.set_pledged_input_size` 设置将提供给压缩器的确切数据量。每个新帧都必须调用 "
":meth:`!ZstdCompressor.set_pledged_input_size`。"

#: ../../library/compression.zstd.rst:669
msgid ""
"All other compression calls may not write the size information into the "
"frame header."
msgstr "所有其他压缩调用可能不会将大小信息写入帧头。"

#: ../../library/compression.zstd.rst:672
msgid ""
"``True`` or ``1`` enable the content size flag while ``False`` or ``0`` "
"disable it."
msgstr "``True`` 或 ``1`` 启用内容大小标志，而 ``False`` 或 ``0`` 禁用它。"

#: ../../library/compression.zstd.rst:677
msgid ""
"A four-byte checksum using XXHash64 of the uncompressed content is written "
"at the end of each frame. Zstandard's decompression code verifies the "
"checksum. If there is a mismatch a :class:`ZstdError` exception is raised."
msgstr ""
"使用 XXHash64 的四字节校验和写入每个帧的末尾。Zstandard 的解压缩代码会验证校验和。如果校验和不匹配，则会引发 "
":class:`ZstdError` 异常。"

#: ../../library/compression.zstd.rst:682
msgid ""
"``True`` or ``1`` enable checksum generation while ``False`` or ``0`` "
"disable it."
msgstr "``True`` 或 ``1`` 启用校验和生成，而 ``False`` 或 ``0`` 禁用它。"

#: ../../library/compression.zstd.rst:687
msgid ""
"When compressing with a :class:`ZstdDict`, the dictionary's ID is written "
"into the frame header."
msgstr "使用 :class:`ZstdDict` 压缩时，字典的 ID 会被写入帧头部。"

#: ../../library/compression.zstd.rst:690
msgid ""
"``True`` or ``1`` enable storing the dictionary ID while ``False`` or ``0`` "
"disable it."
msgstr "``True`` 或 ``1`` 启用存储字典 ID，而 ``False`` 或 ``0`` 禁用它。"

#: ../../library/compression.zstd.rst:695
msgid ""
"Select how many threads will be spawned to compress in parallel. When "
":attr:`!nb_workers` > 0, enables multi-threaded compression, a value of "
"``1`` means \"one-thread multi-threaded mode\". More workers improve speed, "
"but also increase memory usage and slightly reduce compression ratio."
msgstr ""
"选择将启动多少线程以并行压缩。当 :attr:`!nb_workers` > 0 时，启用多线程压缩，值为 ``1`` "
"表示“单线程多线程模式”。更多工作线程可以提高速度，但也会增加内存使用并略微降低压缩率。"

#: ../../library/compression.zstd.rst:700
msgid "A value of zero disables multi-threading."
msgstr "值为零禁用多线程。"

#: ../../library/compression.zstd.rst:704
msgid ""
"Size of a compression job, in bytes. This value is enforced only when "
":attr:`~CompressionParameter.nb_workers` >= 1. Each compression job is "
"completed in parallel, so this value can indirectly impact the number of "
"active threads."
msgstr ""
"压缩任务的大小，以字节为单位。此值仅在 :attr:`~CompressionParameter.nb_workers` >= 1 "
"时生效。每个压缩任务并行完成，因此此值可以间接影响活动线程的数量。"

#: ../../library/compression.zstd.rst:713
msgid ""
"Sets how much data is reloaded from previous jobs (threads) for new jobs to "
"be used by the look behind window during compression. This value is only "
"used when :attr:`~CompressionParameter.nb_workers` >= 1. Acceptable values "
"vary from 0 to 9."
msgstr ""
"设置压缩过程中，新任务可从先前任务（线程）重新加载多少数据供后向参考窗口使用。该参数仅在 "
":attr:`~CompressionParameter.nb_workers` ≥ 1 时生效。有效取值范围为0到9。"

#: ../../library/compression.zstd.rst:718
msgid "0 means dynamically set the overlap amount"
msgstr "0 表示动态设置重叠量。"

#: ../../library/compression.zstd.rst:719
msgid "1 means no overlap"
msgstr "1 表示无重叠。"

#: ../../library/compression.zstd.rst:720
msgid "9 means use a full window size from the previous job"
msgstr "9 表示使用上一个任务的全窗口大小。"

#: ../../library/compression.zstd.rst:722
msgid ""
"Each increment halves/doubles the overlap size. \"8\" means an overlap of "
"``window_size/2``, \"7\" means an overlap of ``window_size/4``, etc."
msgstr "每个增量将重叠大小减半/加倍。“8”表示重叠 ``window_size/2“，“7”表示重叠 ``window_size/4``，等等。"

#: ../../library/compression.zstd.rst:727
msgid ""
"An :class:`~enum.IntEnum` containing the advanced decompression parameter "
"keys that can be used when decompressing data. Parameters are optional; any "
"omitted parameter will have it's value selected automatically."
msgstr ""
"一个包含高级解压缩参数键的 :class:`~enum.IntEnum`，这些参数键在解压缩数据时可以使用。参数是可选的；任何省略的参数将自动选择其值。"

#: ../../library/compression.zstd.rst:734
msgid "Example setting the :attr:`~.window_log_max` to the maximum size::"
msgstr "例如，将 :attr:`~.window_log_max` 设置为最大大小::"

#: ../../library/compression.zstd.rst:736
msgid ""
"data = compress(b'Some very long buffer of bytes...')\n"
"\n"
"_lower, upper = DecompressionParameter.window_log_max.bounds()\n"
"\n"
"options = {DecompressionParameter.window_log_max: upper}\n"
"decompress(data, options=options)"
msgstr ""
"data = compress(b'一些非常长的字节缓冲区...')\n"
"\n"
"_lower, upper = DecompressionParameter.window_log_max.bounds()\n"
"\n"
"options = {DecompressionParameter.window_log_max: upper}\n"
"decompress(data, options=options)"

#: ../../library/compression.zstd.rst:745
msgid ""
"Return the tuple of int bounds, ``(lower, upper)``, of a decompression "
"parameter. This method should be called on the attribute you wish to "
"retrieve the bounds of."
msgstr "返回解压缩参数的整型边界元组 ``(lower, upper)``。此方法应调用在您希望检索边界的属性上。"

#: ../../library/compression.zstd.rst:753
msgid ""
"The base-two logarithm of the maximum size of the window used during "
"decompression. This can be useful to limit the amount of memory used when "
"decompressing data. A larger maximum window size leads to faster "
"decompression."
msgstr "解压缩期间使用的最大窗口大小的二进制对数。这有助于限制解压缩数据时使用的内存量。较大的最大窗口大小会导致更快的解压缩。"

#: ../../library/compression.zstd.rst:763
msgid ""
"An :class:`~enum.IntEnum` containing strategies for compression. Higher-"
"numbered strategies correspond to more complex and slower compression."
msgstr "一个包含压缩策略的 :class:`~enum.IntEnum`。编号较高的策略对应更复杂和更慢的压缩。"

#: ../../library/compression.zstd.rst:769
msgid ""
"The values of attributes of :class:`!Strategy` are not necessarily stable "
"across zstd versions. Only the ordering of the attributes may be relied "
"upon. The attributes are listed below in order."
msgstr ":class:`!Strategy` 属性的值在不同版本的 zstd 中不一定稳定。只能依赖属性的顺序。以下按顺序列出属性。"

#: ../../library/compression.zstd.rst:773
msgid "The following strategies are available:"
msgstr "以下策略可用："

#: ../../library/compression.zstd.rst:795
msgid "Miscellaneous"
msgstr "杂项"

#: ../../library/compression.zstd.rst:799
msgid ""
"Retrieve a :class:`FrameInfo` object containing metadata about a Zstandard "
"frame. Frames contain metadata related to the compressed data they hold."
msgstr "检索包含有关 Zstandard 帧元数据的 :class:`FrameInfo` 对象。帧包含与其持有的压缩数据相关的元数据。"

#: ../../library/compression.zstd.rst:805
msgid "Metadata related to a Zstandard frame."
msgstr "与 Zstandard 帧相关的元数据。"

#: ../../library/compression.zstd.rst:809
msgid "The size of the decompressed contents of the frame."
msgstr "帧中解压缩内容的大小。"

#: ../../library/compression.zstd.rst:813
msgid ""
"An integer representing the Zstandard dictionary ID needed for decompressing"
" the frame. ``0`` means the dictionary ID was not recorded in the frame "
"header. This may mean that a Zstandard dictionary is not needed, or that the"
" ID of a required dictionary was not recorded."
msgstr ""
"表示解压缩帧所需的 Zstandard 字典 ID 的整数。``0`` 表示字典 ID 未记录在帧头中。这可能意味着不需要 Zstandard "
"字典，或者所需的字典 ID 未记录。"

#: ../../library/compression.zstd.rst:821
msgid "The default compression level for Zstandard: ``3``."
msgstr "Zstandard 的默认压缩级别：``3``。"

#: ../../library/compression.zstd.rst:826
msgid ""
"Version number of the runtime zstd library as a tuple of integers (major, "
"minor, release)."
msgstr "运行时 zstd 库的版本号，作为整数元组 (major, minor, release)。"

#: ../../library/compression.zstd.rst:831
msgid "Examples"
msgstr "例子"

#: ../../library/compression.zstd.rst:833
msgid "Reading in a compressed file:"
msgstr "读取压缩文件："

#: ../../library/compression.zstd.rst:835
msgid ""
"from compression import zstd\n"
"\n"
"with zstd.open(\"file.zst\") as f:\n"
"    file_content = f.read()"
msgstr ""
"from compression import zstd\n"
"\n"
"with zstd.open(\"file.zst\") as f:\n"
"    file_content = f.read()"

#: ../../library/compression.zstd.rst:842
msgid "Creating a compressed file:"
msgstr "创建压缩文件："

#: ../../library/compression.zstd.rst:844
msgid ""
"from compression import zstd\n"
"\n"
"data = b\"Insert Data Here\"\n"
"with zstd.open(\"file.zst\", \"w\") as f:\n"
"    f.write(data)"
msgstr ""
"from compression import zstd\n"
"\n"
"data = b\"在此插入数据\"\n"
"with zstd.open(\"file.zst\", \"w\") as f:\n"
"    f.write(data)"

#: ../../library/compression.zstd.rst:852
msgid "Compressing data in memory:"
msgstr "在内存中压缩数据："

#: ../../library/compression.zstd.rst:854
msgid ""
"from compression import zstd\n"
"\n"
"data_in = b\"Insert Data Here\"\n"
"data_out = zstd.compress(data_in)"
msgstr ""
"from compression import zstd\n"
"\n"
"data_in = b\"在此插入数据\"\n"
"data_out = zstd.compress(data_in)"

#: ../../library/compression.zstd.rst:861
msgid "Incremental compression:"
msgstr "增量压缩："

#: ../../library/compression.zstd.rst:863
msgid ""
"from compression import zstd\n"
"\n"
"comp = zstd.ZstdCompressor()\n"
"out1 = comp.compress(b\"Some data\\n\")\n"
"out2 = comp.compress(b\"Another piece of data\\n\")\n"
"out3 = comp.compress(b\"Even more data\\n\")\n"
"out4 = comp.flush()\n"
"# Concatenate all the partial results:\n"
"result = b\"\".join([out1, out2, out3, out4])"
msgstr ""
"from compression import zstd\n"
"\n"
"comp = zstd.ZstdCompressor()\n"
"out1 = comp.compress(b\"Some data\\n\")\n"
"out2 = comp.compress(b\"Another piece of data\\n\")\n"
"out3 = comp.compress(b\"Even more data\\n\")\n"
"out4 = comp.flush()\n"
"# 将所有部分结果拼接起来：\n"
"result = b\"\".join([out1, out2, out3, out4])"

#: ../../library/compression.zstd.rst:875
msgid "Writing compressed data to an already-open file:"
msgstr "写入已压缩数据到一个已打开的文件："

#: ../../library/compression.zstd.rst:877
msgid ""
"from compression import zstd\n"
"\n"
"with open(\"myfile\", \"wb\") as f:\n"
"    f.write(b\"This data will not be compressed\\n\")\n"
"    with zstd.open(f, \"w\") as zstf:\n"
"        zstf.write(b\"This *will* be compressed\\n\")\n"
"    f.write(b\"Not compressed\\n\")"
msgstr ""
"from compression import zstd\n"
"\n"
"with open(\"myfile\", \"wb\") as f:\n"
"    f.write(b\"该数据将不会被压缩。\\n\")\n"
"    with zstd.open(f, \"w\") as zstf:\n"
"        zstf.write(b\"这 *将会* 被压缩\\n\")\n"
"    f.write(b\"没有被压缩\\n\")"

#: ../../library/compression.zstd.rst:887
msgid "Creating a compressed file using compression parameters:"
msgstr "使用压缩形参创建一个已压缩文件："

#: ../../library/compression.zstd.rst:889
msgid ""
"from compression import zstd\n"
"\n"
"options = {\n"
"   zstd.CompressionParameter.checksum_flag: 1\n"
"}\n"
"with zstd.open(\"file.zst\", \"w\", options=options) as f:\n"
"    f.write(b\"Mind if I squeeze in?\")"
msgstr ""
"from compression import zstd\n"
"\n"
"options = {\n"
"   zstd.CompressionParameter.checksum_flag: 1\n"
"}\n"
"with zstd.open(\"file.zst\", \"w\", options=options) as f:\n"
"    f.write(b\"请问现在方便插入（操作/请求）吗？\")"
