# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2025
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-07-25 18:10+0000\n"
"PO-Revision-Date: 2025-07-18 20:09+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2025\n"
"Language-Team: Chinese (China) (https://app.transifex.com/python-doc/teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/ossaudiodev.rst:2
msgid ":mod:`ossaudiodev` --- Access to OSS-compatible audio devices"
msgstr ":mod:`ossaudiodev`  --- 访问兼容OSS的音频设备"

#: ../../library/ossaudiodev.rst:9
msgid ""
"The :mod:`ossaudiodev` module is deprecated (see :pep:`PEP 594 "
"<594#ossaudiodev>` for details)."
msgstr ":mod:`ossaudiodev` 模块已被弃用（请参阅 :pep:`PEP 594 <594#ossaudiodev>` 了解详情）。"

#: ../../library/ossaudiodev.rst:15
msgid ""
"This module allows you to access the OSS (Open Sound System) audio "
"interface. OSS is available for a wide range of open-source and commercial "
"Unices, and is the standard audio interface for Linux and recent versions of"
" FreeBSD."
msgstr ""
"该模块允许您访问 OSS（开放式音响系统）音频接口。 OSS 可用于广泛的开源和商业 Unices，并且是 Linux 和最新版本的 FreeBSD "
"的标准音频接口。"

#: ../../library/ossaudiodev.rst:47
msgid ""
"Operations in this module now raise :exc:`OSError` where :exc:`IOError` was "
"raised."
msgstr "此模块中过去会引发 :exc:`IOError` 的操作现在将引发 :exc:`OSError`。"

#: ../../library/ossaudiodev.rst:55
msgid ""
"`Open Sound System Programmer's Guide "
"<http://www.opensound.com/pguide/oss.pdf>`_"
msgstr "`开放之声系统程序员指南 <http://www.opensound.com/pguide/oss.pdf>`_"

#: ../../library/ossaudiodev.rst:55
msgid "the official documentation for the OSS C API"
msgstr "OSS C API 的官方文档"

#: ../../library/ossaudiodev.rst:57
msgid ""
"The module defines a large number of constants supplied by the OSS device "
"driver; see ``<sys/soundcard.h>`` on either Linux or FreeBSD for a listing."
msgstr ""
"该模块定义了大量由OSS设备驱动提供的常量； 请参阅 ``<sys/soundcard.h>`` Linux 或 FreeBSD 上的列表。"

#: ../../library/ossaudiodev.rst:60
msgid ":mod:`ossaudiodev` defines the following variables and functions:"
msgstr ":mod:`ossaudiodev` 定义了下列变量和函数:"

#: ../../library/ossaudiodev.rst:65
msgid ""
"This exception is raised on certain errors.  The argument is a string "
"describing what went wrong."
msgstr "此异常会针对特定错误被引发。 其参数为一个描述错误信息的字符串。"

#: ../../library/ossaudiodev.rst:68
msgid ""
"(If :mod:`ossaudiodev` receives an error from a system call such as "
":c:func:`open`, :c:func:`write`, or :c:func:`ioctl`, it raises "
":exc:`OSError`. Errors detected directly by :mod:`ossaudiodev` result in "
":exc:`OSSAudioError`.)"
msgstr ""
"（如果 :mod:`ossaudiodev` 从系统调用例如 :c:func:`open`, :c:func:`write` 或 "
":c:func:`ioctl` 接收到错误，它将引发 :exc:`OSError`。 由 :mod:`ossaudiodev` 直接检测到的错误将引发 "
":exc:`OSSAudioError`。）"

#: ../../library/ossaudiodev.rst:72
msgid ""
"(For backwards compatibility, the exception class is also available as "
"``ossaudiodev.error``.)"
msgstr "（为了向下兼容，此异常类也可通过 ``ossaudiodev.error`` 访问。）"

#: ../../library/ossaudiodev.rst:79
msgid ""
"Open an audio device and return an OSS audio device object.  This object "
"supports many file-like methods, such as :meth:`read`, :meth:`write`, and "
":meth:`fileno` (although there are subtle differences between conventional "
"Unix read/write semantics and those of OSS audio devices).  It also supports"
" a number of audio-specific methods; see below for the complete list of "
"methods."
msgstr ""
"打开一个音频设备并返回 OSS 音频设备对象。 此对象支持许多文件类方法，例如 :meth:`read`, :meth:`write` 和 "
":meth:`fileno` (不过传统的 Unix 读/写语义与 OSS 音频设备的存在一些细微的差异)。 "
"它还支持一些音频专属的方法；完整的方法列表见下文。"

#: ../../library/ossaudiodev.rst:85
msgid ""
"*device* is the audio device filename to use.  If it is not specified, this "
"module first looks in the environment variable :envvar:`AUDIODEV` for a "
"device to use.  If not found, it falls back to :file:`/dev/dsp`."
msgstr ""
"*device* 是要使用的音频设备文件名。 如果未指定，则此模块会先在环境变量 :envvar:`AUDIODEV` 中查找要使用的设备。 "
"如果未找到，它将回退为 :file:`/dev/dsp`。"

#: ../../library/ossaudiodev.rst:89
msgid ""
"*mode* is one of ``'r'`` for read-only (record) access, ``'w'`` for write-"
"only (playback) access and ``'rw'`` for both. Since many sound cards only "
"allow one process to have the recorder or player open at a time, it is a "
"good idea to open the device only for the activity needed.  Further, some "
"sound cards are half-duplex: they can be opened for reading or writing, but "
"not both at once."
msgstr ""
"*mode* 可以为 ``'r'`` 表示只读（录音）访问，``'w'`` 表示只写（回放）访问以及 ``'rw'`` 表示同时读写。 "
"由于许多声卡在同一时间只允许单个进程打开录音机或播放器，因此好的做法是只根据活动的需要打开设备。 "
"并且，有些声卡是半双工的：它们可以被打开用于读取或写入，但不能同时读写。"

#: ../../library/ossaudiodev.rst:96
msgid ""
"Note the unusual calling syntax: the *first* argument is optional, and the "
"second is required.  This is a historical artifact for compatibility with "
"the older :mod:`linuxaudiodev` module which :mod:`ossaudiodev` supersedes."
msgstr ""
"请注意这里特殊的调用语法: *first* 参数是可选的，而第二个参数则是必需的。 这是出于历史原因要与 :mod:`ossaudiodev` 所替代的"
" :mod:`linuxaudiodev` 模块保持兼容。"

#: ../../library/ossaudiodev.rst:107
msgid ""
"Open a mixer device and return an OSS mixer device object.   *device* is the"
" mixer device filename to use.  If it is not specified, this module first "
"looks in the environment variable :envvar:`MIXERDEV` for a device to use.  "
"If not found, it falls back to :file:`/dev/mixer`."
msgstr ""
"打开一个混音设备并返回 OSS 混音设备对象。 *device* 是要使用的混音设备文件名。 如果未指定，则此模块会先在环境变量 "
":envvar:`MIXERDEV` 中查找要使用的设备。 如果未找到，它将回退为 :file:`/dev/mixer`。"

#: ../../library/ossaudiodev.rst:116
msgid "Audio Device Objects"
msgstr "音频设备对象"

#: ../../library/ossaudiodev.rst:118
msgid ""
"Before you can write to or read from an audio device, you must call three "
"methods in the correct order:"
msgstr "在你写入或读取音频设备之前，你必须按照正确的顺序调用三个方法:"

#: ../../library/ossaudiodev.rst:121
msgid ":meth:`setfmt` to set the output format"
msgstr ":meth:`setfmt` 设置输出格式"

#: ../../library/ossaudiodev.rst:123
msgid ":meth:`channels` to set the number of channels"
msgstr ":meth:`channels` 设置声道数量"

#: ../../library/ossaudiodev.rst:125
msgid ":meth:`speed` to set the sample rate"
msgstr ":meth:`speed` 设置采样率"

#: ../../library/ossaudiodev.rst:127
msgid ""
"Alternately, you can use the :meth:`setparameters` method to set all three "
"audio parameters at once.  This is more convenient, but may not be as "
"flexible in all cases."
msgstr ""
"或者，你也可以使用 :meth:`setparameters` 方法一次性地设置全部三个音频参数。 这更为便捷，但可能不会在所有场景下都一样灵活。"

#: ../../library/ossaudiodev.rst:131
msgid ""
"The audio device objects returned by :func:`.open` define the following "
"methods and (read-only) attributes:"
msgstr ":func:`.open` 所返回的音频设备对象定义了下列方法和（只读）属性:"

#: ../../library/ossaudiodev.rst:137
msgid ""
"Explicitly close the audio device.  When you are done writing to or reading "
"from an audio device, you should explicitly close it.  A closed device "
"cannot be used again."
msgstr "显式地关闭音频设备。 当你完成写入或读取音频设备后，你应当显式地关闭它。 已关闭的设备不可被再次使用。"

#: ../../library/ossaudiodev.rst:144
msgid "Return the file descriptor associated with the device."
msgstr "返回与设备相关联的文件描述符。"

#: ../../library/ossaudiodev.rst:149
msgid ""
"Read *size* bytes from the audio input and return them as a Python string. "
"Unlike most Unix device drivers, OSS audio devices in blocking mode (the "
"default) will block :func:`read` until the entire requested amount of data "
"is available."
msgstr ""
"从音频输入设备读取 *size* 个字节并返回为 Python 字节串。 与大多数 Unix 设备驱动不同，处于阻塞模式（默认）的 OSS "
"音频设备将阻塞 :func:`read` 直到所请求大小的数据全部可用。"

#: ../../library/ossaudiodev.rst:157
msgid ""
"Write a :term:`bytes-like object` *data* to the audio device and return the "
"number of bytes written.  If the audio device is in blocking mode (the "
"default), the entire data is always written (again, this is different from "
"usual Unix device semantics).  If the device is in non-blocking mode, some "
"data may not be written---see :meth:`writeall`."
msgstr ""
"将一个 :term:`bytes-like object` *data* 写入音频设备并返回写入的字节数。 "
"如果音频设备处于阻塞模式（默认），则总是会写入完整数据（这还是不同于通常的 Unix 设备语义）。 如果设备处于非阻塞模式，则可能会有部分数据未被写入 "
"--- 参见 :meth:`writeall`。"

#: ../../library/ossaudiodev.rst:163 ../../library/ossaudiodev.rst:177
msgid "Writable :term:`bytes-like object` is now accepted."
msgstr "现在接受可写的 :term:`字节类对象 <bytes-like object>`。"

#: ../../library/ossaudiodev.rst:169
msgid ""
"Write a :term:`bytes-like object` *data* to the audio device: waits until "
"the audio device is able to accept data, writes as much data as it will "
"accept, and repeats until *data* has been completely written. If the device "
"is in blocking mode (the default), this has the same effect as "
":meth:`write`; :meth:`writeall` is only useful in non-blocking mode.  Has no"
" return value, since the amount of data written is always equal to the "
"amount of data supplied."
msgstr ""
"将一个 :term:`bytes-like object` *data* "
"写入音频设备：等待直到音频设备能够接收数据，将根据其所能接收的数据量尽可能多地写入，并重复操作直至 *data* 被完全写入。 "
"如果设备处于阻塞模式（默认），则其效果与 :meth:`write` 相同；:meth:`writeall` 仅适用于非阻塞模式。 "
"它没有返回值，因为写入的数据量总是等于所提供的数据量。"

#: ../../library/ossaudiodev.rst:181
msgid ""
"Audio device objects also support the context management protocol, i.e. they"
" can be used in a :keyword:`with` statement."
msgstr "音频设备对象还支持上下文管理协议，就是说它们可以在 :keyword:`with` 语句中使用。"

#: ../../library/ossaudiodev.rst:186
msgid ""
"The following methods each map to exactly one :c:func:`ioctl` system call.  "
"The correspondence is obvious: for example, :meth:`setfmt` corresponds to "
"the ``SNDCTL_DSP_SETFMT`` ioctl, and :meth:`sync` to ``SNDCTL_DSP_SYNC`` "
"(this can be useful when consulting the OSS documentation).  If the "
"underlying :c:func:`ioctl` fails, they all raise :exc:`OSError`."
msgstr ""
"下列方法各自映射一个 :c:func:`ioctl` 系统调用。 对应关系很明显：例如，:meth:`setfmt` 对应 "
"``SNDCTL_DSP_SETFMT`` ioctl，而 :meth:`sync` 对应 ``SNDCTL_DSP_SYNC`` (这在查阅 OSS "
"文档时很有用)。 如果下层的 :c:func:`ioctl` 失败，它们将引发 :exc:`OSError`。"

#: ../../library/ossaudiodev.rst:195
msgid ""
"Put the device into non-blocking mode.  Once in non-blocking mode, there is "
"no way to return it to blocking mode."
msgstr "将设备转为非阻塞模式。 一旦处于非阻塞模式，将无法将其转回阻塞模式。"

#: ../../library/ossaudiodev.rst:201
msgid ""
"Return a bitmask of the audio output formats supported by the soundcard.  "
"Some of the formats supported by OSS are:"
msgstr "返回声卡所支持的音频输出格式的位掩码。 OSS 支持的一部分格式如下:"

#: ../../library/ossaudiodev.rst:205
msgid "Format"
msgstr "格式"

#: ../../library/ossaudiodev.rst:205 ../../library/ossaudiodev.rst:259
msgid "Description"
msgstr "描述"

#: ../../library/ossaudiodev.rst:207
msgid ":const:`AFMT_MU_LAW`"
msgstr ":const:`AFMT_MU_LAW`"

#: ../../library/ossaudiodev.rst:207
msgid ""
"a logarithmic encoding (used by Sun ``.au`` files and :file:`/dev/audio`)"
msgstr "一种对数编码格式（被 Sun ``.au`` 文件和 :file:`/dev/audio` 所使用）"

#: ../../library/ossaudiodev.rst:210
msgid ":const:`AFMT_A_LAW`"
msgstr ":const:`AFMT_A_LAW`"

#: ../../library/ossaudiodev.rst:210
msgid "a logarithmic encoding"
msgstr "一种对数编码格式"

#: ../../library/ossaudiodev.rst:212
msgid ":const:`AFMT_IMA_ADPCM`"
msgstr ":const:`AFMT_IMA_ADPCM`"

#: ../../library/ossaudiodev.rst:212
msgid ""
"a 4:1 compressed format defined by the Interactive Multimedia Association"
msgstr "一种 4:1 压缩格式，由 Interactive Multimedia Association 定义"

#: ../../library/ossaudiodev.rst:215
msgid ":const:`AFMT_U8`"
msgstr ":const:`AFMT_U8`"

#: ../../library/ossaudiodev.rst:215
msgid "Unsigned, 8-bit audio"
msgstr "无符号的 8 位音频"

#: ../../library/ossaudiodev.rst:217
msgid ":const:`AFMT_S16_LE`"
msgstr ":const:`AFMT_S16_LE`"

#: ../../library/ossaudiodev.rst:217
msgid ""
"Signed, 16-bit audio, little-endian byte order (as used by Intel processors)"
msgstr "有符号的 16 位音频，采用小端字节序（如 Intel 处理器所用的）"

#: ../../library/ossaudiodev.rst:220
msgid ":const:`AFMT_S16_BE`"
msgstr ":const:`AFMT_S16_BE`"

#: ../../library/ossaudiodev.rst:220
msgid ""
"Signed, 16-bit audio, big-endian byte order (as used by 68k, PowerPC, Sparc)"
msgstr "有符号的 16 位音频，采用大端字节序（如 68k, PowerPC, Sparc 所用的）"

#: ../../library/ossaudiodev.rst:223
msgid ":const:`AFMT_S8`"
msgstr ":const:`AFMT_S8`"

#: ../../library/ossaudiodev.rst:223
msgid "Signed, 8 bit audio"
msgstr "有符号的 8 位音频"

#: ../../library/ossaudiodev.rst:225
msgid ":const:`AFMT_U16_LE`"
msgstr ":const:`AFMT_U16_LE`"

#: ../../library/ossaudiodev.rst:225
msgid "Unsigned, 16-bit little-endian audio"
msgstr "无符号的 16 位小端字节序音频"

#: ../../library/ossaudiodev.rst:227
msgid ":const:`AFMT_U16_BE`"
msgstr ":const:`AFMT_U16_BE`"

#: ../../library/ossaudiodev.rst:227
msgid "Unsigned, 16-bit big-endian audio"
msgstr "无符号的 16 位大端字节序音频"

#: ../../library/ossaudiodev.rst:230
msgid ""
"Consult the OSS documentation for a full list of audio formats, and note "
"that most devices support only a subset of these formats.  Some older "
"devices only support :const:`AFMT_U8`; the most common format used today is "
":const:`AFMT_S16_LE`."
msgstr ""
"请参阅 OSS 文档获取音频格式的完整列表，还要注意大多数设备都只支持这些列表的一个子集。 某些较旧的设备仅支持 "
":const:`AFMT_U8`；目前最为常用的格式是 :const:`AFMT_S16_LE`。"

#: ../../library/ossaudiodev.rst:238
msgid ""
"Try to set the current audio format to *format*---see :meth:`getfmts` for a "
"list.  Returns the audio format that the device was set to, which may not be"
" the requested format.  May also be used to return the current audio format"
"---do this by passing an \"audio format\" of :const:`AFMT_QUERY`."
msgstr ""
"尝试将当前音频格式设为 *format* --- 请参阅 :meth:`getfmts` 获取格式列表。 "
"返回为设备设置的音频格式，这可能并非所请求的格式。 也可被用来返回当前音频格式 --- 这可以通过传入特殊的 \"音频格式\" "
":const:`AFMT_QUERY` 来实现。"

#: ../../library/ossaudiodev.rst:246
msgid ""
"Set the number of output channels to *nchannels*.  A value of 1 indicates "
"monophonic sound, 2 stereophonic.  Some devices may have more than 2 "
"channels, and some high-end devices may not support mono. Returns the number"
" of channels the device was set to."
msgstr ""
"将输出声道数设为 *nchannels*。 值为 1 表示单声道，2 表示立体声。 某些设备可能拥有 2 "
"个以上的声道，并且某些高端设备还可能不支持单声道。 返回为设备设置的声道数。"

#: ../../library/ossaudiodev.rst:254
msgid ""
"Try to set the audio sampling rate to *samplerate* samples per second.  "
"Returns the rate actually set.  Most sound devices don't support arbitrary "
"sampling rates.  Common rates are:"
msgstr "尝试将音频采样率设为每秒 *samplerate* 次采样。 返回实际设置的采样率。 大多数设备都不支持任意的采样率。 常见的采样率为:"

#: ../../library/ossaudiodev.rst:259
msgid "Rate"
msgstr "采样率"

#: ../../library/ossaudiodev.rst:261
msgid "8000"
msgstr "8000"

#: ../../library/ossaudiodev.rst:261
msgid "default rate for :file:`/dev/audio`"
msgstr ":file:`/dev/audio` 的默认采样率"

#: ../../library/ossaudiodev.rst:263
msgid "11025"
msgstr "11025"

#: ../../library/ossaudiodev.rst:263
msgid "speech recording"
msgstr "语音录音"

#: ../../library/ossaudiodev.rst:265
msgid "22050"
msgstr "22050"

#: ../../library/ossaudiodev.rst:267
msgid "44100"
msgstr "44100"

#: ../../library/ossaudiodev.rst:267
msgid "CD quality audio (at 16 bits/sample and 2 channels)"
msgstr "CD品质的音频（16位采样和2通道）"

#: ../../library/ossaudiodev.rst:270
msgid "96000"
msgstr "96000"

#: ../../library/ossaudiodev.rst:270
msgid "DVD quality audio (at 24 bits/sample)"
msgstr "DVD品质的音频（24位采样）"

#: ../../library/ossaudiodev.rst:276
msgid ""
"Wait until the sound device has played every byte in its buffer.  (This "
"happens implicitly when the device is closed.)  The OSS documentation "
"recommends closing and re-opening the device rather than using :meth:`sync`."
msgstr ""
"等待直到音频设备播放完其缓冲区中的所有字节。 （这会在设备被关闭时隐式地发生。） OSS 建议关闭再重新打开设备而不是使用 :meth:`sync`。"

#: ../../library/ossaudiodev.rst:283
msgid ""
"Immediately stop playing or recording and return the device to a state where"
" it can accept commands.  The OSS documentation recommends closing and re-"
"opening the device after calling :meth:`reset`."
msgstr "立即停止播放或录制并使设备返回可接受命令的状态。 OSS 文档建议在调用 :meth:`reset` 之后关闭并重新打开设备。"

#: ../../library/ossaudiodev.rst:290
msgid ""
"Tell the driver that there is likely to be a pause in the output, making it "
"possible for the device to handle the pause more intelligently.  You might "
"use this after playing a spot sound effect, before waiting for user input, "
"or before doing disk I/O."
msgstr ""
"告知设备在输出中可能有暂停，使得设备可以更智能地处理暂停。 你可以在播放一个定点音效之后、等待用户输入之前或执行磁盘 I/O 之前使用此方法。"

#: ../../library/ossaudiodev.rst:295
msgid ""
"The following convenience methods combine several ioctls, or one ioctl and "
"some simple calculations."
msgstr "下列便捷方法合并了多个 ioctl，或是合并了一个 ioctl 与某些简单的运算。"

#: ../../library/ossaudiodev.rst:301
msgid ""
"Set the key audio sampling parameters---sample format, number of channels, "
"and sampling rate---in one method call.  *format*,  *nchannels*, and "
"*samplerate* should be as specified in the :meth:`setfmt`, :meth:`channels`,"
" and :meth:`speed`  methods.  If *strict* is true, :meth:`setparameters` "
"checks to see if each parameter was actually set to the requested value, and"
" raises :exc:`OSSAudioError` if not.  Returns a tuple (*format*, "
"*nchannels*, *samplerate*) indicating the parameter values that were "
"actually set by the device driver (i.e., the same as the return values of "
":meth:`setfmt`, :meth:`channels`, and :meth:`speed`)."
msgstr ""
"在一次方法调用中设置关键的音频采样参数 --- 采样格式、声道数和采样率。 *format*,  *nchannels* 和 *samplerate* "
"应当与在 :meth:`setfmt`, :meth:`channels` 和 :meth:`speed`  方法中所指定的一致。 如果 "
"*strict* 为真值，则 :meth:`setparameters` 会检查每个参数是否确实被设置为所请求的值，如果不是则会引发 "
":exc:`OSSAudioError`。 返回一个元组 (*format*, *nchannels*, *samplerate*) "
"指明由设备驱动实际设置的参数值 (即与 :meth:`setfmt`, :meth:`channels` 和 :meth:`speed` "
"的返回值相同)。"

#: ../../library/ossaudiodev.rst:311
msgid "For example,  ::"
msgstr "例如，::"

#: ../../library/ossaudiodev.rst:315
msgid "is equivalent to  ::"
msgstr "等价于 ::"

#: ../../library/ossaudiodev.rst:324
msgid "Returns the size of the hardware buffer, in samples."
msgstr "返回硬件缓冲区的大小，以采样数表示。"

#: ../../library/ossaudiodev.rst:329
msgid ""
"Returns the number of samples that are in the hardware buffer yet to be "
"played."
msgstr "返回硬件缓冲区中待播放的采样数。"

#: ../../library/ossaudiodev.rst:334
msgid ""
"Returns the number of samples that could be queued into the hardware buffer "
"to be played without blocking."
msgstr "返回可以被加入硬件缓冲区队列以非阻塞模式播放的采样数。"

#: ../../library/ossaudiodev.rst:337
msgid "Audio device objects also support several read-only attributes:"
msgstr "音频设备对象还支持几个只读属性:"

#: ../../library/ossaudiodev.rst:342
msgid "Boolean indicating whether the device has been closed."
msgstr "指明设备是否已被关闭的布尔值。"

#: ../../library/ossaudiodev.rst:347
msgid "String containing the name of the device file."
msgstr "包含设备文件名称的字符串。"

#: ../../library/ossaudiodev.rst:352
msgid "The I/O mode for the file, either ``\"r\"``, ``\"rw\"``, or ``\"w\"``."
msgstr "文件的 I/O 模式，可以为 ``\"r\"``, ``\"rw\"`` 或 ``\"w\"``。"

#: ../../library/ossaudiodev.rst:358
msgid "Mixer Device Objects"
msgstr "混音器设备对象"

#: ../../library/ossaudiodev.rst:360
msgid "The mixer object provides two file-like methods:"
msgstr "混音器对象提供了两个文件类方法:"

#: ../../library/ossaudiodev.rst:365
msgid ""
"This method closes the open mixer device file.  Any further attempts to use "
"the mixer after this file is closed will raise an :exc:`OSError`."
msgstr "此方法会关闭打开的混音器设备文件。 在文件被关闭后任何继续使用混音器的尝试都将引发 :exc:`OSError`。"

#: ../../library/ossaudiodev.rst:371
msgid "Returns the file handle number of the open mixer device file."
msgstr "返回打开的混音器设备文件的文件句柄号。"

#: ../../library/ossaudiodev.rst:373
msgid "Mixer objects also support the context management protocol."
msgstr "混音器设备还支持上下文管理协议。"

#: ../../library/ossaudiodev.rst:377
msgid "The remaining methods are specific to audio mixing:"
msgstr "其余方法都是混音专属的:"

#: ../../library/ossaudiodev.rst:382
msgid ""
"This method returns a bitmask specifying the available mixer controls "
"(\"Control\" being a specific mixable \"channel\", such as "
":const:`SOUND_MIXER_PCM` or :const:`SOUND_MIXER_SYNTH`).  This bitmask "
"indicates a subset of all available mixer controls---the "
":const:`SOUND_MIXER_\\*` constants defined at module level. To determine if,"
" for example, the current mixer object supports a PCM mixer, use the "
"following Python code::"
msgstr ""
"此方法返回一个表示可用的混音控件的位掩码 (\"控件\" 是专用的可混合 \"声道\"，例如 :const:`SOUND_MIXER_PCM` 或 "
":const:`SOUND_MIXER_SYNTH`)。 该掩码会指定所有可用混音控件的一个子集 --- 它们是在模块层级上定义的 "
":const:`SOUND_MIXER_\\*` 常量。 举例来说，要确定当前混音器对象是否支持 PCM 混音器，就使用以下 Python 代码::"

#: ../../library/ossaudiodev.rst:394
msgid ""
"For most purposes, the :const:`SOUND_MIXER_VOLUME` (master volume) and "
":const:`SOUND_MIXER_PCM` controls should suffice---but code that uses the "
"mixer should be flexible when it comes to choosing mixer controls.  On the "
"Gravis Ultrasound, for example, :const:`SOUND_MIXER_VOLUME` does not exist."
msgstr ""
"对于大多数目的来说，:const:`SOUND_MIXER_VOLUME` (主音量) 和 :const:`SOUND_MIXER_PCM` "
"控件应该足够了 --- 但使用混音器的代码应当在选择混音器控件时保持灵活。 例如在 Gravis Ultrasound "
"上，:const:`SOUND_MIXER_VOLUME` 是不存在的。"

#: ../../library/ossaudiodev.rst:402
msgid ""
"Returns a bitmask indicating stereo mixer controls.  If a bit is set, the "
"corresponding control is stereo; if it is unset, the control is either "
"monophonic or not supported by the mixer (use in combination with "
":meth:`controls` to determine which)."
msgstr ""
"返回一个表示立体声混音控件的位掩码。 如果设置了比特位，则对应的控件就是立体声的；如果未设置，则控件为单声道或者不被混音器所支持（请配合 "
":meth:`controls` 使用以确定是哪种情况）。"

#: ../../library/ossaudiodev.rst:407
msgid ""
"See the code example for the :meth:`controls` function for an example of "
"getting data from a bitmask."
msgstr "请查看 :meth:`controls` 函数的代码示例了解如何从位掩码获取数据。"

#: ../../library/ossaudiodev.rst:413
msgid ""
"Returns a bitmask specifying the mixer controls that may be used to record."
"  See the code example for :meth:`controls` for an example of reading from a"
" bitmask."
msgstr "返回一个指明可被用于录音的混音器控件的位掩码。 请查看 :meth:`controls` 的代码示例了解如何读取位掩码。"

#: ../../library/ossaudiodev.rst:419
msgid ""
"Returns the volume of a given mixer control.  The returned volume is a "
"2-tuple ``(left_volume,right_volume)``.  Volumes are specified as numbers "
"from 0 (silent) to 100 (full volume).  If the control is monophonic, a "
"2-tuple is still returned, but both volumes are the same."
msgstr ""
"返回给定混音控件的音量。 返回的音量是一个 2 元组 ``(left_volume,right_volume)``。 音量被表示为从 0 (静音) 到 "
"100 (最大音量) 的数字。 如果控件是单声道的，仍然会返回一个 2 元组，但两个音量必定相同。"

#: ../../library/ossaudiodev.rst:424
msgid ""
"Raises :exc:`OSSAudioError` if an invalid control is specified, or "
":exc:`OSError` if an unsupported control is specified."
msgstr ""
"如果指定了无效的控件则会引发 :exc:`OSSAudioError`，或者如果指定了不受支持的控件则会引发 :exc:`OSError`。"

#: ../../library/ossaudiodev.rst:430
msgid ""
"Sets the volume for a given mixer control to ``(left,right)``. ``left`` and "
"``right`` must be ints and between 0 (silent) and 100 (full volume).  On "
"success, the new volume is returned as a 2-tuple. Note that this may not be "
"exactly the same as the volume specified, because of the limited resolution "
"of some soundcard's mixers."
msgstr ""
"将给定混音控件的音量设为 ``(left,right)``。 ``left`` 和 ``right`` 必须为整数并在 0 (静音) 至 100 "
"(最大音量) 之间。 当执行成功的，新的音量将以 2 元组形式返回。 请注意这可能不完全等于所指定的音量，因为某些声卡的混音器有精度限制。"

#: ../../library/ossaudiodev.rst:436
msgid ""
"Raises :exc:`OSSAudioError` if an invalid mixer control was specified, or if"
" the specified volumes were out-of-range."
msgstr "如果指定了无效的混音控件，或者指定的音量超出限制则会引发 :exc:`OSSAudioError`。"

#: ../../library/ossaudiodev.rst:442
msgid ""
"This method returns a bitmask indicating which control(s) are currently "
"being used as a recording source."
msgstr "此方法返回一个表示当前被用作录音源的的控件的位掩码。"

#: ../../library/ossaudiodev.rst:448
msgid ""
"Call this function to specify a recording source.  Returns a bitmask "
"indicating the new recording source (or sources) if successful; raises "
":exc:`OSError` if an invalid source was specified.  To set the current "
"recording source to the microphone input::"
msgstr ""
"调用此函数来指定一个录音源。 如果成功则返回一个指明新录音源的位掩码；如果指定了无效的源则会引发 :exc:`OSError`。 "
"如果要将当前录音源设为麦克风输入::"
