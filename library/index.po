# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-07-25 16:48+0000\n"
"PO-Revision-Date: 2025-07-18 20:05+0000\n"
"Language-Team: Chinese (China) (https://app.transifex.com/python-doc/teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/index.rst:5
msgid "The Python Standard Library"
msgstr ""

#: ../../library/index.rst:7
msgid ""
"While :ref:`reference-index` describes the exact syntax and semantics of the"
" Python language, this library reference manual describes the standard "
"library that is distributed with Python. It also describes some of the "
"optional components that are commonly included in Python distributions."
msgstr ""

#: ../../library/index.rst:13
msgid ""
"Python's standard library is very extensive, offering a wide range of "
"facilities as indicated by the long table of contents listed below. The "
"library contains built-in modules (written in C) that provide access to "
"system functionality such as file I/O that would otherwise be inaccessible "
"to Python programmers, as well as modules written in Python that provide "
"standardized solutions for many problems that occur in everyday programming."
" Some of these modules are explicitly designed to encourage and enhance the "
"portability of Python programs by abstracting away platform-specifics into "
"platform-neutral APIs."
msgstr ""

#: ../../library/index.rst:23
msgid ""
"The Python installers for the Windows platform usually include the entire "
"standard library and often also include many additional components. For "
"Unix-like operating systems Python is normally provided as a collection of "
"packages, so it may be necessary to use the packaging tools provided with "
"the operating system to obtain some or all of the optional components."
msgstr ""

#: ../../library/index.rst:30
msgid ""
"In addition to the standard library, there is an active collection of "
"hundreds of thousands of components (from individual programs and modules to"
" packages and entire application development frameworks), available from the"
" `Python Package Index <https://pypi.org>`_."
msgstr ""
