# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2025
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.9\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-07-25 19:10+0000\n"
"PO-Revision-Date: 2025-07-18 19:18+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2025\n"
"Language-Team: Chinese (China) (https://app.transifex.com/python-doc/teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/tempfile.rst:2
msgid ":mod:`tempfile` --- Generate temporary files and directories"
msgstr ""

#: ../../library/tempfile.rst:9
msgid "**Source code:** :source:`Lib/tempfile.py`"
msgstr ""

#: ../../library/tempfile.rst:17
msgid ""
"This module creates temporary files and directories.  It works on all "
"supported platforms. :class:`TemporaryFile`, :class:`NamedTemporaryFile`, "
":class:`TemporaryDirectory`, and :class:`SpooledTemporaryFile` are high-"
"level interfaces which provide automatic cleanup and can be used as context "
"managers. :func:`mkstemp` and :func:`mkdtemp` are lower-level functions "
"which require manual cleanup."
msgstr ""

#: ../../library/tempfile.rst:24
msgid ""
"All the user-callable functions and constructors take additional arguments "
"which allow direct control over the location and name of temporary files and"
" directories. Files names used by this module include a string of random "
"characters which allows those files to be securely created in shared "
"temporary directories. To maintain backward compatibility, the argument "
"order is somewhat odd; it is recommended to use keyword arguments for "
"clarity."
msgstr ""

#: ../../library/tempfile.rst:32
msgid "The module defines the following user-callable items:"
msgstr ""

#: ../../library/tempfile.rst:36
msgid ""
"Return a :term:`file-like object` that can be used as a temporary storage "
"area. The file is created securely, using the same rules as :func:`mkstemp`."
" It will be destroyed as soon as it is closed (including an implicit close "
"when the object is garbage collected).  Under Unix, the directory entry for "
"the file is either not created at all or is removed immediately after the "
"file is created.  Other platforms do not support this; your code should not "
"rely on a temporary file created using this function having or not having a "
"visible name in the file system."
msgstr ""

#: ../../library/tempfile.rst:44
msgid ""
"The resulting object can be used as a context manager (see :ref:`tempfile-"
"examples`).  On completion of the context or destruction of the file object "
"the temporary file will be removed from the filesystem."
msgstr ""

#: ../../library/tempfile.rst:49
msgid ""
"The *mode* parameter defaults to ``'w+b'`` so that the file created can be "
"read and written without being closed.  Binary mode is used so that it "
"behaves consistently on all platforms without regard for the data that is "
"stored.  *buffering*, *encoding*, *errors* and *newline* are interpreted as "
"for :func:`open`."
msgstr ""

#: ../../library/tempfile.rst:55
msgid ""
"The *dir*, *prefix* and *suffix* parameters have the same meaning and "
"defaults as with :func:`mkstemp`."
msgstr ""

#: ../../library/tempfile.rst:58
msgid ""
"The returned object is a true file object on POSIX platforms.  On other "
"platforms, it is a file-like object whose :attr:`!file` attribute is the "
"underlying true file object."
msgstr ""

#: ../../library/tempfile.rst:62
msgid ""
"The :py:data:`os.O_TMPFILE` flag is used if it is available and works "
"(Linux-specific, requires Linux kernel 3.11 or later)."
msgstr ""

#: ../../library/tempfile.rst:65
msgid ""
"On platforms that are neither Posix nor Cygwin, TemporaryFile is an alias "
"for NamedTemporaryFile."
msgstr ""

#: ../../library/tempfile.rst:68 ../../library/tempfile.rst:93
#: ../../library/tempfile.rst:188
msgid ""
"Raises an :ref:`auditing event <auditing>` ``tempfile.mkstemp`` with "
"argument ``fullpath``."
msgstr ""

#: ../../library/tempfile.rst:72
msgid "The :py:data:`os.O_TMPFILE` flag is now used if available."
msgstr ""

#: ../../library/tempfile.rst:74 ../../library/tempfile.rst:95
#: ../../library/tempfile.rst:120
msgid "Added *errors* parameter."
msgstr ""

#: ../../library/tempfile.rst:80
msgid ""
"This function operates exactly as :func:`TemporaryFile` does, except that "
"the file is guaranteed to have a visible name in the file system (on Unix, "
"the directory entry is not unlinked).  That name can be retrieved from the "
":attr:`name` attribute of the returned file-like object.  Whether the name "
"can be used to open the file a second time, while the named temporary file "
"is still open, varies across platforms (it can be so used on Unix; it cannot"
" on Windows).  If *delete* is true (the default), the file is deleted as "
"soon as it is closed. The returned object is always a file-like object whose"
" :attr:`!file` attribute is the underlying true file object. This file-like "
"object can be used in a :keyword:`with` statement, just like a normal file."
msgstr ""

#: ../../library/tempfile.rst:101
msgid ""
"This function operates exactly as :func:`TemporaryFile` does, except that "
"data is spooled in memory until the file size exceeds *max_size*, or until "
"the file's :func:`fileno` method is called, at which point the contents are "
"written to disk and operation proceeds as with :func:`TemporaryFile`."
msgstr ""

#: ../../library/tempfile.rst:107
msgid ""
"The resulting file has one additional method, :func:`rollover`, which causes"
" the file to roll over to an on-disk file regardless of its size."
msgstr ""

#: ../../library/tempfile.rst:110
msgid ""
"The returned object is a file-like object whose :attr:`_file` attribute is "
"either an :class:`io.BytesIO` or :class:`io.TextIOWrapper` object (depending"
" on whether binary or text *mode* was specified) or a true file object, "
"depending on whether :func:`rollover` has been called.  This file-like "
"object can be used in a :keyword:`with` statement, just like a normal file."
msgstr ""

#: ../../library/tempfile.rst:117
msgid "the truncate method now accepts a ``size`` argument."
msgstr ""

#: ../../library/tempfile.rst:126
msgid ""
"This function securely creates a temporary directory using the same rules as"
" :func:`mkdtemp`. The resulting object can be used as a context manager (see"
" :ref:`tempfile-examples`).  On completion of the context or destruction of "
"the temporary directory object the newly created temporary directory and all"
" its contents are removed from the filesystem."
msgstr ""

#: ../../library/tempfile.rst:132
msgid ""
"The directory name can be retrieved from the :attr:`name` attribute of the "
"returned object.  When the returned object is used as a context manager, the"
" :attr:`name` will be assigned to the target of the :keyword:`!as` clause in"
" the :keyword:`with` statement, if there is one."
msgstr ""

#: ../../library/tempfile.rst:137
msgid ""
"The directory can be explicitly cleaned up by calling the :func:`cleanup` "
"method."
msgstr ""

#: ../../library/tempfile.rst:140 ../../library/tempfile.rst:214
msgid ""
"Raises an :ref:`auditing event <auditing>` ``tempfile.mkdtemp`` with "
"argument ``fullpath``."
msgstr ""

#: ../../library/tempfile.rst:147
msgid ""
"Creates a temporary file in the most secure manner possible.  There are no "
"race conditions in the file's creation, assuming that the platform properly "
"implements the :const:`os.O_EXCL` flag for :func:`os.open`.  The file is "
"readable and writable only by the creating user ID.  If the platform uses "
"permission bits to indicate whether a file is executable, the file is "
"executable by no one.  The file descriptor is not inherited by child "
"processes."
msgstr ""

#: ../../library/tempfile.rst:155
msgid ""
"Unlike :func:`TemporaryFile`, the user of :func:`mkstemp` is responsible for"
" deleting the temporary file when done with it."
msgstr ""

#: ../../library/tempfile.rst:158
msgid ""
"If *suffix* is not ``None``, the file name will end with that suffix, "
"otherwise there will be no suffix.  :func:`mkstemp` does not put a dot "
"between the file name and the suffix; if you need one, put it at the "
"beginning of *suffix*."
msgstr ""

#: ../../library/tempfile.rst:163
msgid ""
"If *prefix* is not ``None``, the file name will begin with that prefix; "
"otherwise, a default prefix is used.  The default is the return value of "
":func:`gettempprefix` or :func:`gettempprefixb`, as appropriate."
msgstr ""

#: ../../library/tempfile.rst:167
msgid ""
"If *dir* is not ``None``, the file will be created in that directory; "
"otherwise, a default directory is used.  The default directory is chosen "
"from a platform-dependent list, but the user of the application can control "
"the directory location by setting the *TMPDIR*, *TEMP* or *TMP* environment "
"variables.  There is thus no guarantee that the generated filename will have"
" any nice properties, such as not requiring quoting when passed to external "
"commands via ``os.popen()``."
msgstr ""

#: ../../library/tempfile.rst:175
msgid ""
"If any of *suffix*, *prefix*, and *dir* are not ``None``, they must be the "
"same type. If they are bytes, the returned name will be bytes instead of "
"str. If you want to force a bytes return value with otherwise default "
"behavior, pass ``suffix=b''``."
msgstr ""

#: ../../library/tempfile.rst:181
msgid ""
"If *text* is specified and true, the file is opened in text mode. Otherwise,"
" (the default) the file is opened in binary mode."
msgstr ""

#: ../../library/tempfile.rst:184
msgid ""
":func:`mkstemp` returns a tuple containing an OS-level handle to an open "
"file (as would be returned by :func:`os.open`) and the absolute pathname of "
"that file, in that order."
msgstr ""

#: ../../library/tempfile.rst:190 ../../library/tempfile.rst:216
msgid ""
"*suffix*, *prefix*, and *dir* may now be supplied in bytes in order to "
"obtain a bytes return value.  Prior to this, only str was allowed. *suffix* "
"and *prefix* now accept and default to ``None`` to cause an appropriate "
"default value to be used."
msgstr ""

#: ../../library/tempfile.rst:196 ../../library/tempfile.rst:222
msgid "The *dir* parameter now accepts a :term:`path-like object`."
msgstr ""

#: ../../library/tempfile.rst:202
msgid ""
"Creates a temporary directory in the most secure manner possible. There are "
"no race conditions in the directory's creation.  The directory is readable, "
"writable, and searchable only by the creating user ID."
msgstr ""

#: ../../library/tempfile.rst:206
msgid ""
"The user of :func:`mkdtemp` is responsible for deleting the temporary "
"directory and its contents when done with it."
msgstr ""

#: ../../library/tempfile.rst:209
msgid ""
"The *prefix*, *suffix*, and *dir* arguments are the same as for "
":func:`mkstemp`."
msgstr ""

#: ../../library/tempfile.rst:212
msgid ":func:`mkdtemp` returns the absolute pathname of the new directory."
msgstr ""

#: ../../library/tempfile.rst:228
msgid ""
"Return the name of the directory used for temporary files. This defines the "
"default value for the *dir* argument to all functions in this module."
msgstr ""

#: ../../library/tempfile.rst:232
msgid ""
"Python searches a standard list of directories to find one which the calling"
" user can create files in.  The list is:"
msgstr ""

#: ../../library/tempfile.rst:235
msgid "The directory named by the :envvar:`TMPDIR` environment variable."
msgstr ""

#: ../../library/tempfile.rst:237
msgid "The directory named by the :envvar:`TEMP` environment variable."
msgstr ""

#: ../../library/tempfile.rst:239
msgid "The directory named by the :envvar:`TMP` environment variable."
msgstr ""

#: ../../library/tempfile.rst:241
msgid "A platform-specific location:"
msgstr ""

#: ../../library/tempfile.rst:243
msgid ""
"On Windows, the directories :file:`C:\\\\TEMP`, :file:`C:\\\\TMP`, "
":file:`\\\\TEMP`, and :file:`\\\\TMP`, in that order."
msgstr ""

#: ../../library/tempfile.rst:246
msgid ""
"On all other platforms, the directories :file:`/tmp`, :file:`/var/tmp`, and "
":file:`/usr/tmp`, in that order."
msgstr ""

#: ../../library/tempfile.rst:249
msgid "As a last resort, the current working directory."
msgstr ""

#: ../../library/tempfile.rst:251
msgid ""
"The result of this search is cached, see the description of :data:`tempdir` "
"below."
msgstr ""

#: ../../library/tempfile.rst:256
msgid "Same as :func:`gettempdir` but the return value is in bytes."
msgstr ""

#: ../../library/tempfile.rst:262
msgid ""
"Return the filename prefix used to create temporary files.  This does not "
"contain the directory component."
msgstr ""

#: ../../library/tempfile.rst:267
msgid "Same as :func:`gettempprefix` but the return value is in bytes."
msgstr ""

#: ../../library/tempfile.rst:271
msgid ""
"The module uses a global variable to store the name of the directory used "
"for temporary files returned by :func:`gettempdir`.  It can be set directly "
"to override the selection process, but this is discouraged. All functions in"
" this module take a *dir* argument which can be used to specify the "
"directory and this is the recommended approach."
msgstr ""

#: ../../library/tempfile.rst:279
msgid ""
"When set to a value other than ``None``, this variable defines the default "
"value for the *dir* argument to the functions defined in this module."
msgstr ""

#: ../../library/tempfile.rst:283
msgid ""
"If ``tempdir`` is ``None`` (the default) at any call to any of the above "
"functions except :func:`gettempprefix` it is initialized following the "
"algorithm described in :func:`gettempdir`."
msgstr ""

#: ../../library/tempfile.rst:290
msgid "Examples"
msgstr "例子"

#: ../../library/tempfile.rst:292
msgid ""
"Here are some examples of typical usage of the :mod:`tempfile` module::"
msgstr ""

#: ../../library/tempfile.rst:324
msgid "Deprecated functions and variables"
msgstr ""

#: ../../library/tempfile.rst:326
msgid ""
"A historical way to create temporary files was to first generate a file name"
" with the :func:`mktemp` function and then create a file using this name. "
"Unfortunately this is not secure, because a different process may create a "
"file with this name in the time between the call to :func:`mktemp` and the "
"subsequent attempt to create the file by the first process. The solution is "
"to combine the two steps and create the file immediately. This approach is "
"used by :func:`mkstemp` and the other functions described above."
msgstr ""

#: ../../library/tempfile.rst:337
msgid "Use :func:`mkstemp` instead."
msgstr ""

#: ../../library/tempfile.rst:340
msgid ""
"Return an absolute pathname of a file that did not exist at the time the "
"call is made.  The *prefix*, *suffix*, and *dir* arguments are similar to "
"those of :func:`mkstemp`, except that bytes file names, ``suffix=None`` and "
"``prefix=None`` are not supported."
msgstr ""

#: ../../library/tempfile.rst:347
msgid ""
"Use of this function may introduce a security hole in your program.  By the "
"time you get around to doing anything with the file name it returns, someone"
" else may have beaten you to the punch.  :func:`mktemp` usage can be "
"replaced easily with :func:`NamedTemporaryFile`, passing it the "
"``delete=False`` parameter::"
msgstr ""
