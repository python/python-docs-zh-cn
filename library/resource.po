# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# cdarlint <cdarling@126.com>, 2021
# 稀饭~~ <wangwhai@qq.com>, 2021
# Zombie110year <zombie110year@gmail.com>, 2021
# ppcfish <ppcfish@gmail.com>, 2021
# 钢 彭 <szhairui@gmail.com>, 2021
# Heyi Tang <tangheyi.09@gmail.com>, 2021
# Alpha Du <alphanow@gmail.com>, 2021
# Freesand Leo <yuqinju@163.com>, 2024
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-05-09 14:19+0000\n"
"PO-Revision-Date: 2021-06-28 01:12+0000\n"
"Last-Translator: Freesand Leo <yuqinju@163.com>, 2024\n"
"Language-Team: Chinese (China) (https://app.transifex.com/python-doc/teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/resource.rst:2
msgid ":mod:`!resource` --- Resource usage information"
msgstr ":mod:`!resource` --- 资源使用信息"

#: ../../library/resource.rst:13
msgid ""
"This module provides basic mechanisms for measuring and controlling system "
"resources utilized by a program."
msgstr "该模块提供了测量和控制程序所利用的系统资源的基本机制。"

#: ../../library/resource.rst:16 ../../library/resource.rst:104
#: ../../library/resource.rst:180 ../../library/resource.rst:192
#: ../../library/resource.rst:201 ../../library/resource.rst:210
#: ../../library/resource.rst:220 ../../library/resource.rst:229
#: ../../library/resource.rst:239 ../../library/resource.rst:252
#: ../../library/resource.rst:260 ../../library/resource.rst:268
msgid "Availability"
msgstr "Availability"

#: ../../library/resource.rst:18
msgid ""
"Symbolic constants are used to specify particular system resources and to "
"request usage information about either the current process or its children."
msgstr "符号常量被用来指定特定的系统资源，并要求获得关于当前进程或其子进程的使用信息。"

#: ../../library/resource.rst:21
msgid "An :exc:`OSError` is raised on syscall failure."
msgstr "当系统调用失败时，会触发一个 :exc:`OSError` 。"

#: ../../library/resource.rst:26
msgid "A deprecated alias of :exc:`OSError`."
msgstr "一个被弃用的 :exc:`OSError` 的别名。"

#: ../../library/resource.rst:28
msgid "Following :pep:`3151`, this class was made an alias of :exc:`OSError`."
msgstr "根据 :pep:`3151`，这个类是 :exc:`OSError` 的别名。"

#: ../../library/resource.rst:33
msgid "Resource Limits"
msgstr "资源限制"

#: ../../library/resource.rst:35
msgid ""
"Resources usage can be limited using the :func:`setrlimit` function "
"described below. Each resource is controlled by a pair of limits: a soft "
"limit and a hard limit. The soft limit is the current limit, and may be "
"lowered or raised by a process over time. The soft limit can never exceed "
"the hard limit. The hard limit can be lowered to any value greater than the "
"soft limit, but not raised. (Only processes with the effective UID of the "
"super-user can raise a hard limit.)"
msgstr ""
"资源的使用可以通过下面描述的 :func:`setrlimit` "
"函数来限制。每个资源都被一对限制所控制：一个软限制和一个硬限制。软限制是当前的限制，并且可以由一个进程随着时间的推移而降低或提高。软限制永远不能超过硬限制。硬限制可以降低到大于软限制的任何数值，但不能提高。（只有拥有超级用户有效UID的进程才能提高硬限制。)"

#: ../../library/resource.rst:43
msgid ""
"The specific resources that can be limited are system dependent. They are "
"described in the :manpage:`getrlimit(2)` man page.  The resources listed "
"below are supported when the underlying operating system supports them; "
"resources which cannot be checked or controlled by the operating system are "
"not defined in this module for those platforms."
msgstr ""
"可以被限制的具体资源取决于系统。它们在 man :manpage:`getrlimit(2)` 中描述。 "
"下面列出的资源在底层操作系统支持的情况下被支持；那些不能被操作系统检查或控制的资源在本模块中没有为这些平台定义。"

#: ../../library/resource.rst:52
msgid "Constant used to represent the limit for an unlimited resource."
msgstr "用来表示无限资源的极限的常数。"

#: ../../library/resource.rst:57
msgid ""
"Returns a tuple ``(soft, hard)`` with the current soft and hard limits of "
"*resource*. Raises :exc:`ValueError` if an invalid resource is specified, or"
" :exc:`error` if the underlying system call fails unexpectedly."
msgstr ""
"返回一个包含 *resource* 当前软限制和硬限制的元组。如果指定了一个无效的资源，则触发 :exc:`ValueError` "
"，如果底层系统调用意外失败，则引发 :exc:`error` 。"

#: ../../library/resource.rst:64
msgid ""
"Sets new limits of consumption of *resource*. The *limits* argument must be "
"a tuple ``(soft, hard)`` of two integers describing the new limits. A value "
"of :data:`~resource.RLIM_INFINITY` can be used to request a limit that is "
"unlimited."
msgstr ""
"设置 *resource* 的新的消耗极限。参数 *limits* 必须是一个由两个整数组成的元组 ``(soft, hard)`` ，描述了新的限制。"
" :data:`~resource.RLIM_INFINITY` 的值可以用来请求一个无限的限制。"

#: ../../library/resource.rst:69
msgid ""
"Raises :exc:`ValueError` if an invalid resource is specified, if the new "
"soft limit exceeds the hard limit, or if a process tries to raise its hard "
"limit. Specifying a limit of :data:`~resource.RLIM_INFINITY` when the hard "
"or system limit for that resource is not unlimited will result in a "
":exc:`ValueError`.  A process with the effective UID of super-user can "
"request any valid limit value, including unlimited, but :exc:`ValueError` "
"will still be raised if the requested limit exceeds the system imposed "
"limit."
msgstr ""
"如果指定了一个无效的资源，如果新的软限制超过了硬限制，或者如果一个进程试图提高它的硬限制，将触发 :exc:`ValueError` "
"。当资源的硬限制或系统限制不是无限时，指定一个 :data:`~resource.RLIM_INFINITY` 的限制将导致 "
":exc:`ValueError` 。 一个有效 UID "
"为超级用户的进程可以请求任何有效的限制值，包括无限，但如果请求的限制超过了系统规定的限制，则仍然会产生 :exc:`ValueError` 。"

#: ../../library/resource.rst:78
msgid ""
"``setrlimit`` may also raise :exc:`error` if the underlying system call "
"fails."
msgstr "如果底层系统调用失败， ``setrlimit`` 也可能触发 :exc:`error` 。"

#: ../../library/resource.rst:81
msgid "VxWorks only supports setting :data:`RLIMIT_NOFILE`."
msgstr "VxWorks只支持设置 :data:`RLIMIT_NOFILE` 。"

#: ../../library/resource.rst:83
msgid ""
"Raises an :ref:`auditing event <auditing>` ``resource.setrlimit`` with "
"arguments ``resource``, ``limits``."
msgstr ""
"引发一个 :ref:`审计事件 <auditing>` ``resource.setrlimit`` 并附带参数 ``resource``, "
"``limits``。"

#: ../../library/resource.rst:88
msgid ""
"Combines :func:`setrlimit` and :func:`getrlimit` in one function and "
"supports to get and set the resources limits of an arbitrary process. If "
"*pid* is 0, then the call applies to the current process. *resource* and "
"*limits* have the same meaning as in :func:`setrlimit`, except that *limits*"
" is optional."
msgstr ""
"将 :func:`setrlimit` 和 :func:`getrlimit` 合并为一个函数，支持获取和设置任意进程的资源限制。如果 *pid* "
"为0，那么该调用适用于当前进程。 *resource* 和 *limits* 的含义与 :func:`setrlimit` 相同，只是 *limits*"
" 是可选的。"

#: ../../library/resource.rst:94
msgid ""
"When *limits* is not given the function returns the *resource* limit of the "
"process *pid*. When *limits* is given the *resource* limit of the process is"
" set and the former resource limit is returned."
msgstr ""
"当 *limits* 没有给出时，该函数返回进程 *pid* 的 *resource* 限制。当 *limits* 被给定时，进程的 "
"*resource* 限制被设置，并返回以前的资源限制。"

#: ../../library/resource.rst:98
msgid ""
"Raises :exc:`ProcessLookupError` when *pid* can't be found and "
":exc:`PermissionError` when the user doesn't have ``CAP_SYS_RESOURCE`` for "
"the process."
msgstr ""
"当 *pid* 找不到时，触发 :exc:`ProcessLookupError` ；当用户没有进程的 ``CAP_SYS_RESOURCE`` "
"时，触发 :exc:`PermissionError` 。"

#: ../../library/resource.rst:102
msgid ""
"Raises an :ref:`auditing event <auditing>` ``resource.prlimit`` with "
"arguments ``pid``, ``resource``, ``limits``."
msgstr ""
"引发一个 :ref:`审计事件 <auditing>` ``resource.prlimit`` 并附带参数 ``pid``, "
"``resource``, ``limits``。"

#: ../../library/resource.rst:109
msgid ""
"These symbols define resources whose consumption can be controlled using the"
" :func:`setrlimit` and :func:`getrlimit` functions described below. The "
"values of these symbols are exactly the constants used by C programs."
msgstr ""
"这些符号定义了资源的消耗可以通过下面描述的 :func:`setrlimit` 和 :func:`getrlimit` 函数来控制。这些符号的值正是 C"
" 程序所使用的常数。"

#: ../../library/resource.rst:113
msgid ""
"The Unix man page for :manpage:`getrlimit(2)` lists the available resources."
" Note that not all systems use the same symbol or same value to denote the "
"same resource.  This module does not attempt to mask platform differences "
"--- symbols not defined for a platform will not be available from this "
"module on that platform."
msgstr ""
"Unix man 页面 :manpage:`getrlimit(2)` "
"列出了可用的资源。注意，并非所有系统都使用相同的符号或相同的值来表示相同的资源。本模块并不试图掩盖平台的差异——没有为某一平台定义的符号在该平台上将无法从本模块中获得。"

#: ../../library/resource.rst:122
msgid ""
"The maximum size (in bytes) of a core file that the current process can "
"create. This may result in the creation of a partial core file if a larger "
"core would be required to contain the entire process image."
msgstr "当前进程可以创建的核心文件的最大大小（以字节为单位）。如果需要更大的核心文件来包含整个进程的镜像，这可能会导致创建一个部分核心文件。"

#: ../../library/resource.rst:129
msgid ""
"The maximum amount of processor time (in seconds) that a process can use. If"
" this limit is exceeded, a :const:`SIGXCPU` signal is sent to the process. "
"(See the :mod:`signal` module documentation for information about how to "
"catch this signal and do something useful, e.g. flush open files to disk.)"
msgstr ""
"一个进程可以使用的最大处理器时间（以秒为单位）。如果超过了这个限制，一个 :const:`SIGXCPU` 信号将被发送给进程。（参见 "
":mod:`signal` 模块文档，了解如何捕捉这个信号并做一些有用的事情，例如，将打开的文件刷新到磁盘上）。"

#: ../../library/resource.rst:137
msgid "The maximum size of a file which the process may create."
msgstr "进程可能创建的文件的最大大小。"

#: ../../library/resource.rst:142
msgid "The maximum size (in bytes) of the process's heap."
msgstr "进程的堆的最大大小（以字节为单位）。"

#: ../../library/resource.rst:147
msgid ""
"The maximum size (in bytes) of the call stack for the current process.  This"
" only affects the stack of the main thread in a multi-threaded process."
msgstr "当前进程的调用堆栈的最大大小（字节）。 这只影响到多线程进程中主线程的堆栈。"

#: ../../library/resource.rst:153
msgid ""
"The maximum resident set size that should be made available to the process."
msgstr "应该提供给进程的最大常驻内存大小。"

#: ../../library/resource.rst:158
msgid "The maximum number of processes the current process may create."
msgstr "当前进程可能创建的最大进程数。"

#: ../../library/resource.rst:163
msgid "The maximum number of open file descriptors for the current process."
msgstr "当前进程打开的文件描述符的最大数量。"

#: ../../library/resource.rst:168
msgid "The BSD name for :const:`RLIMIT_NOFILE`."
msgstr "BSD 对 :const:`RLIMIT_NOFILE` 的命名。"

#: ../../library/resource.rst:173
msgid "The maximum address space which may be locked in memory."
msgstr "可能被锁定在内存中的最大地址空间。"

#: ../../library/resource.rst:178
msgid "The largest area of mapped memory which the process may occupy."
msgstr "进程可能占用的最大映射内存区域。"

#: ../../library/resource.rst:185
msgid ""
"The maximum area (in bytes) of address space which may be taken by the "
"process."
msgstr "进程可能占用的地址空间的最大区域（以字节为单位）。"

#: ../../library/resource.rst:190
msgid "The number of bytes that can be allocated for POSIX message queues."
msgstr "可分配给 POSIX 消息队列的字节数。"

#: ../../library/resource.rst:199
msgid ""
"The ceiling for the process's nice level (calculated as 20 - rlim_cur)."
msgstr "进程的 Nice 级别的上限（计算为 20 - rlim_cur ）。"

#: ../../library/resource.rst:208
msgid "The ceiling of the real-time priority."
msgstr "实时优先级的上限。"

#: ../../library/resource.rst:217
msgid ""
"The time limit (in microseconds) on CPU time that a process can spend under "
"real-time scheduling without making a blocking syscall."
msgstr "在实时调度下，一个进程在不进行阻塞性系统调用的情况下，可以花费的 CPU 时间限制（以微秒计）。"

#: ../../library/resource.rst:227
msgid "The number of signals which the process may queue."
msgstr "进程可能排队的信号数量。"

#: ../../library/resource.rst:235
msgid ""
"The maximum size (in bytes) of socket buffer usage for this user. This "
"limits the amount of network memory, and hence the amount of mbufs, that "
"this user may hold at any time."
msgstr "这个用户使用的套接字缓冲区的最大大小（字节数）。这限制了这个用户在任何时候都可以持有的网络内存数量，因此也限制了 mbufs 的数量。"

#: ../../library/resource.rst:245
msgid ""
"The maximum size (in bytes) of the swap space that may be reserved or used "
"by all of this user id's processes. This limit is enforced only if bit 1 of "
"the vm.overcommit sysctl is set. Please see `tuning(7) "
"<https://man.freebsd.org/cgi/man.cgi?query=tuning&sektion=7>`__ for a "
"complete description of this sysctl."
msgstr ""
"这个用户 ID 的所有进程可能保留或使用的交换空间的大小上限（以字节数表示）。 此限制只有在 vm.overcommit sysctl 的 1 "
"号比特位被设置时才会生效。 请参阅 `tuning(7) "
"<https://man.freebsd.org/cgi/man.cgi?query=tuning&sektion=7>`__ 获取该 sysctl "
"的完整描述。"

#: ../../library/resource.rst:258
msgid "The maximum number of pseudo-terminals created by this user id."
msgstr "该用户 ID 创建的伪终端的最大数量。"

#: ../../library/resource.rst:266
msgid "The maximum number of kqueues this user id is allowed to create."
msgstr "这个用户 ID 被允许创建的最大 kqueue 数量。"

#: ../../library/resource.rst:273
msgid "Resource Usage"
msgstr "资源用量"

#: ../../library/resource.rst:275
msgid "These functions are used to retrieve resource usage information:"
msgstr "这些函数被用来检索资源使用信息。"

#: ../../library/resource.rst:280
msgid ""
"This function returns an object that describes the resources consumed by "
"either the current process or its children, as specified by the *who* "
"parameter.  The *who* parameter should be specified using one of the "
":const:`!RUSAGE_\\*` constants described below."
msgstr ""
"此函数返回一个描述当前进程或其子进程所消耗的资源的对象，它由 *who* 形参指定。 *who* 形参应当使用下面介绍的 "
":const:`!RUSAGE_\\*` 常量之一来指定。"

#: ../../library/resource.rst:285
msgid "A simple example::"
msgstr "一个简单的示例："

#: ../../library/resource.rst:287
msgid ""
"from resource import *\n"
"import time\n"
"\n"
"# a non CPU-bound task\n"
"time.sleep(3)\n"
"print(getrusage(RUSAGE_SELF))\n"
"\n"
"# a CPU-bound task\n"
"for i in range(10 ** 8):\n"
"   _ = 1 + 1\n"
"print(getrusage(RUSAGE_SELF))"
msgstr ""
"from resource import *\n"
"import time\n"
"\n"
"# 非 CPU 密集型任务\n"
"time.sleep(3)\n"
"print(getrusage(RUSAGE_SELF))\n"
"\n"
"# CPU 密集型任务\n"
"for i in range(10 ** 8):\n"
"   _ = 1 + 1\n"
"print(getrusage(RUSAGE_SELF))"

#: ../../library/resource.rst:299
msgid ""
"The fields of the return value each describe how a particular system "
"resource has been used, e.g. amount of time spent running is user mode or "
"number of times the process was swapped out of main memory. Some values are "
"dependent on the clock tick internal, e.g. the amount of memory the process "
"is using."
msgstr ""
"返回值的字段分别描述了某一特定系统资源的使用情况，例如，在用户模式下运行的时间或进程从主内存中换出的次数。有些值取决于内部的时钟周期，例如进程使用的内存量。"

#: ../../library/resource.rst:304
msgid ""
"For backward compatibility, the return value is also accessible as a tuple "
"of 16 elements."
msgstr "为了向后兼容，返回值也可以作为一个 16 个元素的元组来访问。"

#: ../../library/resource.rst:307
msgid ""
"The fields :attr:`ru_utime` and :attr:`ru_stime` of the return value are "
"floating-point values representing the amount of time spent executing in "
"user mode and the amount of time spent executing in system mode, "
"respectively. The remaining values are integers. Consult the "
":manpage:`getrusage(2)` man page for detailed information about these "
"values. A brief summary is presented here:"
msgstr ""
"返回值中的 :attr:`ru_utime` 和 :attr:`ru_stime` "
"字段是浮点值，分别代表在用户模式下执行的时间和在系统模式下执行的时间。 其余的值是整数。 关于这些值的详细信息，请查阅 "
":manpage:`getrusage(2)` man page 。 这里提供一个简短的摘要。"

#: ../../library/resource.rst:314
msgid "Index"
msgstr "索引"

#: ../../library/resource.rst:314
msgid "Field"
msgstr "字段"

#: ../../library/resource.rst:314
msgid "Resource"
msgstr "资源"

#: ../../library/resource.rst:316
msgid "``0``"
msgstr "``0``"

#: ../../library/resource.rst:316
msgid ":attr:`ru_utime`"
msgstr ":attr:`ru_utime`"

#: ../../library/resource.rst:316
msgid "time in user mode (float seconds)"
msgstr "用户模式下的时间（浮点数秒）"

#: ../../library/resource.rst:318
msgid "``1``"
msgstr "``1``"

#: ../../library/resource.rst:318
msgid ":attr:`ru_stime`"
msgstr ":attr:`ru_stime`"

#: ../../library/resource.rst:318
msgid "time in system mode (float seconds)"
msgstr "系统模式下的时间（浮点数秒）"

#: ../../library/resource.rst:320
msgid "``2``"
msgstr "``2``"

#: ../../library/resource.rst:320
msgid ":attr:`ru_maxrss`"
msgstr ":attr:`ru_maxrss`"

#: ../../library/resource.rst:320
msgid "maximum resident set size"
msgstr "最大的常驻内存大小"

#: ../../library/resource.rst:322
msgid "``3``"
msgstr "``3``"

#: ../../library/resource.rst:322
msgid ":attr:`ru_ixrss`"
msgstr ":attr:`ru_ixrss`"

#: ../../library/resource.rst:322
msgid "shared memory size"
msgstr "共享内存大小"

#: ../../library/resource.rst:324
msgid "``4``"
msgstr "``4``"

#: ../../library/resource.rst:324
msgid ":attr:`ru_idrss`"
msgstr ":attr:`ru_idrss`"

#: ../../library/resource.rst:324
msgid "unshared memory size"
msgstr "未共享的内存大小"

#: ../../library/resource.rst:326
msgid "``5``"
msgstr "``5``"

#: ../../library/resource.rst:326
msgid ":attr:`ru_isrss`"
msgstr ":attr:`ru_isrss`"

#: ../../library/resource.rst:326
msgid "unshared stack size"
msgstr "未共享的堆栈大小"

#: ../../library/resource.rst:328
msgid "``6``"
msgstr "``6``"

#: ../../library/resource.rst:328
msgid ":attr:`ru_minflt`"
msgstr ":attr:`ru_minflt`"

#: ../../library/resource.rst:328
msgid "page faults not requiring I/O"
msgstr "不需要 I/O 的页面故障数"

#: ../../library/resource.rst:330
msgid "``7``"
msgstr "``7``"

#: ../../library/resource.rst:330
msgid ":attr:`ru_majflt`"
msgstr ":attr:`ru_majflt`"

#: ../../library/resource.rst:330
msgid "page faults requiring I/O"
msgstr "需要 I/O 的页面故障数"

#: ../../library/resource.rst:332
msgid "``8``"
msgstr "``8``"

#: ../../library/resource.rst:332
msgid ":attr:`ru_nswap`"
msgstr ":attr:`ru_nswap`"

#: ../../library/resource.rst:332
msgid "number of swap outs"
msgstr "swap out 的数量"

#: ../../library/resource.rst:334
msgid "``9``"
msgstr "``9``"

#: ../../library/resource.rst:334
msgid ":attr:`ru_inblock`"
msgstr ":attr:`ru_inblock`"

#: ../../library/resource.rst:334
msgid "block input operations"
msgstr "块输入操作数"

#: ../../library/resource.rst:336
msgid "``10``"
msgstr "``10``"

#: ../../library/resource.rst:336
msgid ":attr:`ru_oublock`"
msgstr ":attr:`ru_oublock`"

#: ../../library/resource.rst:336
msgid "block output operations"
msgstr "块输出操作数"

#: ../../library/resource.rst:338
msgid "``11``"
msgstr "``11``"

#: ../../library/resource.rst:338
msgid ":attr:`ru_msgsnd`"
msgstr ":attr:`ru_msgsnd`"

#: ../../library/resource.rst:338
msgid "messages sent"
msgstr "发送消息数"

#: ../../library/resource.rst:340
msgid "``12``"
msgstr "``12``"

#: ../../library/resource.rst:340
msgid ":attr:`ru_msgrcv`"
msgstr ":attr:`ru_msgrcv`"

#: ../../library/resource.rst:340
msgid "messages received"
msgstr "收到消息数"

#: ../../library/resource.rst:342
msgid "``13``"
msgstr "``13``"

#: ../../library/resource.rst:342
msgid ":attr:`ru_nsignals`"
msgstr ":attr:`ru_nsignals`"

#: ../../library/resource.rst:342
msgid "signals received"
msgstr "收到信号数"

#: ../../library/resource.rst:344
msgid "``14``"
msgstr "``14``"

#: ../../library/resource.rst:344
msgid ":attr:`ru_nvcsw`"
msgstr ":attr:`ru_nvcsw`"

#: ../../library/resource.rst:344
msgid "voluntary context switches"
msgstr "主动上下文切换"

#: ../../library/resource.rst:346
msgid "``15``"
msgstr "``15``"

#: ../../library/resource.rst:346
msgid ":attr:`ru_nivcsw`"
msgstr ":attr:`ru_nivcsw`"

#: ../../library/resource.rst:346
msgid "involuntary context switches"
msgstr "被动上下文切换"

#: ../../library/resource.rst:349
msgid ""
"This function will raise a :exc:`ValueError` if an invalid *who* parameter "
"is specified. It may also raise :exc:`error` exception in unusual "
"circumstances."
msgstr ""
"如果指定了一个无效的 *who* 参数，这个函数将触发一个 :exc:`ValueError` 。在特殊情况下，它也可能触发 :exc:`error` "
"异常。"

#: ../../library/resource.rst:355
msgid ""
"Returns the number of bytes in a system page. (This need not be the same as "
"the hardware page size.)"
msgstr "返回一个系统页面的字节数。（这不需要和硬件页的大小相同）。"

#: ../../library/resource.rst:358
msgid ""
"The following :const:`!RUSAGE_\\*` symbols are passed to the "
":func:`getrusage` function to specify which processes information should be "
"provided for."
msgstr "下面的 :const:`!RUSAGE_\\*` 符号将被传给 :func:`getrusage` 函数以指定应该为哪些进程提供信息。"

#: ../../library/resource.rst:364
msgid ""
"Pass to :func:`getrusage` to request resources consumed by the calling "
"process, which is the sum of resources used by all threads in the process."
msgstr "传递给 :func:`getrusage` 以请求调用进程消耗的资源，这是进程中所有线程使用的资源总和。"

#: ../../library/resource.rst:370
msgid ""
"Pass to :func:`getrusage` to request resources consumed by child processes "
"of the calling process which have been terminated and waited for."
msgstr "传递给 :func:`getrusage` 以请求被终止和等待的调用进程的子进程所消耗的资源。"

#: ../../library/resource.rst:376
msgid ""
"Pass to :func:`getrusage` to request resources consumed by both the current "
"process and child processes.  May not be available on all systems."
msgstr "传递给 :func:`getrusage` 以请求当前进程和子进程所消耗的资源。并非所有系统都能使用。"

#: ../../library/resource.rst:382
msgid ""
"Pass to :func:`getrusage` to request resources consumed by the current "
"thread.  May not be available on all systems."
msgstr "传递给 :func:`getrusage` 以请求当前线程所消耗的资源。 并非所有系统都能使用。"
