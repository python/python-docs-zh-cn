# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2025
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.13\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-15 15:15+0000\n"
"PO-Revision-Date: 2025-07-18 19:21+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2025\n"
"Language-Team: Chinese (China) (https://app.transifex.com/python-doc/teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/constants.rst:4
msgid "Built-in Constants"
msgstr "内置常量"

#: ../../library/constants.rst:6
msgid "A small number of constants live in the built-in namespace.  They are:"
msgstr "有少数的常量存在于内置命名空间中。 它们是："

#: ../../library/constants.rst:10
msgid ""
"The false value of the :class:`bool` type. Assignments to ``False`` are "
"illegal and raise a :exc:`SyntaxError`."
msgstr ":class:`bool` 类型的假值。 给 ``False`` 赋值是非法的并会引发 :exc:`SyntaxError`。"

#: ../../library/constants.rst:16
msgid ""
"The true value of the :class:`bool` type. Assignments to ``True`` are "
"illegal and raise a :exc:`SyntaxError`."
msgstr ":class:`bool` 类型的真值。 给 ``True`` 赋值是非法的并会引发 :exc:`SyntaxError`。"

#: ../../library/constants.rst:22
msgid ""
"An object frequently used to represent the absence of a value, as when "
"default arguments are not passed to a function. Assignments to ``None`` are "
"illegal and raise a :exc:`SyntaxError`. ``None`` is the sole instance of the"
" :data:`~types.NoneType` type."
msgstr ""
"通常被用来代表空值的对象，例如未向某个函数传入默认参数时。 向 ``None`` 赋值是非法的并会引发 :exc:`SyntaxError`。 "
"``None`` 是 :data:`~types.NoneType` 类型的唯一实例。"

#: ../../library/constants.rst:30
msgid ""
"A special value which should be returned by the binary special methods (e.g."
" :meth:`~object.__eq__`, :meth:`~object.__lt__`, :meth:`~object.__add__`, "
":meth:`~object.__rsub__`, etc.) to indicate that the operation is not "
"implemented with respect to the other type; may be returned by the in-place "
"binary special methods (e.g. :meth:`~object.__imul__`, "
":meth:`~object.__iand__`, etc.) for the same purpose. It should not be "
"evaluated in a boolean context. :data:`!NotImplemented` is the sole instance"
" of the :data:`types.NotImplementedType` type."
msgstr ""
"一个应当由双目运算特殊方法（如 :meth:`~object.__eq__`, :meth:`~object.__lt__`, "
":meth:`~object.__add__`, :meth:`~object.__rsub__` "
"等）返回的特殊值，用来表明该运算没有针对其他类型的实现；也可由原地双目运算特殊方法（如 :meth:`~object.__imul__`, "
":meth:`~object.__iand__` 等）出于同样的目的而返回。 它不应在布尔上下文中被求值。 "
":data:`!NotImplemented` 是 :data:`types.NotImplementedType` 类型的唯一实例。"

#: ../../library/constants.rst:40
msgid ""
"When a binary (or in-place) method returns :data:`!NotImplemented` the "
"interpreter will try the reflected operation on the other type (or some "
"other fallback, depending on the operator).  If all attempts return "
":data:`!NotImplemented`, the interpreter will raise an appropriate "
"exception. Incorrectly returning :data:`!NotImplemented` will result in a "
"misleading error message or the :data:`!NotImplemented` value being returned"
" to Python code."
msgstr ""
"当一个双目（或原地）方法返回 :data:`!NotImplemented` "
"时解释器将尝试对另一种类型（或其他回退操作，具体取决于所用的运算符）的反射操作。 如果所有尝试都返回 "
":data:`!NotImplemented`，解释器将引发适当的异常。 错误地返回 :data:`!NotImplemented` "
"将导致误导性的错误消息或 :data:`!NotImplemented` 值被返回给 Python 代码。"

#: ../../library/constants.rst:47
msgid "See :ref:`implementing-the-arithmetic-operations` for examples."
msgstr "参见 :ref:`implementing-the-arithmetic-operations` 为例。"

#: ../../library/constants.rst:51
msgid ""
":data:`!NotImplemented` and :exc:`!NotImplementedError` are not "
"interchangeable. This constant should only be used as described above; see "
":exc:`NotImplementedError` for details on correct usage of the exception."
msgstr ""
":data:`!NotImplemented` 和 :exc:`!NotImplementedError` 不能互相替代。 "
"此常量应当仅以上文所描述的方式使用；请参阅 :exc:`NotImplementedError` 了解正确使用该异常的相关细节。"

#: ../../library/constants.rst:56
msgid ""
"Evaluating :data:`!NotImplemented` in a boolean context is deprecated. While"
" it currently evaluates as true, it will emit a :exc:`DeprecationWarning`. "
"It will raise a :exc:`TypeError` in a future version of Python."
msgstr ""
"在布尔上下文件中对 :data:`!NotImplemented` 求值的操作已被弃用。 虽然它目前会被求解为真值，但将同时发出 "
":exc:`DeprecationWarning`。 它将在未来的 Python 版本中引发 :exc:`TypeError`。"

#: ../../library/constants.rst:65
msgid ""
"The same as the ellipsis literal \"``...``\". Special value used mostly in "
"conjunction with extended slicing syntax for user-defined container data "
"types. ``Ellipsis`` is the sole instance of the :data:`types.EllipsisType` "
"type."
msgstr ""
"与省略号字面值 \"``...``\" 相同。 该特殊值主要是与用户定义的容器数据类型的扩展切片语法结合使用。 ``Ellipsis`` 是 "
":data:`types.EllipsisType` 类型的唯一实例。"

#: ../../library/constants.rst:72
msgid ""
"This constant is true if Python was not started with an :option:`-O` option."
" See also the :keyword:`assert` statement."
msgstr "如果 Python 没有以 :option:`-O` 选项启动，则此常量为真值。 另请参见 :keyword:`assert` 语句。"

#: ../../library/constants.rst:78
msgid ""
"The names :data:`None`, :data:`False`, :data:`True` and :data:`__debug__` "
"cannot be reassigned (assignments to them, even as an attribute name, raise "
":exc:`SyntaxError`), so they can be considered \"true\" constants."
msgstr ""
"变量名 :data:`None`，:data:`False`，:data:`True` 和 :data:`__ debug__` "
"无法重新赋值（赋值给它们，即使是属性名，将引发 :exc:`SyntaxError` ），所以它们可以被认为是“真正的”常数。"

#: ../../library/constants.rst:86
msgid "Constants added by the :mod:`site` module"
msgstr "由 :mod:`site` 模块添加的常量"

#: ../../library/constants.rst:88
msgid ""
"The :mod:`site` module (which is imported automatically during startup, "
"except if the :option:`-S` command-line option is given) adds several "
"constants to the built-in namespace.  They are useful for the interactive "
"interpreter shell and should not be used in programs."
msgstr ""
":mod:`site` 模块（在启动期间自动导入，除非给出 :option:`-S` 命令行选项）将几个常量添加到内置命名空间。 它们对交互式解释器 "
"shell 很有用，并且不应在程序中使用。"

#: ../../library/constants.rst:96
msgid ""
"Objects that when printed, print a message like \"Use quit() or Ctrl-D (i.e."
" EOF) to exit\", and when accessed directly in the interactive interpreter "
"or called as functions, raise :exc:`SystemExit` with the specified exit "
"code."
msgstr ""

#: ../../library/constants.rst:104
msgid ""
"Object that when printed, prints the message \"Type help() for interactive "
"help, or help(object) for help about object.\", and when accessed directly "
"in the interactive interpreter, invokes the built-in help system (see "
":func:`help`)."
msgstr ""

#: ../../library/constants.rst:112
msgid ""
"Objects that when printed or called, print the text of copyright or credits,"
" respectively."
msgstr "打印或调用的对象分别打印版权或作者的文本。"

#: ../../library/constants.rst:117
msgid ""
"Object that when printed, prints the message \"Type license() to see the "
"full license text\", and when called, displays the full license text in a "
"pager-like fashion (one screen at a time)."
msgstr ""
"当打印此对象时，会打印出一条消息“Type license() to see the full license "
"text”，当调用此对象时，将以分页形式显示完整的许可证文本（每次显示一屏）。"

#: ../../library/constants.rst:62
msgid "..."
msgstr "..."

#: ../../library/constants.rst:62
msgid "ellipsis literal"
msgstr "省略符字面值"
