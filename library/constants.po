# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-07-25 16:48+0000\n"
"PO-Revision-Date: 2025-07-18 20:05+0000\n"
"Language-Team: Chinese (China) (https://app.transifex.com/python-doc/teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/constants.rst:4
msgid "Built-in Constants"
msgstr ""

#: ../../library/constants.rst:6
msgid "A small number of constants live in the built-in namespace.  They are:"
msgstr ""

#: ../../library/constants.rst:10
msgid ""
"The false value of the :class:`bool` type. Assignments to ``False`` are "
"illegal and raise a :exc:`SyntaxError`."
msgstr ""

#: ../../library/constants.rst:16
msgid ""
"The true value of the :class:`bool` type. Assignments to ``True`` are "
"illegal and raise a :exc:`SyntaxError`."
msgstr ""

#: ../../library/constants.rst:22
msgid ""
"An object frequently used to represent the absence of a value, as when "
"default arguments are not passed to a function. Assignments to ``None`` are "
"illegal and raise a :exc:`SyntaxError`. ``None`` is the sole instance of the"
" :data:`~types.NoneType` type."
msgstr ""

#: ../../library/constants.rst:30
msgid ""
"A special value which should be returned by the binary special methods (e.g."
" :meth:`~object.__eq__`, :meth:`~object.__lt__`, :meth:`~object.__add__`, "
":meth:`~object.__rsub__`, etc.) to indicate that the operation is not "
"implemented with respect to the other type; may be returned by the in-place "
"binary special methods (e.g. :meth:`~object.__imul__`, "
":meth:`~object.__iand__`, etc.) for the same purpose. It should not be "
"evaluated in a boolean context. :data:`!NotImplemented` is the sole instance"
" of the :data:`types.NotImplementedType` type."
msgstr ""

#: ../../library/constants.rst:40
msgid ""
"When a binary (or in-place) method returns :data:`!NotImplemented` the "
"interpreter will try the reflected operation on the other type (or some "
"other fallback, depending on the operator).  If all attempts return "
":data:`!NotImplemented`, the interpreter will raise an appropriate "
"exception. Incorrectly returning :data:`!NotImplemented` will result in a "
"misleading error message or the :data:`!NotImplemented` value being returned"
" to Python code."
msgstr ""

#: ../../library/constants.rst:47
msgid "See :ref:`implementing-the-arithmetic-operations` for examples."
msgstr ""

#: ../../library/constants.rst:51
msgid ""
"``NotImplementedError`` and :data:`!NotImplemented` are not interchangeable,"
" even though they have similar names and purposes. See "
":exc:`NotImplementedError` for details on when to use it."
msgstr ""

#: ../../library/constants.rst:55
msgid ""
"Evaluating :data:`!NotImplemented` in a boolean context is deprecated. While"
" it currently evaluates as true, it will emit a :exc:`DeprecationWarning`. "
"It will raise a :exc:`TypeError` in a future version of Python."
msgstr ""

#: ../../library/constants.rst:64
msgid ""
"The same as the ellipsis literal \"``...``\". Special value used mostly in "
"conjunction with extended slicing syntax for user-defined container data "
"types. ``Ellipsis`` is the sole instance of the :data:`types.EllipsisType` "
"type."
msgstr ""

#: ../../library/constants.rst:71
msgid ""
"This constant is true if Python was not started with an :option:`-O` option."
" See also the :keyword:`assert` statement."
msgstr ""

#: ../../library/constants.rst:77
msgid ""
"The names :data:`None`, :data:`False`, :data:`True` and :data:`__debug__` "
"cannot be reassigned (assignments to them, even as an attribute name, raise "
":exc:`SyntaxError`), so they can be considered \"true\" constants."
msgstr ""

#: ../../library/constants.rst:83
msgid "Constants added by the :mod:`site` module"
msgstr ""

#: ../../library/constants.rst:85
msgid ""
"The :mod:`site` module (which is imported automatically during startup, "
"except if the :option:`-S` command-line option is given) adds several "
"constants to the built-in namespace.  They are useful for the interactive "
"interpreter shell and should not be used in programs."
msgstr ""

#: ../../library/constants.rst:93
msgid ""
"Objects that when printed, print a message like \"Use quit() or Ctrl-D (i.e."
" EOF) to exit\", and when called, raise :exc:`SystemExit` with the specified"
" exit code."
msgstr ""

#: ../../library/constants.rst:100
msgid ""
"Objects that when printed or called, print the text of copyright or credits,"
" respectively."
msgstr ""

#: ../../library/constants.rst:105
msgid ""
"Object that when printed, prints the message \"Type license() to see the "
"full license text\", and when called, displays the full license text in a "
"pager-like fashion (one screen at a time)."
msgstr ""

#: ../../library/constants.rst:61
msgid "..."
msgstr ""

#: ../../library/constants.rst:61
msgid "ellipsis literal"
msgstr ""
