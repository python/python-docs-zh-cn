# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2025
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.9\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-07-25 19:10+0000\n"
"PO-Revision-Date: 2025-07-18 19:17+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2025\n"
"Language-Team: Chinese (China) (https://app.transifex.com/python-doc/teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/smtpd.rst:2
msgid ":mod:`smtpd` --- SMTP Server"
msgstr ""

#: ../../library/smtpd.rst:11
msgid "**Source code:** :source:`Lib/smtpd.py`"
msgstr ""

#: ../../library/smtpd.rst:15
msgid "This module offers several classes to implement SMTP (email) servers."
msgstr ""

#: ../../library/smtpd.rst:17
msgid ""
":mod:`smtpd` will be removed in Python 3.12 (see :pep:`PEP 594 <594#smtpd>` "
"for details). The `aiosmtpd <https://aiosmtpd.readthedocs.io/>`_ package is "
"a recommended replacement for this module.  It is based on :mod:`asyncio` "
"and provides a more straightforward API."
msgstr ""

#: ../../library/smtpd.rst:24
msgid ""
"Several server implementations are present; one is a generic do-nothing "
"implementation, which can be overridden, while the other two offer specific "
"mail-sending strategies."
msgstr ""

#: ../../library/smtpd.rst:28
msgid ""
"Additionally the SMTPChannel may be extended to implement very specific "
"interaction behaviour with SMTP clients."
msgstr ""

#: ../../library/smtpd.rst:31
msgid ""
"The code supports :RFC:`5321`, plus the :rfc:`1870` SIZE and :rfc:`6531` "
"SMTPUTF8 extensions."
msgstr ""

#: ../../library/smtpd.rst:36
msgid "SMTPServer Objects"
msgstr ""

#: ../../library/smtpd.rst:42
msgid ""
"Create a new :class:`SMTPServer` object, which binds to local address "
"*localaddr*.  It will treat *remoteaddr* as an upstream SMTP relayer.  Both "
"*localaddr* and *remoteaddr* should be a :ref:`(host, port) <host_port>` "
"tuple.  The object inherits from :class:`asyncore.dispatcher`, and so will "
"insert itself into :mod:`asyncore`'s event loop on instantiation."
msgstr ""

#: ../../library/smtpd.rst:48 ../../library/smtpd.rst:176
msgid ""
"*data_size_limit* specifies the maximum number of bytes that will be "
"accepted in a ``DATA`` command.  A value of ``None`` or ``0`` means no "
"limit."
msgstr ""

#: ../../library/smtpd.rst:52
msgid ""
"*map* is the socket map to use for connections (an initially empty "
"dictionary is a suitable value).  If not specified the :mod:`asyncore` "
"global socket map is used."
msgstr ""

#: ../../library/smtpd.rst:56
msgid ""
"*enable_SMTPUTF8* determines whether the ``SMTPUTF8`` extension (as defined "
"in :RFC:`6531`) should be enabled.  The default is ``False``. When ``True``,"
" ``SMTPUTF8`` is accepted as a parameter to the ``MAIL`` command and when "
"present is passed to :meth:`process_message` in the "
"``kwargs['mail_options']`` list.  *decode_data* and *enable_SMTPUTF8* cannot"
" be set to ``True`` at the same time."
msgstr ""

#: ../../library/smtpd.rst:63
msgid ""
"*decode_data* specifies whether the data portion of the SMTP transaction "
"should be decoded using UTF-8.  When *decode_data* is ``False`` (the "
"default), the server advertises the ``8BITMIME`` extension (:rfc:`6152`), "
"accepts the ``BODY=8BITMIME`` parameter to the ``MAIL`` command, and when "
"present passes it to :meth:`process_message` in the "
"``kwargs['mail_options']`` list. *decode_data* and *enable_SMTPUTF8* cannot "
"be set to ``True`` at the same time."
msgstr ""

#: ../../library/smtpd.rst:73
msgid ""
"Raise a :exc:`NotImplementedError` exception. Override this in subclasses to"
" do something useful with this message. Whatever was passed in the "
"constructor as *remoteaddr* will be available as the :attr:`_remoteaddr` "
"attribute. *peer* is the remote host's address, *mailfrom* is the envelope "
"originator, *rcpttos* are the envelope recipients and *data* is a string "
"containing the contents of the e-mail (which should be in :rfc:`5321` "
"format)."
msgstr ""

#: ../../library/smtpd.rst:81
msgid ""
"If the *decode_data* constructor keyword is set to ``True``, the *data* "
"argument will be a unicode string.  If it is set to ``False``, it will be a "
"bytes object."
msgstr ""

#: ../../library/smtpd.rst:85
msgid ""
"*kwargs* is a dictionary containing additional information. It is empty if "
"``decode_data=True`` was given as an init argument, otherwise it contains "
"the following keys:"
msgstr ""

#: ../../library/smtpd.rst:92
msgid "*mail_options*:"
msgstr ""

#: ../../library/smtpd.rst:90
msgid ""
"a list of all received parameters to the ``MAIL`` command (the elements are "
"uppercase strings; example: ``['BODY=8BITMIME', 'SMTPUTF8']``)."
msgstr ""

#: ../../library/smtpd.rst:97
msgid "*rcpt_options*:"
msgstr ""

#: ../../library/smtpd.rst:95
msgid ""
"same as *mail_options* but for the ``RCPT`` command. Currently no ``RCPT "
"TO`` options are supported, so for now this will always be an empty list."
msgstr ""

#: ../../library/smtpd.rst:99
msgid ""
"Implementations of ``process_message`` should use the ``**kwargs`` signature"
" to accept arbitrary keyword arguments, since future feature enhancements "
"may add keys to the kwargs dictionary."
msgstr ""

#: ../../library/smtpd.rst:103
msgid ""
"Return ``None`` to request a normal ``250 Ok`` response; otherwise return "
"the desired response string in :RFC:`5321` format."
msgstr ""

#: ../../library/smtpd.rst:108
msgid ""
"Override this in subclasses to use a custom :class:`SMTPChannel` for "
"managing SMTP clients."
msgstr ""

#: ../../library/smtpd.rst:111
msgid "The *map* constructor argument."
msgstr ""

#: ../../library/smtpd.rst:114
msgid "*localaddr* and *remoteaddr* may now contain IPv6 addresses."
msgstr ""

#: ../../library/smtpd.rst:117
msgid ""
"The *decode_data* and *enable_SMTPUTF8* constructor parameters, and the "
"*kwargs* parameter to :meth:`process_message` when *decode_data* is "
"``False``."
msgstr ""

#: ../../library/smtpd.rst:122 ../../library/smtpd.rst:198
msgid "*decode_data* is now ``False`` by default."
msgstr ""

#: ../../library/smtpd.rst:127
msgid "DebuggingServer Objects"
msgstr ""

#: ../../library/smtpd.rst:132
msgid ""
"Create a new debugging server.  Arguments are as per :class:`SMTPServer`. "
"Messages will be discarded, and printed on stdout."
msgstr ""

#: ../../library/smtpd.rst:137
msgid "PureProxy Objects"
msgstr ""

#: ../../library/smtpd.rst:142
msgid ""
"Create a new pure proxy server. Arguments are as per :class:`SMTPServer`. "
"Everything will be relayed to *remoteaddr*.  Note that running this has a "
"good chance to make you into an open relay, so please be careful."
msgstr ""

#: ../../library/smtpd.rst:148
msgid "MailmanProxy Objects"
msgstr ""

#: ../../library/smtpd.rst:155
msgid ""
":class:`MailmanProxy` is deprecated, it depends on a ``Mailman`` module "
"which no longer exists and therefore is already broken."
msgstr ""

#: ../../library/smtpd.rst:159
msgid ""
"Create a new pure proxy server. Arguments are as per :class:`SMTPServer`. "
"Everything will be relayed to *remoteaddr*, unless local mailman "
"configurations knows about an address, in which case it will be handled via "
"mailman.  Note that running this has a good chance to make you into an open "
"relay, so please be careful."
msgstr ""

#: ../../library/smtpd.rst:166
msgid "SMTPChannel Objects"
msgstr ""

#: ../../library/smtpd.rst:171
msgid ""
"Create a new :class:`SMTPChannel` object which manages the communication "
"between the server and a single SMTP client."
msgstr ""

#: ../../library/smtpd.rst:174
msgid "*conn* and *addr* are as per the instance variables described below."
msgstr ""

#: ../../library/smtpd.rst:180
msgid ""
"*enable_SMTPUTF8* determines whether the ``SMTPUTF8`` extension (as defined "
"in :RFC:`6531`) should be enabled.  The default is ``False``. *decode_data* "
"and *enable_SMTPUTF8* cannot be set to ``True`` at the same time."
msgstr ""

#: ../../library/smtpd.rst:185
msgid ""
"A dictionary can be specified in *map* to avoid using a global socket map."
msgstr ""

#: ../../library/smtpd.rst:187
msgid ""
"*decode_data* specifies whether the data portion of the SMTP transaction "
"should be decoded using UTF-8.  The default is ``False``. *decode_data* and "
"*enable_SMTPUTF8* cannot be set to ``True`` at the same time."
msgstr ""

#: ../../library/smtpd.rst:192
msgid ""
"To use a custom SMTPChannel implementation you need to override the "
":attr:`SMTPServer.channel_class` of your :class:`SMTPServer`."
msgstr ""

#: ../../library/smtpd.rst:195
msgid "The *decode_data* and *enable_SMTPUTF8* parameters were added."
msgstr ""

#: ../../library/smtpd.rst:201
msgid "The :class:`SMTPChannel` has the following instance variables:"
msgstr ""

#: ../../library/smtpd.rst:205
msgid "Holds the :class:`SMTPServer` that spawned this channel."
msgstr ""

#: ../../library/smtpd.rst:209
msgid "Holds the socket object connecting to the client."
msgstr ""

#: ../../library/smtpd.rst:213
msgid ""
"Holds the address of the client, the second value returned by "
":func:`socket.accept <socket.socket.accept>`"
msgstr ""

#: ../../library/smtpd.rst:218
msgid ""
"Holds a list of the line strings (decoded using UTF-8) received from the "
"client. The lines have their ``\"\\r\\n\"`` line ending translated to "
"``\"\\n\"``."
msgstr ""

#: ../../library/smtpd.rst:224
msgid ""
"Holds the current state of the channel. This will be either :attr:`COMMAND` "
"initially and then :attr:`DATA` after the client sends a \"DATA\" line."
msgstr ""

#: ../../library/smtpd.rst:230
msgid "Holds a string containing the greeting sent by the client in its \"HELO\"."
msgstr ""

#: ../../library/smtpd.rst:234
msgid ""
"Holds a string containing the address identified in the \"MAIL FROM:\" line "
"from the client."
msgstr ""

#: ../../library/smtpd.rst:239
msgid ""
"Holds a list of strings containing the addresses identified in the \"RCPT "
"TO:\" lines from the client."
msgstr ""

#: ../../library/smtpd.rst:244
msgid ""
"Holds a string containing all of the data sent by the client during the DATA"
" state, up to but not including the terminating ``\"\\r\\n.\\r\\n\"``."
msgstr ""

#: ../../library/smtpd.rst:249
msgid ""
"Holds the fully-qualified domain name of the server as returned by "
":func:`socket.getfqdn`."
msgstr ""

#: ../../library/smtpd.rst:254
msgid ""
"Holds the name of the client peer as returned by ``conn.getpeername()`` "
"where ``conn`` is :attr:`conn`."
msgstr ""

#: ../../library/smtpd.rst:257
msgid ""
"The :class:`SMTPChannel` operates by invoking methods named "
"``smtp_<command>`` upon reception of a command line from the client. Built "
"into the base :class:`SMTPChannel` class are methods for handling the "
"following commands (and responding to them appropriately):"
msgstr ""

#: ../../library/smtpd.rst:263
msgid "Command"
msgstr "命令"

#: ../../library/smtpd.rst:263
msgid "Action taken"
msgstr ""

#: ../../library/smtpd.rst:265
msgid "HELO"
msgstr ""

#: ../../library/smtpd.rst:265
msgid ""
"Accepts the greeting from the client and stores it in :attr:`seen_greeting`."
"  Sets server to base command mode."
msgstr ""

#: ../../library/smtpd.rst:267
msgid "EHLO"
msgstr ""

#: ../../library/smtpd.rst:267
msgid ""
"Accepts the greeting from the client and stores it in :attr:`seen_greeting`."
"  Sets server to extended command mode."
msgstr ""

#: ../../library/smtpd.rst:269
msgid "NOOP"
msgstr ""

#: ../../library/smtpd.rst:269
msgid "Takes no action."
msgstr ""

#: ../../library/smtpd.rst:270
msgid "QUIT"
msgstr ""

#: ../../library/smtpd.rst:270
msgid "Closes the connection cleanly."
msgstr ""

#: ../../library/smtpd.rst:271
msgid "MAIL"
msgstr ""

#: ../../library/smtpd.rst:271
msgid ""
"Accepts the \"MAIL FROM:\" syntax and stores the supplied address as "
":attr:`mailfrom`.  In extended command mode, accepts the :rfc:`1870` SIZE "
"attribute and responds appropriately based on the value of "
"*data_size_limit*."
msgstr ""

#: ../../library/smtpd.rst:275
msgid "RCPT"
msgstr ""

#: ../../library/smtpd.rst:275
msgid ""
"Accepts the \"RCPT TO:\" syntax and stores the supplied addresses in the "
":attr:`rcpttos` list."
msgstr ""

#: ../../library/smtpd.rst:277
msgid "RSET"
msgstr ""

#: ../../library/smtpd.rst:277
msgid ""
"Resets the :attr:`mailfrom`, :attr:`rcpttos`, and :attr:`received_data`, but"
" not the greeting."
msgstr ""

#: ../../library/smtpd.rst:279
msgid "DATA"
msgstr ""

#: ../../library/smtpd.rst:279
msgid ""
"Sets the internal state to :attr:`DATA` and stores remaining lines from the "
"client in :attr:`received_data` until the terminator ``\"\\r\\n.\\r\\n\"`` "
"is received."
msgstr ""

#: ../../library/smtpd.rst:282
msgid "HELP"
msgstr ""

#: ../../library/smtpd.rst:282
msgid "Returns minimal information on command syntax"
msgstr ""

#: ../../library/smtpd.rst:283
msgid "VRFY"
msgstr ""

#: ../../library/smtpd.rst:283
msgid "Returns code 252 (the server doesn't know if the address is valid)"
msgstr ""

#: ../../library/smtpd.rst:284
msgid "EXPN"
msgstr ""

#: ../../library/smtpd.rst:284
msgid "Reports that the command is not implemented."
msgstr ""
