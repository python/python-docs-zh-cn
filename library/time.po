# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# python-doc bot, 2025
# 汇民 王 <whuim@qq.com>, 2025
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-15 14:18+0000\n"
"PO-Revision-Date: 2025-08-02 17:34+0000\n"
"Last-Translator: 汇民 王 <whuim@qq.com>, 2025\n"
"Language-Team: Chinese (China) (https://app.transifex.com/python-doc/teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/time.rst:2
msgid ":mod:`!time` --- Time access and conversions"
msgstr ":mod:`!time` --- 时间的访问和转换"

#: ../../library/time.rst:9
msgid ""
"This module provides various time-related functions. For related "
"functionality, see also the :mod:`datetime` and :mod:`calendar` modules."
msgstr "该模块提供了各种与时间相关的函数。相关功能还可以参阅 :mod:`datetime` 和 :mod:`calendar` 模块。"

#: ../../library/time.rst:12
msgid ""
"Although this module is always available, not all functions are available on"
" all platforms.  Most of the functions defined in this module call platform "
"C library functions with the same name.  It may sometimes be helpful to "
"consult the platform documentation, because the semantics of these functions"
" varies among platforms."
msgstr ""
"尽管所有平台皆可使用此模块，但模块内的函数并非所有平台都可用。此模块中定义的大多数函数的实现都是调用其所在平台的C语言库的同名函数。因为这些函数的语义可能因平台而异，所以使用时最好查阅对应平台的相关文档。"

#: ../../library/time.rst:18
msgid "An explanation of some terminology and conventions is in order."
msgstr "下面是一些术语和惯例的解释."

#: ../../library/time.rst:24
msgid ""
"The :dfn:`epoch` is the point where the time starts, the return value of "
"``time.gmtime(0)``. It is January 1, 1970, 00:00:00 (UTC) on all platforms."
msgstr ""
":dfn:`epoch` 是起始的时间点，即 ``time.gmtime(0)`` 的返回值。 这在所有平台上都是 1970-01-01, "
"00:00:00 (UTC)。"

#: ../../library/time.rst:31
msgid ""
"The term :dfn:`seconds since the epoch` refers to the total number of "
"elapsed seconds since the epoch, typically excluding `leap seconds`_.  Leap "
"seconds are excluded from this total on all POSIX-compliant platforms."
msgstr ""
"术语 :dfn:`纪元秒数` 是指自 epoch （纪元）时间点以来经过的总秒数，通常不包括 `闰秒`_。 在所有符合 POSIX "
"标准的平台上，闰秒都不会记录在总秒数中。"

#: ../../library/time.rst:38
msgid ""
"The functions in this module may not handle dates and times before the "
"epoch_ or far in the future.  The cut-off point in the future is determined "
"by the C library; for 32-bit systems, it is typically in 2038."
msgstr ""
"此模块中的函数可能无法处理 epoch_ 之前或遥远未来的日期和时间。 “遥远未来”的分界点是由 C 库确定的；对于 32 位系统，它通常是在 2038"
" 年。"

#: ../../library/time.rst:45
msgid ""
"Function :func:`strptime` can parse 2-digit years when given ``%y`` format "
"code. When 2-digit years are parsed, they are converted according to the "
"POSIX and ISO C standards: values 69--99 are mapped to 1969--1999, and "
"values 0--68 are mapped to 2000--2068."
msgstr ""
"函数 :func:`strptime` 在接收到 ``%y`` 格式代码时可以解析使用 2 位数表示的年份。当解析 2 位数年份时，函数会按照 "
"POSIX 和 ISO C 标准进行年份转换：数值 69--99 被映射为 1969--1999；数值 0--68 被映射为 2000--2068。"

#: ../../library/time.rst:55
msgid ""
"UTC is `Coordinated Universal Time`_ and superseded `Greenwich Mean Time`_ "
"or GMT as the basis of international timekeeping. The acronym UTC is not a "
"mistake but conforms to an earlier, language-agnostic naming scheme for time"
" standards such as UT0, UT1, and UT2."
msgstr ""
"UTC 即 `Coordinated Universal Time`_，它取代 `Greenwich Mean Time`_ 即 GMT "
"作为国际时间计量的基准。 UTC 是个错误的缩写但它遵循了更早的语言中立的时间标准命名方案如 UT0, UT1 和 UT2。"

#: ../../library/time.rst:65
msgid ""
"DST is Daylight Saving Time, an adjustment of the timezone by (usually) one "
"hour during part of the year.  DST rules are magic (determined by local law)"
" and can change from year to year.  The C library has a table containing the"
" local rules (often it is read from a system file for flexibility) and is "
"the only source of True Wisdom in this respect."
msgstr ""
"DST是夏令时（Daylight Saving Time）的缩写，在一年的某一段时间中将当地时间调整（通常）一小时。 "
"DST的规则非常神奇（由当地法律确定），并且每年的起止时间都不同。C语言库中有一个表格，记录了各地的夏令时规则（实际上，为了灵活性，C语言库通常是从某个系统文件中读取这张表）。从这个角度而言，这张表是夏令时规则的唯一权威真理。"

#: ../../library/time.rst:71
msgid ""
"The precision of the various real-time functions may be less than suggested "
"by the units in which their value or argument is expressed. E.g. on most "
"Unix systems, the clock \"ticks\" only 50 or 100 times a second."
msgstr "由于平台限制，各种实时函数的精度可能低于其值或参数所要求（或给定）的精度。例如，在大多数Unix系统上，时钟频率仅为每秒50或100次。"

#: ../../library/time.rst:75
msgid ""
"On the other hand, the precision of :func:`.time` and :func:`sleep` is "
"better than their Unix equivalents: times are expressed as floating-point "
"numbers, :func:`.time` returns the most accurate time available (using Unix "
":c:func:`!gettimeofday` where available), and :func:`sleep` will accept a "
"time with a nonzero fraction (Unix :c:func:`!select` is used to implement "
"this, where available)."
msgstr ""
"另一方面，:func:`.time` 和 :func:`sleep` 的精度优于它们的 Unix 等价物：时间表示为浮点数，:func:`.time` "
"返回可用的最准确时间 (如有可能将使用 Unix :c:func:`!gettimeofday`)，并且 :func:`sleep` "
"将接受带有非零小数部分的时间 (如有可能将使用 Unix :c:func:`!select` 来实现此功能)。"

#: ../../library/time.rst:82
msgid ""
"The time value as returned by :func:`gmtime`, :func:`localtime`, and "
":func:`strptime`, and accepted by :func:`asctime`, :func:`mktime` and "
":func:`strftime`, is a sequence of 9 integers.  The return values of "
":func:`gmtime`, :func:`localtime`, and :func:`strptime` also offer attribute"
" names for individual fields."
msgstr ""
"时间值由 :func:`gmtime`，:func:`localtime` 和 :func:`strptime` 返回，并被 "
":func:`asctime`， :func:`mktime` 和 :func:`strftime` 接受，是一个 9 个整数的序列。 "
":func:`gmtime`， :func:`localtime` 和 :func:`strptime` 的返回值还提供各个字段的属性名称。"

#: ../../library/time.rst:88
msgid "See :class:`struct_time` for a description of these objects."
msgstr "请参阅 :class:`struct_time` 以获取这些对象的描述。"

#: ../../library/time.rst:90
msgid ""
"The :class:`struct_time` type was extended to provide the "
":attr:`~struct_time.tm_gmtoff` and :attr:`~struct_time.tm_zone` attributes "
"when platform supports corresponding ``struct tm`` members."
msgstr ""
"当平台支持相应的 ``struct tm`` 成员时 :class:`struct_time` 类型将被扩展以提供 "
":attr:`~struct_time.tm_gmtoff` 和 :attr:`~struct_time.tm_zone` 属性。"

#: ../../library/time.rst:96
msgid ""
"The :class:`struct_time` attributes :attr:`~struct_time.tm_gmtoff` and "
":attr:`~struct_time.tm_zone` are now available on all platforms."
msgstr ""
":class:`struct_time` 的属性 :attr:`~struct_time.tm_gmtoff` 和 "
":attr:`~struct_time.tm_zone` 现在可在所有平台上使用。"

#: ../../library/time.rst:101
msgid "Use the following functions to convert between time representations:"
msgstr "使用以下函数在时间表示之间进行转换："

#: ../../library/time.rst:104
msgid "From"
msgstr "从"

#: ../../library/time.rst:104
msgid "To"
msgstr "到"

#: ../../library/time.rst:104
msgid "Use"
msgstr "使用"

#: ../../library/time.rst:29 ../../library/time.rst:106
#: ../../library/time.rst:109 ../../library/time.rst:112
#: ../../library/time.rst:115
msgid "seconds since the epoch"
msgstr "自纪元以来的秒数"

#: ../../library/time.rst:106 ../../library/time.rst:112
msgid ":class:`struct_time` in UTC"
msgstr "UTC 的 :class:`struct_time`"

#: ../../library/time.rst:106
msgid ":func:`gmtime`"
msgstr ":func:`gmtime`"

#: ../../library/time.rst:109 ../../library/time.rst:115
msgid ":class:`struct_time` in local time"
msgstr "本地时间的 :class:`struct_time`"

#: ../../library/time.rst:109
msgid ":func:`localtime`"
msgstr ":func:`localtime`"

#: ../../library/time.rst:112
msgid ":func:`calendar.timegm`"
msgstr ":func:`calendar.timegm`"

#: ../../library/time.rst:115
msgid ":func:`mktime`"
msgstr ":func:`mktime`"

#: ../../library/time.rst:123
msgid "Functions"
msgstr "函数"

#: ../../library/time.rst:127
msgid ""
"Convert a tuple or :class:`struct_time` representing a time as returned by "
":func:`gmtime` or :func:`localtime` to a string of the following form: "
"``'Sun Jun 20 23:21:05 1993'``. The day field is two characters long and is "
"space padded if the day is a single digit, e.g.: ``'Wed Jun  9 04:26:40 "
"1993'``."
msgstr ""
"转换由 :func:`gmtime` 或 :func:`localtime` 所返回的 :class:`struct_time` "
"或相应的表示时间的元组为以下形式的字符串: ``'Sun Jun 20 23:21:05 1993'``。 "
"日期字段的长度为两个字符，如果日期只有一个数字则会以空格填充，例如: ``'Wed Jun  9 04:26:40 1993'``。"

#: ../../library/time.rst:133
msgid ""
"If *t* is not provided, the current time as returned by :func:`localtime` is"
" used. Locale information is not used by :func:`asctime`."
msgstr ""
"如果未提供 *t*，则会使用 :func:`localtime` 所返回的当前时间。  :func:`asctime` 不会使用区域设置信息。"

#: ../../library/time.rst:138
msgid ""
"Unlike the C function of the same name, :func:`asctime` does not add a "
"trailing newline."
msgstr "与同名的C函数不同， :func:`asctime` 不添加尾随换行符。"

#: ../../library/time.rst:143
msgid ""
"Return the *clk_id* of the thread-specific CPU-time clock for the specified "
"*thread_id*."
msgstr "返回指定的 *thread_id* 的特定于线程的CPU时间时钟的 *clk_id* 。"

#: ../../library/time.rst:145
msgid ""
"Use :func:`threading.get_ident` or the :attr:`~threading.Thread.ident` "
"attribute of :class:`threading.Thread` objects to get a suitable value for "
"*thread_id*."
msgstr ""
"使用 :class:`threading.Thread` 对象的 :func:`threading.get_ident` 或 "
":attr:`~threading.Thread.ident` 属性为 *thread_id* 获取合适的值。"

#: ../../library/time.rst:150
msgid ""
"Passing an invalid or expired *thread_id* may result in undefined behavior, "
"such as segmentation fault."
msgstr "传递无效的或过期的 *thread_id* 可能会导致未定义的行为，例如段错误。"

#: ../../library/time.rst:153 ../../library/time.rst:165
#: ../../library/time.rst:178 ../../library/time.rst:187
#: ../../library/time.rst:200 ../../library/time.rst:209
#: ../../library/time.rst:754 ../../library/time.rst:778
#: ../../library/time.rst:874 ../../library/time.rst:885
#: ../../library/time.rst:895 ../../library/time.rst:905
#: ../../library/time.rst:914 ../../library/time.rst:923
#: ../../library/time.rst:932 ../../library/time.rst:943
#: ../../library/time.rst:951 ../../library/time.rst:962
#: ../../library/time.rst:973 ../../library/time.rst:982
#: ../../library/time.rst:995
msgid "Availability"
msgstr "Availability"

#: ../../library/time.rst:155
msgid ""
"See the man page for :manpage:`pthread_getcpuclockid(3)` for further "
"information."
msgstr "请参阅 :manpage:`pthread_getcpuclockid(3)` 的手册页面了解更多信息。"

#: ../../library/time.rst:162
msgid ""
"Return the resolution (precision) of the specified clock *clk_id*.  Refer to"
" :ref:`time-clock-id-constants` for a list of accepted values for *clk_id*."
msgstr ""
"返回指定时钟 *clk_id* 的分辨率（精度）。有关 *clk_id* 的可接受值列表，请参阅 :ref:`time-clock-id-"
"constants` 。"

#: ../../library/time.rst:172
msgid ""
"Return the time of the specified clock *clk_id*.  Refer to :ref:`time-clock-"
"id-constants` for a list of accepted values for *clk_id*."
msgstr ""
"返回指定 *clk_id* 时钟的时间。有关 *clk_id* 的可接受值列表，请参阅 :ref:`time-clock-id-constants` 。"

#: ../../library/time.rst:175
msgid ""
"Use :func:`clock_gettime_ns` to avoid the precision loss caused by the "
":class:`float` type."
msgstr "使用 :func:`clock_gettime_ns` 以避免 :class:`float` 类型导致的精度损失。"

#: ../../library/time.rst:185
msgid "Similar to :func:`clock_gettime` but return time as nanoseconds."
msgstr "与 :func:`clock_gettime` 相似，但返回时间为纳秒。"

#: ../../library/time.rst:194
msgid ""
"Set the time of the specified clock *clk_id*.  Currently, "
":data:`CLOCK_REALTIME` is the only accepted value for *clk_id*."
msgstr "设置指定 *clk_id* 时钟的时间。 目前， :data:`CLOCK_REALTIME` 是 *clk_id* 唯一可接受的值。"

#: ../../library/time.rst:197
msgid ""
"Use :func:`clock_settime_ns` to avoid the precision loss caused by the "
":class:`float` type."
msgstr "使用 :func:`clock_settime_ns` 以避免 :class:`float` 类型导致的精度损失。"

#: ../../library/time.rst:207
msgid "Similar to :func:`clock_settime` but set time with nanoseconds."
msgstr "与 :func:`clock_settime` 相似，但设置时间为纳秒。"

#: ../../library/time.rst:216
msgid ""
"Convert a time expressed in seconds since the epoch_ to a string of a form: "
"``'Sun Jun 20 23:21:05 1993'`` representing local time. The day field is two"
" characters long and is space padded if the day is a single digit, e.g.: "
"``'Wed Jun  9 04:26:40 1993'``."
msgstr ""
"将以距离 epoch_ 的秒数表示的时间转换为以下形式的字符串: ``'Sun Jun 20 23:21:05 1993'`` 代表本地时间。 "
"日期字段的长度为两个字符且如果日期只有一位数字则会以空格填充，例如: ``'Wed Jun  9 04:26:40 1993'``。"

#: ../../library/time.rst:221
msgid ""
"If *secs* is not provided or :const:`None`, the current time as returned by "
":func:`.time` is used. ``ctime(secs)`` is equivalent to "
"``asctime(localtime(secs))``. Locale information is not used by "
":func:`ctime`."
msgstr ""
"如果 *secs* 未提供或为 :const:`None`，则使用 :func:`.time` 所返回的当前时间。 ``ctime(secs)`` "
"等价于 ``asctime(localtime(secs))``。 :func:`ctime` 不会使用区域设置信息。"

#: ../../library/time.rst:229
msgid ""
"Get information on the specified clock as a namespace object. Supported "
"clock names and the corresponding functions to read their value are:"
msgstr "获取有关指定时钟的信息作为命名空间对象。 支持的时钟名称和读取其值的相应函数是："

#: ../../library/time.rst:233
msgid "``'monotonic'``: :func:`time.monotonic`"
msgstr "``'monotonic'``: :func:`time.monotonic`"

#: ../../library/time.rst:234
msgid "``'perf_counter'``: :func:`time.perf_counter`"
msgstr "``'perf_counter'``: :func:`time.perf_counter`"

#: ../../library/time.rst:235
msgid "``'process_time'``: :func:`time.process_time`"
msgstr "``'process_time'``: :func:`time.process_time`"

#: ../../library/time.rst:236
msgid "``'thread_time'``: :func:`time.thread_time`"
msgstr "``'thread_time'``: :func:`time.thread_time`"

#: ../../library/time.rst:237
msgid "``'time'``: :func:`time.time`"
msgstr "``'time'``: :func:`time.time`"

#: ../../library/time.rst:239
msgid "The result has the following attributes:"
msgstr "结果具有以下属性："

#: ../../library/time.rst:241
msgid ""
"*adjustable*: ``True`` if the clock can be changed automatically (e.g. by a "
"NTP daemon) or manually by the system administrator, ``False`` otherwise"
msgstr ""
"*adjustable* ： 如果时钟可以自动更改（例如通过NTP守护程序）或由系统管理员手动更改，则为 ``True`` ，否则为 ``False``"
" 。"

#: ../../library/time.rst:243
msgid ""
"*implementation*: The name of the underlying C function used to get the "
"clock value.  Refer to :ref:`time-clock-id-constants` for possible values."
msgstr ""
"*implementation* ： 用于获取时钟值的基础C函数的名称。有关可能的值，请参阅 :ref:`time-clock-id-"
"constants` 。"

#: ../../library/time.rst:245
msgid ""
"*monotonic*: ``True`` if the clock cannot go backward, ``False`` otherwise"
msgstr "*monotonic* ：如果时钟不能倒退，则为 ``True`` ，否则为 ``False`` 。"

#: ../../library/time.rst:247
msgid "*resolution*: The resolution of the clock in seconds (:class:`float`)"
msgstr "*resolution* ： 以秒为单位的时钟分辨率（ :class:`float` ）"

#: ../../library/time.rst:254
msgid ""
"Convert a time expressed in seconds since the epoch_ to a "
":class:`struct_time` in UTC in which the dst flag is always zero.  If *secs*"
" is not provided or :const:`None`, the current time as returned by "
":func:`.time` is used.  Fractions of a second are ignored.  See above for a "
"description of the :class:`struct_time` object. See :func:`calendar.timegm` "
"for the inverse of this function."
msgstr ""
"将以自 epoch_ 开始的秒数表示的时间转换为 UTC 的 :class:`struct_time`，其中 dst 旗标始终为零。 如果未提供 "
"*secs* 或为 :const:`None`，则使用 :func:`.time` 所返回的当前时间。 一秒以内的小数将被忽略。 有关 "
":class:`struct_time` 对象的说明请参见上文。 有关此函数的逆操作请参阅 :func:`calendar.timegm`。"

#: ../../library/time.rst:264
msgid ""
"Like :func:`gmtime` but converts to local time.  If *secs* is not provided "
"or :const:`None`, the current time as returned by :func:`.time` is used.  "
"The dst flag is set to ``1`` when DST applies to the given time."
msgstr ""
"与 :func:`gmtime` 相似但转换为当地时间。如果未提供 *secs* 或为 :const:`None` ，则使用由 "
":func:`.time` 返回的当前时间。当 DST 适用于给定时间时，dst标志设置为 ``1`` 。"

#: ../../library/time.rst:268
msgid ""
":func:`localtime` may raise :exc:`OverflowError`, if the timestamp is "
"outside the range of values supported by the platform C :c:func:`localtime` "
"or :c:func:`gmtime` functions, and :exc:`OSError` on :c:func:`localtime` or "
":c:func:`gmtime` failure. It's common for this to be restricted to years "
"between 1970 and 2038."
msgstr ""
":func:`localtime` 可能会引发 :exc:`OverflowError` ，如果时间戳超出平台 C "
":c:func:`localtime` 或 :c:func:`gmtime` 函数支持的范围，并会在  :c:func:`localtime` 或 "
":c:func:`gmtime` 失败时引发 :exc:`OSError` 。这通常被限制在1970至2038年之间。"

#: ../../library/time.rst:277
msgid ""
"This is the inverse function of :func:`localtime`.  Its argument is the "
":class:`struct_time` or full 9-tuple (since the dst flag is needed; use "
"``-1`` as the dst flag if it is unknown) which expresses the time in *local*"
" time, not UTC.  It returns a floating-point number, for compatibility with "
":func:`.time`. If the input value cannot be represented as a valid time, "
"either :exc:`OverflowError` or :exc:`ValueError` will be raised (which "
"depends on whether the invalid value is caught by Python or the underlying C"
" libraries). The earliest date for which it can generate a time is platform-"
"dependent."
msgstr ""
"这是 :func:`localtime` 的反函数。它的参数是 :class:`struct_time` 或者完整的 9 元组（因为需要 dst "
"标志；如果它是未知的则使用 ``-1`` 作为dst标志），它表示 *local* 的时间，而不是 UTC 。它返回一个浮点数，以便与 "
":func:`.time` 兼容。如果输入值不能表示为有效时间，则 :exc:`OverflowError` 或 :exc:`ValueError` "
"将被引发（这取决于Python或底层C库是否捕获到无效值）。它可以生成时间的最早日期取决于平台。"

#: ../../library/time.rst:289
msgid ""
"Return the value (in fractional seconds) of a monotonic clock, i.e. a clock "
"that cannot go backwards.  The clock is not affected by system clock "
"updates. The reference point of the returned value is undefined, so that "
"only the difference between the results of two calls is valid."
msgstr ""
"（以小数表示的秒为单位）返回一个单调时钟的值，即不能倒退的时钟。 该时钟不受系统时钟更新的影响。 "
"返回值的参考点未被定义，因此只有两次调用之间的差值才是有效的。"

#: ../../library/time.rst:294 ../../library/time.rst:715
msgid "Clock:"
msgstr "时钟："

#: ../../library/time.rst:296
msgid ""
"On Windows, call ``QueryPerformanceCounter()`` and "
"``QueryPerformanceFrequency()``."
msgstr ""
"在 Windows 上，调用 ``QueryPerformanceCounter()`` 和 "
"``QueryPerformanceFrequency()``。"

#: ../../library/time.rst:298
msgid "On macOS, call ``mach_absolute_time()`` and ``mach_timebase_info()``."
msgstr "在 macOS 上，调用 ``mach_absolute_time()`` 和 ``mach_timebase_info()``。"

#: ../../library/time.rst:299
msgid "On HP-UX, call ``gethrtime()``."
msgstr "在 HP-UX 上，调用 ``gethrtime()``。"

#: ../../library/time.rst:300
msgid "Call ``clock_gettime(CLOCK_HIGHRES)`` if available."
msgstr "如果可能则调用 ``clock_gettime(CLOCK_HIGHRES)``。"

#: ../../library/time.rst:301
msgid "Otherwise, call ``clock_gettime(CLOCK_MONOTONIC)``."
msgstr "在其他情况下，调用 ``clock_gettime(CLOCK_MONOTONIC)``。"

#: ../../library/time.rst:303
msgid ""
"Use :func:`monotonic_ns` to avoid the precision loss caused by the "
":class:`float` type."
msgstr "使用 :func:`monotonic_ns` 以避免 :class:`float` 类型导致的精度损失。"

#: ../../library/time.rst:308
msgid ""
"The function is now always available and the clock is now the same for all "
"processes."
msgstr "该函数现在总是可用并且时钟在所有进程上保持一致。"

#: ../../library/time.rst:312
msgid "On macOS, the clock is now the same for all processes."
msgstr "在 macOS 上，现在时钟在所有进程上保持一致。"

#: ../../library/time.rst:318
msgid "Similar to :func:`monotonic`, but return time as nanoseconds."
msgstr "与 :func:`monotonic` 相似，但是返回时间为纳秒数。"

#: ../../library/time.rst:327
msgid ""
"Return the value (in fractional seconds) of a performance counter, i.e. a "
"clock with the highest available resolution to measure a short duration.  It"
" does include time elapsed during sleep. The clock is the same for all "
"processes. The reference point of the returned value is undefined, so that "
"only the difference between the results of two calls is valid."
msgstr ""
"（以小数表示的秒为单位）返回一个性能计数器的值，即用于测量较短持续时间的具有最高有效精度的时钟。 "
"它会包括睡眠状态所消耗的时间。时钟对于所有进程来说都是相同的。 返回值的参考点未被定义，因此只有两次调用之间的差值才是有效的。"

#: ../../library/time.rst:336
msgid ""
"On CPython, use the same clock as :func:`time.monotonic` and is a monotonic "
"clock, i.e. a clock that cannot go backwards."
msgstr "在 CPython 中，使用与 :func:`time.monotonic` 相同的单调时钟，即无法回退的时钟。"

#: ../../library/time.rst:339
msgid ""
"Use :func:`perf_counter_ns` to avoid the precision loss caused by the "
":class:`float` type."
msgstr "使用 :func:`perf_counter_ns` 以避免 :class:`float` 类型导致的精度损失。"

#: ../../library/time.rst:344
msgid "On Windows, the clock is now the same for all processes."
msgstr "在 Windows 上，现在时钟在所有进程上保持一致。"

#: ../../library/time.rst:347
msgid "Use the same clock as :func:`time.monotonic`."
msgstr "使用与 :func:`time.monotonic` 相同的时钟。"

#: ../../library/time.rst:353
msgid "Similar to :func:`perf_counter`, but return time as nanoseconds."
msgstr "与 :func:`perf_counter` 相似，但是返回时间为纳秒。"

#: ../../library/time.rst:365
msgid ""
"Return the value (in fractional seconds) of the sum of the system and user "
"CPU time of the current process.  It does not include time elapsed during "
"sleep.  It is process-wide by definition.  The reference point of the "
"returned value is undefined, so that only the difference between the results"
" of two calls is valid."
msgstr ""
"（以小数表示的秒为单位）返回当前进程的系统和用户 CPU 时间的总计值。 它不包括睡眠状态所消耗的时间。 根据定义它只作用于进程范围。 "
"返回值的参考点未被定义，因此只有两次调用之间的差值才是有效的。"

#: ../../library/time.rst:371
msgid ""
"Use :func:`process_time_ns` to avoid the precision loss caused by the "
":class:`float` type."
msgstr "使用 :func:`process_time_ns` 以避免 :class:`float` 类型导致的精度损失。"

#: ../../library/time.rst:378
msgid "Similar to :func:`process_time` but return time as nanoseconds."
msgstr "与 :func:`process_time` 相似，但是返回时间为纳秒。"

#: ../../library/time.rst:384
msgid ""
"Suspend execution of the calling thread for the given number of seconds. The"
" argument may be a floating-point number to indicate a more precise sleep "
"time."
msgstr "调用方线程暂停执行给定的秒数。 该参数可以为浮点数以指定一个更精确的休眠时间。"

#: ../../library/time.rst:388
msgid ""
"If the sleep is interrupted by a signal and no exception is raised by the "
"signal handler, the sleep is restarted with a recomputed timeout."
msgstr "如果休眠被信号打断并且信号处理器未引发异常，休眠将基于重新计算的时延重新开始。"

#: ../../library/time.rst:391
msgid ""
"The suspension time may be longer than requested by an arbitrary amount, "
"because of the scheduling of other activity in the system."
msgstr "暂停时间有可能比请求的要长出一段不确定的时间，因为会受系统中的其他活动排期影响。"

#: ../../library/time.rst:395
msgid "Windows implementation"
msgstr "Windows 实现"

#: ../../library/time.rst:396
msgid ""
"On Windows, if *secs* is zero, the thread relinquishes the remainder of its "
"time slice to any other thread that is ready to run. If there are no other "
"threads ready to run, the function returns immediately, and the thread "
"continues execution.  On Windows 8.1 and newer the implementation uses a "
"`high-resolution timer <https://learn.microsoft.com/windows-"
"hardware/drivers/kernel/high-resolution-timers>`_ which provides resolution "
"of 100 nanoseconds. If *secs* is zero, ``Sleep(0)`` is used."
msgstr ""
"在 Windows 上，如果 *secs* 为零，线程会将其时间片的剩余部分让渡给任何其他准备要运行的线程。 "
"如果没有其他准备要运行的线程，该函数将立即返回，而线程将继续执行。 在 Windows 8.1 及更新版本中的实现使用了提供精度为 100 纳秒的 "
"`高分辨率定时器 <https://learn.microsoft.com/windows-hardware/drivers/kernel/high-"
"resolution-timers>`_。 如果 *secs* 为零，则会使用 ``Sleep(0)``。"

#: ../../library/time.rst:405
msgid "Unix implementation"
msgstr "Unix 实现"

#: ../../library/time.rst:406
msgid "Use ``clock_nanosleep()`` if available (resolution: 1 nanosecond);"
msgstr "如果可能则使用 ``clock_nanosleep()`` (精度: 1 纳秒);"

#: ../../library/time.rst:407
msgid "Or use ``nanosleep()`` if available (resolution: 1 nanosecond);"
msgstr "或者如果可能则使用 ``nanosleep()`` (精度: 1 纳秒);"

#: ../../library/time.rst:408
msgid "Or use ``select()`` (resolution: 1 microsecond)."
msgstr "或者使用 ``select()`` (精度: 1 微秒)."

#: ../../library/time.rst:412
msgid "To emulate a \"no-op\", use :keyword:`pass` instead of ``time.sleep(0)``."
msgstr "要模拟“无操作”，请使用 :keyword:`pass` 而非 ``time.sleep(0)``。"

#: ../../library/time.rst:414
msgid ""
"To voluntarily relinquish the CPU, specify a real-time :ref:`scheduling "
"policy <os-scheduling-policy>` and use :func:`os.sched_yield` instead."
msgstr ""
"要主动让出 CPU，请指定一个实时 :ref:`计划任务策略 <os-scheduling-policy>` 并改用 "
":func:`os.sched_yield`。"

#: ../../library/time.rst:417
msgid ""
"Raises an :ref:`auditing event <auditing>` ``time.sleep`` with argument "
"``secs``."
msgstr "引发一个 :ref:`审计事件 <auditing>` ``time.sleep`` 并附带参数 ``secs``。"

#: ../../library/time.rst:419
msgid ""
"The function now sleeps at least *secs* even if the sleep is interrupted by "
"a signal, except if the signal handler raises an exception (see :pep:`475` "
"for the rationale)."
msgstr ""
"现在，即使该睡眠过程被信号中断，该函数也会保证调用它的线程至少会睡眠 *secs* "
"秒。信号处理例程抛出异常的情况除外。（欲了解我们做出这次改变的原因，请参见 :pep:`475` ）"

#: ../../library/time.rst:424
msgid ""
"On Unix, the ``clock_nanosleep()`` and ``nanosleep()`` functions are now "
"used if available. On Windows, a waitable timer is now used."
msgstr ""
"在 Unix 上，现在将在可能的情况下使用 ``clock_nanosleep()`` 和 ``nanosleep()`` 函数。 在 Windows "
"上，现在将使用可等待的计时器。"

#: ../../library/time.rst:428
msgid "Raises an auditing event."
msgstr "引发一个审计事件。"

#: ../../library/time.rst:436
msgid ""
"Convert a tuple or :class:`struct_time` representing a time as returned by "
":func:`gmtime` or :func:`localtime` to a string as specified by the *format*"
" argument.  If *t* is not provided, the current time as returned by "
":func:`localtime` is used.  *format* must be a string.  :exc:`ValueError` is"
" raised if any field in *t* is outside of the allowed range."
msgstr ""
"转换一个元组或 :class:`struct_time` 表示的由 :func:`gmtime` 或 :func:`localtime` 返回的时间到由"
" *format* 参数指定的字符串。如果未提供 *t* ，则使用由 :func:`localtime` 返回的当前时间。 *format* "
"必须是一个字符串。如果 *t* 中的任何字段超出允许范围，则引发 :exc:`ValueError` 。"

#: ../../library/time.rst:442
msgid ""
"0 is a legal argument for any position in the time tuple; if it is normally "
"illegal the value is forced to a correct one."
msgstr "0是时间元组中任何位置的合法参数；如果它通常是非法的，则该值被强制改为正确的值。"

#: ../../library/time.rst:445
msgid ""
"The following directives can be embedded in the *format* string. They are "
"shown without the optional field width and precision specification, and are "
"replaced by the indicated characters in the :func:`strftime` result:"
msgstr ""
"以下指令可以嵌入 *format* 字符串中。它们显示时没有可选的字段宽度和精度规范，并被 :func:`strftime` 结果中的指示字符替换："

#: ../../library/time.rst:450
msgid "Directive"
msgstr "指令"

#: ../../library/time.rst:450
msgid "Meaning"
msgstr "含意"

#: ../../library/time.rst:450
msgid "Notes"
msgstr "备注"

#: ../../library/time.rst:452
msgid "``%a``"
msgstr "``%a``"

#: ../../library/time.rst:452
msgid "Locale's abbreviated weekday name."
msgstr "本地化的缩写星期中每日的名称。"

#: ../../library/time.rst:455
msgid "``%A``"
msgstr "``%A``"

#: ../../library/time.rst:455
msgid "Locale's full weekday name."
msgstr "本地化的星期中每日的完整名称。"

#: ../../library/time.rst:457
msgid "``%b``"
msgstr "``%b``"

#: ../../library/time.rst:457
msgid "Locale's abbreviated month name."
msgstr "本地化的月缩写名称。"

#: ../../library/time.rst:460
msgid "``%B``"
msgstr "``%B``"

#: ../../library/time.rst:460
msgid "Locale's full month name."
msgstr "本地化的月完整名称。"

#: ../../library/time.rst:462
msgid "``%c``"
msgstr "``%c``"

#: ../../library/time.rst:462
msgid "Locale's appropriate date and time representation."
msgstr "本地化的适当日期和时间表示。"

#: ../../library/time.rst:465
msgid "``%d``"
msgstr "``%d``"

#: ../../library/time.rst:465
msgid "Day of the month as a decimal number [01,31]."
msgstr "十进制数 [01,31] 表示的月中日。"

#: ../../library/time.rst:468
msgid "``%f``"
msgstr "``%f``"

#: ../../library/time.rst:468
msgid "Microseconds as a decimal number"
msgstr "十进制表示的的微秒数"

#: ../../library/time.rst:469
msgid "[000000,999999]."
msgstr "[000000,999999]."

#: ../../library/time.rst:468
msgid "\\(1)"
msgstr "\\(1)"

#: ../../library/time.rst:472
msgid "``%H``"
msgstr "``%H``"

#: ../../library/time.rst:472
msgid "Hour (24-hour clock) as a decimal number [00,23]."
msgstr "十进制数 [00,23] 表示的小时（24小时制）。"

#: ../../library/time.rst:475
msgid "``%I``"
msgstr "``%I``"

#: ../../library/time.rst:475
msgid "Hour (12-hour clock) as a decimal number [01,12]."
msgstr "十进制数 [01,12] 表示的小时（12小时制）。"

#: ../../library/time.rst:478
msgid "``%j``"
msgstr "``%j``"

#: ../../library/time.rst:478
msgid "Day of the year as a decimal number [001,366]."
msgstr "十进制数 [001,366] 表示的年中日。"

#: ../../library/time.rst:481
msgid "``%m``"
msgstr "``%m``"

#: ../../library/time.rst:481
msgid "Month as a decimal number [01,12]."
msgstr "十进制数 [01,12] 表示的月。"

#: ../../library/time.rst:484
msgid "``%M``"
msgstr "``%M``"

#: ../../library/time.rst:484
msgid "Minute as a decimal number [00,59]."
msgstr "十进制数 [00,59] 表示的分钟。"

#: ../../library/time.rst:487
msgid "``%p``"
msgstr "``%p``"

#: ../../library/time.rst:487
msgid "Locale's equivalent of either AM or PM."
msgstr "本地化的 AM 或 PM 。"

#: ../../library/time.rst:487
msgid "\\(2)"
msgstr "\\(2)"

#: ../../library/time.rst:490
msgid "``%S``"
msgstr "``%S``"

#: ../../library/time.rst:490
msgid "Second as a decimal number [00,61]."
msgstr "十进制数 [00,61] 表示的秒。"

#: ../../library/time.rst:490
msgid "\\(3)"
msgstr "\\(3)"

#: ../../library/time.rst:493
msgid "``%U``"
msgstr "``%U``"

#: ../../library/time.rst:493
msgid ""
"Week number of the year (Sunday as the first day of the week) as a decimal "
"number [00,53]. All days in a new year preceding the first Sunday are "
"considered to be in week 0."
msgstr "十进制数 [00,53] 表示的一年中的周数（星期日作为一周的第一天）。 在第一个星期日之前的新年中的所有日子都被认为是在第 0 周。"

#: ../../library/time.rst:493 ../../library/time.rst:507
msgid "\\(4)"
msgstr "\\(4)"

#: ../../library/time.rst:501
msgid "``%u``"
msgstr "``%u``"

#: ../../library/time.rst:501
msgid "Day of the week (Monday is 1; Sunday is 7) as a decimal number [1, 7]."
msgstr "以十进制数 [1, 7] 表示的日期值（星期一为 1；星期日为 7）。"

#: ../../library/time.rst:504
msgid "``%w``"
msgstr "``%w``"

#: ../../library/time.rst:504
msgid "Weekday as a decimal number [0(Sunday),6]."
msgstr "十进制数 [0(星期日),6] 表示的周中日。"

#: ../../library/time.rst:507
msgid "``%W``"
msgstr "``%W``"

#: ../../library/time.rst:507
msgid ""
"Week number of the year (Monday as the first day of the week) as a decimal "
"number [00,53]. All days in a new year preceding the first Monday are "
"considered to be in week 0."
msgstr "十进制数 [00,53] 表示的一年中的周数（星期一作为一周的第一天）。 在第一个星期一之前的新年中的所有日子被认为是在第 0 周。"

#: ../../library/time.rst:515
msgid "``%x``"
msgstr "``%x``"

#: ../../library/time.rst:515
msgid "Locale's appropriate date representation."
msgstr "本地化的适当日期表示。"

#: ../../library/time.rst:518
msgid "``%X``"
msgstr "``%X``"

#: ../../library/time.rst:518
msgid "Locale's appropriate time representation."
msgstr "本地化的适当时间表示。"

#: ../../library/time.rst:521
msgid "``%y``"
msgstr "``%y``"

#: ../../library/time.rst:521
msgid "Year without century as a decimal number [00,99]."
msgstr "十进制数 [00,99] 表示的没有世纪的年份。"

#: ../../library/time.rst:524
msgid "``%Y``"
msgstr "``%Y``"

#: ../../library/time.rst:524
msgid "Year with century as a decimal number."
msgstr "十进制数表示的带世纪的年份。"

#: ../../library/time.rst:527
msgid "``%z``"
msgstr "``%z``"

#: ../../library/time.rst:527
msgid ""
"Time zone offset indicating a positive or negative time difference from "
"UTC/GMT of the form +HHMM or -HHMM, where H represents decimal hour digits "
"and M represents decimal minute digits [-23:59, +23:59]. [1]_"
msgstr ""
"时区偏移以格式 +HHMM 或 -HHMM 形式的 UTC/GMT 的正或负时差指示，其中H表示十进制小时数字，M表示小数分钟数字 [-23:59, "
"+23:59] 。[1]_"

#: ../../library/time.rst:533
msgid "``%Z``"
msgstr "``%Z``"

#: ../../library/time.rst:533
msgid ""
"Time zone name (no characters if no time zone exists). Deprecated. [1]_"
msgstr "时区名称（如果不存在时区，则不包含字符）。已弃用。 [1]_"

#: ../../library/time.rst:536
msgid "``%G``"
msgstr "``%G``"

#: ../../library/time.rst:536
msgid ""
"ISO 8601 year (similar to ``%Y`` but follows the rules for the ISO 8601 "
"calendar year). The year starts with the week that contains the first "
"Thursday of the calendar year."
msgstr ""
"ISO 8601 年份（类似于 ``%Y`` 但遵循针对 ISO 8601 日历年份的规则）。 此年份从包含日历年份的第一个星期六的星期开始。"

#: ../../library/time.rst:541
msgid "``%V``"
msgstr "``%V``"

#: ../../library/time.rst:541
msgid ""
"ISO 8601 week number (as a decimal number [01,53]). The first week of the "
"year is the one that contains the first Thursday of the year. Weeks start on"
" Monday."
msgstr ""
"ISO 8601 星期序号（以十进制数 [01,53] 表示）。 每年的第一个星期是包含该年的第一个星期六的星期。 每星期的第一天为星期一。"

#: ../../library/time.rst:546
msgid "``%%``"
msgstr "``%%``"

#: ../../library/time.rst:546
msgid "A literal ``'%'`` character."
msgstr "字面的 ``'%'`` 字符。"

#: ../../library/time.rst:549
msgid "Notes:"
msgstr "注释："

#: ../../library/time.rst:552
msgid ""
"The ``%f`` format directive only applies to :func:`strptime`, not to "
":func:`strftime`. However, see also :meth:`datetime.datetime.strptime` and "
":meth:`datetime.datetime.strftime` where the ``%f`` format directive "
":ref:`applies to microseconds <format-codes>`."
msgstr ""
"``%f`` 格式指示符只应用于 :func:`strptime`，而不应用于 :func:`strftime`。 不过，请参看 "
":meth:`datetime.datetime.strptime` 和 :meth:`datetime.datetime.strftime`，在这里 "
"``%f`` 格式指示符 :ref:`应用于微秒数 <format-codes>`。"

#: ../../library/time.rst:558
msgid ""
"When used with the :func:`strptime` function, the ``%p`` directive only "
"affects the output hour field if the ``%I`` directive is used to parse the "
"hour."
msgstr "当与 :func:`strptime` 函数一起使用时，如果使用 ``%I`` 指令来解析小时， ``%p`` 指令只影响输出小时字段。"

#: ../../library/time.rst:564
msgid ""
"The range really is ``0`` to ``61``; value ``60`` is valid in timestamps "
"representing `leap seconds`_ and value ``61`` is supported for historical "
"reasons."
msgstr ""
"范围真的是 ``0`` 到 ``61`` ；值 ``60`` 在表示 `leap seconds`_ 的时间戳中有效，并且由于历史原因支持值 "
"``61`` 。"

#: ../../library/time.rst:569
msgid ""
"When used with the :func:`strptime` function, ``%U`` and ``%W`` are only "
"used in calculations when the day of the week and the year are specified."
msgstr "当与 :func:`strptime` 函数一起使用时， ``%U`` 和 ``%W`` 仅用于指定星期几和年份的计算。"

#: ../../library/time.rst:572
msgid ""
"Here is an example, a format for dates compatible with that specified  in "
"the :rfc:`2822` Internet email standard.  [1]_ ::"
msgstr "下面是一个示例，一个与 :rfc:`2822` Internet电子邮件标准以兼容的日期格式。  [1]_ ::"

#: ../../library/time.rst:575
msgid ""
">>> from time import gmtime, strftime\n"
">>> strftime(\"%a, %d %b %Y %H:%M:%S +0000\", gmtime())\n"
"'Thu, 28 Jun 2001 14:17:15 +0000'"
msgstr ""
">>> from time import gmtime, strftime\n"
">>> strftime(\"%a, %d %b %Y %H:%M:%S +0000\", gmtime())\n"
"'Thu, 28 Jun 2001 14:17:15 +0000'"

#: ../../library/time.rst:579
msgid ""
"Additional directives may be supported on certain platforms, but only the "
"ones listed here have a meaning standardized by ANSI C.  To see the full set"
" of format codes supported on your platform, consult the "
":manpage:`strftime(3)` documentation."
msgstr ""
"某些平台可能支持其他指令，但只有此处列出的指令具有 ANSI C 标准化的含义。要查看平台支持的完整格式代码集，请参阅 "
":manpage:`strftime(3)` 文档。"

#: ../../library/time.rst:584
msgid ""
"On some platforms, an optional field width and precision specification can "
"immediately follow the initial ``'%'`` of a directive in the following "
"order; this is also not portable. The field width is normally 2 except for "
"``%j`` where it is 3."
msgstr ""
"在某些平台上，可选的字段宽度和精度规范可以按照以下顺序紧跟在指令的初始 ``'%'`` 之后；这也不可移植。字段宽度通常为2，除了 ``%j`` "
"，它是3。"

#: ../../library/time.rst:595
msgid ""
"Parse a string representing a time according to a format.  The return value "
"is a :class:`struct_time` as returned by :func:`gmtime` or "
":func:`localtime`."
msgstr ""
"根据格式解析表示时间的字符串。 返回值为一个被 :func:`gmtime` 或 :func:`localtime` 返回的 "
":class:`struct_time` 。"

#: ../../library/time.rst:599
msgid ""
"The *format* parameter uses the same directives as those used by "
":func:`strftime`; it defaults to ``\"%a %b %d %H:%M:%S %Y\"`` which matches "
"the formatting returned by :func:`ctime`. If *string* cannot be parsed "
"according to *format*, or if it has excess data after parsing, "
":exc:`ValueError` is raised. The default values used to fill in any missing "
"data when more accurate values cannot be inferred are ``(1900, 1, 1, 0, 0, "
"0, 0, 1, -1)``. Both *string* and *format* must be strings."
msgstr ""
"*format* 参数使用与 :func:`strftime` 相同的指令。 它默认为匹配 :func:`ctime` 所返回的格式 ``\"%a %b"
" %d %H:%M:%S %Y\"``` 。 如果 *string* 不能根据 *format* 来解析，或者解析后它有多余的数据，则会引发 "
":exc:`ValueError`。 当无法推断出更准确的值时，用于填充任何缺失数据的默认值是 ``(1900, 1, 1, 0, 0, 0, 0, "
"1, -1)`` 。 *string* 和 *format* 都必须为字符串。"

#: ../../library/time.rst:607
msgid "For example:"
msgstr "例如:"

#: ../../library/time.rst:614
msgid ""
"Support for the ``%Z`` directive is based on the values contained in "
"``tzname`` and whether ``daylight`` is true.  Because of this, it is "
"platform-specific except for recognizing UTC and GMT which are always known "
"(and are considered to be non-daylight savings timezones)."
msgstr ""
"支持 ``%Z`` 指令是基于 ``tzname`` 中包含的值以及 ``daylight`` 是否为真。因此，它是特定于平台的，除了识别始终已知的 "
"UTC 和 GMT （并且被认为是非夏令时时区）。"

#: ../../library/time.rst:619
msgid ""
"Only the directives specified in the documentation are supported.  Because "
"``strftime()`` is implemented per platform it can sometimes offer more "
"directives than those listed.  But ``strptime()`` is independent of any "
"platform and thus does not necessarily support all directives available that"
" are not documented as supported."
msgstr ""
"仅支持文档中指定的指令。因为每个平台都实现了 ``strftime()`` ，它有时会提供比列出的指令更多的指令。但是 ``strptime()`` "
"独立于任何平台，因此不一定支持所有未记录为支持的可用指令。"

#: ../../library/time.rst:628
msgid ""
"The type of the time value sequence returned by :func:`gmtime`, "
":func:`localtime`, and :func:`strptime`.  It is an object with a "
":term:`named tuple` interface: values can be accessed by index and by "
"attribute name.  The following values are present:"
msgstr ""
"返回的时间值序列的类型为 :func:`gmtime` 、 :func:`localtime` 和 :func:`strptime` 。它是一个带有 "
":term:`named tuple` 接口的对象：可以通过索引和属性名访问值。 存在以下值："

#: ../../library/time.rst:635
msgid "Index"
msgstr "索引"

#: ../../library/time.rst:636
msgid "Attribute"
msgstr "属性"

#: ../../library/time.rst:637
msgid "Values"
msgstr "值"

#: ../../library/time.rst:639
msgid "0"
msgstr "0"

#: ../../library/time.rst:641
msgid "(for example, 1993)"
msgstr "（例如，1993）"

#: ../../library/time.rst:643
msgid "1"
msgstr "1"

#: ../../library/time.rst:645
msgid "range [1, 12]"
msgstr "range [1, 12]"

#: ../../library/time.rst:647
msgid "2"
msgstr "2"

#: ../../library/time.rst:649
msgid "range [1, 31]"
msgstr "range [1, 31]"

#: ../../library/time.rst:651
msgid "3"
msgstr "3"

#: ../../library/time.rst:653
msgid "range [0, 23]"
msgstr "range [0, 23]"

#: ../../library/time.rst:655
msgid "4"
msgstr "4"

#: ../../library/time.rst:657
msgid "range [0, 59]"
msgstr "range [0, 59]"

#: ../../library/time.rst:659
msgid "5"
msgstr "5"

#: ../../library/time.rst:661
msgid "range [0, 61]; see :ref:`Note (2) <leap-second>` in :func:`strftime`"
msgstr "range [0, 61]；参见 :func:`strftime` 中的 :ref:`注释 (2) <leap-second>`"

#: ../../library/time.rst:663
msgid "6"
msgstr "6"

#: ../../library/time.rst:665
msgid "range [0, 6]; Monday is 0"
msgstr "取值范围 [0, 6]；周一为 0"

#: ../../library/time.rst:667
msgid "7"
msgstr "7"

#: ../../library/time.rst:669
msgid "range [1, 366]"
msgstr "range [1, 366]"

#: ../../library/time.rst:671
msgid "8"
msgstr "8"

#: ../../library/time.rst:673
msgid "0, 1 or -1; see below"
msgstr "0, 1 或 -1；如下所示"

#: ../../library/time.rst:675 ../../library/time.rst:679
msgid "N/A"
msgstr "N/A"

#: ../../library/time.rst:677
msgid "abbreviation of timezone name"
msgstr "时区名称的缩写"

#: ../../library/time.rst:681
msgid "offset east of UTC in seconds"
msgstr "以秒为单位的UTC以东偏离"

#: ../../library/time.rst:683
msgid ""
"Note that unlike the C structure, the month value is a range of [1, 12], not"
" [0, 11]."
msgstr "请注意，与C结构不同，月份值是 [1,12] 的范围，而不是 [0,11] 。"

#: ../../library/time.rst:686
msgid ""
"In calls to :func:`mktime`, :attr:`tm_isdst` may be set to 1 when daylight "
"savings time is in effect, and 0 when it is not.  A value of -1 indicates "
"that this is not known, and will usually result in the correct state being "
"filled in."
msgstr ""
"在调用 :func:`mktime` 时， :attr:`tm_isdst` 可以在夏令时生效时设置为1，而在夏令时不生效时设置为0。 "
"值-1表示这是未知的，并且通常会导致填写正确的状态。"

#: ../../library/time.rst:690
msgid ""
"When a tuple with an incorrect length is passed to a function expecting a "
":class:`struct_time`, or having elements of the wrong type, a "
":exc:`TypeError` is raised."
msgstr ""
"当一个长度不正确的元组被传递给期望 :class:`struct_time` 的函数，或者具有错误类型的元素时，会引发 :exc:`TypeError`"
" 。"

#: ../../library/time.rst:696
msgid ""
"Return the time in seconds since the epoch_ as a floating-point number. The "
"handling of `leap seconds`_ is platform dependent. On Windows and most Unix "
"systems, the leap seconds are not counted towards the time in seconds since "
"the epoch_. This is commonly referred to as `Unix time "
"<https://en.wikipedia.org/wiki/Unix_time>`_."
msgstr ""
"返回以浮点数表示的从 epoch_ 开始的秒数形式的时间。 对 `leap seconds`_ 的处理取决于具体平台。 在 Windows 和大多数 "
"Unix 系统中，闰秒不会被计入从 epoch_ 开始的秒数形式的时间中。 这通常被称为 `Unix 时间 "
"<https://en.wikipedia.org/wiki/Unix_time>`_。"

#: ../../library/time.rst:702
msgid ""
"Note that even though the time is always returned as a floating-point "
"number, not all systems provide time with a better precision than 1 second. "
"While this function normally returns non-decreasing values, it can return a "
"lower value than a previous call if the system clock has been set back "
"between the two calls."
msgstr ""
"请注意，即使时间总是作为浮点数返回，但并非所有系统都提供高于1秒的精度。虽然此函数通常返回非递减值，但如果在两次调用之间设置了系统时钟，则它可以返回比先前调用更低的值。"

#: ../../library/time.rst:708
msgid ""
"The number returned by :func:`.time` may be converted into a more common "
"time format (i.e. year, month, day, hour, etc...) in UTC by passing it to "
":func:`gmtime` function or in local time by passing it to the "
":func:`localtime` function. In both cases a :class:`struct_time` object is "
"returned, from which the components of the calendar date may be accessed as "
"attributes."
msgstr ""
"返回的数字 :func:`.time` 可以通过将其传递给 :func:`gmtime` "
"函数或转换为UTC中更常见的时间格式（即年、月、日、小时等）或通过将它传递给 :func:`localtime` "
"函数获得本地时间。在这两种情况下都返回一个 :class:`struct_time` 对象，日历日期组件可以从中作为属性访问。"

#: ../../library/time.rst:717
msgid "On Windows, call ``GetSystemTimePreciseAsFileTime()``."
msgstr "在 Windows 上，调用 ``GetSystemTimePreciseAsFileTime()``。"

#: ../../library/time.rst:718
msgid "Call ``clock_gettime(CLOCK_REALTIME)`` if available."
msgstr "如果可能则调用 ``clock_gettime(CLOCK_REALTIME)``。"

#: ../../library/time.rst:719
msgid "Otherwise, call ``gettimeofday()``."
msgstr "在其他情况下，调用 ``gettimeofday()``。"

#: ../../library/time.rst:721
msgid ""
"Use :func:`time_ns` to avoid the precision loss caused by the :class:`float`"
" type."
msgstr "使用 :func:`time_ns` 以避免 :class:`float` 类型导致的精度损失。"

#: ../../library/time.rst:726
msgid ""
"On Windows, calls ``GetSystemTimePreciseAsFileTime()`` instead of "
"``GetSystemTimeAsFileTime()``."
msgstr ""
"在 Windows 上，调用 ``GetSystemTimePreciseAsFileTime()`` "
"而不是``GetSystemTimeAsFileTime()``。"

#: ../../library/time.rst:732
msgid ""
"Similar to :func:`~time.time` but returns time as an integer number of "
"nanoseconds since the epoch_."
msgstr "与 :func:`~time.time` 相似，但返回时间为用整数表示的自 epoch_ 以来所经过的纳秒数。"

#: ../../library/time.rst:745
msgid ""
"Return the value (in fractional seconds) of the sum of the system and user "
"CPU time of the current thread.  It does not include time elapsed during "
"sleep.  It is thread-specific by definition.  The reference point of the "
"returned value is undefined, so that only the difference between the results"
" of two calls in the same thread is valid."
msgstr ""
"（以小数表示的秒为单位）返回当前线程的系统和用户 CPU 时间的总计值。 它不包括睡眠状态所消耗的时间。 根据定义它只作用于线程范围。 "
"返回值的参考点未被定义，因此只有两次调用之间的差值才是有效的。"

#: ../../library/time.rst:751
msgid ""
"Use :func:`thread_time_ns` to avoid the precision loss caused by the "
":class:`float` type."
msgstr "使用 :func:`thread_time_ns` 以避免 :class:`float` 类型导致的精度损失。"

#: ../../library/time.rst:756
msgid "Unix systems supporting ``CLOCK_THREAD_CPUTIME_ID``."
msgstr "支持 ``CLOCK_THREAD_CPUTIME_ID`` 的 Unix 系统。"

#: ../../library/time.rst:763
msgid "Similar to :func:`thread_time` but return time as nanoseconds."
msgstr "与 :func:`thread_time` 相似，但返回纳秒时间。"

#: ../../library/time.rst:770
msgid ""
"Reset the time conversion rules used by the library routines. The "
"environment variable :envvar:`TZ` specifies how this is done. It will also "
"set the variables ``tzname`` (from the :envvar:`TZ` environment variable), "
"``timezone`` (non-DST seconds West of UTC), ``altzone`` (DST seconds west of"
" UTC) and ``daylight`` (to 0 if this timezone does not have any daylight "
"saving time rules, or to nonzero if there is a time, past, present or future"
" when daylight saving time applies)."
msgstr ""
"重置库例程使用的时间转换规则。环境变量 :envvar:`TZ` 指定如何完成。它还将设置变量 ``tzname`` （来自 :envvar:`TZ` "
"环境变量）， ``timezone`` （UTC的西部非DST秒）， ``altzone`` （UTC以西的DST秒）和 ``daylight`` "
"（如果此时区没有任何夏令时规则则为0，如果有夏令时适用的时间，无论过去、现在或未来，则为非零）。"

#: ../../library/time.rst:782
msgid ""
"Although in many cases, changing the :envvar:`TZ` environment variable may "
"affect the output of functions like :func:`localtime` without calling "
":func:`tzset`, this behavior should not be relied on."
msgstr ""
"虽然在很多情况下，更改 :envvar:`TZ` 环境变量而不调用 :func:`tzset` 可能会影响函数的输出，例如 "
":func:`localtime` ，不应该依赖此行为。"

#: ../../library/time.rst:786
msgid "The :envvar:`TZ` environment variable should contain no whitespace."
msgstr ":envvar:`TZ` 不应该包含空格。"

#: ../../library/time.rst:788
msgid ""
"The standard format of the :envvar:`TZ` environment variable is (whitespace "
"added for clarity)::"
msgstr ":envvar:`TZ` 环境变量的标准格式是（为了清晰起见，添加了空格）::"

#: ../../library/time.rst:791
msgid "std offset [dst [offset [,start[/time], end[/time]]]]"
msgstr "std offset [dst [offset [,start[/time], end[/time]]]]"

#: ../../library/time.rst:793
msgid "Where the components are:"
msgstr "组件的位置是："

#: ../../library/time.rst:795
msgid "``std`` and ``dst``"
msgstr "``std`` 和 ``dst``"

#: ../../library/time.rst:796
msgid ""
"Three or more alphanumerics giving the timezone abbreviations. These will be"
" propagated into time.tzname"
msgstr "三个或更多字母数字，给出时区缩写。这些将传到 time.tzname"

#: ../../library/time.rst:799
msgid "``offset``"
msgstr "``offset``"

#: ../../library/time.rst:800
msgid ""
"The offset has the form: ``± hh[:mm[:ss]]``. This indicates the value added "
"the local time to arrive at UTC.  If preceded by a '-', the timezone is east"
" of the Prime Meridian; otherwise, it is west. If no offset follows dst, "
"summer time is assumed to be one hour ahead of standard time."
msgstr ""
"偏移量的形式为： ``± hh[:mm[:ss]]`` 。这表示添加到达UTC的本地时间的值。如果前面有 '-' "
"，则时区位于本初子午线的东边；否则，在它是西边。如果dst之后没有偏移，则假设夏令时比标准时间提前一小时。"

#: ../../library/time.rst:805
msgid "``start[/time], end[/time]``"
msgstr "``start[/time], end[/time]``"

#: ../../library/time.rst:806
msgid ""
"Indicates when to change to and back from DST. The format of the start and "
"end dates are one of the following:"
msgstr "指示何时更改为DST和从DST返回。开始日期和结束日期的格式为以下之一："

#: ../../library/time.rst:809
msgid ":samp:`J{n}`"
msgstr ":samp:`J{n}`"

#: ../../library/time.rst:810
msgid ""
"The Julian day *n* (1 <= *n* <= 365). Leap days are not counted, so in all "
"years February 28 is day 59 and March 1 is day 60."
msgstr "Julian日 *n* （1 <= *n* <= 365）。闰日不计算在内，因此在所有年份中，2月28日是第59天，3月1日是第60天。"

#: ../../library/time.rst:813
msgid ":samp:`{n}`"
msgstr ":samp:`{n}`"

#: ../../library/time.rst:814
msgid ""
"The zero-based Julian day (0 <= *n* <= 365). Leap days are counted, and it "
"is possible to refer to February 29."
msgstr "从零开始的Julian日（0 <= *n* <= 365）。 闰日计入，可以引用2月29日。"

#: ../../library/time.rst:817
msgid ":samp:`M{m}.{n}.{d}`"
msgstr ":samp:`M{m}.{n}.{d}`"

#: ../../library/time.rst:818
msgid ""
"The *d*'th day (0 <= *d* <= 6) of week *n* of month *m* of the year (1 <= "
"*n* <= 5, 1 <= *m* <= 12, where week 5 means \"the last *d* day in month "
"*m*\" which may occur in either the fourth or the fifth week). Week 1 is the"
" first week in which the *d*'th day occurs. Day zero is a Sunday."
msgstr ""
"一年中 *m* 月的第 *n* 周（1 <= *n* <= 5 ，1 <= *m* <= 12 ，第 5 周表示 “可能在 *m* 月第 4 周或第 5"
" 周出现的最后第 *d* 日”）的第 *d* 天（0 <= *d* <= 6）。 第 1 周是第 *d* 天发生的第一周。 第 0 天是星期天。"

#: ../../library/time.rst:824
msgid ""
"``time`` has the same format as ``offset`` except that no leading sign ('-' "
"or '+') is allowed. The default, if time is not given, is 02:00:00."
msgstr ""
"``time`` 的格式与 ``offset`` 的格式相同，但不允许使用前导符号（ '-' 或 '+' "
"）。如果没有给出时间，则默认值为02:00:00。"

#: ../../library/time.rst:829
msgid ""
">>> os.environ['TZ'] = 'EST+05EDT,M4.1.0,M10.5.0'\n"
">>> time.tzset()\n"
">>> time.strftime('%X %x %Z')\n"
"'02:07:36 05/08/03 EDT'\n"
">>> os.environ['TZ'] = 'AEST-10AEDT-11,M10.5.0,M3.5.0'\n"
">>> time.tzset()\n"
">>> time.strftime('%X %x %Z')\n"
"'16:08:12 05/08/03 AEST'"
msgstr ""
">>> os.environ['TZ'] = 'EST+05EDT,M4.1.0,M10.5.0'\n"
">>> time.tzset()\n"
">>> time.strftime('%X %x %Z')\n"
"'02:07:36 05/08/03 EDT'\n"
">>> os.environ['TZ'] = 'AEST-10AEDT-11,M10.5.0,M3.5.0'\n"
">>> time.tzset()\n"
">>> time.strftime('%X %x %Z')\n"
"'16:08:12 05/08/03 AEST'"

#: ../../library/time.rst:838
msgid ""
"On many Unix systems (including \\*BSD, Linux, Solaris, and Darwin), it is "
"more convenient to use the system's zoneinfo (:manpage:`tzfile(5)`)  "
"database to specify the timezone rules. To do this, set the  :envvar:`TZ` "
"environment variable to the path of the required timezone  datafile, "
"relative to the root of the systems 'zoneinfo' timezone database, usually "
"located at :file:`/usr/share/zoneinfo`. For example,  ``'US/Eastern'``, "
"``'Australia/Melbourne'``, ``'Egypt'`` or  ``'Europe/Amsterdam'``. ::"
msgstr ""
"在许多Unix系统（包括 \\*BSD ， Linux ， Solaris 和 Darwin 上），使用系统的区域信息（ "
":manpage:`tzfile(5)` ）数据库来指定时区规则会更方便。为此，将 :envvar:`TZ` "
"环境变量设置为所需时区数据文件的路径，相对于系统 'zoneinfo' 时区数据库的根目录，通常位于 "
":file:`/usr/share/zoneinfo` 。 例如，``'US/Eastern'`` 、 "
"``'Australia/Melbourne'`` 、 ``'Egypt'`` 或 ``'Europe/Amsterdam'``。 ::"

#: ../../library/time.rst:846
msgid ""
">>> os.environ['TZ'] = 'US/Eastern'\n"
">>> time.tzset()\n"
">>> time.tzname\n"
"('EST', 'EDT')\n"
">>> os.environ['TZ'] = 'Egypt'\n"
">>> time.tzset()\n"
">>> time.tzname\n"
"('EET', 'EEST')"
msgstr ""
">>> os.environ['TZ'] = 'US/Eastern'\n"
">>> time.tzset()\n"
">>> time.tzname\n"
"('EST', 'EDT')\n"
">>> os.environ['TZ'] = 'Egypt'\n"
">>> time.tzset()\n"
">>> time.tzname\n"
"('EET', 'EEST')"

#: ../../library/time.rst:859
msgid "Clock ID Constants"
msgstr "Clock ID 常量"

#: ../../library/time.rst:861
msgid ""
"These constants are used as parameters for :func:`clock_getres` and "
":func:`clock_gettime`."
msgstr "这些常量用作 :func:`clock_getres` 和 :func:`clock_gettime` 的参数。"

#: ../../library/time.rst:866
msgid ""
"Identical to :data:`CLOCK_MONOTONIC`, except it also includes any time that "
"the system is suspended."
msgstr "与 :data:`CLOCK_MONOTONIC` 相同，除了它还包括系统暂停的任何时间。"

#: ../../library/time.rst:869
msgid ""
"This allows applications to get a suspend-aware monotonic  clock  without "
"having to deal with the complications of :data:`CLOCK_REALTIME`, which may "
"have  discontinuities if the time is changed using ``settimeofday()`` or "
"similar."
msgstr ""
"这允许应用程序获得一个暂停感知的单调时钟，而不必处理 :data:`CLOCK_REALTIME` 的复杂性，如果使用 "
"``settimeofday()`` 或类似的时间更改时间可能会有不连续性。"

#: ../../library/time.rst:881
msgid ""
"The Solaris OS has a ``CLOCK_HIGHRES`` timer that attempts to use an optimal"
" hardware source, and may give close to nanosecond resolution. "
"``CLOCK_HIGHRES`` is the nonadjustable, high-resolution clock."
msgstr ""
"Solaris OS 有一个 ``CLOCK_HIGHRES`` 计时器，试图使用最佳硬件源，并可能提供接近纳秒的分辨率。 "
"``CLOCK_HIGHRES`` 是不可调节的高分辨率时钟。"

#: ../../library/time.rst:892
msgid ""
"Clock that cannot be set and represents monotonic time since some "
"unspecified starting point."
msgstr "无法设置的时钟，表示自某些未指定的起点以来的单调时间。"

#: ../../library/time.rst:902
msgid ""
"Similar to :data:`CLOCK_MONOTONIC`, but provides access to a raw hardware-"
"based time that is not subject to NTP adjustments."
msgstr "类似于 :data:`CLOCK_MONOTONIC` ，但可以访问不受NTP调整影响的原始硬件时间。"

#: ../../library/time.rst:911
msgid ""
"Similar to :data:`CLOCK_MONOTONIC_RAW`, but reads a value cached by the "
"system at context switch and hence has less accuracy."
msgstr "类似于 :data:`CLOCK_MONOTONIC_RAW`，但在上下文切换时将读取由系统缓存的值因此会不够精确。"

#: ../../library/time.rst:921 ../../library/time.rst:930
msgid "High-resolution per-process timer from the CPU."
msgstr "来自CPU的高分辨率每进程计时器。"

#: ../../library/time.rst:938
msgid ""
"`International Atomic Time <https://www.nist.gov/pml/time-and-frequency-"
"division/how-utcnist-related-coordinated-universal-time-utc-international>`_"
msgstr ""
"`国际原子时间 <https://www.nist.gov/pml/time-and-frequency-division/how-utcnist-"
"related-coordinated-universal-time-utc-international>`_"

#: ../../library/time.rst:940
msgid ""
"The system must have a current leap second table in order for this to give "
"the correct answer.  PTP or NTP software can maintain a leap second table."
msgstr "该系统必须有一个当前闰秒表以便能给出正确的回答。 PTP 或 NTP 软件可以用来维护闰秒表。"

#: ../../library/time.rst:949
msgid "Thread-specific CPU-time clock."
msgstr "特定于线程的CPU时钟。"

#: ../../library/time.rst:958
msgid ""
"Time whose absolute value is the time the system has been running and not "
"suspended, providing accurate uptime measurement, both absolute and "
"interval."
msgstr "该时间的绝对值是系统运行且未暂停的时间，提供准确的正常运行时间测量，包括绝对值和间隔值。"

#: ../../library/time.rst:969
msgid ""
"Clock that increments monotonically, tracking the time since an arbitrary "
"point, unaffected by frequency or time adjustments and not incremented while"
" the system is asleep."
msgstr "单调递增的时钟，记录从一个任意起点开始的时间，不受频率或时间调整的影响，并且当系统休眠时将不会递增。"

#: ../../library/time.rst:979
msgid ""
"Like :data:`CLOCK_UPTIME_RAW`, but the value is cached by the system at "
"context switches and therefore has less accuracy."
msgstr "类似于 :data:`CLOCK_UPTIME_RAW`，但该值在上下文切换时将由系统缓存因此会不够精确。"

#: ../../library/time.rst:986
msgid ""
"The following constant is the only parameter that can be sent to "
":func:`clock_settime`."
msgstr "以下常量是唯一可以发送到 :func:`clock_settime` 的参数。"

#: ../../library/time.rst:992
msgid ""
"Real-time clock.  Setting this clock requires appropriate privileges. The "
"clock is the same for all processes."
msgstr "实时时钟。 设置此时钟需要有适当的权限。 该时钟在所有进程上保持一致。"

#: ../../library/time.rst:1003
msgid "Timezone Constants"
msgstr "时区常量"

#: ../../library/time.rst:1007
msgid ""
"The offset of the local DST timezone, in seconds west of UTC, if one is "
"defined. This is negative if the local DST timezone is east of UTC (as in "
"Western Europe, including the UK).  Only use this if ``daylight`` is "
"nonzero.  See note below."
msgstr ""
"本地DST时区的偏移量，以UTC为单位的秒数，如果已定义。如果当地DST时区在UTC以东（如在西欧，包括英国），则是负数。 只有当 "
"``daylight`` 非零时才使用它。 见下面的注释。"

#: ../../library/time.rst:1013
msgid "Nonzero if a DST timezone is defined.  See note below."
msgstr "如果定义了DST时区，则为非零。 见下面的注释。"

#: ../../library/time.rst:1017
msgid ""
"The offset of the local (non-DST) timezone, in seconds west of UTC (negative"
" in most of Western Europe, positive in the US, zero in the UK).  See note "
"below."
msgstr "本地（非DST）时区的偏移量，UTC以西的秒数（西欧大部分地区为负，美国为正，英国为零）。 见下面的注释。"

#: ../../library/time.rst:1022
msgid ""
"A tuple of two strings: the first is the name of the local non-DST timezone,"
" the second is the name of the local DST timezone.  If no DST timezone is "
"defined, the second string should not be used.  See note below."
msgstr ""
"两个字符串的元组：第一个是本地非DST时区的名称，第二个是本地DST时区的名称。 如果未定义DST时区，则不应使用第二个字符串。 见下面的注释。"

#: ../../library/time.rst:1028
msgid ""
"For the above Timezone constants (:data:`altzone`, :data:`daylight`, "
":data:`timezone`, and :data:`tzname`), the value is determined by the "
"timezone rules in effect at module load time or the last time :func:`tzset` "
"is called and may be incorrect for times in the past.  It is recommended to "
"use the :attr:`~struct_time.tm_gmtoff` and :attr:`~struct_time.tm_zone` "
"results from :func:`localtime` to obtain timezone information."
msgstr ""
"对于上述时区常量 (:data:`altzone`, :data:`daylight`, :data:`timezone` 和 "
":data:`tzname`)，该值由当模块加载或 :func:`tzset` 最后一次被调用时生效的时区规则确定并且对于已过去的时间可能不正确。 "
"建议使用来自 :func:`localtime` 结果的 :attr:`~struct_time.tm_gmtoff` 和 "
":attr:`~struct_time.tm_zone` 来获取时区信息。"

#: ../../library/time.rst:1037
msgid "Module :mod:`datetime`"
msgstr "模块 :mod:`datetime`"

#: ../../library/time.rst:1038
msgid "More object-oriented interface to dates and times."
msgstr "更多面向对象的日期和时间接口。"

#: ../../library/time.rst:1040
msgid "Module :mod:`locale`"
msgstr "模块 :mod:`locale`"

#: ../../library/time.rst:1041
msgid ""
"Internationalization services.  The locale setting affects the "
"interpretation of many format specifiers in :func:`strftime` and "
":func:`strptime`."
msgstr "国际化服务。 区域设置会影响 :func:`strftime` 和 :func:`strptime`  中许多格式说明符的解析。"

#: ../../library/time.rst:1044
msgid "Module :mod:`calendar`"
msgstr "模块 :mod:`calendar`"

#: ../../library/time.rst:1045
msgid ""
"General calendar-related functions.   :func:`~calendar.timegm` is the "
"inverse of :func:`gmtime` from this module."
msgstr "一般日历相关功能。这个模块的 :func:`~dalendar.timegm` 是函数 :func:`gmtime` 的反函数。"

#: ../../library/time.rst:1049
msgid "Footnotes"
msgstr "备注"

#: ../../library/time.rst:1050
msgid ""
"The use of ``%Z`` is now deprecated, but the ``%z`` escape that expands to "
"the preferred hour/minute offset is not supported by all ANSI C libraries. "
"Also, a strict reading of the original 1982 :rfc:`822` standard calls for a "
"two-digit year (``%y`` rather than ``%Y``), but practice moved to 4-digit "
"years long before the year 2000.  After that, :rfc:`822` became obsolete and"
" the 4-digit year has been first recommended by :rfc:`1123` and then "
"mandated by :rfc:`2822`."
msgstr ""
"现在不推荐使用 ``%Z`` ，但是所有 ANSI C 库都不支持扩展为首选小时/分钟偏移量的 ``%z`` 转义符。 此外，严格的 1982 年原始 "
":rfc:`822` 标准要求两位数的年份（ ``%y`` 而不是 ``%Y`` ），但是实际在2000年之前很久就转移到了4位数年。之后， "
":rfc:`822` 已经废弃了，4位数的年份首先被推荐 :rfc:`1123` ，然后被 :rfc:`2822` 强制执行。"

#: ../../library/time.rst:22
msgid "epoch"
msgstr "epoch"

#: ../../library/time.rst:36
msgid "Year 2038"
msgstr "2038 年"

#: ../../library/time.rst:42
msgid "2-digit years"
msgstr "2 位数表示年份"

#: ../../library/time.rst:50
msgid "UTC"
msgstr "UTC"

#: ../../library/time.rst:50
msgid "Coordinated Universal Time"
msgstr "Coordinated Universal Time"

#: ../../library/time.rst:50
msgid "Greenwich Mean Time"
msgstr "Greenwich Mean Time"

#: ../../library/time.rst:63
msgid "Daylight Saving Time"
msgstr "Daylight Saving Time"

#: ../../library/time.rst:324 ../../library/time.rst:360
#: ../../library/time.rst:740
msgid "benchmarking"
msgstr "benchmarking"

#: ../../library/time.rst:360 ../../library/time.rst:740
msgid "CPU time"
msgstr "CPU time"

#: ../../library/time.rst:360 ../../library/time.rst:740
msgid "processor time"
msgstr "processor time"

#: ../../library/time.rst:431 ../../library/time.rst:590
msgid "% (percent)"
msgstr "% (百分号)"

#: ../../library/time.rst:431 ../../library/time.rst:590
msgid "datetime format"
msgstr "日期时间格式"
