# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2025
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-07-25 18:10+0000\n"
"PO-Revision-Date: 2025-07-18 20:08+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2025\n"
"Language-Team: Chinese (China) (https://app.transifex.com/python-doc/teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/asyncio-platforms.rst:9
msgid "Platform Support"
msgstr "平台支持"

#: ../../library/asyncio-platforms.rst:11
msgid ""
"The :mod:`asyncio` module is designed to be portable, but some platforms "
"have subtle differences and limitations due to the platforms' underlying "
"architecture and capabilities."
msgstr ":mod:`asyncio` 模块被设计为可移植的,但由于平台的底层架构和功能，一些平台存在细微的差异和限制。"

#: ../../library/asyncio-platforms.rst:17
msgid "All Platforms"
msgstr "所有平台"

#: ../../library/asyncio-platforms.rst:19
msgid ""
":meth:`loop.add_reader` and :meth:`loop.add_writer` cannot be used to "
"monitor file I/O."
msgstr ":meth:`loop.add_reader` 和 :meth:`loop.add_writer` 不能用来监视文件I/O。"

#: ../../library/asyncio-platforms.rst:24
msgid "Windows"
msgstr "Windows"

#: ../../library/asyncio-platforms.rst:26
msgid ""
"**Source code:** :source:`Lib/asyncio/proactor_events.py`, "
":source:`Lib/asyncio/windows_events.py`, "
":source:`Lib/asyncio/windows_utils.py`"
msgstr ""
"**源代码:** :source:`Lib/asyncio/proactor_events.py`, "
":source:`Lib/asyncio/windows_events.py`, "
":source:`Lib/asyncio/windows_utils.py`"

#: ../../library/asyncio-platforms.rst:34
msgid "On Windows, :class:`ProactorEventLoop` is now the default event loop."
msgstr "在 Windows 上，:class:`ProactorEventLoop` 现在是默认的事件循环。"

#: ../../library/asyncio-platforms.rst:36
msgid "All event loops on Windows do not support the following methods:"
msgstr "Windows上的所有事件循环都不支持以下方法:"

#: ../../library/asyncio-platforms.rst:38
msgid ""
":meth:`loop.create_unix_connection` and :meth:`loop.create_unix_server` are "
"not supported. The :data:`socket.AF_UNIX` socket family is specific to Unix."
msgstr ""
"不支持 :meth:`loop.create_unix_connection` 和 :meth:`loop.create_unix_server` 。 "
":data:`socket.AF_UNIX` 套接字相关参数仅限于Unix。"

#: ../../library/asyncio-platforms.rst:42
msgid ""
":meth:`loop.add_signal_handler` and :meth:`loop.remove_signal_handler` are "
"not supported."
msgstr ""
"不支持 :meth:`loop.add_signal_handler` 和 :meth:`loop.remove_signal_handler` 。"

#: ../../library/asyncio-platforms.rst:45
msgid ":class:`SelectorEventLoop` has the following limitations:"
msgstr ":class:`SelectorEventLoop` 有下列限制:"

#: ../../library/asyncio-platforms.rst:47
msgid ""
":class:`~selectors.SelectSelector` is used to wait on socket events: it "
"supports sockets and is limited to 512 sockets."
msgstr ":class:`~selectors.SelectSelector` 只被用于等待套接字事件：它支持套接字且最多支持512个套接字。"

#: ../../library/asyncio-platforms.rst:50
msgid ""
":meth:`loop.add_reader` and :meth:`loop.add_writer` only accept socket "
"handles (e.g. pipe file descriptors are not supported)."
msgstr ""
":meth:`loop.add_reader` 和 :meth:`loop.add_writer` "
"只接受套接字处理回调函数(如管道、文件描述符等都不支持)。"

#: ../../library/asyncio-platforms.rst:53
msgid ""
"Pipes are not supported, so the :meth:`loop.connect_read_pipe` and "
":meth:`loop.connect_write_pipe` methods are not implemented."
msgstr ""
"因为不支持管道，所以  :meth:`loop.connect_read_pipe` 和 :meth:`loop.connect_write_pipe`"
" 方法没有实现。"

#: ../../library/asyncio-platforms.rst:56
msgid ""
":ref:`Subprocesses <asyncio-subprocess>` are not supported, i.e. "
":meth:`loop.subprocess_exec` and :meth:`loop.subprocess_shell` methods are "
"not implemented."
msgstr ""
"不支持 :ref:`Subprocesses <asyncio-subprocess>` ，也就是  "
":meth:`loop.subprocess_exec` 和 :meth:`loop.subprocess_shell` 方法没有实现。"

#: ../../library/asyncio-platforms.rst:60
msgid ":class:`ProactorEventLoop` has the following limitations:"
msgstr ":class:`ProactorEventLoop` 有下列限制:"

#: ../../library/asyncio-platforms.rst:62
msgid ""
"The :meth:`loop.add_reader` and :meth:`loop.add_writer` methods are not "
"supported."
msgstr "不支持  :meth:`loop.add_reader` 和 :meth:`loop.add_writer` 方法。"

#: ../../library/asyncio-platforms.rst:65
msgid ""
"The resolution of the monotonic clock on Windows is usually around 15.6 "
"msec.  The best resolution is 0.5 msec. The resolution depends on the "
"hardware (availability of `HPET "
"<https://en.wikipedia.org/wiki/High_Precision_Event_Timer>`_) and on the "
"Windows configuration."
msgstr ""
"Windows上单调时钟的分辨率大约为 15.6 毫秒。最佳的分辨率是 0.5 毫秒。分辨率依赖于具体的硬件（`HPET "
"<https://zh.wikipedia.org/wiki/高精度事件计时器>`_）和Windows的设置。"

#: ../../library/asyncio-platforms.rst:75
msgid "Subprocess Support on Windows"
msgstr "Windows的子进程支持"

#: ../../library/asyncio-platforms.rst:77
msgid ""
"On Windows, the default event loop :class:`ProactorEventLoop` supports "
"subprocesses, whereas :class:`SelectorEventLoop` does not."
msgstr ""
"在 Windows 上，默认的事件循环 :class:`ProactorEventLoop` 支持子进程，而 "
":class:`SelectorEventLoop` 则不支持。"

#: ../../library/asyncio-platforms.rst:80
msgid ""
"The :meth:`policy.set_child_watcher() "
"<AbstractEventLoopPolicy.set_child_watcher>` function is also not supported,"
" as :class:`ProactorEventLoop` has a different mechanism to watch child "
"processes."
msgstr ""
"也不支持 :meth:`policy.set_child_watcher() "
"<AbstractEventLoopPolicy.set_child_watcher>` 函数，:class:`ProactorEventLoop` "
"有不同的机制来监视子进程。"

#: ../../library/asyncio-platforms.rst:87
msgid "macOS"
msgstr "macOS"

#: ../../library/asyncio-platforms.rst:89
msgid "Modern macOS versions are fully supported."
msgstr "完整支持流行的macOS版本。"

#: ../../library/asyncio-platforms.rst:92
msgid "macOS <= 10.8"
msgstr "macOS <= 10.8"

#: ../../library/asyncio-platforms.rst:93
msgid ""
"On macOS 10.6, 10.7 and 10.8, the default event loop uses "
":class:`selectors.KqueueSelector`, which does not support character devices "
"on these versions.  The :class:`SelectorEventLoop` can be manually "
"configured to use :class:`~selectors.SelectSelector` or "
":class:`~selectors.PollSelector` to support character devices on these older"
" versions of macOS.  Example::"
msgstr ""
"在 macOS 10.6, 10.7 和 10.8 上，默认的事件循环使用 "
":class:`selectors.KqueueSelector`，在这些版本上它并不支持字符设备。 可以手工配置 "
":class:`SelectorEventLoop` 来使用 :class:`~selectors.SelectSelector` 或 "
":class:`~selectors.PollSelector` 以在这些较老版本的 macOS 上支持字符设备。 例如::"
