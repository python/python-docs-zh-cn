# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Nyuan Zhang, 2025
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-07-25 16:48+0000\n"
"PO-Revision-Date: 2025-07-18 20:06+0000\n"
"Last-Translator: Nyuan Zhang, 2025\n"
"Language-Team: Chinese (China) (https://app.transifex.com/python-doc/teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/venv.rst:2
msgid ":mod:`venv` --- Creation of virtual environments"
msgstr ":mod:`venv` --- 创建虚拟环境"

#: ../../library/venv.rst:12
msgid "**Source code:** :source:`Lib/venv/`"
msgstr "**源码：** :source:`Lib/venv/`"

#: ../../library/venv.rst:21
msgid ""
"The :mod:`!venv` module supports creating lightweight \"virtual "
"environments\", each with their own independent set of Python packages "
"installed in their :mod:`site` directories. A virtual environment is created"
" on top of an existing Python installation, known as the virtual "
"environment's \"base\" Python, and may optionally be isolated from the "
"packages in the base environment, so only those explicitly installed in the "
"virtual environment are available."
msgstr ""
":mod:`!venv` 模块支持创建轻量的“虚拟环境”，每个虚拟环境将拥有它们自己独立的安装在其 :mod:`site` 目录中的 Python "
"软件包集合。 虚拟环境是在现有的 Python "
"安装版基础之上创建的，这被称为虚拟环境的“基础”Python，并且还可选择与基础环境中的软件包隔离开来，这样只有在虚拟环境中显式安装的软件包才是可用的。"

#: ../../library/venv.rst:29
msgid ""
"When used from within a virtual environment, common installation tools such "
"as `pip`_ will install Python packages into a virtual environment without "
"needing to be told to do so explicitly."
msgstr "当在一个虚拟环境内使用时，常见安装工具如 `pip`_ 将把 Python 软件包安装到虚拟环境中而无需显式地指明这一点。"

#: ../../library/venv.rst:33
msgid "A virtual environment is (amongst other things):"
msgstr "虚拟环境是（主要的特性）："

#: ../../library/venv.rst:35
msgid ""
"Used to contain a specific Python interpreter and software libraries and "
"binaries which are needed to support a project (library or application). "
"These are by default isolated from software in other virtual environments "
"and Python interpreters and libraries installed in the operating system."
msgstr ""
"用来包含支持一个项目（库或应用程序）所需的特定 Python 解释器、软件库和二进制文件。 它们在默认情况下与其他虚拟环境中的软件以及操作系统中安装的 "
"Python 解释器和库保持隔离。"

#: ../../library/venv.rst:40
msgid ""
"Contained in a directory, conventionally either named ``venv`` or ``.venv`` "
"in the project directory, or under a container directory for lots of virtual"
" environments, such as ``~/.virtualenvs``."
msgstr ""
"包含在一个目录中，根据惯例被命名为项目目录下的``venv`` 或 ``.venv``，或是有许多虚拟环境的容器目录下，如 "
"``~/.virtualenvs``。"

#: ../../library/venv.rst:44
msgid "Not checked into source control systems such as Git."
msgstr "不可签入 Git 等源代码控制系统。"

#: ../../library/venv.rst:46
msgid ""
"Considered as disposable -- it should be simple to delete and recreate it "
"from scratch. You don't place any project code in the environment"
msgstr "被视为是可丢弃性的 —— 应当能够简单地删除并从头开始重建。 你不应在虚拟环境中放置任何项目代码。"

#: ../../library/venv.rst:49
msgid ""
"Not considered as movable or copyable -- you just recreate the same "
"environment in the target location."
msgstr "不被视为是可移动或可复制的 —— 你只能在目标位置重建相同的环境。"

#: ../../library/venv.rst:52
msgid "See :pep:`405` for more background on Python virtual environments."
msgstr "请参阅 :pep:`405` 了解有关 Python 虚拟环境的更多背景信息。"

#: ../../library/venv.rst:56
msgid ""
"`Python Packaging User Guide: Creating and using virtual environments "
"<https://packaging.python.org/guides/installing-using-pip-and-virtual-"
"environments/#create-and-use-virtual-environments>`__"
msgstr ""
"`Python Packaging User Guide: Creating and using virtual environments "
"<https://packaging.python.org/guides/installing-using-pip-and-virtual-"
"environments/#create-and-use-virtual-environments>`__"

#: ../../includes/wasm-notavail.rst:3
msgid ":ref:`Availability <availability>`: not Emscripten, not WASI."
msgstr ":ref:`可用性 <availability>`: 非 Emscripten，非 WASI。"

#: ../../includes/wasm-notavail.rst:5
msgid ""
"This module does not work or is not available on WebAssembly platforms "
"``wasm32-emscripten`` and ``wasm32-wasi``. See :ref:`wasm-availability` for "
"more information."
msgstr ""
"此模块在 WebAssembly 平台 ``wasm32-emscripten`` 和 ``wasm32-wasi`` 上不适用或不可用。 请参阅 "
":ref:`wasm-availability` 了解详情。"

#: ../../library/venv.rst:62
msgid "Creating virtual environments"
msgstr "创建虚拟环境"

#: ../../using/venv-create.inc:1
msgid ""
"Creation of :ref:`virtual environments <venv-def>` is done by executing the "
"command ``venv``::"
msgstr "通过执行 ``venv`` 指令来创建一个 :ref:`虚拟环境 <venv-def>`::"

#: ../../using/venv-create.inc:6
msgid ""
"Running this command creates the target directory (creating any parent "
"directories that don't exist already) and places a ``pyvenv.cfg`` file in it"
" with a ``home`` key pointing to the Python installation from which the "
"command was run (a common name for the target directory is ``.venv``).  It "
"also creates a ``bin`` (or ``Scripts`` on Windows) subdirectory containing a"
" copy/symlink of the Python binary/binaries (as appropriate for the platform"
" or arguments used at environment creation time). It also creates an "
"(initially empty) ``lib/pythonX.Y/site-packages`` subdirectory (on Windows, "
"this is ``Lib\\site-packages``). If an existing directory is specified, it "
"will be re-used."
msgstr ""
"运行此命令将创建目标目录（父目录若不存在也将创建），并放置一个 ``pyvenv.cfg`` 文件在其中，文件中有一个 ``home`` "
"键，它的值指向运行此命令的 Python 安装（目标目录的常用名称是 ``.venv``）。它还会创建一个 ``bin`` 子目录（在 Windows "
"上是 ``Scripts``），其中包含 Python 二进制文件的副本或符号链接（视创建环境时使用的平台或参数而定）。它还会创建一个（初始为空的） "
"``lib/pythonX.Y/site-packages`` 子目录（在 Windows 上是 ``Lib\\site-"
"packages``）。如果指定了一个现有的目录，这个目录就将被重新使用。"

#: ../../using/venv-create.inc:17
msgid ""
"The use of ``venv`` is now recommended for creating virtual environments."
msgstr "现在推荐使用 ``venv`` 来创建虚拟环境。"

#: ../../using/venv-create.inc:20
msgid ""
"``pyvenv`` was the recommended tool for creating virtual environments for "
"Python 3.3 and 3.4, and is :ref:`deprecated in Python 3.6 "
"<whatsnew36-venv>`."
msgstr ""
"``pyvenv`` 是针对 Python 3.3 和 3.4 创建虚拟环境的推荐工具，并 :ref:`在 Python 3.6 中被弃用 "
"<whatsnew36-venv>`。"

#: ../../using/venv-create.inc:27
msgid "On Windows, invoke the ``venv`` command as follows::"
msgstr "在 Windows 上，调用 ``venv`` 命令如下::"

#: ../../using/venv-create.inc:31
msgid ""
"Alternatively, if you configured the ``PATH`` and ``PATHEXT`` variables for "
"your :ref:`Python installation <using-on-windows>`::"
msgstr ""
"或者，如果已经为 :ref:`Python 安装 <using-on-windows>` 配置好 ``PATH`` 和 ``PATHEXT`` 变量::"

#: ../../using/venv-create.inc:36
msgid "The command, if run with ``-h``, will show the available options::"
msgstr "本命令如果以 ``-h`` 参数运行，将显示可用的选项::"

#: ../../using/venv-create.inc:70
msgid ""
"Add ``--upgrade-deps`` option to upgrade pip + setuptools to the latest on "
"PyPI"
msgstr "添加 ``--upgrade-deps`` 选项，用于将 pip + setuptools 升级到 PyPI 上的最新版本"

#: ../../using/venv-create.inc:73
msgid ""
"Installs pip by default, added the ``--without-pip``  and ``--copies`` "
"options"
msgstr "默认安装 pip，并添加 ``--without-pip`` 和 ``--copies`` 选项"

#: ../../using/venv-create.inc:77
msgid ""
"In earlier versions, if the target directory already existed, an error was "
"raised, unless the ``--clear`` or ``--upgrade`` option was provided."
msgstr "在早期版本中，如果目标目录已存在，将引发错误，除非使用了 ``--clear`` 或 ``--upgrade`` 选项。"

#: ../../using/venv-create.inc:82
msgid ""
"While symlinks are supported on Windows, they are not recommended. Of "
"particular note is that double-clicking ``python.exe`` in File Explorer will"
" resolve the symlink eagerly and ignore the virtual environment."
msgstr ""
"虽然 Windows 支持符号链接，但不推荐使用它们。特别注意，在文件资源管理器中双击 ``python.exe`` "
"将立即解析符号链接，并忽略虚拟环境。"

#: ../../using/venv-create.inc:87
msgid ""
"On Microsoft Windows, it may be required to enable the ``Activate.ps1`` "
"script by setting the execution policy for the user. You can do this by "
"issuing the following PowerShell command:"
msgstr ""
"在 Microsoft Windows 上，为了启用 ``Activate.ps1`` 脚本，可能需要修改用户的执行策略。可以运行以下 "
"PowerShell 命令来执行此操作："

#: ../../using/venv-create.inc:91
msgid ""
"PS C:\\> Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope "
"CurrentUser"
msgstr ""
"PS C:\\> Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope "
"CurrentUser"

#: ../../using/venv-create.inc:93
msgid ""
"See `About Execution Policies "
"<https://go.microsoft.com/fwlink/?LinkID=135170>`_ for more information."
msgstr ""
"参阅 `About Execution Policies "
"<https://go.microsoft.com/fwlink/?LinkID=135170>`_ 以获取更多信息。"

#: ../../using/venv-create.inc:97
msgid ""
"The created ``pyvenv.cfg`` file also includes the ``include-system-site-"
"packages`` key, set to ``true`` if ``venv`` is run with the ``--system-site-"
"packages`` option, ``false`` otherwise."
msgstr ""
"生成的 ``pyvenv.cfg`` 文件还包括 ``include-system-site-packages`` 键，如果运行 ``venv`` "
"时带有 ``--system-site-packages`` 选项，则键值为 ``true``，否则为 ``false``。"

#: ../../using/venv-create.inc:101
msgid ""
"Unless the ``--without-pip`` option is given, :mod:`ensurepip` will be "
"invoked to bootstrap ``pip`` into the virtual environment."
msgstr "除非采用 ``--without-pip`` 选项，否则将会调用 :mod:`ensurepip` 将 ``pip`` 引导到虚拟环境中。"

#: ../../using/venv-create.inc:104
msgid ""
"Multiple paths can be given to ``venv``, in which case an identical virtual "
"environment will be created, according to the given options, at each "
"provided path."
msgstr "可以向 ``venv`` 传入多个路径，此时将根据给定的选项，在所给的每个路径上创建相同的虚拟环境。"

#: ../../library/venv.rst:69
msgid "How venvs work"
msgstr "虚拟环境是如何实现的"

#: ../../library/venv.rst:71
msgid ""
"When a Python interpreter is running from a virtual environment, "
":data:`sys.prefix` and :data:`sys.exec_prefix` point to the directories of "
"the virtual environment, whereas :data:`sys.base_prefix` and "
":data:`sys.base_exec_prefix` point to those of the base Python used to "
"create the environment. It is sufficient to check ``sys.prefix != "
"sys.base_prefix`` to determine if the current interpreter is running from a "
"virtual environment."
msgstr ""
"当运行虚拟环境中的 Python 解释器时，:data:`sys.prefix` 和 :data:`sys.exec_prefix` "
"将指向该虚拟环境的相应目录，而 :data:`sys.base_prefix` 和 :data:`sys.base_exec_prefix` "
"将指向用于创建该虚拟环境的基础 Python 的相应目录。 只需检测 ``sys.prefix != sys.base_prefix`` "
"就足以确定当前解释器是否运行于虚拟环境中。"

#: ../../library/venv.rst:80
msgid ""
"A virtual environment may be \"activated\" using a script in its binary "
"directory (``bin`` on POSIX; ``Scripts`` on Windows). This will prepend that"
" directory to your :envvar:`PATH`, so that running :program:`python` will "
"invoke the environment's Python interpreter and you can run installed "
"scripts without having to use their full path. The invocation of the "
"activation script is platform-specific (:samp:`{<venv>}` must be replaced by"
" the path to the directory containing the virtual environment):"
msgstr ""
"一个虚拟环境可以通过位于其二进制文件目录目录 (在 POSIX 上为 ``bin``；在 Windows 上为 ``Scripts`` ) "
"中的脚本来“激活”。 这会将该目录添加到你的 :envvar:`PATH`，这样运行 :program:`python` 时就会唤起虚拟环境的 "
"Python 解释器，从而可以运行该目录中安装的脚本而不必使用其完整路径。 激活脚本的唤起方式是平台专属的 (:samp:`{<venv>}` "
"必须用包含虚拟环境目录的路径来替换):"

#: ../../library/venv.rst:90
msgid "Platform"
msgstr "平台"

#: ../../library/venv.rst:90
msgid "Shell"
msgstr "Shell"

#: ../../library/venv.rst:90
msgid "Command to activate virtual environment"
msgstr "用于激活虚拟环境的命令"

#: ../../library/venv.rst:92
msgid "POSIX"
msgstr "POSIX"

#: ../../library/venv.rst:92
msgid "bash/zsh"
msgstr "bash/zsh"

#: ../../library/venv.rst:92
msgid ":samp:`$ source {<venv>}/bin/activate`"
msgstr ":samp:`$ source {<venv>}/bin/activate`"

#: ../../library/venv.rst:94
msgid "fish"
msgstr "fish"

#: ../../library/venv.rst:94
msgid ":samp:`$ source {<venv>}/bin/activate.fish`"
msgstr ":samp:`$ source {<venv>}/bin/activate.fish`"

#: ../../library/venv.rst:96
msgid "csh/tcsh"
msgstr "csh/tcsh"

#: ../../library/venv.rst:96
msgid ":samp:`$ source {<venv>}/bin/activate.csh`"
msgstr ":samp:`$ source {<venv>}/bin/activate.csh`"

#: ../../library/venv.rst:98 ../../library/venv.rst:102
msgid "PowerShell"
msgstr "PowerShell"

#: ../../library/venv.rst:98
msgid ":samp:`$ {<venv>}/bin/Activate.ps1`"
msgstr ":samp:`$ {<venv>}/bin/Activate.ps1`"

#: ../../library/venv.rst:100
msgid "Windows"
msgstr "Windows"

#: ../../library/venv.rst:100
msgid "cmd.exe"
msgstr "cmd.exe"

#: ../../library/venv.rst:100
msgid ":samp:`C:\\\\> {<venv>}\\\\Scripts\\\\activate.bat`"
msgstr ":samp:`C:\\\\> {<venv>}\\\\Scripts\\\\activate.bat`"

#: ../../library/venv.rst:102
msgid ":samp:`PS C:\\\\> {<venv>}\\\\Scripts\\\\Activate.ps1`"
msgstr ":samp:`PS C:\\\\> {<venv>}\\\\Scripts\\\\Activate.ps1`"

#: ../../library/venv.rst:105
msgid ":program:`fish` and :program:`csh` activation scripts."
msgstr ":program:`fish` 和 :program:`csh` 激活脚本。"

#: ../../library/venv.rst:108
msgid ""
"PowerShell activation scripts installed under POSIX for PowerShell Core "
"support."
msgstr "在 POSIX 上安装 PowerShell 激活脚本，以支持 PowerShell Core。"

#: ../../library/venv.rst:112
msgid ""
"You don't specifically *need* to activate a virtual environment, as you can "
"just specify the full path to that environment's Python interpreter when "
"invoking Python. Furthermore, all scripts installed in the environment "
"should be runnable without activating it."
msgstr ""
"激活一个虚拟环境的操作 *不是必需的*，因为你完全可以在唤起 Python 时指明特定虚拟环境的 Python 解释器的完整路径。 "
"更进一步地说，安装在虚拟环境中的所有脚本也都可以在不激活该虚拟环境的情况下运行。"

#: ../../library/venv.rst:118
msgid ""
"In order to achieve this, scripts installed into virtual environments have a"
" \"shebang\" line which points to the environment's Python interpreter, i.e."
" :samp:`#!/{<path-to-venv>}/bin/python`. This means that the script will run"
" with that interpreter regardless of the value of :envvar:`PATH`. On "
"Windows, \"shebang\" line processing is supported if you have the "
":ref:`launcher` installed. Thus, double-clicking an installed script in a "
"Windows Explorer window should run it with the correct interpreter without "
"the environment needing to be activated or on the :envvar:`PATH`."
msgstr ""
"为了达成此目的，安装到虚拟环境中的脚本将包含一个以“井号叹号”打头的行用来指定虚拟环境的 Python 解释器，例如 :samp:`#!/{<path-"
"to-venv>}/bin/python`。 这意味着无论 :envvar:`PATH` 的值是什么该脚本都将使用指定的解释器运行。 在 Windows"
" 上对“井号叹号”行的处理将在你安装了 :ref:`launcher` 的情况下获得支持。 这样，在 Windows "
"资源管理器窗口中双击一个已安装的脚本应当会使用正确的解释器运行它而无需激活相应虚拟环境或设置 :envvar:`PATH`。"

#: ../../library/venv.rst:127
msgid ""
"When a virtual environment has been activated, the :envvar:`!VIRTUAL_ENV` "
"environment variable is set to the path of the environment. Since explicitly"
" activating a virtual environment is not required to use it, "
":envvar:`!VIRTUAL_ENV` cannot be relied upon to determine whether a virtual "
"environment is being used."
msgstr ""
"当一个虚拟环境已被激活时，:envvar:`!VIRTUAL_ENV` 环境变量会被设为该虚拟环境的路径。 由于使用虚拟环境并不需要显式地激活它，因此 "
":envvar:`!VIRTUAL_ENV` 并不能被用来可靠地确定是否正在使用虚拟环境。"

#: ../../library/venv.rst:133
msgid ""
"Because scripts installed in environments should not expect the environment "
"to be activated, their shebang lines contain the absolute paths to their "
"environment's interpreters. Because of this, environments are inherently "
"non-portable, in the general case. You should always have a simple means of "
"recreating an environment (for example, if you have a requirements file "
"``requirements.txt``, you can invoke ``pip install -r requirements.txt`` "
"using the environment's ``pip`` to install all of the packages needed by the"
" environment). If for any reason you need to move the environment to a new "
"location, you should recreate it at the desired location and delete the one "
"at the old location. If you move an environment because you moved a parent "
"directory of it, you should recreate the environment in its new location. "
"Otherwise, software installed into the environment may not work as expected."
msgstr ""
"因为安装在虚拟环境中的脚本不应要求必须激活该虚拟环境，所以它们的“井号叹号”行会包含虚拟环境的绝对路径。 "
"因为这一点，所以虚拟环境在通常情况下都是不可移植的。 你应当保证提供重建一个虚拟环境的简便方式（举例来说，如果你准备了需求文件 "
"``requirements.txt``，则可以使用虚拟环境的 ``pip`` 执行 ``pip install -r "
"requirements.txt`` 来安装虚拟环境所需的所有软件包）。 "
"如果出于某种原因你需要将虚拟环境移动到一个新的位置，则你应当在目标位置上重建它并删除旧位置上的虚拟环境。 "
"如果出于某种原因你移动了一个虚拟环境的上级目录，你也应当在新位置上重建该虚拟环境。 否则，安装到该虚拟环境的软件包可能无法正常工作。"

#: ../../library/venv.rst:147
msgid ""
"You can deactivate a virtual environment by typing ``deactivate`` in your "
"shell. The exact mechanism is platform-specific and is an internal "
"implementation detail (typically, a script or shell function will be used)."
msgstr ""
"你可以通过在 shell 中输入 ``deactivate`` 来取消激活一个虚拟环境。 "
"取消激活的实现机制依赖于具体平台并且属于内部实现细节（通常，将会使用一个脚本或者 shell 函数）。"

#: ../../library/venv.rst:155
msgid "API"
msgstr "API"

#: ../../library/venv.rst:159
msgid ""
"The high-level method described above makes use of a simple API which "
"provides mechanisms for third-party virtual environment creators to "
"customize environment creation according to their needs, the "
":class:`EnvBuilder` class."
msgstr ""
"上述的高级方法使用了一个简单的 API，该 API 提供了一种机制，第三方虚拟环境创建者可以根据其需求自定义环境创建过程，该 API 为 "
":class:`EnvBuilder` 类。"

#: ../../library/venv.rst:167
msgid ""
"The :class:`EnvBuilder` class accepts the following keyword arguments on "
"instantiation:"
msgstr ":class:`EnvBuilder` 类在实例化时接受以下关键字参数："

#: ../../library/venv.rst:170
msgid ""
"``system_site_packages`` -- a Boolean value indicating that the system "
"Python site-packages should be available to the environment (defaults to "
"``False``)."
msgstr ""
"``system_site_packages`` -- 一个布尔值，要求系统 Python 的 site-packages 对环境可用（默认为 "
"``False``）。"

#: ../../library/venv.rst:173
msgid ""
"``clear`` -- a Boolean value which, if true, will delete the contents of any"
" existing target directory, before creating the environment."
msgstr "``clear`` -- 一个布尔值，如果为 true，则在创建环境前将删除目标目录的现有内容。"

#: ../../library/venv.rst:176
msgid ""
"``symlinks`` -- a Boolean value indicating whether to attempt to symlink the"
" Python binary rather than copying."
msgstr "``symlinks`` -- 一个布尔值，指示是否尝试符号链接 Python 二进制文件，而不是进行复制。"

#: ../../library/venv.rst:179
msgid ""
"``upgrade`` -- a Boolean value which, if true, will upgrade an existing "
"environment with the running Python - for use when that Python has been "
"upgraded in-place (defaults to ``False``)."
msgstr ""
"``upgrade`` -- 一个布尔值，如果为 true，则将使用当前运行的 Python 去升级一个现有的环境，这主要在原位置的 Python "
"更新后使用（默认为 ``False``）。"

#: ../../library/venv.rst:183
msgid ""
"``with_pip`` -- a Boolean value which, if true, ensures pip is installed in "
"the virtual environment. This uses :mod:`ensurepip` with the ``--default-"
"pip`` option."
msgstr ""
"``with_pip`` -- 一个布尔值，如果为 true，则确保在虚拟环境中已安装 pip。这使用的是带有 ``--default-pip`` "
"选项的 :mod:`ensurepip`。"

#: ../../library/venv.rst:187
msgid ""
"``prompt`` -- a String to be used after virtual environment is activated "
"(defaults to ``None`` which means directory name of the environment would be"
" used). If the special string ``\".\"`` is provided, the basename of the "
"current directory is used as the prompt."
msgstr ""
"``prompt`` -- 激活虚拟环境后显示的提示符（默认为 ``None``，表示使用环境所在的目录名称）。如果使用了 ``\".\"`` "
"这一特殊字符串，则使用当前目录的基本名称作为提示符。"

#: ../../library/venv.rst:192
msgid "``upgrade_deps`` -- Update the base venv modules to the latest on PyPI"
msgstr "``upgrade_deps`` -- 将基本 venv 模块更新为 PyPI 上的最新版本。"

#: ../../library/venv.rst:194 ../../library/venv.rst:365
msgid "Added the ``with_pip`` parameter"
msgstr "添加 ``with_pip`` 参数"

#: ../../library/venv.rst:197 ../../library/venv.rst:368
msgid "Added the ``prompt`` parameter"
msgstr "添加 ``prompt`` 参数"

#: ../../library/venv.rst:200 ../../library/venv.rst:371
msgid "Added the ``upgrade_deps`` parameter"
msgstr "添加 ``upgrade_deps`` 参数"

#: ../../library/venv.rst:203
msgid ""
"Creators of third-party virtual environment tools will be free to use the "
"provided :class:`EnvBuilder` class as a base class."
msgstr "第三方虚拟环境工具的创建者可以自由地将此处提供的 :class:`EnvBuilder` 类作为基类。"

#: ../../library/venv.rst:206
msgid "The returned env-builder is an object which has a method, ``create``:"
msgstr "返回的 env-builder 是一个对象，包含一个 ``create`` 方法："

#: ../../library/venv.rst:210
msgid ""
"Create a virtual environment by specifying the target directory (absolute or"
" relative to the current directory) which is to contain the virtual "
"environment.  The ``create`` method will either create the environment in "
"the specified directory, or raise an appropriate exception."
msgstr ""
"指定要建立虚拟环境的目标目录（绝对路径或相对于当前路径）来创建虚拟环境。``create`` 方法将在指定目录中创建环境，或者引发对应的异常。"

#: ../../library/venv.rst:216
msgid ""
"The ``create`` method of the :class:`EnvBuilder` class illustrates the hooks"
" available for subclass customization::"
msgstr ":class:`EnvBuilder` 类的 ``create`` 方法定义了可用于定制子类的钩子::"

#: ../../library/venv.rst:231
msgid ""
"Each of the methods :meth:`ensure_directories`, "
":meth:`create_configuration`, :meth:`setup_python`, :meth:`setup_scripts` "
"and :meth:`post_setup` can be overridden."
msgstr ""
"每个方法 :meth:`ensure_directories`, :meth:`create_configuration`, "
":meth:`setup_python`, :meth:`setup_scripts` 和 :meth:`post_setup` 都可以被重写。"

#: ../../library/venv.rst:237
msgid ""
"Creates the environment directory and all necessary subdirectories that "
"don't already exist, and returns a context object.  This context object is "
"just a holder for attributes (such as paths) for use by the other methods.  "
"If the :class:`EnvBuilder` is created with the arg ``clear=True``, contents "
"of the environment directory will be cleared and then all necessary "
"subdirectories will be recreated."
msgstr ""
"创建虚拟环境目录及尚不存在的所有必要的子目录，并返回一个上下文对象。 这个上下文对象被用于存放供其他方法使用的属性（如路径等）。 如果 "
":class:`EnvBuilder` 是附带参数 ``clear=True`` 创建的，则虚拟环境的内容将被清除并将重新创建所有必要的子目录。"

#: ../../library/venv.rst:244
msgid ""
"The returned context object is a :class:`types.SimpleNamespace` with the "
"following attributes:"
msgstr "返回的上下文对象是一个具有以下属性的 :class:`types.SimpleNamespace`:"

#: ../../library/venv.rst:247
msgid ""
"``env_dir`` - The location of the virtual environment. Used for "
"``__VENV_DIR__`` in activation scripts (see :meth:`install_scripts`)."
msgstr ""
"``env_dir`` - 虚拟环境的位置。 将被用作激活脚本中的 ``__VENV_DIR__`` (参见 "
":meth:`install_scripts`)。"

#: ../../library/venv.rst:250
msgid ""
"``env_name`` - The name of the virtual environment. Used for "
"``__VENV_NAME__`` in activation scripts (see :meth:`install_scripts`)."
msgstr ""
"``env_name`` - 虚拟环境的名称。 将被用作激活脚本中的 ``__VENV_NAME__`` (参见 "
":meth:`install_scripts`)。"

#: ../../library/venv.rst:253
msgid ""
"``prompt`` - The prompt to be used by the activation scripts. Used for "
"``__VENV_PROMPT__`` in activation scripts (see :meth:`install_scripts`)."
msgstr ""
"``prompt`` - 激活脚本要使用的提示符。 将被用作激活脚本中的 ``__VENV_PROMPT__`` (参见 "
":meth:`install_scripts`)。"

#: ../../library/venv.rst:256
msgid ""
"``executable`` - The underlying Python executable used by the virtual "
"environment. This takes into account the case where a virtual environment is"
" created from another virtual environment."
msgstr "``executable`` - 虚拟环境所使用的下层 Python 可执行文件。 这会将基于另一个虚拟环境创建虚拟环境的情况也纳入考虑。"

#: ../../library/venv.rst:260
msgid "``inc_path`` - The include path for the virtual environment."
msgstr "``inc_path`` - 虚拟环境的 include 路径。"

#: ../../library/venv.rst:262
msgid "``lib_path`` - The purelib path for the virtual environment."
msgstr "``lib_path`` - 虚拟环境的 purelib 路径。"

#: ../../library/venv.rst:264
msgid "``bin_path`` - The script path for the virtual environment."
msgstr "``bin_path`` - 虚拟环境的 script 路径。"

#: ../../library/venv.rst:266
msgid ""
"``bin_name`` - The name of the script path relative to the virtual "
"environment location. Used for ``__VENV_BIN_NAME__`` in activation scripts "
"(see :meth:`install_scripts`)."
msgstr ""
"``bin_name`` - 相对于虚拟环境位置的 script 路径名称。 用于激活脚本中的 ``__VENV_BIN_NAME__`` (参见 "
":meth:`install_scripts`)。"

#: ../../library/venv.rst:270
msgid ""
"``env_exe`` - The name of the Python interpreter in the virtual environment."
" Used for ``__VENV_PYTHON__`` in activation scripts (see "
":meth:`install_scripts`)."
msgstr ""
"``env_exe`` - 虚拟环境中 Python 解释器的名称。 用于激活脚本中的 ``__VENV_PYTHON__`` (参见 "
":meth:`install_scripts`)。"

#: ../../library/venv.rst:274
msgid ""
"``env_exec_cmd`` - The name of the Python interpreter, taking into account "
"filesystem redirections. This can be used to run Python in the virtual "
"environment."
msgstr ""
"``env_exec_cmd`` - Python 解释器的名称，会将文件系统重定向也纳入考虑。 这可被用于在虚拟环境中运行 Python。"

#: ../../library/venv.rst:279
msgid ""
"The *venv* :ref:`sysconfig installation scheme <installation_paths>` is used"
" to construct the paths of the created directories."
msgstr ""
"*venv* :ref:`sysconfig installation scheme <installation_paths>` "
"被用于构造所创建目录的路径。"

#: ../../library/venv.rst:286
msgid "Creates the ``pyvenv.cfg`` configuration file in the environment."
msgstr "在环境中创建 ``pyvenv.cfg`` 配置文件。"

#: ../../library/venv.rst:290
msgid ""
"Creates a copy or symlink to the Python executable in the environment. On "
"POSIX systems, if a specific executable ``python3.x`` was used, symlinks to "
"``python`` and ``python3`` will be created pointing to that executable, "
"unless files with those names already exist."
msgstr ""
"在环境中创建 Python 可执行文件的拷贝或符号链接。在 POSIX 系统上，如果给定了可执行文件 "
"``python3.x``，将创建指向该可执行文件的 ``python`` 和 ``python3`` 符号链接，除非相同名称的文件已经存在。"

#: ../../library/venv.rst:297
msgid ""
"Installs activation scripts appropriate to the platform into the virtual "
"environment."
msgstr "将适用于平台的激活脚本安装到虚拟环境中。"

#: ../../library/venv.rst:302
msgid ""
"Upgrades the core venv dependency packages (currently ``pip`` and "
"``setuptools``) in the environment. This is done by shelling out to the "
"``pip`` executable in the environment."
msgstr ""

#: ../../library/venv.rst:310
msgid ""
"A placeholder method which can be overridden in third party implementations "
"to pre-install packages in the virtual environment or perform other post-"
"creation steps."
msgstr "占位方法，可以在第三方实现中重写，用于在虚拟环境中预安装软件包，或是其他创建后要执行的步骤。"

#: ../../library/venv.rst:314
msgid ""
"Windows now uses redirector scripts for ``python[w].exe`` instead of copying"
" the actual binaries. In 3.7.2 only :meth:`setup_python` does nothing unless"
" running from a build in the source tree."
msgstr ""
"Windows 现在为 ``python[w].exe`` 使用重定向脚本，而不是复制实际的二进制文件。仅在 3.7.2 "
"中，除非运行的是源码树中的构建，否则 :meth:`setup_python` 不会执行任何操作。"

#: ../../library/venv.rst:319
msgid ""
"Windows copies the redirector scripts as part of :meth:`setup_python` "
"instead of :meth:`setup_scripts`. This was not the case in 3.7.2. When using"
" symlinks, the original executables will be linked."
msgstr ""
"Windows 将重定向脚本复制为 :meth:`setup_python` 的一部分而非 :meth:`setup_scripts`。在 3.7.2 "
"中不是这种情况。使用符号链接时，将链接至原始可执行文件。"

#: ../../library/venv.rst:324
msgid ""
"In addition, :class:`EnvBuilder` provides this utility method that can be "
"called from :meth:`setup_scripts` or :meth:`post_setup` in subclasses to "
"assist in installing custom scripts into the virtual environment."
msgstr ""
"此外，:class:`EnvBuilder` 提供了如下实用方法，可以从子类的 :meth:`setup_scripts` 或 "
":meth:`post_setup` 调用，用来将自定义脚本安装到虚拟环境中。"

#: ../../library/venv.rst:330
msgid ""
"*path* is the path to a directory that should contain subdirectories "
"\"common\", \"posix\", \"nt\", each containing scripts destined for the bin "
"directory in the environment.  The contents of \"common\" and the directory "
"corresponding to :data:`os.name` are copied after some text replacement of "
"placeholders:"
msgstr ""
"*path* 是一个目录的路径，该目录应包含子目录 \"common\", \"posix\", \"nt\"，每个子目录存有发往对应环境中 bin "
"目录的脚本。在下列占位符替换完毕后，将复制 \"common\" 的内容和与 :data:`os.name` 对应的子目录："

#: ../../library/venv.rst:336
msgid ""
"``__VENV_DIR__`` is replaced with the absolute path of the environment "
"directory."
msgstr "``__VENV_DIR__`` 会被替换为环境目录的绝对路径。"

#: ../../library/venv.rst:339
msgid ""
"``__VENV_NAME__`` is replaced with the environment name (final path segment "
"of environment directory)."
msgstr "``__VENV_NAME__`` 会被替换为环境名称（环境目录的最后一个字段）。"

#: ../../library/venv.rst:342
msgid ""
"``__VENV_PROMPT__`` is replaced with the prompt (the environment name "
"surrounded by parentheses and with a following space)"
msgstr "``__VENV_PROMPT__`` 会被替换为提示符（用括号括起来的环境名称紧跟着一个空格）。"

#: ../../library/venv.rst:345
msgid ""
"``__VENV_BIN_NAME__`` is replaced with the name of the bin directory (either"
" ``bin`` or ``Scripts``)."
msgstr "``__VENV_BIN_NAME__`` 会被替换为 bin 目录的名称（ ``bin`` 或 ``Scripts`` ）。"

#: ../../library/venv.rst:348
msgid ""
"``__VENV_PYTHON__`` is replaced with the absolute path of the environment's "
"executable."
msgstr "``__VENV_PYTHON__`` 会被替换为环境可执行文件的绝对路径。"

#: ../../library/venv.rst:351
msgid ""
"The directories are allowed to exist (for when an existing environment is "
"being upgraded)."
msgstr "允许目录已存在（用于升级现有环境时）。"

#: ../../library/venv.rst:354
msgid "There is also a module-level convenience function:"
msgstr "有一个方便实用的模块级别的函数:"

#: ../../library/venv.rst:360
msgid ""
"Create an :class:`EnvBuilder` with the given keyword arguments, and call its"
" :meth:`~EnvBuilder.create` method with the *env_dir* argument."
msgstr ""
"通过关键词参数来创建一个 :class:`EnvBuilder`，并且使用 *env_dir* 参数来调用它的 "
":meth:`~EnvBuilder.create` 方法。"

#: ../../library/venv.rst:375
msgid "An example of extending ``EnvBuilder``"
msgstr "一个扩展 ``EnvBuilder`` 的例子"

#: ../../library/venv.rst:377
msgid ""
"The following script shows how to extend :class:`EnvBuilder` by implementing"
" a subclass which installs setuptools and pip into a created virtual "
"environment::"
msgstr ""
"下面的脚本展示了如何通过实现一个子类来扩展 :class:`EnvBuilder`。这个子类会安装 setuptools 和 pip "
"到被创建的虚拟环境中。"

#: ../../library/venv.rst:596
msgid ""
"This script is also available for download `online "
"<https://gist.github.com/vsajip/4673395>`_."
msgstr "这个脚本同样可以 `在线下载 <https://gist.github.com/vsajip/4673395>`_。"

#: ../../library/venv.rst:14
msgid "Environments"
msgstr "环境"

#: ../../library/venv.rst:14
msgid "virtual"
msgstr "虚拟"
