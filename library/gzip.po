# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# sgqy <sgqyzh@gmail.com>, 2021
# 汪心禾 <wangxinhe06@gmail.com>, 2021
# 1lin24 <1lin24@sina.com>, 2021
# ProgramRipper, 2023
# Freesand Leo <yuqinju@163.com>, 2025
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-05-08 02:53-0300\n"
"PO-Revision-Date: 2021-06-28 01:07+0000\n"
"Last-Translator: Freesand Leo <yuqinju@163.com>, 2025\n"
"Language-Team: Chinese (China) (https://app.transifex.com/python-doc/teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/gzip.rst:2
msgid ":mod:`!gzip` --- Support for :program:`gzip` files"
msgstr ":mod:`!gzip` --- 对 :program:`gzip` 文件的支持"

#: ../../library/gzip.rst:7
msgid "**Source code:** :source:`Lib/gzip.py`"
msgstr "**源代码：** :source:`Lib/gzip.py`"

#: ../../library/gzip.rst:11
msgid ""
"This module provides a simple interface to compress and decompress files "
"just like the GNU programs :program:`gzip` and :program:`gunzip` would."
msgstr ""
"此模块提供的简单接口帮助用户压缩和解压缩文件，功能类似于 GNU 应用程序 :program:`gzip` 和 :program:`gunzip`。"

#: ../../library/gzip.rst:14
msgid "The data compression is provided by the :mod:`zlib` module."
msgstr "数据压缩由 :mod:`zlib` 模块提供。"

#: ../../library/gzip.rst:16
msgid ""
"The :mod:`gzip` module provides the :class:`GzipFile` class, as well as the "
":func:`.open`, :func:`compress` and :func:`decompress` convenience "
"functions. The :class:`GzipFile` class reads and writes :program:`gzip`\\ "
"-format files, automatically compressing or decompressing the data so that "
"it looks like an ordinary :term:`file object`."
msgstr ""
":mod:`gzip` 模块提供 :class:`GzipFile` 类和 "
":func:`.open`、:func:`compress`、:func:`decompress` 几个便利的函数。:class:`GzipFile` "
"类可以读写 :program:`gzip` 格式的文件，还能自动压缩和解压缩数据，这让操作压缩文件如同操作普通的 :term:`file object`"
" 一样方便。"

#: ../../library/gzip.rst:22
msgid ""
"Note that additional file formats which can be decompressed by the "
":program:`gzip` and :program:`gunzip` programs, such  as those produced by "
":program:`compress` and :program:`pack`, are not supported by this module."
msgstr ""
"注意，此模块不支持部分可以被 :program:`gzip` 和 :program:`gunzip` 解压的格式，如利用 "
":program:`compress` 或 :program:`pack` 压缩所得的文件。"

#: ../../library/gzip.rst:26
msgid "The module defines the following items:"
msgstr "这个模块定义了以下内容："

#: ../../library/gzip.rst:31
msgid ""
"Open a gzip-compressed file in binary or text mode, returning a :term:`file "
"object`."
msgstr "以二进制方式或者文本方式打开一个 gzip 格式的压缩文件，返回一个 :term:`file object`。"

#: ../../library/gzip.rst:34
msgid ""
"The *filename* argument can be an actual filename (a :class:`str` or "
":class:`bytes` object), or an existing file object to read from or write to."
msgstr ""
"*filename* 参数可以是一个实际的文件名（一个 :class:`str` 对象或者 :class:`bytes` "
"对象），或者是一个用来读写的已存在的文件对象。"

#: ../../library/gzip.rst:37
msgid ""
"The *mode* argument can be any of ``'r'``, ``'rb'``, ``'a'``, ``'ab'``, "
"``'w'``, ``'wb'``, ``'x'`` or ``'xb'`` for binary mode, or ``'rt'``, "
"``'at'``, ``'wt'``, or ``'xt'`` for text mode. The default is ``'rb'``."
msgstr ""
"*mode* 参数可以是二进制模式： ``'r'``, ``'rb'``, ``'a'``, ``'ab'``, ``'w'``, ``'wb'``, "
"``'x'`` or ``'xb'`` , 或者是文本模式 ``'rt'``, ``'at'``, ``'wt'``, or ``'xt'``。默认值是"
" ``'rb'``。"

#: ../../library/gzip.rst:41
msgid ""
"The *compresslevel* argument is an integer from 0 to 9, as for the "
":class:`GzipFile` constructor."
msgstr " *compresslevel* 参数是一个用于 :class:`GzipFile` 构造器的从 0 到 9 的整数。"

#: ../../library/gzip.rst:44
msgid ""
"For binary mode, this function is equivalent to the :class:`GzipFile` "
"constructor: ``GzipFile(filename, mode, compresslevel)``. In this case, the "
"*encoding*, *errors* and *newline* arguments must not be provided."
msgstr ""
"对于二进制模式，这个函数等价于 :class:`GzipFile` 构造器：``GzipFile(filename, mode, "
"compresslevel)``。在这个例子中，*encoding*, *errors* 和 *newline* 三个参数一定不要设置。"

#: ../../library/gzip.rst:48
msgid ""
"For text mode, a :class:`GzipFile` object is created, and wrapped in an "
":class:`io.TextIOWrapper` instance with the specified encoding, error "
"handling behavior, and line ending(s)."
msgstr ""
"对于文本模式，将会创建一个 :class:`GzipFile` 对象，并将它封装到一个 :class:`io.TextIOWrapper` 实例中， "
"这个实例默认了指定编码，错误抓获行为和行。"

#: ../../library/gzip.rst:52
msgid ""
"Added support for *filename* being a file object, support for text mode, and"
" the *encoding*, *errors* and *newline* arguments."
msgstr "支持 *filename* 为一个文件对象，支持文本模式和 *encoding*, *errors* 和 *newline* 参数。"

#: ../../library/gzip.rst:56
msgid "Added support for the ``'x'``, ``'xb'`` and ``'xt'`` modes."
msgstr "支持 ``'x'``, ``'xb'`` 和 ``'xt'`` 三种模式。"

#: ../../library/gzip.rst:59 ../../library/gzip.rst:173
msgid "Accepts a :term:`path-like object`."
msgstr "接受一个 :term:`path-like object`。"

#: ../../library/gzip.rst:64
msgid ""
"An exception raised for invalid gzip files.  It inherits from "
":exc:`OSError`. :exc:`EOFError` and :exc:`zlib.error` can also be raised for"
" invalid gzip files."
msgstr ""
"针对无效 gzip 文件引发的异常。 它继承自 :exc:`OSError`。 针对无效 gzip 文件也可能引发 :exc:`EOFError` 和 "
":exc:`zlib.error`。"

#: ../../library/gzip.rst:72
msgid ""
"Constructor for the :class:`GzipFile` class, which simulates most of the "
"methods of a :term:`file object`, with the exception of the "
":meth:`~io.IOBase.truncate` method.  At least one of *fileobj* and "
"*filename* must be given a non-trivial value."
msgstr ""
":class:`GzipFile` 类的构造器，它模拟了 :term:`file object` 的大部分方法，但 "
":meth:`~io.IOBase.truncate` 方法除外。 *fileobj* 和 *filename* 中至少有一个必须为非空值。"

#: ../../library/gzip.rst:77
msgid ""
"The new class instance is based on *fileobj*, which can be a regular file, "
"an :class:`io.BytesIO` object, or any other object which simulates a file.  "
"It defaults to ``None``, in which case *filename* is opened to provide a "
"file object."
msgstr ""
"新的实例基于  *fileobj*，它可以是一个普通文件，一个 :class:`io.BytesIO` 对象，或者任何一个与文件相似的对象。当 "
"*filename* 是一个文件对象时，它的默认值是 ``None``。"

#: ../../library/gzip.rst:82
msgid ""
"When *fileobj* is not ``None``, the *filename* argument is only used to be "
"included in the :program:`gzip` file header, which may include the original "
"filename of the uncompressed file.  It defaults to the filename of "
"*fileobj*, if discernible; otherwise, it defaults to the empty string, and "
"in this case the original filename is not included in the header."
msgstr ""
"当  *fileobj* 为 ``None`` 时， *filename* 参数只用于  :program:`gzip` "
"文件头中，这个文件有可能包含未压缩文件的源文件名。如果文件可以被识别，默认 *fileobj* "
"的文件名；否则默认为空字符串，在这种情况下文件头将不包含源文件名。"

#: ../../library/gzip.rst:88
msgid ""
"The *mode* argument can be any of ``'r'``, ``'rb'``, ``'a'``, ``'ab'``, "
"``'w'``, ``'wb'``, ``'x'``, or ``'xb'``, depending on whether the file will "
"be read or written.  The default is the mode of *fileobj* if discernible; "
"otherwise, the default is ``'rb'``.  In future Python releases the mode of "
"*fileobj* will not be used.  It is better to always specify *mode* for "
"writing."
msgstr ""
"*mode* 参数可以是 ``'r'``, ``'rb'``, ``'a'``, ``'ab'``, ``'w'``, ``'wb'``, "
"``'x'`` 或 ``'xb'`` 中的一个，具体取决于文件将被读取还是被写入。 如果可识别则默认为 *fileobj* 的模式；否则默认为 "
"``'rb'``。 在未来的 Python 发布版中将不再使用 *fileobj* 的模式。 最好总是指定 *mode* 为写入模式。"

#: ../../library/gzip.rst:94
msgid ""
"Note that the file is always opened in binary mode. To open a compressed "
"file in text mode, use :func:`.open` (or wrap your :class:`GzipFile` with an"
" :class:`io.TextIOWrapper`)."
msgstr ""
"需要注意的是，文件默认使用二进制模式打开。 如果要以文本模式打开一个压缩文件，请使用 :func:`.open` 方法 (或者使用 "
":class:`io.TextIOWrapper` 包装 :class:`GzipFile`)。"

#: ../../library/gzip.rst:98
msgid ""
"The *compresslevel* argument is an integer from ``0`` to ``9`` controlling "
"the level of compression; ``1`` is fastest and produces the least "
"compression, and ``9`` is slowest and produces the most compression. ``0`` "
"is no compression. The default is ``9``."
msgstr ""
"*compresslevel* 参数是一个从 ``0`` 到 ``9`` 的整数，用于控制压缩等级；``1`` 最快但压缩比例最小，``9`` "
"最慢但压缩比例最大。 ``0`` 不压缩。默认为 ``9``。"

#: ../../library/gzip.rst:103
msgid ""
"The optional *mtime* argument is the timestamp requested by gzip. The time "
"is in Unix format, i.e., seconds since 00:00:00 UTC, January 1, 1970. If "
"*mtime* is omitted or ``None``, the current time is used. Use *mtime* = 0 to"
" generate a compressed stream that does not depend on creation time."
msgstr ""
"可选的 *mtime* 参数是 gzip 所请求的时间戳。 该时间为 Unix 格式，即距离 1970-01-01 00:00:00 UTC 的秒数。 "
"如果 *mtime* 被省略或为 ``None``，则会使用当前时间。 使用 *mtime* = 0 可生成不依赖于创建时间的压缩流。"

#: ../../library/gzip.rst:108
msgid ""
"See below for the :attr:`mtime` attribute that is set when decompressing."
msgstr "有关在解压缩时设置的 :attr:`mtime` 属性见下文。"

#: ../../library/gzip.rst:110
msgid ""
"Calling a :class:`GzipFile` object's :meth:`!close` method does not close "
"*fileobj*, since you might wish to append more material after the compressed"
" data.  This also allows you to pass an :class:`io.BytesIO` object opened "
"for writing as *fileobj*, and retrieve the resulting memory buffer using the"
" :class:`io.BytesIO` object's :meth:`~io.BytesIO.getvalue` method."
msgstr ""
"调用 :class:`GzipFile` 对象的 :meth:`!close` 方法不会关闭 "
"*fileobj*，因为你可能希望增加其它内容到已经缩的数据中。 你还可以传入一个 :class:`io.BytesIO` 对象作为 *fileobj*"
" 打开，并使用 :class:`io.BytesIO` 对象的 :meth:`~io.BytesIO.getvalue` "
"方法提取所得到的内存缓冲区数据。"

#: ../../library/gzip.rst:116
msgid ""
":class:`GzipFile` supports the :class:`io.BufferedIOBase` interface, "
"including iteration and the :keyword:`with` statement.  Only the "
":meth:`~io.IOBase.truncate` method isn't implemented."
msgstr ""
":class:`GzipFile` 支持 :class:`io.BufferedIOBase` 接口，包括迭代和 :keyword:`with` 语句。"
" 只有 :meth:`~io.IOBase.truncate` 方法未被实现。"

#: ../../library/gzip.rst:120
msgid ":class:`GzipFile` also provides the following method and attribute:"
msgstr ":class:`GzipFile` 还提供了以下的方法和属性:"

#: ../../library/gzip.rst:124
msgid ""
"Read *n* uncompressed bytes without advancing the file position. The number "
"of bytes returned may be more or less than requested."
msgstr "读取 *n* 个未压缩字节而不前移文件指针位置。 所返回的字节数有可能多于或少于所请求的。"

#: ../../library/gzip.rst:127
msgid ""
"While calling :meth:`peek` does not change the file position of the "
":class:`GzipFile`, it may change the position of the underlying file object "
"(e.g. if the :class:`GzipFile` was constructed with the *fileobj* "
"parameter)."
msgstr ""
"调用 :meth:`peek` 并没有改变 :class:`GzipFile` 的文件指针，它可能改变潜在文件对象(例如： "
":class:`GzipFile` 使用 *fileobj* 参数进行初始化)。"

#: ../../library/gzip.rst:136
msgid "``'rb'`` for reading and ``'wb'`` for writing."
msgstr "``'rb'`` 表示可读而 ``'wb'`` 表示可写。"

#: ../../library/gzip.rst:138
msgid "In previous versions it was an integer ``1`` or ``2``."
msgstr "在之前版本中该值为整数 ``1`` 或 ``2``。"

#: ../../library/gzip.rst:143
msgid ""
"When decompressing, this attribute is set to the last timestamp in the most "
"recently read header.  It is an integer, holding the number of seconds since"
" the Unix epoch (00:00:00 UTC, January 1, 1970). The initial value before "
"reading any headers is ``None``."
msgstr ""
"当解压缩时，该属性将被设为最近读取标头的末尾时间戳。 它是一个整数，保存从 Unix 纪元 (1970 -01-01 00:00:00 UTC) "
"开始的秒数。 在读取任何标头之前的初始值为 ``None``。"

#: ../../library/gzip.rst:150
msgid ""
"The path to the gzip file on disk, as a :class:`str` or :class:`bytes`. "
"Equivalent to the output of :func:`os.fspath` on the original input path, "
"with no other normalization, resolution or expansion."
msgstr ""
"指向磁盘上 gzip 文件的路径，为 :class:`str` 或 :class:`bytes` 对象。 等价于原始输入路径上 "
":func:`os.fspath` 的输出，不带其他标准化、解析或扩展。"

#: ../../library/gzip.rst:154
msgid ""
"Support for the :keyword:`with` statement was added, along with the *mtime* "
"constructor argument and :attr:`mtime` attribute."
msgstr "支持 :keyword:`with` 语句，构造器参数 *mtime* 和  :attr:`mtime` 属性。"

#: ../../library/gzip.rst:158
msgid "Support for zero-padded and unseekable files was added."
msgstr "添加了对零填充和不可搜索文件的支持。"

#: ../../library/gzip.rst:161
msgid "The :meth:`io.BufferedIOBase.read1` method is now implemented."
msgstr "实现 :meth:`io.BufferedIOBase.read1`  方法。"

#: ../../library/gzip.rst:164
msgid "Added support for the ``'x'`` and ``'xb'`` modes."
msgstr "支持 ``'x'`` and ``'xb'`` 两种模式。"

#: ../../library/gzip.rst:167
msgid ""
"Added support for writing arbitrary :term:`bytes-like objects <bytes-like "
"object>`. The :meth:`~io.BufferedIOBase.read` method now accepts an argument"
" of ``None``."
msgstr ""
"支持写入任意 :term:`bytes-like objects  <bytes-like "
"object>`。:meth:`~io.BufferedIOBase.read` 方法可以接受 ``None`` 为参数。"

#: ../../library/gzip.rst:176
msgid ""
"Opening :class:`GzipFile` for writing without specifying the *mode* argument"
" is deprecated."
msgstr "打开 :class:`GzipFile` 用于写入而不指定 *mode* 参数的做法已被弃用。"

#: ../../library/gzip.rst:180
msgid ""
"Remove the ``filename`` attribute, use the :attr:`~GzipFile.name` attribute "
"instead."
msgstr "移除 ``filename`` 属性，改用 :attr:`~GzipFile.name` 属性。"

#: ../../library/gzip.rst:187
msgid ""
"Compress the *data*, returning a :class:`bytes` object containing the "
"compressed data.  *compresslevel* and *mtime* have the same meaning as in "
"the :class:`GzipFile` constructor above, but *mtime* defaults to 0 for "
"reproducible output."
msgstr ""

#: ../../library/gzip.rst:193
msgid "Added the *mtime* parameter for reproducible output."
msgstr "添加了 *mtime* 形参用于可重复的输出。"

#: ../../library/gzip.rst:195
msgid ""
"Speed is improved by compressing all data at once instead of in a streamed "
"fashion. Calls with *mtime* set to ``0`` are delegated to "
":func:`zlib.compress` for better speed. In this situation the output may "
"contain a gzip header \"OS\" byte value other than 255 \"unknown\" as "
"supplied by the underlying zlib implementation."
msgstr ""
"速度的提升是通过一次性压缩所有数据代替流的方式来达成的。 将 *mtime* 设为 ``0`` 的调用被委托给 "
":func:`zlib.compress` 以加快速度。 在此情况下输出可能包含一个 gzip 标头 \"OS\" 字节值而不是下层 zlib "
"实现所提供的 255 \"unknown\"。"

#: ../../library/gzip.rst:202
msgid ""
"The gzip header OS byte is guaranteed to be set to 255 when this function is"
" used as was the case in 3.10 and earlier."
msgstr "当使用此函数时 gzip 标头 OS 字节会保证如在 3.10 和更早版本中一样被设为 255。"

#: ../../library/gzip.rst:205
msgid ""
"The *mtime* parameter now defaults to 0 for reproducible output. For the "
"previous behaviour of using the current time, pass ``None`` to *mtime*."
msgstr ""

#: ../../library/gzip.rst:212
msgid ""
"Decompress the *data*, returning a :class:`bytes` object containing the "
"uncompressed data. This function is capable of decompressing multi-member "
"gzip data (multiple gzip blocks concatenated together). When the data is "
"certain to contain only one member the :func:`zlib.decompress` function with"
" *wbits* set to 31 is faster."
msgstr ""
"解压缩 *data*，返回一个包含已解压数据的 :class:`bytes` 对象。 此函数可以解压缩多成员的 gzip 数据（即多个 gzip "
"块拼接在一起）。 当数据确定只包含一个成员时则 *wbits* 设为 31 的 :func:`zlib.decompress` 函数更快一些。"

#: ../../library/gzip.rst:219
msgid ""
"Speed is improved by decompressing members at once in memory instead of in a"
" streamed fashion."
msgstr "通过一次性解压缩全部数据而不是通过流方式提高了速度。"

#: ../../library/gzip.rst:226
msgid "Examples of usage"
msgstr "用法示例"

#: ../../library/gzip.rst:228
msgid "Example of how to read a compressed file::"
msgstr "读取压缩文件示例："

#: ../../library/gzip.rst:230
msgid ""
"import gzip\n"
"with gzip.open('/home/joe/file.txt.gz', 'rb') as f:\n"
"    file_content = f.read()"
msgstr ""
"import gzip\n"
"with gzip.open('/home/joe/file.txt.gz', 'rb') as f:\n"
"    file_content = f.read()"

#: ../../library/gzip.rst:234
msgid "Example of how to create a compressed GZIP file::"
msgstr "创建GZIP 文件示例："

#: ../../library/gzip.rst:236
msgid ""
"import gzip\n"
"content = b\"Lots of content here\"\n"
"with gzip.open('/home/joe/file.txt.gz', 'wb') as f:\n"
"    f.write(content)"
msgstr ""
"import gzip\n"
"content = b\"Lots of content here\"\n"
"with gzip.open('/home/joe/file.txt.gz', 'wb') as f:\n"
"    f.write(content)"

#: ../../library/gzip.rst:241
msgid "Example of how to GZIP compress an existing file::"
msgstr "使用 GZIP 压缩已有的文件示例："

#: ../../library/gzip.rst:243
msgid ""
"import gzip\n"
"import shutil\n"
"with open('/home/joe/file.txt', 'rb') as f_in:\n"
"    with gzip.open('/home/joe/file.txt.gz', 'wb') as f_out:\n"
"        shutil.copyfileobj(f_in, f_out)"
msgstr ""
"import gzip\n"
"import shutil\n"
"with open('/home/joe/file.txt', 'rb') as f_in:\n"
"    with gzip.open('/home/joe/file.txt.gz', 'wb') as f_out:\n"
"        shutil.copyfileobj(f_in, f_out)"

#: ../../library/gzip.rst:249
msgid "Example of how to GZIP compress a binary string::"
msgstr "使用 GZIP 压缩二进制字符串示例："

#: ../../library/gzip.rst:251
msgid ""
"import gzip\n"
"s_in = b\"Lots of content here\"\n"
"s_out = gzip.compress(s_in)"
msgstr ""
"import gzip\n"
"s_in = b\"Lots of content here\"\n"
"s_out = gzip.compress(s_in)"

#: ../../library/gzip.rst:257
msgid "Module :mod:`zlib`"
msgstr "模块 :mod:`zlib`"

#: ../../library/gzip.rst:258
msgid ""
"The basic data compression module needed to support the :program:`gzip` file"
" format."
msgstr "支持 :program:`gzip` 格式所需要的基本压缩模块。"

#: ../../library/gzip.rst:261
msgid ""
"In case gzip (de)compression is a bottleneck, the `python-isal`_ package "
"speeds up (de)compression with a mostly compatible API."
msgstr "对于 gzip (解)压缩成为瓶颈的情况，`python-isal`_ 软件包会使用最兼容的 API 来加快 (解)压缩的速度。"

#: ../../library/gzip.rst:271
msgid "Command Line Interface"
msgstr "命令行界面"

#: ../../library/gzip.rst:273
msgid ""
"The :mod:`gzip` module provides a simple command line interface to compress "
"or decompress files."
msgstr ":mod:`gzip` 模块提供了简单的命令行界面用于压缩和解压缩文件。"

#: ../../library/gzip.rst:276
msgid "Once executed the :mod:`gzip` module keeps the input file(s)."
msgstr "在执行后 :mod:`gzip` 模块会保留输入文件。"

#: ../../library/gzip.rst:280
msgid ""
"Add a new command line interface with a usage. By default, when you will "
"execute the CLI, the default compression level is 6."
msgstr "添加一个带有用法说明的新命令行界面命令。 默认情况下，当你要执行 CLI 时，默认压缩等级为 6。"

#: ../../library/gzip.rst:284
msgid "Command line options"
msgstr "命令行选项"

#: ../../library/gzip.rst:288
msgid "If *file* is not specified, read from :data:`sys.stdin`."
msgstr "如果未指定 *file*，则从 :data:`sys.stdin` 读取。"

#: ../../library/gzip.rst:292
msgid "Indicates the fastest compression method (less compression)."
msgstr "指明最快速的压缩方法（较低压缩率）。"

#: ../../library/gzip.rst:296
msgid "Indicates the slowest compression method (best compression)."
msgstr "指明最慢速的压缩方法（最高压缩率）。"

#: ../../library/gzip.rst:300
msgid "Decompress the given file."
msgstr "解压缩给定的文件。"

#: ../../library/gzip.rst:304
msgid "Show the help message."
msgstr "显示帮助消息。"
