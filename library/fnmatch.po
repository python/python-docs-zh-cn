# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Nyuan Zhang, 2025
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-07-25 16:48+0000\n"
"PO-Revision-Date: 2025-07-18 20:05+0000\n"
"Last-Translator: Nyuan Zhang, 2025\n"
"Language-Team: Chinese (China) (https://app.transifex.com/python-doc/teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/fnmatch.rst:2
msgid ":mod:`fnmatch` --- Unix filename pattern matching"
msgstr ":mod:`fnmatch` --- Unix 文件名模式匹配"

#: ../../library/fnmatch.rst:7
msgid "**Source code:** :source:`Lib/fnmatch.py`"
msgstr "**源代码:** :source:`Lib/fnmatch.py`"

#: ../../library/fnmatch.rst:15
msgid ""
"This module provides support for Unix shell-style wildcards, which are *not*"
" the same as regular expressions (which are documented in the :mod:`re` "
"module).  The special characters used in shell-style wildcards are:"
msgstr ""
"此模块提供了 Unix shell 风格的通配符，它们 *并不* 等同于正则表达式（关于后者的文档参见 :mod:`re` 模块）。 shell "
"风格通配符所使用的特殊字符如下："

#: ../../library/fnmatch.rst:27
msgid "Pattern"
msgstr "模式"

#: ../../library/fnmatch.rst:27
msgid "Meaning"
msgstr "含意"

#: ../../library/fnmatch.rst:29
msgid "``*``"
msgstr "``*``"

#: ../../library/fnmatch.rst:29
msgid "matches everything"
msgstr "匹配所有"

#: ../../library/fnmatch.rst:31
msgid "``?``"
msgstr "``?``"

#: ../../library/fnmatch.rst:31
msgid "matches any single character"
msgstr "匹配任何单个字符"

#: ../../library/fnmatch.rst:33
msgid "``[seq]``"
msgstr "``[seq]``"

#: ../../library/fnmatch.rst:33
msgid "matches any character in *seq*"
msgstr "匹配 *seq* 中的任何字符"

#: ../../library/fnmatch.rst:35
msgid "``[!seq]``"
msgstr "``[!seq]``"

#: ../../library/fnmatch.rst:35
msgid "matches any character not in *seq*"
msgstr "匹配任何不在 *seq* 中的字符"

#: ../../library/fnmatch.rst:38
msgid ""
"For a literal match, wrap the meta-characters in brackets. For example, "
"``'[?]'`` matches the character ``'?'``."
msgstr "对于字面值匹配，请将原字符用方括号括起来。 例如，``'[?]'`` 将匹配字符 ``'?'``。"

#: ../../library/fnmatch.rst:43
msgid ""
"Note that the filename separator (``'/'`` on Unix) is *not* special to this "
"module.  See module :mod:`glob` for pathname expansion (:mod:`glob` uses "
":func:`.filter` to match pathname segments).  Similarly, filenames starting "
"with a period are not special for this module, and are matched by the ``*`` "
"and ``?`` patterns."
msgstr ""
"注意文件名分隔符 (Unix 上为 ``'/'``) *不会* 被此模块特别对待。 请参见 :mod:`glob` 模块了解文件名扩展 "
"(:mod:`glob` 使用 :func:`.filter` 来匹配文件名的各个部分)。 "
"类似地，以一个句点打头的文件名也不会被此模块特别对待，可以通过 ``*`` 和 ``?`` 模式来匹配。"

#: ../../library/fnmatch.rst:49
msgid ""
"Also note that :func:`functools.lru_cache` with the *maxsize* of 32768 is "
"used to cache the compiled regex patterns in the following functions: "
":func:`fnmatch`, :func:`fnmatchcase`, :func:`.filter`."
msgstr ""
"还要注意是使用将 *maxsize* 设为 32768 的 :func:`functools.lru_cache` 来缓存下列函数中的已编译正则表达式:"
" :func:`fnmatch`, :func:`fnmatchcase`, :func:`.filter`。"

#: ../../library/fnmatch.rst:55
msgid ""
"Test whether the filename string *name* matches the pattern string *pat*, "
"returning ``True`` or ``False``.  Both parameters are case-normalized using "
":func:`os.path.normcase`. :func:`fnmatchcase` can be used to perform a case-"
"sensitive comparison, regardless of whether that's standard for the "
"operating system."
msgstr ""
"检测文件名字符串 *name* 是否匹配模式字符串 *pat*，返回 ``True`` 或 ``False``。 两个形参都会使用 "
":func:`os.path.normcase` 进行大小写正规化。 :func:`fnmatchcase` "
"可被用于执行大小写敏感的比较，无论这是否为所在操作系统的标准。can be used to perform a case-sensitive "
"comparison, regardless of whether that's standard for the operating system."

#: ../../library/fnmatch.rst:61
msgid ""
"This example will print all file names in the current directory with the "
"extension ``.txt``::"
msgstr "这个例子将打印当前目录下带有扩展名 ``.txt`` 的所有文件名::"

#: ../../library/fnmatch.rst:74
msgid ""
"Test whether the filename string *name* matches the pattern string *pat*, "
"returning ``True`` or ``False``; the comparison is case-sensitive and does "
"not apply :func:`os.path.normcase`."
msgstr ""
"检测文件名字符串 *name* 是否匹配模式字符串 *pat*，返回 ``True`` 或 ``False``；此比较是大小写敏感的并且不会应用 "
":func:`os.path.normcase`。"

#: ../../library/fnmatch.rst:81
msgid ""
"Construct a list from those elements of the :term:`iterable` *names* that "
"match pattern *pat*. It is the same as ``[n for n in names if fnmatch(n, "
"pat)]``, but implemented more efficiently."
msgstr ""
"基于 :term:`iterable` *names* 中匹配模式 *pat* 的元素构造一个列表。 它等价于 ``[n for n in names "
"if fnmatch(n, pat)]``，但实现得更为高效。"

#: ../../library/fnmatch.rst:89
msgid ""
"Return the shell-style pattern *pat* converted to a regular expression for "
"using with :func:`re.match`."
msgstr "返回由 shell 风格的模式 *pat* 转换成的正则表达式以便用于 :func:`re.match`。"

#: ../../library/fnmatch.rst:92
msgid "Example:"
msgstr "示例:"

#: ../../library/fnmatch.rst:106
msgid "Module :mod:`glob`"
msgstr "模块 :mod:`glob`"

#: ../../library/fnmatch.rst:107
msgid "Unix shell-style path expansion."
msgstr "Unix shell 风格路径扩展。"

#: ../../library/fnmatch.rst:9
msgid "filenames"
msgstr "文件名"

#: ../../library/fnmatch.rst:9
msgid "wildcard expansion"
msgstr "通配符扩展"

#: ../../library/fnmatch.rst:11 ../../library/fnmatch.rst:41
msgid "module"
msgstr "module"

#: ../../library/fnmatch.rst:11
msgid "re"
msgstr "re"

#: ../../library/fnmatch.rst:19
msgid "* (asterisk)"
msgstr "* (星号)"

#: ../../library/fnmatch.rst:19
msgid "in glob-style wildcards"
msgstr "使用 glob 风格的通配符"

#: ../../library/fnmatch.rst:19
msgid "? (question mark)"
msgstr "? (问号)"

#: ../../library/fnmatch.rst:19
msgid "[] (square brackets)"
msgstr "[] (方括号)"

#: ../../library/fnmatch.rst:19
msgid "! (exclamation)"
msgstr "! (感叹号)"

#: ../../library/fnmatch.rst:19
msgid "- (minus)"
msgstr "- (减号)"

#: ../../library/fnmatch.rst:41
msgid "glob"
msgstr "glob"
