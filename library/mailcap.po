# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2025
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.12\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-07-25 16:03+0000\n"
"PO-Revision-Date: 2025-07-18 19:58+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2025\n"
"Language-Team: Chinese (China) (https://app.transifex.com/python-doc/teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/mailcap.rst:2
msgid ":mod:`mailcap` --- Mailcap file handling"
msgstr ":mod:`mailcap` --- Mailcap 文件处理"

#: ../../library/mailcap.rst:8
msgid "**Source code:** :source:`Lib/mailcap.py`"
msgstr "**源代码:** :source:`Lib/mailcap.py`"

#: ../../library/mailcap.rst:10
msgid ""
"The :mod:`mailcap` module is deprecated (see :pep:`PEP 594 <594#mailcap>` "
"for details). The :mod:`mimetypes` module provides an alternative."
msgstr ""
":mod:`mailcap` 模块已被弃用（请参阅 :pep:`PEP 594 <594#mailcap>` 了解详情）。 "
":mod:`mimetypes` 模块提供了一个替代品。"

#: ../../library/mailcap.rst:17
msgid ""
"Mailcap files are used to configure how MIME-aware applications such as mail"
" readers and web browsers react to files with different MIME types. (The "
"name \"mailcap\" is derived from the phrase \"mail capability\".)  For "
"example, a mailcap file might contain a line like ``video/mpeg; xmpeg %s``."
"  Then, if the user encounters an email message or web document with the "
"MIME type :mimetype:`video/mpeg`, ``%s`` will be replaced by a filename "
"(usually one belonging to a temporary file) and the :program:`xmpeg` program"
" can be automatically started to view the file."
msgstr ""
"Mailcap 文件可用来配置支持 MIME 的应用程序例如邮件阅读器和 Web 浏览器如何响应具有不同 MIME 类型的文件。 "
"(\"mailcap\" 这个名称源自短语 \"mail capability\"。) 例如，一个 mailcap 文件可能包含 "
"``video/mpeg; xmpeg %s`` 这样的行。 然后，如果用户遇到 MIME 类型为 :mimetype:`video/mpeg` "
"的邮件消息或 Web 文档时，``%s`` 将被替换为一个文件名 (通常属于临时文件) 并且会自动启动 :program:`xmpeg` "
"程序来查看该文件。"

#: ../../library/mailcap.rst:26
msgid ""
"The mailcap format is documented in :rfc:`1524`, \"A User Agent "
"Configuration Mechanism For Multimedia Mail Format Information\", but is not"
" an internet standard.  However, mailcap files are supported on most Unix "
"systems."
msgstr ""
"mailcap 格式的说明文档见 :rfc:`1524`, \"A User Agent Configuration Mechanism For "
"Multimedia Mail Format Information\"，但它并不是一个互联网标准。 不过，mailcap 文件在大多数 Unix "
"系统上都受到支持。"

#: ../../library/mailcap.rst:33
msgid ""
"Return a 2-tuple; the first element is a string containing the command line "
"to be executed (which can be passed to :func:`os.system`), and the second "
"element is the mailcap entry for a given MIME type.  If no matching MIME "
"type can be found, ``(None, None)`` is returned."
msgstr ""
"返回一个 2 元组；其中第一个元素是包含所要执行命令的字符串 (它可被传递给 :func:`os.system`)，第二个元素是对应于给定 MIME "
"类型的 mailcap 条目。 如果找不到匹配的 MIME 类型，则将返回 ``(None, None)``。"

#: ../../library/mailcap.rst:38
msgid ""
"*key* is the name of the field desired, which represents the type of "
"activity to be performed; the default value is 'view', since in the  most "
"common case you simply want to view the body of the MIME-typed data.  Other "
"possible values might be 'compose' and 'edit', if you wanted to create a new"
" body of the given MIME type or alter the existing body data.  See "
":rfc:`1524` for a complete list of these fields."
msgstr ""
"*key* 是所需字段的名称，它代表要执行的活动类型；默认值是 'view'，因为在最通常的情况下你只是想要查看 MIME 类型数据的正文。 "
"其他可能的值还有 'compose' 和 'edit'，分别用于想要创建给定 MIME 类型正文或修改现有正文数据的情况。 请参阅 "
":rfc:`1524` 获取这些字段的完整列表。"

#: ../../library/mailcap.rst:45
msgid ""
"*filename* is the filename to be substituted for ``%s`` in the command line;"
" the default value is ``'/dev/null'`` which is almost certainly not what you"
" want, so usually you'll override it by specifying a filename."
msgstr ""
"*filename* 是在命令行中用来替换 ``%s`` 的文件名；默认值 ``'/dev/null'`` "
"几乎肯定不是你想要的，因此通常你要通过指定一个文件名来覆盖它。"

#: ../../library/mailcap.rst:49
msgid ""
"*plist* can be a list containing named parameters; the default value is "
"simply an empty list.  Each entry in the list must be a string containing "
"the parameter name, an equals sign (``'='``), and the parameter's value.  "
"Mailcap entries can contain  named parameters like ``%{foo}``, which will be"
" replaced by the value of the parameter named 'foo'.  For example, if the "
"command line ``showpartial %{id} %{number} %{total}`` was in a mailcap file,"
" and *plist* was set to ``['id=1', 'number=2', 'total=3']``, the resulting "
"command line would be ``'showpartial 1 2 3'``."
msgstr ""
"*plist* 可以是一个包含命名形参的列表；默认值只是一个空列表。 列表中的每个条目必须为包含形参名称的字符串、等于号 (``'='``) "
"以及形参的值。 Mailcap 条目可以包含形如 ``%{foo}`` 的命名形参，它将由名为 'foo' 的形参的值所替换。 例如，如果命令行 "
"``showpartial %{id} %{number} %{total}`` 是在一个 mailcap 文件中，并且 *plist* 被设为 "
"``['id=1', 'number=2', 'total=3']``，则结果命令行将为 ``'showpartial 1 2 3'``。"

#: ../../library/mailcap.rst:58
msgid ""
"In a mailcap file, the \"test\" field can optionally be specified to test "
"some external condition (such as the machine architecture, or the window "
"system in use) to determine whether or not the mailcap line applies.  "
":func:`findmatch` will automatically check such conditions and skip the "
"entry if the check fails."
msgstr ""
"在 mailcap 文件中，可以指定可选的 \"test\" 字段来检测某些外部条件（例如所使用的机器架构或窗口系统）来确定是否要应用 mailcap "
"行。 :func:`findmatch` 将自动检查此类条件并在检查未通过时跳过条目。"

#: ../../library/mailcap.rst:65
msgid ""
"To prevent security issues with shell metacharacters (symbols that have "
"special effects in a shell command line), ``findmatch`` will refuse to "
"inject ASCII characters other than alphanumerics and ``@+=:,./-_`` into the "
"returned command line."
msgstr ""
"为了防止使用 shell 元字符（在 shell 命令行中具有特殊效果的符号）的安全问题，``findmatch`` 会拒绝把字母数字和 "
"``@+=:,./-_`` 以外的 ASCII 字符注入被返回的命令行。"

#: ../../library/mailcap.rst:70
msgid ""
"If a disallowed character appears in *filename*, ``findmatch`` will always "
"return ``(None, None)`` as if no entry was found. If such a character "
"appears elsewhere (a value in *plist* or in *MIMEtype*), ``findmatch`` will "
"ignore all mailcap entries which use that value. A :mod:`warning <warnings>`"
" will be raised in either case."
msgstr ""
"如果有不被允许的字符出现在 *filename* 中，``findmatch`` 将总是返回 ``(None, None)`` "
"就如同未找到任何条目一样。 如果这样的字符出现在其他地方（在 *plist* 或 *MIMEtype* 中的值，``findmatch`` "
"将忽略所有使用这些值的 mailcap 条目。 在两种情况下都将引发 :mod:`警告 <warnings>`。"

#: ../../library/mailcap.rst:78
msgid ""
"Returns a dictionary mapping MIME types to a list of mailcap file entries. "
"This dictionary must be passed to the :func:`findmatch` function.  An entry "
"is stored as a list of dictionaries, but it shouldn't be necessary to know "
"the details of this representation."
msgstr ""
"返回一个将 MIME 类型映射到 mailcap 文件条目列表的字典。 此字典必须被传给 :func:`findmatch` 函数。 "
"条目会被存储为字典列表，但并不需要了解此表示形式的细节。"

#: ../../library/mailcap.rst:83
msgid ""
"The information is derived from all of the mailcap files found on the "
"system. Settings in the user's mailcap file :file:`$HOME/.mailcap` will "
"override settings in the system mailcap files :file:`/etc/mailcap`, "
":file:`/usr/etc/mailcap`, and :file:`/usr/local/etc/mailcap`."
msgstr ""
"此信息来自在系统中找到的所有 mailcap 文件。 用户的 mailcap 文件 :file:`$HOME/.mailcap` 中的设置将覆盖系统 "
"mailcap 文件 :file:`/etc/mailcap`, :file:`/usr/etc/mailcap` 和 "
":file:`/usr/local/etc/mailcap` 中的设置。"

#: ../../library/mailcap.rst:88
msgid "An example usage::"
msgstr "一个用法示例::"

#: ../../library/mailcap.rst:90
msgid ""
">>> import mailcap\n"
">>> d = mailcap.getcaps()\n"
">>> mailcap.findmatch(d, 'video/mpeg', filename='tmp1223')\n"
"('xmpeg tmp1223', {'view': 'xmpeg %s'})"
msgstr ""
