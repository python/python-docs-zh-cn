# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-07-25 16:48+0000\n"
"PO-Revision-Date: 2025-07-18 20:05+0000\n"
"Language-Team: Chinese (China) (https://app.transifex.com/python-doc/teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/bz2.rst:2
msgid ":mod:`bz2` --- Support for :program:`bzip2` compression"
msgstr ""

#: ../../library/bz2.rst:12
msgid "**Source code:** :source:`Lib/bz2.py`"
msgstr ""

#: ../../library/bz2.rst:16
msgid ""
"This module provides a comprehensive interface for compressing and "
"decompressing data using the bzip2 compression algorithm."
msgstr ""

#: ../../library/bz2.rst:19
msgid "The :mod:`bz2` module contains:"
msgstr ""

#: ../../library/bz2.rst:21
msgid ""
"The :func:`.open` function and :class:`BZ2File` class for reading and "
"writing compressed files."
msgstr ""

#: ../../library/bz2.rst:23
msgid ""
"The :class:`BZ2Compressor` and :class:`BZ2Decompressor` classes for "
"incremental (de)compression."
msgstr ""

#: ../../library/bz2.rst:25
msgid ""
"The :func:`compress` and :func:`decompress` functions for one-shot "
"(de)compression."
msgstr ""

#: ../../library/bz2.rst:30
msgid "(De)compression of files"
msgstr ""

#: ../../library/bz2.rst:34
msgid ""
"Open a bzip2-compressed file in binary or text mode, returning a :term:`file"
" object`."
msgstr ""

#: ../../library/bz2.rst:37
msgid ""
"As with the constructor for :class:`BZ2File`, the *filename* argument can be"
" an actual filename (a :class:`str` or :class:`bytes` object), or an "
"existing file object to read from or write to."
msgstr ""

#: ../../library/bz2.rst:41
msgid ""
"The *mode* argument can be any of ``'r'``, ``'rb'``, ``'w'``, ``'wb'``, "
"``'x'``, ``'xb'``, ``'a'`` or ``'ab'`` for binary mode, or ``'rt'``, "
"``'wt'``, ``'xt'``, or ``'at'`` for text mode. The default is ``'rb'``."
msgstr ""

#: ../../library/bz2.rst:45
msgid ""
"The *compresslevel* argument is an integer from 1 to 9, as for the "
":class:`BZ2File` constructor."
msgstr ""

#: ../../library/bz2.rst:48
msgid ""
"For binary mode, this function is equivalent to the :class:`BZ2File` "
"constructor: ``BZ2File(filename, mode, compresslevel=compresslevel)``. In "
"this case, the *encoding*, *errors* and *newline* arguments must not be "
"provided."
msgstr ""

#: ../../library/bz2.rst:53
msgid ""
"For text mode, a :class:`BZ2File` object is created, and wrapped in an "
":class:`io.TextIOWrapper` instance with the specified encoding, error "
"handling behavior, and line ending(s)."
msgstr ""

#: ../../library/bz2.rst:59 ../../library/bz2.rst:162
msgid "The ``'x'`` (exclusive creation) mode was added."
msgstr ""

#: ../../library/bz2.rst:62 ../../library/bz2.rst:169
msgid "Accepts a :term:`path-like object`."
msgstr ""

#: ../../library/bz2.rst:68
msgid "Open a bzip2-compressed file in binary mode."
msgstr ""

#: ../../library/bz2.rst:70
msgid ""
"If *filename* is a :class:`str` or :class:`bytes` object, open the named "
"file directly. Otherwise, *filename* should be a :term:`file object`, which "
"will be used to read or write the compressed data."
msgstr ""

#: ../../library/bz2.rst:74
msgid ""
"The *mode* argument can be either ``'r'`` for reading (default), ``'w'`` for"
" overwriting, ``'x'`` for exclusive creation, or ``'a'`` for appending. "
"These can equivalently be given as ``'rb'``, ``'wb'``, ``'xb'`` and ``'ab'``"
" respectively."
msgstr ""

#: ../../library/bz2.rst:79
msgid ""
"If *filename* is a file object (rather than an actual file name), a mode of "
"``'w'`` does not truncate the file, and is instead equivalent to ``'a'``."
msgstr ""

#: ../../library/bz2.rst:82
msgid ""
"If *mode* is ``'w'`` or ``'a'``, *compresslevel* can be an integer between "
"``1`` and ``9`` specifying the level of compression: ``1`` produces the "
"least compression, and ``9`` (default) produces the most compression."
msgstr ""

#: ../../library/bz2.rst:86
msgid ""
"If *mode* is ``'r'``, the input file may be the concatenation of multiple "
"compressed streams."
msgstr ""

#: ../../library/bz2.rst:89
msgid ""
":class:`BZ2File` provides all of the members specified by the "
":class:`io.BufferedIOBase`, except for :meth:`~io.BufferedIOBase.detach` and"
" :meth:`~io.IOBase.truncate`. Iteration and the :keyword:`with` statement "
"are supported."
msgstr ""

#: ../../library/bz2.rst:94
msgid ":class:`BZ2File` also provides the following methods:"
msgstr ""

#: ../../library/bz2.rst:98
msgid ""
"Return buffered data without advancing the file position. At least one byte "
"of data will be returned (unless at EOF). The exact number of bytes returned"
" is unspecified."
msgstr ""

#: ../../library/bz2.rst:102
msgid ""
"While calling :meth:`peek` does not change the file position of the "
":class:`BZ2File`, it may change the position of the underlying file object "
"(e.g. if the :class:`BZ2File` was constructed by passing a file object for "
"*filename*)."
msgstr ""

#: ../../library/bz2.rst:111
msgid "Return the file descriptor for the underlying file."
msgstr ""

#: ../../library/bz2.rst:117
msgid "Return whether the file was opened for reading."
msgstr ""

#: ../../library/bz2.rst:123
msgid "Return whether the file supports seeking."
msgstr ""

#: ../../library/bz2.rst:129
msgid "Return whether the file was opened for writing."
msgstr ""

#: ../../library/bz2.rst:135
msgid ""
"Read up to *size* uncompressed bytes, while trying to avoid making multiple "
"reads from the underlying stream. Reads up to a buffer's worth of data if "
"size is negative."
msgstr ""

#: ../../library/bz2.rst:139
msgid "Returns ``b''`` if the file is at EOF."
msgstr ""

#: ../../library/bz2.rst:145
msgid "Read bytes into *b*."
msgstr ""

#: ../../library/bz2.rst:147
msgid "Returns the number of bytes read (0 for EOF)."
msgstr ""

#: ../../library/bz2.rst:152
msgid "Support for the :keyword:`with` statement was added."
msgstr ""

#: ../../library/bz2.rst:155
msgid ""
"Support was added for *filename* being a :term:`file object` instead of an "
"actual filename."
msgstr ""

#: ../../library/bz2.rst:159
msgid ""
"The ``'a'`` (append) mode was added, along with support for reading multi-"
"stream files."
msgstr ""

#: ../../library/bz2.rst:165
msgid ""
"The :meth:`~io.BufferedIOBase.read` method now accepts an argument of "
"``None``."
msgstr ""

#: ../../library/bz2.rst:172
msgid ""
"The *buffering* parameter has been removed. It was ignored and deprecated "
"since Python 3.0. Pass an open file object to control how the file is "
"opened."
msgstr ""

#: ../../library/bz2.rst:177
msgid "The *compresslevel* parameter became keyword-only."
msgstr ""

#: ../../library/bz2.rst:179
msgid ""
"This class is thread unsafe in the face of multiple simultaneous readers or "
"writers, just like its equivalent classes in :mod:`gzip` and :mod:`lzma` "
"have always been."
msgstr ""

#: ../../library/bz2.rst:186
msgid "Incremental (de)compression"
msgstr ""

#: ../../library/bz2.rst:190
msgid ""
"Create a new compressor object. This object may be used to compress data "
"incrementally. For one-shot compression, use the :func:`compress` function "
"instead."
msgstr ""

#: ../../library/bz2.rst:194 ../../library/bz2.rst:282
msgid ""
"*compresslevel*, if given, must be an integer between ``1`` and ``9``. The "
"default is ``9``."
msgstr ""

#: ../../library/bz2.rst:199
msgid ""
"Provide data to the compressor object. Returns a chunk of compressed data if"
" possible, or an empty byte string otherwise."
msgstr ""

#: ../../library/bz2.rst:202
msgid ""
"When you have finished providing data to the compressor, call the "
":meth:`flush` method to finish the compression process."
msgstr ""

#: ../../library/bz2.rst:208
msgid ""
"Finish the compression process. Returns the compressed data left in internal"
" buffers."
msgstr ""

#: ../../library/bz2.rst:211
msgid ""
"The compressor object may not be used after this method has been called."
msgstr ""

#: ../../library/bz2.rst:216
msgid ""
"Create a new decompressor object. This object may be used to decompress data"
" incrementally. For one-shot compression, use the :func:`decompress` "
"function instead."
msgstr ""

#: ../../library/bz2.rst:221
msgid ""
"This class does not transparently handle inputs containing multiple "
"compressed streams, unlike :func:`decompress` and :class:`BZ2File`. If you "
"need to decompress a multi-stream input with :class:`BZ2Decompressor`, you "
"must use a new decompressor for each stream."
msgstr ""

#: ../../library/bz2.rst:228
msgid ""
"Decompress *data* (a :term:`bytes-like object`), returning uncompressed data"
" as bytes. Some of *data* may be buffered internally, for use in later calls"
" to :meth:`decompress`. The returned data should be concatenated with the "
"output of any previous calls to :meth:`decompress`."
msgstr ""

#: ../../library/bz2.rst:234
msgid ""
"If *max_length* is nonnegative, returns at most *max_length* bytes of "
"decompressed data. If this limit is reached and further output can be "
"produced, the :attr:`~.needs_input` attribute will be set to ``False``. In "
"this case, the next call to :meth:`~.decompress` may provide *data* as "
"``b''`` to obtain more of the output."
msgstr ""

#: ../../library/bz2.rst:241
msgid ""
"If all of the input data was decompressed and returned (either because this "
"was less than *max_length* bytes, or because *max_length* was negative), the"
" :attr:`~.needs_input` attribute will be set to ``True``."
msgstr ""

#: ../../library/bz2.rst:246
msgid ""
"Attempting to decompress data after the end of stream is reached raises an "
":exc:`EOFError`.  Any data found after the end of the stream is ignored and "
"saved in the :attr:`~.unused_data` attribute."
msgstr ""

#: ../../library/bz2.rst:250
msgid "Added the *max_length* parameter."
msgstr ""

#: ../../library/bz2.rst:255
msgid "``True`` if the end-of-stream marker has been reached."
msgstr ""

#: ../../library/bz2.rst:262
msgid "Data found after the end of the compressed stream."
msgstr ""

#: ../../library/bz2.rst:264
msgid ""
"If this attribute is accessed before the end of the stream has been reached,"
" its value will be ``b''``."
msgstr ""

#: ../../library/bz2.rst:269
msgid ""
"``False`` if the :meth:`.decompress` method can provide more decompressed "
"data before requiring new uncompressed input."
msgstr ""

#: ../../library/bz2.rst:276
msgid "One-shot (de)compression"
msgstr ""

#: ../../library/bz2.rst:280
msgid "Compress *data*, a :term:`bytes-like object <bytes-like object>`."
msgstr ""

#: ../../library/bz2.rst:285
msgid "For incremental compression, use a :class:`BZ2Compressor` instead."
msgstr ""

#: ../../library/bz2.rst:290
msgid "Decompress *data*, a :term:`bytes-like object <bytes-like object>`."
msgstr ""

#: ../../library/bz2.rst:292
msgid ""
"If *data* is the concatenation of multiple compressed streams, decompress "
"all of the streams."
msgstr ""

#: ../../library/bz2.rst:295
msgid "For incremental decompression, use a :class:`BZ2Decompressor` instead."
msgstr ""

#: ../../library/bz2.rst:297
msgid "Support for multi-stream inputs was added."
msgstr ""

#: ../../library/bz2.rst:303
msgid "Examples of usage"
msgstr ""

#: ../../library/bz2.rst:305
msgid "Below are some examples of typical usage of the :mod:`bz2` module."
msgstr ""

#: ../../library/bz2.rst:307
msgid ""
"Using :func:`compress` and :func:`decompress` to demonstrate round-trip "
"compression:"
msgstr ""

#: ../../library/bz2.rst:325
msgid "Using :class:`BZ2Compressor` for incremental compression:"
msgstr ""

#: ../../library/bz2.rst:343
msgid ""
"The example above uses a very \"nonrandom\" stream of data (a stream of "
"``b\"z\"`` chunks).  Random data tends to compress poorly, while ordered, "
"repetitive data usually yields a high compression ratio."
msgstr ""

#: ../../library/bz2.rst:347
msgid "Writing and reading a bzip2-compressed file in binary mode:"
msgstr ""
