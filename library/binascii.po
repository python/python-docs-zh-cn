# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
# 开 方 <kaifang.1995@gmail.com>, 2024
# ppcfish <ppcfish@gmail.com>, 2024
# walkinrain <walkinrain2008@outlook.com>, 2024
# Freesand Leo <yuqinju@163.com>, 2024
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-05-09 14:19+0000\n"
"PO-Revision-Date: 2021-06-28 00:56+0000\n"
"Last-Translator: Freesand Leo <yuqinju@163.com>, 2024\n"
"Language-Team: Chinese (China) (https://app.transifex.com/python-doc/teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/binascii.rst:2
msgid ":mod:`!binascii` --- Convert between binary and ASCII"
msgstr ":mod:`!binascii` --- 在二进制数据和 ASCII 之间进行转换"

#: ../../library/binascii.rst:13
msgid ""
"The :mod:`binascii` module contains a number of methods to convert between "
"binary and various ASCII-encoded binary representations. Normally, you will "
"not use these functions directly but use wrapper modules like :mod:`base64` "
"instead. The :mod:`binascii` module contains low-level functions written in "
"C for greater speed that are used by the higher-level modules."
msgstr ""
":mod:`binascii` 模块包含多个方法用来在二进制数据和多种 ASCII 编码的二进制数据表示形式之间进行转换。 "
"在通常情况下，你不会直接使用这些函数而是使用 :mod:`base64` 这样的包装器模块作为替代。 :mod:`binascii` 模块包含用 C "
"语言编写的供这些高层级模块使用的低层级函数以获得更快的运行速度。"

#: ../../library/binascii.rst:22
msgid ""
"``a2b_*`` functions accept Unicode strings containing only ASCII characters."
" Other functions only accept :term:`bytes-like objects <bytes-like object>` "
"(such as :class:`bytes`, :class:`bytearray` and other objects that support "
"the buffer protocol)."
msgstr ""
"``a2b_*`` 函数接受只含有 ASCII 码的Unicode 字符串。其他函数只接受 :term:`字节类对象 <bytes-like "
"object>` （例如 :class:`bytes`，:class:`bytearray` 和其他支持缓冲区协议的对象）。"

#: ../../library/binascii.rst:27
msgid ""
"ASCII-only unicode strings are now accepted by the ``a2b_*`` functions."
msgstr " ``a2b_*`` 函数支持只包含 ASCII 的 Unicode 字符串。"

#: ../../library/binascii.rst:31
msgid "The :mod:`binascii` module defines the following functions:"
msgstr ":mod:`binascii` 模块定义了以下函数："

#: ../../library/binascii.rst:36
msgid ""
"Convert a single line of uuencoded data back to binary and return the binary"
" data. Lines normally contain 45 (binary) bytes, except for the last line. "
"Line data may be followed by whitespace."
msgstr "将单行 uu 编码数据转换成二进制数据并返回。uu 编码每行的数据通常包含45 个（二进制）字节，最后一行除外。每行数据后面可能跟有空格。"

#: ../../library/binascii.rst:43
msgid ""
"Convert binary data to a line of ASCII characters, the return value is the "
"converted line, including a newline char. The length of *data* should be at "
"most 45. If *backtick* is true, zeros are represented by ``'`'`` instead of "
"spaces."
msgstr ""
"将二进制数据转换为 ASCII 编码字符，返回值是转换后的行数据，包括换行符。 *data* 的长度最多为45。如果 *backtick* "
"为ture，则零由 ``'`'`` 而不是空格表示。"

#: ../../library/binascii.rst:47
msgid "Added the *backtick* parameter."
msgstr "增加 *backtick* 形参。"

#: ../../library/binascii.rst:53
msgid ""
"Convert a block of base64 data back to binary and return the binary data. "
"More than one line may be passed at a time."
msgstr "将 base64 数据块转换成二进制并以二进制数据形式返回。一次可以传递多行数据。"

#: ../../library/binascii.rst:56
msgid ""
"If *strict_mode* is true, only valid base64 data will be converted. Invalid "
"base64 data will raise :exc:`binascii.Error`."
msgstr ""
"如果 *strict_mode* 为真值，则将只转换有效的 base64 数据。 无效的 base64 数据将会引发 "
":exc:`binascii.Error`。"

#: ../../library/binascii.rst:59
msgid "Valid base64:"
msgstr "有效的 base64:"

#: ../../library/binascii.rst:61
msgid "Conforms to :rfc:`3548`."
msgstr "遵循 :rfc:`3548`。"

#: ../../library/binascii.rst:62
msgid "Contains only characters from the base64 alphabet."
msgstr "仅包含来自 base64 字符表的字符。"

#: ../../library/binascii.rst:63
msgid ""
"Contains no excess data after padding (including excess padding, newlines, "
"etc.)."
msgstr "不包含填充后的额外数据（包括冗余填充、换行符等）。"

#: ../../library/binascii.rst:64
msgid "Does not start with a padding."
msgstr "不以填充符打头。"

#: ../../library/binascii.rst:66
msgid "Added the *strict_mode* parameter."
msgstr "增加了 *strict_mode* 形参。"

#: ../../library/binascii.rst:72
msgid ""
"Convert binary data to a line of ASCII characters in base64 coding. The "
"return value is the converted line, including a newline char if *newline* is"
" true.  The output of this function conforms to :rfc:`3548`."
msgstr ""
"将二进制数据转换为一行用 base64 编码的ASCII字符串。返回值是转换后的行数据，如果 *newline* "
"为true，则返回值包括换行符。该函数的输出符合：rfc：`3548`。"

#: ../../library/binascii.rst:76
msgid "Added the *newline* parameter."
msgstr "增加 *newline* 形参。"

#: ../../library/binascii.rst:82
msgid ""
"Convert a block of quoted-printable data back to binary and return the "
"binary data. More than one line may be passed at a time. If the optional "
"argument *header* is present and true, underscores will be decoded as "
"spaces."
msgstr ""
"将一个引号可打印的数据块转换成二进制数据并返回。一次可以转换多行。如果可选参数 *header* 存在且为true，则数据中的下划线将被解码成空格。"

#: ../../library/binascii.rst:89
msgid ""
"Convert binary data to a line(s) of ASCII characters in quoted-printable "
"encoding.  The return value is the converted line(s). If the optional "
"argument *quotetabs* is present and true, all tabs and spaces will be "
"encoded.   If the optional argument *istext* is present and true, newlines "
"are not encoded but trailing whitespace will be encoded. If the optional "
"argument *header* is present and true, spaces will be encoded as underscores"
" per :rfc:`1522`. If the optional argument *header* is present and false, "
"newline characters will be encoded as well; otherwise linefeed conversion "
"might corrupt the binary data stream."
msgstr ""
"将二进制数据转换为一行或多行带引号可打印编码的ASCII字符串。返回值是转换后的行数据。如果可选参数 *quotetabs* "
"存在且为真值，则对所有制表符和空格进行编码。如果可选参数 *istext* 存在且为真值，则不对新行进行编码，但将对尾随空格进行编码。如果可选参数 "
"*header* 存在且为true，则空格将被编码为下划线 :rfc:`1522`。如果可选参数 *header* "
"存在且为假值，则也会对换行符进行编码;不进行换行转换编码可能会破坏二进制数据流。"

#: ../../library/binascii.rst:102
msgid ""
"Compute a 16-bit CRC value of *data*, starting with *value* as the initial "
"CRC, and return the result.  This uses the CRC-CCITT polynomial *x*:sup:`16`"
" + *x*:sup:`12` + *x*:sup:`5` + 1, often represented as 0x1021.  This CRC is"
" used in the binhex4 format."
msgstr ""
"以 *value* 作为初始 CRC 计算 *data* 的16位 CRC 值，返回其结果。这里使用 CRC-CCITT 生成多项式 "
"*x*:sup:`16` + *x*:sup:`12` + *x*:sup:`5` + 1 ，通常表示为0x1021。该 CRC 被用于 binhex4"
" 格式。"

#: ../../library/binascii.rst:110
msgid ""
"Compute CRC-32, the unsigned 32-bit checksum of *data*, starting with an "
"initial CRC of *value*.  The default initial CRC is zero.  The algorithm is "
"consistent with the ZIP file checksum.  Since the algorithm is designed for "
"use as a checksum algorithm, it is not suitable for use as a general hash "
"algorithm.  Use as follows::"
msgstr ""
"计算 CRC-32，即 *data* 的无符号 32 位校验和，初始 CRC 值为 *value*。 默认的初始 CRC 值为零。 该算法与 ZIP "
"文件校验和算法一致。 由于该算法被设计用作校验和算法，因此不适合用作通用哈希算法。 使用方式如下::"

#: ../../library/binascii.rst:116
msgid ""
"print(binascii.crc32(b\"hello world\"))\n"
"# Or, in two pieces:\n"
"crc = binascii.crc32(b\"hello\")\n"
"crc = binascii.crc32(b\" world\", crc)\n"
"print('crc32 = {:#010x}'.format(crc))"
msgstr ""
"print(binascii.crc32(b\"hello world\"))\n"
"# 或者，分成两块：\n"
"crc = binascii.crc32(b\"hello\")\n"
"crc = binascii.crc32(b\" world\", crc)\n"
"print('crc32 = {:#010x}'.format(crc))"

#: ../../library/binascii.rst:122
msgid "The result is always unsigned."
msgstr "结果将总是不带符号的。"

#: ../../library/binascii.rst:128
msgid ""
"Return the hexadecimal representation of the binary *data*.  Every byte of "
"*data* is converted into the corresponding 2-digit hex representation.  The "
"returned bytes object is therefore twice as long as the length of *data*."
msgstr ""
"返回二进制数据 *data* 的十六进制表示形式。 *data* 的每个字节都被转换为相应的2位十六进制表示形式。因此返回的字节对象的长度是 "
"*data* 的两倍。"

#: ../../library/binascii.rst:132
msgid ""
"Similar functionality (but returning a text string) is also conveniently "
"accessible using the :meth:`bytes.hex` method."
msgstr "使用：:meth:`bytes.hex` 方法也可以方便地实现相似的功能（但仅返回文本字符串）。"

#: ../../library/binascii.rst:135
msgid ""
"If *sep* is specified, it must be a single character str or bytes object. It"
" will be inserted in the output after every *bytes_per_sep* input bytes. "
"Separator placement is counted from the right end of the output by default, "
"if you wish to count from the left, supply a negative *bytes_per_sep* value."
msgstr ""
"如果指定了 *sep*，它必须为单字符 str 或 bytes 对象。 它将被插入每个 *bytes_per_sep* 输入字节之后。 "
"分隔符位置默认从输出的右端开始计数，如果你希望从左端开始计数，请提供一个负的 *bytes_per_sep* 值。"

#: ../../library/binascii.rst:150
msgid "The *sep* and *bytes_per_sep* parameters were added."
msgstr "添加了 *sep* 和 *bytes_per_sep* 形参。"

#: ../../library/binascii.rst:156
msgid ""
"Return the binary data represented by the hexadecimal string *hexstr*.  This"
" function is the inverse of :func:`b2a_hex`. *hexstr* must contain an even "
"number of hexadecimal digits (which can be upper or lower case), otherwise "
"an :exc:`Error` exception is raised."
msgstr ""
"返回由十六进制字符串  *hexstr* 表示的二进制数据。此函数功能与 :func:`b2a_hex` 相反。 *hexstr* "
"必须包含偶数个十六进制数字（可以是大写或小写），否则会引发  :exc:`Error` 异常。"

#: ../../library/binascii.rst:161
msgid ""
"Similar functionality (accepting only text string arguments, but more "
"liberal towards whitespace) is also accessible using the "
":meth:`bytes.fromhex` class method."
msgstr "使用：:meth:`bytes.fromhex`  类方法也实现相似的功能（仅接受文本字符串参数，不限制其中的空白字符）。"

#: ../../library/binascii.rst:167
msgid "Exception raised on errors. These are usually programming errors."
msgstr "通常是因为编程错误引发的异常。"

#: ../../library/binascii.rst:172
msgid ""
"Exception raised on incomplete data. These are usually not programming "
"errors, but may be handled by reading a little more data and trying again."
msgstr "数据不完整引发的异常。通常不是编程错误导致的，可以通过读取更多的数据并再次尝试来处理该异常。"

#: ../../library/binascii.rst:178
msgid "Module :mod:`base64`"
msgstr "模块 :mod:`base64`"

#: ../../library/binascii.rst:179
msgid ""
"Support for RFC compliant base64-style encoding in base 16, 32, 64, and 85."
msgstr "支持在16，32，64，85进制中进行符合 RFC 协议的 base64 样式编码。"

#: ../../library/binascii.rst:182
msgid "Module :mod:`quopri`"
msgstr "模块 :mod:`quopri`"

#: ../../library/binascii.rst:183
msgid "Support for quoted-printable encoding used in MIME email messages."
msgstr "支持在 MIME 版本电子邮件中使用引号可打印编码。"

#: ../../library/binascii.rst:8
msgid "module"
msgstr "module"

#: ../../library/binascii.rst:8
msgid "base64"
msgstr "base64"
