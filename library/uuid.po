# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2025
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.13\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-07-25 15:00+0000\n"
"PO-Revision-Date: 2025-07-18 19:22+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2025\n"
"Language-Team: Chinese (China) (https://app.transifex.com/python-doc/teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/uuid.rst:2
msgid ":mod:`!uuid` --- UUID objects according to :rfc:`4122`"
msgstr ":mod:`!uuid` --- 根据 :rfc:`4122` 定义的 UUID 对象"

#: ../../library/uuid.rst:9
msgid "**Source code:** :source:`Lib/uuid.py`"
msgstr "**源代码：** :source:`Lib/uuid.py`"

#: ../../library/uuid.rst:13
msgid ""
"This module provides immutable :class:`UUID` objects (the :class:`UUID` "
"class) and the functions :func:`uuid1`, :func:`uuid3`, :func:`uuid4`, "
":func:`uuid5` for generating version 1, 3, 4, and 5 UUIDs as specified in "
":rfc:`4122`."
msgstr ""
"这个模块提供了不可变的 :class:`UUID` 对象 (:class:`UUID` 类) 和 :func:`uuid1`, "
":func:`uuid3`, :func:`uuid4`, :func:`uuid5` 等函数用于生成 :rfc:`4122` 所定义的第 1, 3, "
"4 和 5 版 UUID。"

#: ../../library/uuid.rst:17
msgid ""
"If all you want is a unique ID, you should probably call :func:`uuid1` or "
":func:`uuid4`.  Note that :func:`uuid1` may compromise privacy since it "
"creates a UUID containing the computer's network address.  :func:`uuid4` "
"creates a random UUID."
msgstr ""
"如果你想要的只是一个唯一的ID，你可能应该调用 :func:`uuid1` 或 :func:`uuid4`。 注意 :func:`uuid1` "
"可能会损害隐私，因为它创建了一个包含计算机网络地址的UUID。 :func:`uuid4` 可以创建一个随机UUID。"

#: ../../library/uuid.rst:22
msgid ""
"Depending on support from the underlying platform, :func:`uuid1` may or may "
"not return a \"safe\" UUID.  A safe UUID is one which is generated using "
"synchronization methods that ensure no two processes can obtain the same "
"UUID.  All instances of :class:`UUID` have an :attr:`~UUID.is_safe` "
"attribute which relays any information about the UUID's safety, using this "
"enumeration:"
msgstr ""
"根据底层平台的支持情况，:func:`uuid1` 可能会也可能不会返回“安全“的 UUID。 安全的 UUID 是指使用同步方法生成的 "
"UUID，此方法可确保没有两个进程能获得相同的 UUID。 :class:`UUID` 的所有实例都有一个能够中转关于 UUID 安全性的任何信息的 "
":attr:`~UUID.is_safe` 属性，它可使用下列枚举："

#: ../../library/uuid.rst:34
msgid "The UUID was generated by the platform in a multiprocessing-safe way."
msgstr "该UUID是由平台以多进程安全的方式生成的。"

#: ../../library/uuid.rst:38
msgid "The UUID was not generated in a multiprocessing-safe way."
msgstr "UUID不是以多进程安全的方式生成的。"

#: ../../library/uuid.rst:42
msgid ""
"The platform does not provide information on whether the UUID was generated "
"safely or not."
msgstr "该平台不提供UUID是否安全生成的信息。"

#: ../../library/uuid.rst:47
msgid ""
"Create a UUID from either a string of 32 hexadecimal digits, a string of 16 "
"bytes in big-endian order as the *bytes* argument, a string of 16 bytes in "
"little-endian order as the *bytes_le* argument, a tuple of six integers "
"(32-bit *time_low*, 16-bit *time_mid*, 16-bit *time_hi_version*, 8-bit "
"*clock_seq_hi_variant*, 8-bit *clock_seq_low*, 48-bit *node*) as the "
"*fields* argument, or a single 128-bit integer as the *int* argument. When a"
" string of hex digits is given, curly braces, hyphens, and a URN prefix are "
"all optional.  For example, these expressions all yield the same UUID::"
msgstr ""
"用一串32位十六进制数字、一串大端序16个字节作为*bytes*参数、一串16个小端序字节作为*bytes_le*参数、一个由六个整数组成的元组（32位*time_low*，16位*time_mid*，16位*time_hi_version*，8位*clock_seq_hi_variant*，8位*clock_seq_low*，48位*node*）作为*fields*参数，或者一个128位整数作为*int*参数创建一个UUID。当给出一串十六进制数字时，大括号、连字符和URN前缀都是可选的。"
" 例如，这些表达式都产生相同的UUID::"

#: ../../library/uuid.rst:57
msgid ""
"UUID('{12345678-1234-5678-1234-567812345678}')\n"
"UUID('12345678123456781234567812345678')\n"
"UUID('urn:uuid:12345678-1234-5678-1234-567812345678')\n"
"UUID(bytes=b'\\x12\\x34\\x56\\x78'*4)\n"
"UUID(bytes_le=b'\\x78\\x56\\x34\\x12\\x34\\x12\\x78\\x56' +\n"
"              b'\\x12\\x34\\x56\\x78\\x12\\x34\\x56\\x78')\n"
"UUID(fields=(0x12345678, 0x1234, 0x5678, 0x12, 0x34, 0x567812345678))\n"
"UUID(int=0x12345678123456781234567812345678)"
msgstr ""
"UUID('{12345678-1234-5678-1234-567812345678}')\n"
"UUID('12345678123456781234567812345678')\n"
"UUID('urn:uuid:12345678-1234-5678-1234-567812345678')\n"
"UUID(bytes=b'\\x12\\x34\\x56\\x78'*4)\n"
"UUID(bytes_le=b'\\x78\\x56\\x34\\x12\\x34\\x12\\x78\\x56' +\n"
"              b'\\x12\\x34\\x56\\x78\\x12\\x34\\x56\\x78')\n"
"UUID(fields=(0x12345678, 0x1234, 0x5678, 0x12, 0x34, 0x567812345678))\n"
"UUID(int=0x12345678123456781234567812345678)"

#: ../../library/uuid.rst:66
msgid ""
"Exactly one of *hex*, *bytes*, *bytes_le*, *fields*, or *int* must be given."
" The *version* argument is optional; if given, the resulting UUID will have "
"its variant and version number set according to :rfc:`4122`, overriding bits"
" in the given *hex*, *bytes*, *bytes_le*, *fields*, or *int*."
msgstr ""
"必须给出 *hex*、*bytes*、*bytes_le*、*fields* 或 *int* 中的唯一一个。 *version* "
"参数是可选的；如果给定，产生的UUID将根据 :rfc:`4122` 设置其变体和版本号，覆盖给定的 "
"*hex*、*bytes*、*bytes_le*、*fields* 或 *int* 中的位。"

#: ../../library/uuid.rst:71
msgid ""
"Comparison of UUID objects are made by way of comparing their "
":attr:`UUID.int` attributes.  Comparison with a non-UUID object raises a "
":exc:`TypeError`."
msgstr ""
"UUID 对象的比较是通过比较它们的 :attr:`UUID.int` 属性进行的。 与非 UUID 对象的比较会引发 "
":exc:`TypeError`。"

#: ../../library/uuid.rst:75
msgid ""
"``str(uuid)`` returns a string in the form "
"``12345678-1234-5678-1234-567812345678`` where the 32 hexadecimal digits "
"represent the UUID."
msgstr ""
"``str(uuid)`` 返回一个 ``12345678-1234-5678-1234-567812345678`` 形式的字符串，其中 32 "
"位十六进制数字代表 UUID。"

#: ../../library/uuid.rst:79
msgid ":class:`UUID` instances have these read-only attributes:"
msgstr ":class:`UUID` 实例有这些只读的属性:"

#: ../../library/uuid.rst:83
msgid ""
"The UUID as a 16-byte string (containing the six integer fields in big-"
"endian byte order)."
msgstr "UUID是一个16字节的字符串（包含6个大端字节序的整数字段）。"

#: ../../library/uuid.rst:89
msgid ""
"The UUID as a 16-byte string (with *time_low*, *time_mid*, and "
"*time_hi_version* in little-endian byte order)."
msgstr ""
"UUID 是一个 16 字节的字符串（其中 *time_low*、*time_mid* 和 *time_hi_version* 为小端字节顺序）。"

#: ../../library/uuid.rst:95
msgid ""
"A tuple of the six integer fields of the UUID, which are also available as "
"six individual attributes and two derived attributes:"
msgstr "以元组形式存放的UUID的6个整数域，有六个单独的属性和两个派生属性："

#: ../../library/uuid.rst:100
msgid "Field"
msgstr "域"

#: ../../library/uuid.rst:101
msgid "Meaning"
msgstr "含意"

#: ../../library/uuid.rst:104
msgid "The first 32 bits of the UUID."
msgstr "UUID 的前 32 位。"

#: ../../library/uuid.rst:107 ../../library/uuid.rst:110
msgid "The next 16 bits of the UUID."
msgstr "UUID 后续的 16 位。"

#: ../../library/uuid.rst:113 ../../library/uuid.rst:116
msgid "The next 8 bits of the UUID."
msgstr "UUID 后续的 8 位。"

#: ../../library/uuid.rst:119
msgid "The last 48 bits of the UUID."
msgstr "UUID 的最后 48 位。"

#: ../../library/uuid.rst:122
msgid "The 60-bit timestamp."
msgstr "60 比特位的时间戳。"

#: ../../library/uuid.rst:125
msgid "The 14-bit sequence number."
msgstr "14 比特位的序列编号。"

#: ../../library/uuid.rst:130
msgid "The UUID as a 32-character lowercase hexadecimal string."
msgstr "UUID 是一个 32 字符的小写十六进制数码字符串。"

#: ../../library/uuid.rst:135
msgid "The UUID as a 128-bit integer."
msgstr "UUID是一个128位的整数。"

#: ../../library/uuid.rst:140
msgid "The UUID as a URN as specified in :rfc:`4122`."
msgstr "在 :rfc:`4122` 中定义的 URN 形式的 UUID。"

#: ../../library/uuid.rst:145
msgid ""
"The UUID variant, which determines the internal layout of the UUID. This "
"will be one of the constants :const:`RESERVED_NCS`, :const:`RFC_4122`, "
":const:`RESERVED_MICROSOFT`, or :const:`RESERVED_FUTURE`."
msgstr ""
"UUID 的变体，它决定了 UUID 的内部布局。 这将是 :const:`RESERVED_NCS`, :const:`RFC_4122`, "
":const:`RESERVED_MICROSOFT` 或 :const:`RESERVED_FUTURE` 中的一个。"

#: ../../library/uuid.rst:152
msgid ""
"The UUID version number (1 through 5, meaningful only when the variant is "
":const:`RFC_4122`)."
msgstr "UUID 版本号（1 到 5，只有当变体为 :const:`RFC_4122` 时才有意义）。"

#: ../../library/uuid.rst:157
msgid ""
"An enumeration of :class:`SafeUUID` which indicates whether the platform "
"generated the UUID in a multiprocessing-safe way."
msgstr "一个 :class:`SafeUUID` 的枚举，表示平台是否以多进程安全的方式生成 UUID。"

#: ../../library/uuid.rst:162
msgid "The :mod:`uuid` module defines the following functions:"
msgstr ":mod:`uuid` 模块定义了以下函数："

#: ../../library/uuid.rst:167
msgid ""
"Get the hardware address as a 48-bit positive integer.  The first time this "
"runs, it may launch a separate program, which could be quite slow.  If all "
"attempts to obtain the hardware address fail, we choose a random 48-bit "
"number with the multicast bit (least significant bit of the first octet) set"
" to 1 as recommended in :rfc:`4122`.  \"Hardware address\" means the MAC "
"address of a network interface.  On a machine with multiple network "
"interfaces, universally administered MAC addresses (i.e. where the second "
"least significant bit of the first octet is *unset*) will be preferred over "
"locally administered MAC addresses, but with no other ordering guarantees."
msgstr ""
"获取 48 位正整数形式的硬件地址。 第一次运行时，它可能会启动一个单独的程序，这可能会相当慢。 如果所有获取硬件地址的尝试都失败了，我们会按照 "
":rfc:`4122` 中的建议，选择一个随机的 48 位数字，其多播位 (第一个八进制数的最小有效位) 设置为 1。 “硬件地址”是指一个网络接口的 "
"MAC 地址。 在一台有多个网络接口的机器上，普遍管理的 MAC 地址 (即第一个八位数的第二个最小有效位是 *未设置的*) 将比本地管理的 MAC "
"地址优先，但没有其他排序保证。"

#: ../../library/uuid.rst:177
msgid ""
"Universally administered MAC addresses are preferred over locally "
"administered MAC addresses, since the former are guaranteed to be globally "
"unique, while the latter are not."
msgstr "普遍管理的MAC地址优于本地管理的MAC地址，因为前者保证是全球唯一的，而后者则不是。"

#: ../../library/uuid.rst:185
msgid ""
"Generate a UUID from a host ID, sequence number, and the current time. If "
"*node* is not given, :func:`getnode` is used to obtain the hardware address."
" If *clock_seq* is given, it is used as the sequence number; otherwise a "
"random 14-bit sequence number is chosen."
msgstr ""
"根据主机 ID、序列号和当前时间生成一个 UUID。 如果没有给出 *node*，则使用 :func:`getnode` 来获取硬件地址。 如果给出了 "
"*clock_seq*，它将被用作序列号；否则将选择一个随机的 14 比特位序列号。"

#: ../../library/uuid.rst:193
msgid ""
"Generate a UUID based on the MD5 hash of a namespace identifier (which is a "
"UUID) and a name (which is a :class:`bytes` object or a string that will be "
"encoded using UTF-8)."
msgstr ""
"根据命名空间标识符（一个 UUID）和名称（一个 :class:`bytes` 对象或将使用 UTF-8 进行编码的字符串）的 MD5 哈希值来生成一个"
" UUID。"

#: ../../library/uuid.rst:200
msgid "Generate a random UUID."
msgstr "生成一个随机的UUID。"

#: ../../library/uuid.rst:205
msgid ""
"Generate a UUID based on the SHA-1 hash of a namespace identifier (which is "
"a UUID) and a name (which is a :class:`bytes` object or a string that will "
"be encoded using UTF-8)."
msgstr ""
"根据命名空间标识符（一个 UUID）和名称（一个 :class:`bytes` 对象或将使用 UTF-8 进行编码的字符串）的 SHA-1 "
"哈希值来生成一个 UUID。"

#: ../../library/uuid.rst:210
msgid ""
"The :mod:`uuid` module defines the following namespace identifiers for use "
"with :func:`uuid3` or :func:`uuid5`."
msgstr ":mod:`uuid` 模块定义了以下命名空间标识符，供 :func:`uuid3` 或 :func:`uuid5` 使用。"

#: ../../library/uuid.rst:216
msgid ""
"When this namespace is specified, the *name* string is a fully qualified "
"domain name."
msgstr "当指定这个命名空间时，*name* 字符串是一个完全限定的域名。"

#: ../../library/uuid.rst:222
msgid "When this namespace is specified, the *name* string is a URL."
msgstr "当指定这个命名空间时，*name* 字符串是一个 URL。"

#: ../../library/uuid.rst:227
msgid "When this namespace is specified, the *name* string is an ISO OID."
msgstr "当指定这个命名空间时，*name* 字符串是一个 ISO OID。"

#: ../../library/uuid.rst:232
msgid ""
"When this namespace is specified, the *name* string is an X.500 DN in DER or"
" a text output format."
msgstr "当指定这个命名空间时，*name* 字符串是 DER 或文本输出格式的 X.500 DN。"

#: ../../library/uuid.rst:235
msgid ""
"The :mod:`uuid` module defines the following constants for the possible "
"values of the :attr:`~UUID.variant` attribute:"
msgstr ":mod:`uuid` 模块为 :attr:`~UUID.variant` 属性的可能值定义了以下常量："

#: ../../library/uuid.rst:241
msgid "Reserved for NCS compatibility."
msgstr "为NCS兼容性保留。"

#: ../../library/uuid.rst:246
msgid "Specifies the UUID layout given in :rfc:`4122`."
msgstr "指定 :rfc:`4122` 中给出的 UUID 布局。"

#: ../../library/uuid.rst:251
msgid "Reserved for Microsoft compatibility."
msgstr "为微软的兼容性保留。"

#: ../../library/uuid.rst:256
msgid "Reserved for future definition."
msgstr "保留给未来的定义。"

#: ../../library/uuid.rst:261
msgid ":rfc:`4122` - A Universally Unique IDentifier (UUID) URN Namespace"
msgstr ":rfc:`4122` - 通用唯一标识符（UUID）URN命名空间"

#: ../../library/uuid.rst:262
msgid ""
"This specification defines a Uniform Resource Name namespace for UUIDs, the "
"internal format of UUIDs, and methods of generating UUIDs."
msgstr "本规范定义了UUID的统一资源名称空间，UUID的内部格式，以及生成UUID的方法。"

#: ../../library/uuid.rst:269
msgid "Command-Line Usage"
msgstr "命令行用法"

#: ../../library/uuid.rst:273
msgid ""
"The :mod:`uuid` module can be executed as a script from the command line."
msgstr ":mod:`uuid` 模块可以在命令行下作为脚本来执行。"

#: ../../library/uuid.rst:275
msgid ""
"python -m uuid [-h] [-u {uuid1,uuid3,uuid4,uuid5}] [-n NAMESPACE] [-N NAME]"
msgstr ""
"python -m uuid [-h] [-u {uuid1,uuid3,uuid4,uuid5}] [-n NAMESPACE] [-N NAME]"

#: ../../library/uuid.rst:279
msgid "The following options are accepted:"
msgstr "可以接受以下选项："

#: ../../library/uuid.rst:285
msgid "Show the help message and exit."
msgstr "显示帮助信息并退出。"

#: ../../library/uuid.rst:290
msgid ""
"Specify the function name to use to generate the uuid. By default "
":func:`uuid4` is used."
msgstr "指定要用于生成 uuid 的函数名称。 默认会使用 :func:`uuid4`。"

#: ../../library/uuid.rst:296
msgid ""
"The namespace is a ``UUID``, or ``@ns`` where ``ns`` is a well-known "
"predefined UUID addressed by namespace name. Such as ``@dns``, ``@url``, "
"``@oid``, and ``@x500``. Only required for :func:`uuid3` / :func:`uuid5` "
"functions."
msgstr ""
"该命名空间是一个 ``UUID`` 或者 ``@ns`` 其中 ``ns`` 是一个以命名空间名称来定位的知名预定义 UUID。 例如 "
"``@dns``, ``@url``, ``@oid`` 和 ``@x500``。 仅对于 :func:`uuid3` / :func:`uuid5` "
"等函数是必需的。"

#: ../../library/uuid.rst:303
msgid ""
"The name used as part of generating the uuid. Only required for "
":func:`uuid3` / :func:`uuid5` functions."
msgstr "用作生成 uuid 的一部分的名称。 仅对于 :func:`uuid3` / :func:`uuid5` 等函数是必需的。"

#: ../../library/uuid.rst:310
msgid "Example"
msgstr "示例"

#: ../../library/uuid.rst:312
msgid "Here are some examples of typical usage of the :mod:`uuid` module::"
msgstr "下面是一些 :mod:`uuid` 模块的典型使用例子::"

#: ../../library/uuid.rst:314
msgid ""
">>> import uuid\n"
"\n"
">>> # make a UUID based on the host ID and current time\n"
">>> uuid.uuid1()\n"
"UUID('a8098c1a-f86e-11da-bd1a-00112444be1e')\n"
"\n"
">>> # make a UUID using an MD5 hash of a namespace UUID and a name\n"
">>> uuid.uuid3(uuid.NAMESPACE_DNS, 'python.org')\n"
"UUID('6fa459ea-ee8a-3ca4-894e-db77e160355e')\n"
"\n"
">>> # make a random UUID\n"
">>> uuid.uuid4()\n"
"UUID('16fd2706-8baf-433b-82eb-8c7fada847da')\n"
"\n"
">>> # make a UUID using a SHA-1 hash of a namespace UUID and a name\n"
">>> uuid.uuid5(uuid.NAMESPACE_DNS, 'python.org')\n"
"UUID('886313e1-3b8a-5372-9b90-0c9aee199e5d')\n"
"\n"
">>> # make a UUID from a string of hex digits (braces and hyphens ignored)\n"
">>> x = uuid.UUID('{00010203-0405-0607-0809-0a0b0c0d0e0f}')\n"
"\n"
">>> # convert a UUID to a string of hex digits in standard form\n"
">>> str(x)\n"
"'00010203-0405-0607-0809-0a0b0c0d0e0f'\n"
"\n"
">>> # get the raw 16 bytes of the UUID\n"
">>> x.bytes\n"
"b'\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\t\\n\\x0b\\x0c\\r\\x0e\\x0f'\n"
"\n"
">>> # make a UUID from a 16-byte string\n"
">>> uuid.UUID(bytes=x.bytes)\n"
"UUID('00010203-0405-0607-0809-0a0b0c0d0e0f')"
msgstr ""
">>> import uuid\n"
"\n"
">>> # 基于主机 ID 和当前时间生成一个 UUID\n"
">>> uuid.uuid1()\n"
"UUID('a8098c1a-f86e-11da-bd1a-00112444be1e')\n"
"\n"
">>> # 使用命名空间 UUID 和特定名称的 MD5 哈希值生成一个 UUID\n"
">>> uuid.uuid3(uuid.NAMESPACE_DNS, 'python.org')\n"
"UUID('6fa459ea-ee8a-3ca4-894e-db77e160355e')\n"
"\n"
">>> # 生成一个随机 UUID\n"
">>> uuid.uuid4()\n"
"UUID('16fd2706-8baf-433b-82eb-8c7fada847da')\n"
"\n"
">>> # 使用命名空间 UUID 和特定名称的 SHA-1 哈希值生成一个 UUID\n"
">>> uuid.uuid5(uuid.NAMESPACE_DNS, 'python.org')\n"
"UUID('886313e1-3b8a-5372-9b90-0c9aee199e5d')\n"
"\n"
">>> # 基于十六进制数码字符串（忽略花括号和连字符）生成一个 UUID\n"
">>> x = uuid.UUID('{00010203-0405-0607-0809-0a0b0c0d0e0f}')\n"
"\n"
">>> # 将一个 UUID 转换为标准格式的十六进制数码字符串\n"
">>> str(x)\n"
"'00010203-0405-0607-0809-0a0b0c0d0e0f'\n"
"\n"
">>> # 获取 UUID 的 16 字节原始字节串\n"
">>> x.bytes\n"
"b'\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\t\\n\\x0b\\x0c\\r\\x0e\\x0f'\n"
"\n"
">>> # 基于 16 字节形式的字符串获取 UUID\n"
">>> uuid.UUID(bytes=x.bytes)\n"
"UUID('00010203-0405-0607-0809-0a0b0c0d0e0f')"

#: ../../library/uuid.rst:351
msgid "Command-Line Example"
msgstr "命令行示例"

#: ../../library/uuid.rst:353
msgid ""
"Here are some examples of typical usage of the :mod:`uuid` command line "
"interface:"
msgstr "下面是一些 :mod:`uuid` 命令行接口的典型用法示例:"

#: ../../library/uuid.rst:355
msgid ""
"# generate a random uuid - by default uuid4() is used\n"
"$ python -m uuid\n"
"\n"
"# generate a uuid using uuid1()\n"
"$ python -m uuid -u uuid1\n"
"\n"
"# generate a uuid using uuid5\n"
"$ python -m uuid -u uuid5 -n @url -N example.com"
msgstr ""
"# 生成一个随机的 uuid - 默认将使用 uuid4()\n"
"$ python -m uuid\n"
"\n"
"# 使用 uuid1() 生成一个 uuid\n"
"$ python -m uuid -u uuid1\n"
"\n"
"# 使用 uuid5 生成一个 uuid \n"
"$ python -m uuid -u uuid5 -n @url -N example.com"
