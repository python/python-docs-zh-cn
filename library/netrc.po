# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2025
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-06-27 14:20+0000\n"
"PO-Revision-Date: 2025-07-18 18:49+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2025\n"
"Language-Team: Chinese (China) (https://app.transifex.com/python-doc/teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/netrc.rst:2
msgid ":mod:`!netrc` --- netrc file processing"
msgstr ":mod:`!netrc` --- netrc 文件处理"

#: ../../library/netrc.rst:10
msgid "**Source code:** :source:`Lib/netrc.py`"
msgstr "**源代码:** :source:`Lib/netrc.py`"

#: ../../library/netrc.rst:14
msgid ""
"The :class:`~netrc.netrc` class parses and encapsulates the netrc file "
"format used by the Unix :program:`ftp` program and other FTP clients."
msgstr ""
":class:`~netrc.netrc` 类解析并封装了 Unix 的 :program:`ftp` 程序和其他 FTP 客户端所使用的 netrc "
"文件格式。"

#: ../../library/netrc.rst:20
msgid ""
"A :class:`~netrc.netrc` instance or subclass instance encapsulates data from"
"  a netrc file.  The initialization argument, if present, specifies the file"
" to parse.  If no argument is given, the file :file:`.netrc` in the user's "
"home directory -- as determined by :func:`os.path.expanduser` -- will be "
"read.  Otherwise, a :exc:`FileNotFoundError` exception will be raised. Parse"
" errors will raise :exc:`NetrcParseError` with diagnostic information "
"including the file name, line number, and terminating token."
msgstr ""
":class:`~netrc.netrc` 的实例或其子类的实例封装了来自 netrc 文件的数据。 如果有初始化参数，它将指明要解析的文件。 "
"如果未给出参数，则位于用户的家目录的 :file:`.netrc` 文件 -- 即 :func:`os.path.expanduser` 所确定的文件 "
"-- 将会被读取。 在其他情况下，则将引发 :exc:`FileNotFoundError` 异常。 解析错误将引发 "
":exc:`NetrcParseError` 并附带诊断信息，包括文件名、行号以及终止令牌。"

#: ../../library/netrc.rst:28
msgid ""
"If no argument is specified on a POSIX system, the presence of passwords in "
"the :file:`.netrc` file will raise a :exc:`NetrcParseError` if the file "
"ownership or permissions are insecure (owned by a user other than the user "
"running the process, or accessible for read or write by any other user). "
"This implements security behavior equivalent to that of ftp and other "
"programs that use :file:`.netrc`. Such security checks are not available on "
"platforms that do not support :func:`os.getuid`."
msgstr ""
"如果在 POSIX 系统上未指明参数，则当 :file:`.netrc` "
"文件中有密码时，如果文件归属或权限不安全（归属的用户不是运行进程的用户，或者可供任何其他用户读取或写入）将引发 "
":exc:`NetrcParseError`。 这实现了与 ftp 和其他使用 :file:`.netrc` 的程序同等的安全行为。 "
"这样的安全检查在不支持 :func:`os.getuid` 的平台上将不可用。"

#: ../../library/netrc.rst:36
msgid "Added the POSIX permission check."
msgstr "添加了 POSIX 权限检查。"

#: ../../library/netrc.rst:38
msgid ""
":func:`os.path.expanduser` is used to find the location of the "
":file:`.netrc` file when *file* is not passed as argument."
msgstr ""
"当未将 *file* 作为参数传入时会使用 :func:`os.path.expanduser` 来查找 :file:`.netrc` 文件的位置。"

#: ../../library/netrc.rst:42
msgid ""
":class:`netrc` try UTF-8 encoding before using locale specific encoding. The"
" entry in the netrc file no longer needs to contain all tokens.  The missing"
" tokens' value default to an empty string.  All the tokens and their values "
"now can contain arbitrary characters, like whitespace and non-ASCII "
"characters. If the login name is anonymous, it won't trigger the security "
"check."
msgstr ""
":class:`netrc` 会在使用语言区域专属的编码格式之前先尝试 UTF-8 编码格式。 netrc 文件中的条目不再需要包括所有凭据。 "
"缺失的凭据值默认将为空字符串。 所有的凭据及其值现在可以包含任意字符，如空格和非 ASCII 字符。 如果登录名为 "
"anonymous，它将不会触发安全检查。"

#: ../../library/netrc.rst:53
msgid ""
"Exception raised by the :class:`~netrc.netrc` class when syntactical errors "
"are encountered in source text.  Instances of this exception provide three "
"interesting attributes:"
msgstr "当源代码文本中出现语法错误时由 :class:`~netrc.netrc` 类所引发的异常。 该异常的实例提供了三个有用的属性:"

#: ../../library/netrc.rst:59
msgid "Textual explanation of the error."
msgstr "错误的解释性文本。"

#: ../../library/netrc.rst:63
msgid "The name of the source file."
msgstr "源代码文件名。"

#: ../../library/netrc.rst:67
msgid "The line number on which the error was found."
msgstr "发现错误所在的行号。"

#: ../../library/netrc.rst:73
msgid "netrc Objects"
msgstr "netrc 对象"

#: ../../library/netrc.rst:75
msgid "A :class:`~netrc.netrc` instance has the following methods:"
msgstr ":class:`~netrc.netrc` 实例具有下列方法:"

#: ../../library/netrc.rst:80
msgid ""
"Return a 3-tuple ``(login, account, password)`` of authenticators for "
"*host*. If the netrc file did not contain an entry for the given host, "
"return the tuple associated with the 'default' entry.  If neither matching "
"host nor default entry is available, return ``None``."
msgstr ""
"针对 *host* 的身份验证者返回一个 3 元组 ``(login, account, password)``。 如果 netrc "
"文件不包含针对给定主机的条目，则返回关联到 'default' 条目的元组。 如果匹配的主机或默认条目均不可用，则返回 ``None``。"

#: ../../library/netrc.rst:88
msgid ""
"Dump the class data as a string in the format of a netrc file. (This "
"discards comments and may reorder the entries.)"
msgstr "将类数据以 netrc 文件的格式转储为一个字符串。 （这会丢弃注释并可能重排条目顺序。）"

#: ../../library/netrc.rst:91
msgid "Instances of :class:`~netrc.netrc` have public instance variables:"
msgstr ":class:`~netrc.netrc` 的实例具有一些公共实例变量:"

#: ../../library/netrc.rst:96
msgid ""
"Dictionary mapping host names to ``(login, account, password)`` tuples.  The"
" 'default' entry, if any, is represented as a pseudo-host by that name."
msgstr ""
"将主机名映射到 ``(login, account, password)`` 元组的字典。 如果存在 'default' "
"条目，则会表示为使用该名称的伪主机。"

#: ../../library/netrc.rst:102
msgid "Dictionary mapping macro names to string lists."
msgstr "将宏名称映射到字符串列表的字典。"
