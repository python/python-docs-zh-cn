# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-07-25 16:48+0000\n"
"PO-Revision-Date: 2025-07-18 20:05+0000\n"
"Language-Team: Chinese (China) (https://app.transifex.com/python-doc/teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/ftplib.rst:2
msgid ":mod:`ftplib` --- FTP protocol client"
msgstr ""

#: ../../library/ftplib.rst:7
msgid "**Source code:** :source:`Lib/ftplib.py`"
msgstr ""

#: ../../library/ftplib.rst:15
msgid ""
"This module defines the class :class:`FTP` and a few related items. The "
":class:`FTP` class implements the client side of the FTP protocol.  You can "
"use this to write Python programs that perform a variety of automated FTP "
"jobs, such as mirroring other FTP servers.  It is also used by the module "
":mod:`urllib.request` to handle URLs that use FTP.  For more information on "
"FTP (File Transfer Protocol), see internet :rfc:`959`."
msgstr ""

#: ../../library/ftplib.rst:22
msgid "The default encoding is UTF-8, following :rfc:`2640`."
msgstr ""

#: ../../includes/wasm-notavail.rst:3
msgid ":ref:`Availability <availability>`: not Emscripten, not WASI."
msgstr ""

#: ../../includes/wasm-notavail.rst:5
msgid ""
"This module does not work or is not available on WebAssembly platforms "
"``wasm32-emscripten`` and ``wasm32-wasi``. See :ref:`wasm-availability` for "
"more information."
msgstr ""

#: ../../library/ftplib.rst:26
msgid "Here's a sample session using the :mod:`ftplib` module::"
msgstr ""

#: ../../library/ftplib.rst:51
msgid "Reference"
msgstr ""

#: ../../library/ftplib.rst:56
msgid "FTP objects"
msgstr ""

#: ../../library/ftplib.rst:87
msgid "Return a new instance of the :class:`FTP` class."
msgstr ""

#: ../../library/ftplib.rst:0
msgid "Parameters"
msgstr ""

#: ../../library/ftplib.rst:89 ../../library/ftplib.rst:462
msgid ""
"The hostname to connect to. If given, :code:`connect(host)` is implicitly "
"called by the constructor."
msgstr ""

#: ../../library/ftplib.rst:93 ../../library/ftplib.rst:466
msgid ""
"|param_doc_user| If given, :code:`login(host, passwd, acct)` is implicitly "
"called by the constructor."
msgstr ""

#: ../../library/ftplib.rst:98 ../../library/ftplib.rst:212
#: ../../library/ftplib.rst:471
msgid "|param_doc_passwd|"
msgstr ""

#: ../../library/ftplib.rst:101 ../../library/ftplib.rst:215
#: ../../library/ftplib.rst:474
msgid "|param_doc_acct|"
msgstr ""

#: ../../library/ftplib.rst:104
msgid ""
"A timeout in seconds for blocking operations like :meth:`connect` (default: "
"the global default timeout setting)."
msgstr ""

#: ../../library/ftplib.rst:109 ../../library/ftplib.rst:183
#: ../../library/ftplib.rst:489
msgid "|param_doc_source_address|"
msgstr ""

#: ../../library/ftplib.rst:113 ../../library/ftplib.rst:493
msgid "|param_doc_encoding|"
msgstr ""

#: ../../library/ftplib.rst:116
msgid "The :class:`FTP` class supports the :keyword:`with` statement, e.g.:"
msgstr ""

#: ../../library/ftplib.rst:130
msgid "Support for the :keyword:`with` statement was added."
msgstr ""

#: ../../library/ftplib.rst:133 ../../library/ftplib.rst:189
msgid "*source_address* parameter was added."
msgstr ""

#: ../../library/ftplib.rst:136 ../../library/ftplib.rst:517
msgid ""
"If the *timeout* parameter is set to be zero, it will raise a "
":class:`ValueError` to prevent the creation of a non-blocking socket. The "
"*encoding* parameter was added, and the default was changed from Latin-1 to "
"UTF-8 to follow :rfc:`2640`."
msgstr ""

#: ../../library/ftplib.rst:142
msgid ""
"Several :class:`!FTP` methods are available in two flavors: one for handling"
" text files and another for binary files. The methods are named for the "
"command which is used followed by ``lines`` for the text version or "
"``binary`` for the binary version."
msgstr ""

#: ../../library/ftplib.rst:147
msgid ":class:`FTP` instances have the following methods:"
msgstr ""

#: ../../library/ftplib.rst:151
msgid ""
"Set the instance's debugging level as an :class:`int`. This controls the "
"amount of debugging output printed. The debug levels are:"
msgstr ""

#: ../../library/ftplib.rst:155
msgid "``0`` (default): No debug output."
msgstr ""

#: ../../library/ftplib.rst:156
msgid ""
"``1``: Produce a moderate amount of debug output, generally a single line "
"per request."
msgstr ""

#: ../../library/ftplib.rst:158
msgid ""
"``2`` or higher: Produce the maximum amount of debugging output, logging "
"each line sent and received on the control connection."
msgstr ""

#: ../../library/ftplib.rst:163
msgid ""
"Connect to the given host and port. This function should be called only once"
" for each instance; it should not be called if a *host* argument was given "
"when the :class:`FTP` instance was created. All other :class:`!FTP` methods "
"can only be called after a connection has successfully been made."
msgstr ""

#: ../../library/ftplib.rst:170
msgid "The host to connect to."
msgstr ""

#: ../../library/ftplib.rst:173
msgid ""
"The TCP port to connect to (default: ``21``, as specified by the FTP "
"protocol specification). It is rarely needed to specify a different port "
"number."
msgstr ""

#: ../../library/ftplib.rst:178
msgid ""
"A timeout in seconds for the connection attempt (default: the global default"
" timeout setting)."
msgstr ""

#: ../../library/ftplib.rst:198
msgid ""
"Raises an :ref:`auditing event <auditing>` ``ftplib.connect`` with arguments"
" ``self``, ``host``, ``port``."
msgstr ""

#: ../../library/ftplib.rst:195
msgid ""
"Return the welcome message sent by the server in reply to the initial "
"connection.  (This message sometimes contains disclaimers or help "
"information that may be relevant to the user.)"
msgstr ""

#: ../../library/ftplib.rst:202
msgid ""
"Log on to the connected FTP server. This function should be called only once"
" for each instance, after a connection has been established; it should not "
"be called if the *host* and *user* arguments were given when the "
":class:`FTP` instance was created. Most FTP commands are only allowed after "
"the client has logged in."
msgstr ""

#: ../../library/ftplib.rst:209
msgid "|param_doc_user|"
msgstr ""

#: ../../library/ftplib.rst:221
msgid ""
"Abort a file transfer that is in progress.  Using this does not always work,"
" but it's worth a try."
msgstr ""

#: ../../library/ftplib.rst:227
msgid ""
"Send a simple command string to the server and return the response string."
msgstr ""

#: ../../library/ftplib.rst:240 ../../library/ftplib.rst:249
msgid ""
"Raises an :ref:`auditing event <auditing>` ``ftplib.sendcmd`` with arguments"
" ``self``, ``cmd``."
msgstr ""

#: ../../library/ftplib.rst:234
msgid ""
"Send a simple command string to the server and handle the response.  Return "
"the response string if the response code corresponds to success (codes in "
"the range 200--299).  Raise :exc:`error_reply` otherwise."
msgstr ""

#: ../../library/ftplib.rst:243
msgid "Retrieve a file in binary transfer mode."
msgstr ""

#: ../../library/ftplib.rst:245 ../../library/ftplib.rst:289
msgid "An appropriate ``STOR`` command: :samp:`\"STOR {filename}\"`."
msgstr ""

#: ../../library/ftplib.rst:248
msgid ""
"A single parameter callable that is called for each block of data received, "
"with its single argument being the data as :class:`bytes`."
msgstr ""

#: ../../library/ftplib.rst:254
msgid ""
"The maximum chunk size to read on the low-level :class:`~socket.socket` "
"object created to do the actual transfer. This also corresponds to the "
"largest size of data that will be passed to *callback*. Defaults to "
"``8192``."
msgstr ""

#: ../../library/ftplib.rst:261 ../../library/ftplib.rst:308
msgid ""
"A ``REST`` command to be sent to the server. See the documentation for the "
"*rest* parameter of the :meth:`transfercmd` method."
msgstr ""

#: ../../library/ftplib.rst:268
msgid ""
"Retrieve a file or directory listing in the encoding specified by the "
"*encoding* parameter at initialization. *cmd* should be an appropriate "
"``RETR`` command (see :meth:`retrbinary`) or a command such as ``LIST`` or "
"``NLST`` (usually just the string ``'LIST'``). ``LIST`` retrieves a list of "
"files and information about those files. ``NLST`` retrieves a list of file "
"names. The *callback* function is called for each line with a string "
"argument containing the line with the trailing CRLF stripped.  The default "
"*callback* prints the line to :data:`sys.stdout`."
msgstr ""

#: ../../library/ftplib.rst:281
msgid ""
"Enable \"passive\" mode if *val* is true, otherwise disable passive mode. "
"Passive mode is on by default."
msgstr ""

#: ../../library/ftplib.rst:287
msgid "Store a file in binary transfer mode."
msgstr ""

#: ../../library/ftplib.rst:292
msgid ""
"A file object (opened in binary mode) which is read until EOF, using its "
":meth:`~io.RawIOBase.read` method in blocks of size *blocksize* to provide "
"the data to be stored."
msgstr ""

#: ../../library/ftplib.rst:298
msgid "The read block size. Defaults to ``8192``."
msgstr ""

#: ../../library/ftplib.rst:302
msgid ""
"A single parameter callable that is called for each block of data sent, with"
" its single argument being the data as :class:`bytes`."
msgstr ""

#: ../../library/ftplib.rst:312
msgid "The *rest* parameter was added."
msgstr ""

#: ../../library/ftplib.rst:318
msgid ""
"Store a file in line mode.  *cmd* should be an appropriate ``STOR`` command "
"(see :meth:`storbinary`).  Lines are read until EOF from the :term:`file "
"object` *fp* (opened in binary mode) using its :meth:`~io.IOBase.readline` "
"method to provide the data to be stored.  *callback* is an optional single "
"parameter callable that is called on each line after it is sent."
msgstr ""

#: ../../library/ftplib.rst:327
msgid ""
"Initiate a transfer over the data connection.  If the transfer is active, "
"send an ``EPRT`` or  ``PORT`` command and the transfer command specified by "
"*cmd*, and accept the connection.  If the server is passive, send an "
"``EPSV`` or ``PASV`` command, connect to it, and start the transfer command."
"  Either way, return the socket for the connection."
msgstr ""

#: ../../library/ftplib.rst:333
msgid ""
"If optional *rest* is given, a ``REST`` command is sent to the server, "
"passing *rest* as an argument.  *rest* is usually a byte offset into the "
"requested file, telling the server to restart sending the file's bytes at "
"the requested offset, skipping over the initial bytes.  Note however that "
"the :meth:`transfercmd` method converts *rest* to a string with the "
"*encoding* parameter specified at initialization, but no check is performed "
"on the string's contents.  If the server does not recognize the ``REST`` "
"command, an :exc:`error_reply` exception will be raised.  If this happens, "
"simply call :meth:`transfercmd` without a *rest* argument."
msgstr ""

#: ../../library/ftplib.rst:346
msgid ""
"Like :meth:`transfercmd`, but returns a tuple of the data connection and the"
" expected size of the data.  If the expected size could not be computed, "
"``None`` will be returned as the expected size.  *cmd* and *rest* means the "
"same thing as in :meth:`transfercmd`."
msgstr ""

#: ../../library/ftplib.rst:354
msgid ""
"List a directory in a standardized format by using ``MLSD`` command "
"(:rfc:`3659`).  If *path* is omitted the current directory is assumed. "
"*facts* is a list of strings representing the type of information desired "
"(e.g. ``[\"type\", \"size\", \"perm\"]``).  Return a generator object "
"yielding a tuple of two elements for every file found in path.  First "
"element is the file name, the second one is a dictionary containing facts "
"about the file name.  Content of this dictionary might be limited by the "
"*facts* argument but server is not guaranteed to return all requested facts."
msgstr ""

#: ../../library/ftplib.rst:368
msgid ""
"Return a list of file names as returned by the ``NLST`` command.  The "
"optional *argument* is a directory to list (default is the current server "
"directory).  Multiple arguments can be used to pass non-standard options to "
"the ``NLST`` command."
msgstr ""

#: ../../library/ftplib.rst:373 ../../library/ftplib.rst:385
msgid "If your server supports the command, :meth:`mlsd` offers a better API."
msgstr ""

#: ../../library/ftplib.rst:378
msgid ""
"Produce a directory listing as returned by the ``LIST`` command, printing it"
" to standard output.  The optional *argument* is a directory to list "
"(default is the current server directory).  Multiple arguments can be used "
"to pass non-standard options to the ``LIST`` command.  If the last argument "
"is a function, it is used as a *callback* function as for :meth:`retrlines`;"
" the default prints to :data:`sys.stdout`.  This method returns ``None``."
msgstr ""

#: ../../library/ftplib.rst:390
msgid "Rename file *fromname* on the server to *toname*."
msgstr ""

#: ../../library/ftplib.rst:395
msgid ""
"Remove the file named *filename* from the server.  If successful, returns "
"the text of the response, otherwise raises :exc:`error_perm` on permission "
"errors or :exc:`error_reply` on other errors."
msgstr ""

#: ../../library/ftplib.rst:402
msgid "Set the current directory on the server."
msgstr ""

#: ../../library/ftplib.rst:407
msgid "Create a new directory on the server."
msgstr ""

#: ../../library/ftplib.rst:412
msgid "Return the pathname of the current directory on the server."
msgstr ""

#: ../../library/ftplib.rst:417
msgid "Remove the directory named *dirname* on the server."
msgstr ""

#: ../../library/ftplib.rst:422
msgid ""
"Request the size of the file named *filename* on the server.  On success, "
"the size of the file is returned as an integer, otherwise ``None`` is "
"returned. Note that the ``SIZE`` command is not  standardized, but is "
"supported by many common server implementations."
msgstr ""

#: ../../library/ftplib.rst:430
msgid ""
"Send a ``QUIT`` command to the server and close the connection. This is the "
"\"polite\" way to close a connection, but it may raise an exception if the "
"server responds with an error to the ``QUIT`` command.  This implies a call "
"to the :meth:`close` method which renders the :class:`FTP` instance useless "
"for subsequent calls (see below)."
msgstr ""

#: ../../library/ftplib.rst:439
msgid ""
"Close the connection unilaterally.  This should not be applied to an already"
" closed connection such as after a successful call to :meth:`~FTP.quit`. "
"After this call the :class:`FTP` instance should not be used any more (after"
" a call to :meth:`close` or :meth:`~FTP.quit` you cannot reopen the "
"connection by issuing another :meth:`login` method)."
msgstr ""

#: ../../library/ftplib.rst:447
msgid "FTP_TLS objects"
msgstr ""

#: ../../library/ftplib.rst:453
msgid ""
"An :class:`FTP` subclass which adds TLS support to FTP as described in "
":rfc:`4217`. Connect to port 21 implicitly securing the FTP control "
"connection before authenticating."
msgstr ""

#: ../../library/ftplib.rst:459
msgid ""
"The user must explicitly secure the data connection by calling the "
":meth:`prot_p` method."
msgstr ""

#: ../../library/ftplib.rst:477
msgid ""
"An SSL context object which allows bundling SSL configuration options, "
"certificates and private keys into a single, potentially long-lived, "
"structure. Please read :ref:`ssl-security` for best practices."
msgstr ""

#: ../../library/ftplib.rst:484
msgid ""
"A timeout in seconds for blocking operations like :meth:`~FTP.connect` "
"(default: the global default timeout setting)."
msgstr ""

#: ../../library/ftplib.rst:496
msgid ""
"*keyfile* and *certfile* are a legacy alternative to *context* -- they can "
"point to PEM-formatted private key and certificate chain files "
"(respectively) for the SSL connection."
msgstr ""

#: ../../library/ftplib.rst:502
msgid "Added the *source_address* parameter."
msgstr ""

#: ../../library/ftplib.rst:505
msgid ""
"The class now supports hostname check with "
":attr:`ssl.SSLContext.check_hostname` and *Server Name Indication* (see "
":const:`ssl.HAS_SNI`)."
msgstr ""

#: ../../library/ftplib.rst:512
msgid ""
"*keyfile* and *certfile* are deprecated in favor of *context*. Please use "
":meth:`ssl.SSLContext.load_cert_chain` instead, or let "
":func:`ssl.create_default_context` select the system's trusted CA "
"certificates for you."
msgstr ""

#: ../../library/ftplib.rst:523
msgid "Here's a sample session using the :class:`FTP_TLS` class::"
msgstr ""

#: ../../library/ftplib.rst:533
msgid ""
":class:`!FTP_TLS` class inherits from :class:`FTP`, defining these "
"additional methods and attributes:"
msgstr ""

#: ../../library/ftplib.rst:538
msgid "The SSL version to use (defaults to :data:`ssl.PROTOCOL_SSLv23`)."
msgstr ""

#: ../../library/ftplib.rst:542
msgid ""
"Set up a secure control connection by using TLS or SSL, depending on what is"
" specified in the :attr:`ssl_version` attribute."
msgstr ""

#: ../../library/ftplib.rst:545
msgid ""
"The method now supports hostname check with "
":attr:`ssl.SSLContext.check_hostname` and *Server Name Indication* (see "
":const:`ssl.HAS_SNI`)."
msgstr ""

#: ../../library/ftplib.rst:552
msgid ""
"Revert control channel back to plaintext.  This can be useful to take "
"advantage of firewalls that know how to handle NAT with non-secure FTP "
"without opening fixed ports."
msgstr ""

#: ../../library/ftplib.rst:560
msgid "Set up secure data connection."
msgstr ""

#: ../../library/ftplib.rst:564
msgid "Set up clear text data connection."
msgstr ""

#: ../../library/ftplib.rst:568
msgid "Module variables"
msgstr ""

#: ../../library/ftplib.rst:572
msgid "Exception raised when an unexpected reply is received from the server."
msgstr ""

#: ../../library/ftplib.rst:577
msgid ""
"Exception raised when an error code signifying a temporary error (response "
"codes in the range 400--499) is received."
msgstr ""

#: ../../library/ftplib.rst:583
msgid ""
"Exception raised when an error code signifying a permanent error (response "
"codes in the range 500--599) is received."
msgstr ""

#: ../../library/ftplib.rst:589
msgid ""
"Exception raised when a reply is received from the server that does not fit "
"the response specifications of the File Transfer Protocol, i.e. begin with a"
" digit in the range 1--5."
msgstr ""

#: ../../library/ftplib.rst:596
msgid ""
"The set of all exceptions (as a tuple) that methods of :class:`FTP` "
"instances may raise as a result of problems with the FTP connection (as "
"opposed to programming errors made by the caller).  This set includes the "
"four exceptions listed above as well as :exc:`OSError` and :exc:`EOFError`."
msgstr ""

#: ../../library/ftplib.rst:606
msgid "Module :mod:`netrc`"
msgstr ""

#: ../../library/ftplib.rst:605
msgid ""
"Parser for the :file:`.netrc` file format.  The file :file:`.netrc` is "
"typically used by FTP clients to load user authentication information before"
" prompting the user."
msgstr ""

#: ../../library/ftplib.rst:9
msgid "FTP"
msgstr ""

#: ../../library/ftplib.rst:9
msgid "protocol"
msgstr ""

#: ../../library/ftplib.rst:9
msgid "ftplib (standard module)"
msgstr ""
