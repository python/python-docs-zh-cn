# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.9\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-07-25 19:10+0000\n"
"PO-Revision-Date: 2025-07-18 19:17+0000\n"
"Language-Team: Chinese (China) (https://app.transifex.com/python-doc/teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/ftplib.rst:2
msgid ":mod:`ftplib` --- FTP protocol client"
msgstr ""

#: ../../library/ftplib.rst:7
msgid "**Source code:** :source:`Lib/ftplib.py`"
msgstr ""

#: ../../library/ftplib.rst:15
msgid ""
"This module defines the class :class:`FTP` and a few related items. The "
":class:`FTP` class implements the client side of the FTP protocol.  You can "
"use this to write Python programs that perform a variety of automated FTP "
"jobs, such as mirroring other FTP servers.  It is also used by the module "
":mod:`urllib.request` to handle URLs that use FTP.  For more information on "
"FTP (File Transfer Protocol), see Internet :rfc:`959`."
msgstr ""

#: ../../library/ftplib.rst:22
msgid "The default encoding is UTF-8, following :rfc:`2640`."
msgstr ""

#: ../../library/ftplib.rst:24
msgid "Here's a sample session using the :mod:`ftplib` module::"
msgstr ""

#: ../../library/ftplib.rst:46
msgid "The module defines the following items:"
msgstr ""

#: ../../library/ftplib.rst:50
msgid ""
"Return a new instance of the :class:`FTP` class.  When *host* is given, the "
"method call ``connect(host)`` is made.  When *user* is given, additionally "
"the method call ``login(user, passwd, acct)`` is made (where *passwd* and "
"*acct* default to the empty string when not given).  The optional *timeout* "
"parameter specifies a timeout in seconds for blocking operations like the "
"connection attempt (if is not specified, the global default timeout setting "
"will be used). *source_address* is a 2-tuple ``(host, port)`` for the socket"
" to bind to as its source address before connecting. The *encoding* "
"parameter specifies the encoding for directories and filenames."
msgstr ""

#: ../../library/ftplib.rst:60
msgid "The :class:`FTP` class supports the :keyword:`with` statement, e.g.:"
msgstr ""

#: ../../library/ftplib.rst:74
msgid "Support for the :keyword:`with` statement was added."
msgstr ""

#: ../../library/ftplib.rst:77 ../../library/ftplib.rst:103
#: ../../library/ftplib.rst:212
msgid "*source_address* parameter was added."
msgstr ""

#: ../../library/ftplib.rst:80 ../../library/ftplib.rst:118
msgid ""
"If the *timeout* parameter is set to be zero, it will raise a "
":class:`ValueError` to prevent the creation of a non-blocking socket. The "
"*encoding* parameter was added, and the default was changed from Latin-1 to "
"UTF-8 to follow :rfc:`2640`."
msgstr ""

#: ../../library/ftplib.rst:88
msgid ""
"A :class:`FTP` subclass which adds TLS support to FTP as described in "
":rfc:`4217`. Connect as usual to port 21 implicitly securing the FTP control"
" connection before authenticating. Securing the data connection requires the"
" user to explicitly ask for it by calling the :meth:`prot_p` method.  "
"*context* is a :class:`ssl.SSLContext` object which allows bundling SSL "
"configuration options, certificates and private keys into a single "
"(potentially long-lived) structure.  Please read :ref:`ssl-security` for "
"best practices."
msgstr ""

#: ../../library/ftplib.rst:97
msgid ""
"*keyfile* and *certfile* are a legacy alternative to *context* -- they can "
"point to PEM-formatted private key and certificate chain files "
"(respectively) for the SSL connection."
msgstr ""

#: ../../library/ftplib.rst:106
msgid ""
"The class now supports hostname check with "
":attr:`ssl.SSLContext.check_hostname` and *Server Name Indication* (see "
":data:`ssl.HAS_SNI`)."
msgstr ""

#: ../../library/ftplib.rst:113
msgid ""
"*keyfile* and *certfile* are deprecated in favor of *context*. Please use "
":meth:`ssl.SSLContext.load_cert_chain` instead, or let "
":func:`ssl.create_default_context` select the system's trusted CA "
"certificates for you."
msgstr ""

#: ../../library/ftplib.rst:124
msgid "Here's a sample session using the :class:`FTP_TLS` class::"
msgstr ""

#: ../../library/ftplib.rst:137
msgid "Exception raised when an unexpected reply is received from the server."
msgstr ""

#: ../../library/ftplib.rst:142
msgid ""
"Exception raised when an error code signifying a temporary error (response "
"codes in the range 400--499) is received."
msgstr ""

#: ../../library/ftplib.rst:148
msgid ""
"Exception raised when an error code signifying a permanent error (response "
"codes in the range 500--599) is received."
msgstr ""

#: ../../library/ftplib.rst:154
msgid ""
"Exception raised when a reply is received from the server that does not fit "
"the response specifications of the File Transfer Protocol, i.e. begin with a"
" digit in the range 1--5."
msgstr ""

#: ../../library/ftplib.rst:161
msgid ""
"The set of all exceptions (as a tuple) that methods of :class:`FTP` "
"instances may raise as a result of problems with the FTP connection (as "
"opposed to programming errors made by the caller).  This set includes the "
"four exceptions listed above as well as :exc:`OSError` and :exc:`EOFError`."
msgstr ""

#: ../../library/ftplib.rst:171
msgid "Module :mod:`netrc`"
msgstr ""

#: ../../library/ftplib.rst:170
msgid ""
"Parser for the :file:`.netrc` file format.  The file :file:`.netrc` is "
"typically used by FTP clients to load user authentication information before"
" prompting the user."
msgstr ""

#: ../../library/ftplib.rst:178
msgid "FTP Objects"
msgstr ""

#: ../../library/ftplib.rst:180
msgid ""
"Several methods are available in two flavors: one for handling text files "
"and another for binary files.  These are named for the command which is used"
" followed by ``lines`` for the text version or ``binary`` for the binary "
"version."
msgstr ""

#: ../../library/ftplib.rst:184
msgid ":class:`FTP` instances have the following methods:"
msgstr ""

#: ../../library/ftplib.rst:189
msgid ""
"Set the instance's debugging level.  This controls the amount of debugging "
"output printed.  The default, ``0``, produces no debugging output.  A value "
"of ``1`` produces a moderate amount of debugging output, generally a single "
"line per request.  A value of ``2`` or higher produces the maximum amount of"
" debugging output, logging each line sent and received on the control "
"connection."
msgstr ""

#: ../../library/ftplib.rst:198
msgid ""
"Connect to the given host and port.  The default port number is ``21``, as "
"specified by the FTP protocol specification.  It is rarely needed to specify"
" a different port number.  This function should be called only once for each"
" instance; it should not be called at all if a host was given when the "
"instance was created.  All other methods can only be used after a connection"
" has been made. The optional *timeout* parameter specifies a timeout in "
"seconds for the connection attempt. If no *timeout* is passed, the global "
"default timeout setting will be used. *source_address* is a 2-tuple ``(host,"
" port)`` for the socket to bind to as its source address before connecting."
msgstr ""

#: ../../library/ftplib.rst:210
msgid ""
"Raises an :ref:`auditing event <auditing>` ``ftplib.connect`` with arguments"
" ``self``, ``host``, ``port``."
msgstr ""

#: ../../library/ftplib.rst:218
msgid ""
"Return the welcome message sent by the server in reply to the initial "
"connection.  (This message sometimes contains disclaimers or help "
"information that may be relevant to the user.)"
msgstr ""

#: ../../library/ftplib.rst:225
msgid ""
"Log in as the given *user*.  The *passwd* and *acct* parameters are optional"
" and default to the empty string.  If no *user* is specified, it defaults to"
" ``'anonymous'``.  If *user* is ``'anonymous'``, the default *passwd* is "
"``'anonymous@'``.  This function should be called only once for each "
"instance, after a connection has been established; it should not be called "
"at all if a host and user were given when the instance was created.  Most "
"FTP commands are only allowed after the client has logged in.  The *acct* "
"parameter supplies \"accounting information\"; few systems implement this."
msgstr ""

#: ../../library/ftplib.rst:237
msgid ""
"Abort a file transfer that is in progress.  Using this does not always work,"
" but it's worth a try."
msgstr ""

#: ../../library/ftplib.rst:243
msgid ""
"Send a simple command string to the server and return the response string."
msgstr ""

#: ../../library/ftplib.rst:245 ../../library/ftplib.rst:254
msgid ""
"Raises an :ref:`auditing event <auditing>` ``ftplib.sendcmd`` with arguments"
" ``self``, ``cmd``."
msgstr ""

#: ../../library/ftplib.rst:250
msgid ""
"Send a simple command string to the server and handle the response.  Return "
"nothing if a response code corresponding to success (codes in the range 200"
"--299) is received.  Raise :exc:`error_reply` otherwise."
msgstr ""

#: ../../library/ftplib.rst:259
msgid ""
"Retrieve a file in binary transfer mode.  *cmd* should be an appropriate "
"``RETR`` command: ``'RETR filename'``. The *callback* function is called for"
" each block of data received, with a single bytes argument giving the data "
"block. The optional *blocksize* argument specifies the maximum chunk size to"
" read on the low-level socket object created to do the actual transfer "
"(which will also be the largest size of the data blocks passed to "
"*callback*).  A reasonable default is chosen. *rest* means the same thing as"
" in the :meth:`transfercmd` method."
msgstr ""

#: ../../library/ftplib.rst:271
msgid ""
"Retrieve a file or directory listing in the encoding specified by the "
"*encoding* parameter at initialization. *cmd* should be an appropriate "
"``RETR`` command (see :meth:`retrbinary`) or a command such as ``LIST`` or "
"``NLST`` (usually just the string ``'LIST'``). ``LIST`` retrieves a list of "
"files and information about those files. ``NLST`` retrieves a list of file "
"names. The *callback* function is called for each line with a string "
"argument containing the line with the trailing CRLF stripped.  The default "
"*callback* prints the line to ``sys.stdout``."
msgstr ""

#: ../../library/ftplib.rst:284
msgid ""
"Enable \"passive\" mode if *val* is true, otherwise disable passive mode. "
"Passive mode is on by default."
msgstr ""

#: ../../library/ftplib.rst:290
msgid ""
"Store a file in binary transfer mode.  *cmd* should be an appropriate "
"``STOR`` command: ``\"STOR filename\"``. *fp* is a :term:`file object` "
"(opened in binary mode) which is read until EOF using its "
":meth:`~io.IOBase.read` method in blocks of size *blocksize* to provide the "
"data to be stored. The *blocksize* argument defaults to 8192.  *callback* is"
" an optional single parameter callable that is called on each block of data "
"after it is sent. *rest* means the same thing as in the :meth:`transfercmd` "
"method."
msgstr ""

#: ../../library/ftplib.rst:298
msgid "*rest* parameter added."
msgstr ""

#: ../../library/ftplib.rst:304
msgid ""
"Store a file in line mode.  *cmd* should be an appropriate ``STOR`` command "
"(see :meth:`storbinary`).  Lines are read until EOF from the :term:`file "
"object` *fp* (opened in binary mode) using its :meth:`~io.IOBase.readline` "
"method to provide the data to be stored.  *callback* is an optional single "
"parameter callable that is called on each line after it is sent."
msgstr ""

#: ../../library/ftplib.rst:313
msgid ""
"Initiate a transfer over the data connection.  If the transfer is active, "
"send an ``EPRT`` or  ``PORT`` command and the transfer command specified by "
"*cmd*, and accept the connection.  If the server is passive, send an "
"``EPSV`` or ``PASV`` command, connect to it, and start the transfer command."
"  Either way, return the socket for the connection."
msgstr ""

#: ../../library/ftplib.rst:319
msgid ""
"If optional *rest* is given, a ``REST`` command is sent to the server, "
"passing *rest* as an argument.  *rest* is usually a byte offset into the "
"requested file, telling the server to restart sending the file's bytes at "
"the requested offset, skipping over the initial bytes.  Note however that "
"the :meth:`transfercmd` method converts *rest* to a string with the "
"*encoding* parameter specified at initialization, but no check is performed "
"on the string's contents.  If the server does not recognize the ``REST`` "
"command, an :exc:`error_reply` exception will be raised.  If this happens, "
"simply call :meth:`transfercmd` without a *rest* argument."
msgstr ""

#: ../../library/ftplib.rst:332
msgid ""
"Like :meth:`transfercmd`, but returns a tuple of the data connection and the"
" expected size of the data.  If the expected size could not be computed, "
"``None`` will be returned as the expected size.  *cmd* and *rest* means the "
"same thing as in :meth:`transfercmd`."
msgstr ""

#: ../../library/ftplib.rst:340
msgid ""
"List a directory in a standardized format by using ``MLSD`` command "
"(:rfc:`3659`).  If *path* is omitted the current directory is assumed. "
"*facts* is a list of strings representing the type of information desired "
"(e.g. ``[\"type\", \"size\", \"perm\"]``).  Return a generator object "
"yielding a tuple of two elements for every file found in path.  First "
"element is the file name, the second one is a dictionary containing facts "
"about the file name.  Content of this dictionary might be limited by the "
"*facts* argument but server is not guaranteed to return all requested facts."
msgstr ""

#: ../../library/ftplib.rst:354
msgid ""
"Return a list of file names as returned by the ``NLST`` command.  The "
"optional *argument* is a directory to list (default is the current server "
"directory).  Multiple arguments can be used to pass non-standard options to "
"the ``NLST`` command."
msgstr ""

#: ../../library/ftplib.rst:359 ../../library/ftplib.rst:371
msgid "If your server supports the command, :meth:`mlsd` offers a better API."
msgstr ""

#: ../../library/ftplib.rst:364
msgid ""
"Produce a directory listing as returned by the ``LIST`` command, printing it"
" to standard output.  The optional *argument* is a directory to list "
"(default is the current server directory).  Multiple arguments can be used "
"to pass non-standard options to the ``LIST`` command.  If the last argument "
"is a function, it is used as a *callback* function as for :meth:`retrlines`;"
" the default prints to ``sys.stdout``.  This method returns ``None``."
msgstr ""

#: ../../library/ftplib.rst:376
msgid "Rename file *fromname* on the server to *toname*."
msgstr ""

#: ../../library/ftplib.rst:381
msgid ""
"Remove the file named *filename* from the server.  If successful, returns "
"the text of the response, otherwise raises :exc:`error_perm` on permission "
"errors or :exc:`error_reply` on other errors."
msgstr ""

#: ../../library/ftplib.rst:388
msgid "Set the current directory on the server."
msgstr ""

#: ../../library/ftplib.rst:393
msgid "Create a new directory on the server."
msgstr ""

#: ../../library/ftplib.rst:398
msgid "Return the pathname of the current directory on the server."
msgstr ""

#: ../../library/ftplib.rst:403
msgid "Remove the directory named *dirname* on the server."
msgstr ""

#: ../../library/ftplib.rst:408
msgid ""
"Request the size of the file named *filename* on the server.  On success, "
"the size of the file is returned as an integer, otherwise ``None`` is "
"returned. Note that the ``SIZE`` command is not  standardized, but is "
"supported by many common server implementations."
msgstr ""

#: ../../library/ftplib.rst:416
msgid ""
"Send a ``QUIT`` command to the server and close the connection. This is the "
"\"polite\" way to close a connection, but it may raise an exception if the "
"server responds with an error to the ``QUIT`` command.  This implies a call "
"to the :meth:`close` method which renders the :class:`FTP` instance useless "
"for subsequent calls (see below)."
msgstr ""

#: ../../library/ftplib.rst:425
msgid ""
"Close the connection unilaterally.  This should not be applied to an already"
" closed connection such as after a successful call to :meth:`~FTP.quit`. "
"After this call the :class:`FTP` instance should not be used any more (after"
" a call to :meth:`close` or :meth:`~FTP.quit` you cannot reopen the "
"connection by issuing another :meth:`login` method)."
msgstr ""

#: ../../library/ftplib.rst:433
msgid "FTP_TLS Objects"
msgstr ""

#: ../../library/ftplib.rst:435
msgid ""
":class:`FTP_TLS` class inherits from :class:`FTP`, defining these additional"
" objects:"
msgstr ""

#: ../../library/ftplib.rst:439
msgid "The SSL version to use (defaults to :attr:`ssl.PROTOCOL_SSLv23`)."
msgstr ""

#: ../../library/ftplib.rst:443
msgid ""
"Set up a secure control connection by using TLS or SSL, depending on what is"
" specified in the :attr:`ssl_version` attribute."
msgstr ""

#: ../../library/ftplib.rst:446
msgid ""
"The method now supports hostname check with "
":attr:`ssl.SSLContext.check_hostname` and *Server Name Indication* (see "
":data:`ssl.HAS_SNI`)."
msgstr ""

#: ../../library/ftplib.rst:453
msgid ""
"Revert control channel back to plaintext.  This can be useful to take "
"advantage of firewalls that know how to handle NAT with non-secure FTP "
"without opening fixed ports."
msgstr ""

#: ../../library/ftplib.rst:461
msgid "Set up secure data connection."
msgstr ""

#: ../../library/ftplib.rst:465
msgid "Set up clear text data connection."
msgstr ""
