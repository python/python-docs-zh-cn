# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2025
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.12\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-07-25 16:03+0000\n"
"PO-Revision-Date: 2025-07-18 19:58+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2025\n"
"Language-Team: Chinese (China) (https://app.transifex.com/python-doc/teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/ftplib.rst:2
msgid ":mod:`!ftplib` --- FTP protocol client"
msgstr ":mod:`!ftplib` --- FTP 协议客户端"

#: ../../library/ftplib.rst:7
msgid "**Source code:** :source:`Lib/ftplib.py`"
msgstr "**源代码：** :source:`Lib/ftplib.py`"

#: ../../library/ftplib.rst:15
msgid ""
"This module defines the class :class:`FTP` and a few related items. The "
":class:`FTP` class implements the client side of the FTP protocol.  You can "
"use this to write Python programs that perform a variety of automated FTP "
"jobs, such as mirroring other FTP servers.  It is also used by the module "
":mod:`urllib.request` to handle URLs that use FTP.  For more information on "
"FTP (File Transfer Protocol), see internet :rfc:`959`."
msgstr ""
"本模块定义了 :class:`FTP` 类和一些相关项目。 :class:`FTP` 类实现了 FTP 协议的客户端。 "
"你可以用这个类来编写执行各种自动化 FTP 任务的 Python 程序，例如镜像其他 FTP 服务器等。 它还被 "
":mod:`urllib.request` 模块用来处理使用 FTP 的 URL。 有关 FTP (文件传输协议) 的更多信息，请参阅 "
":rfc:`959`。"

#: ../../library/ftplib.rst:22
msgid "The default encoding is UTF-8, following :rfc:`2640`."
msgstr "默认编码为 UTF-8，遵循 :rfc:`2640`。"

#: ../../includes/wasm-notavail.rst:3
msgid "Availability"
msgstr "Availability"

#: ../../includes/wasm-notavail.rst:5
msgid ""
"This module does not work or is not available on WebAssembly platforms "
"``wasm32-emscripten`` and ``wasm32-wasi``. See :ref:`wasm-availability` for "
"more information."
msgstr ""
"此模块在 WebAssembly 平台 ``wasm32-emscripten`` 和 ``wasm32-wasi`` 上不适用或不可用。 请参阅 "
":ref:`wasm-availability` 了解详情。"

#: ../../library/ftplib.rst:26
msgid "Here's a sample session using the :mod:`ftplib` module::"
msgstr "以下是使用 :mod:`ftplib` 模块的会话示例::"

#: ../../library/ftplib.rst:28
msgid ""
">>> from ftplib import FTP\n"
">>> ftp = FTP('ftp.us.debian.org')  # connect to host, default port\n"
">>> ftp.login()                     # user anonymous, passwd anonymous@\n"
"'230 Login successful.'\n"
">>> ftp.cwd('debian')               # change into \"debian\" directory\n"
"'250 Directory successfully changed.'\n"
">>> ftp.retrlines('LIST')           # list directory contents\n"
"-rw-rw-r--    1 1176     1176         1063 Jun 15 10:18 README\n"
"...\n"
"drwxr-sr-x    5 1176     1176         4096 Dec 19  2000 pool\n"
"drwxr-sr-x    4 1176     1176         4096 Nov 17  2008 project\n"
"drwxr-xr-x    3 1176     1176         4096 Oct 10  2012 tools\n"
"'226 Directory send OK.'\n"
">>> with open('README', 'wb') as fp:\n"
">>>     ftp.retrbinary('RETR README', fp.write)\n"
"'226 Transfer complete.'\n"
">>> ftp.quit()\n"
"'221 Goodbye.'"
msgstr ""
">>> from ftplib import FTP\n"
">>> ftp = FTP('ftp.us.debian.org')  # 连接到主机，默认端口\n"
">>> ftp.login()                     # 用户 anonymous，密码 anonymous@\n"
"'230 Login successful.'\n"
">>> ftp.cwd('debian')               # 更改为 \"debian\" 目录\n"
"'250 Directory successfully changed.'\n"
">>> ftp.retrlines('LIST')           # 列出目录内容\n"
"-rw-rw-r--    1 1176     1176         1063 Jun 15 10:18 README\n"
"...\n"
"drwxr-sr-x    5 1176     1176         4096 Dec 19  2000 pool\n"
"drwxr-sr-x    4 1176     1176         4096 Nov 17  2008 project\n"
"drwxr-xr-x    3 1176     1176         4096 Oct 10  2012 tools\n"
"'226 Directory send OK.'\n"
">>> with open('README', 'wb') as fp:\n"
">>>     ftp.retrbinary('RETR README', fp.write)\n"
"'226 Transfer complete.'\n"
">>> ftp.quit()\n"
"'221 Goodbye.'"

#: ../../library/ftplib.rst:51
msgid "Reference"
msgstr "参考"

#: ../../library/ftplib.rst:56
msgid "FTP objects"
msgstr "FTP 对象"

#: ../../library/ftplib.rst:87
msgid "Return a new instance of the :class:`FTP` class."
msgstr "返回一个 :class:`FTP` 类的新实例。"

#: ../../library/ftplib.rst:0
msgid "Parameters"
msgstr "参数"

#: ../../library/ftplib.rst:89 ../../library/ftplib.rst:461
msgid ""
"The hostname to connect to. If given, :code:`connect(host)` is implicitly "
"called by the constructor."
msgstr "要连接的主机名。 如果给出，则将由构造器隐式地调用 :code:`connect(host)`。"

#: ../../library/ftplib.rst:93 ../../library/ftplib.rst:465
msgid ""
"|param_doc_user| If given, :code:`login(host, passwd, acct)` is implicitly "
"called by the constructor."
msgstr "如果给出 |param_doc_user|，则将由构造器隐式地调用 :code:`login(host, passwd, acct)`。"

#: ../../library/ftplib.rst:98 ../../library/ftplib.rst:212
#: ../../library/ftplib.rst:470
msgid "|param_doc_passwd|"
msgstr "|param_doc_passwd|"

#: ../../library/ftplib.rst:101 ../../library/ftplib.rst:215
#: ../../library/ftplib.rst:473
msgid "|param_doc_acct|"
msgstr "|param_doc_acct|"

#: ../../library/ftplib.rst:104
msgid ""
"A timeout in seconds for blocking operations like :meth:`connect` (default: "
"the global default timeout setting)."
msgstr "用于阻塞操作如 :meth:`connect` 的以秒数表示的超时值（默认：全局默认超时设置值）。"

#: ../../library/ftplib.rst:109 ../../library/ftplib.rst:183
#: ../../library/ftplib.rst:488
msgid "|param_doc_source_address|"
msgstr "|param_doc_source_address|"

#: ../../library/ftplib.rst:113 ../../library/ftplib.rst:492
msgid "|param_doc_encoding|"
msgstr "|param_doc_encoding|"

#: ../../library/ftplib.rst:116
msgid "The :class:`FTP` class supports the :keyword:`with` statement, e.g.:"
msgstr ":class:`FTP` 类支持 :keyword:`with` 语句，例如："

#: ../../library/ftplib.rst:130
msgid "Support for the :keyword:`with` statement was added."
msgstr "添加了对 :keyword:`with` 语句的支持。"

#: ../../library/ftplib.rst:133 ../../library/ftplib.rst:189
msgid "*source_address* parameter was added."
msgstr "添加了 *source_address* 参数。"

#: ../../library/ftplib.rst:136 ../../library/ftplib.rst:505
msgid ""
"If the *timeout* parameter is set to be zero, it will raise a "
":class:`ValueError` to prevent the creation of a non-blocking socket. The "
"*encoding* parameter was added, and the default was changed from Latin-1 to "
"UTF-8 to follow :rfc:`2640`."
msgstr ""
"如果 *timeout* 参数设置为 0，创建非阻塞套接字时，它将引发 :class:`ValueError` 来阻止该操作。添加了 "
"*encoding* 参数，且为了遵循 :rfc:`2640`，该参数默认值从 Latin-1 改为了 UTF-8。"

#: ../../library/ftplib.rst:142
msgid ""
"Several :class:`!FTP` methods are available in two flavors: one for handling"
" text files and another for binary files. The methods are named for the "
"command which is used followed by ``lines`` for the text version or "
"``binary`` for the binary version."
msgstr ""
"某些 :class:`!FTP` 方法有两种形式：一种用于处理文本文件而另一种用于二进制文件。 这些方法的名称与所用的命令相对应，文本版之后跟 "
"``lines`` 而二进制版之后跟 ``binary``。"

#: ../../library/ftplib.rst:147
msgid ":class:`FTP` instances have the following methods:"
msgstr ":class:`FTP` 实例具有下列方法:"

#: ../../library/ftplib.rst:151
msgid ""
"Set the instance's debugging level as an :class:`int`. This controls the "
"amount of debugging output printed. The debug levels are:"
msgstr "将实例的调试级别设为一个 :class:`int` 值。 这将控制所打印的调试输出数据量。 调试级别包括："

#: ../../library/ftplib.rst:155
msgid "``0`` (default): No debug output."
msgstr "``0`` (默认): 无调试输出。"

#: ../../library/ftplib.rst:156
msgid ""
"``1``: Produce a moderate amount of debug output, generally a single line "
"per request."
msgstr "``1``: 产生中等的调试输出数据量，通常为每个请求一行。"

#: ../../library/ftplib.rst:158
msgid ""
"``2`` or higher: Produce the maximum amount of debugging output, logging "
"each line sent and received on the control connection."
msgstr "``2`` 或更高: 产生最大的调试输出数据量，记录在控制连接中发送和接收的每一行。"

#: ../../library/ftplib.rst:163
msgid ""
"Connect to the given host and port. This function should be called only once"
" for each instance; it should not be called if a *host* argument was given "
"when the :class:`FTP` instance was created. All other :class:`!FTP` methods "
"can only be called after a connection has successfully been made."
msgstr ""
"连接到给定的主机和端口。 此函数应当只为每个实例调用一次；如果在创建 :class:`FTP` 实例时给出了 *host* 参数则不应调用此函数。 "
"所有其他 :class:`!FTP` 方法只能在连接成功建立之后被调用。"

#: ../../library/ftplib.rst:170
msgid "The host to connect to."
msgstr "要连接的主机。"

#: ../../library/ftplib.rst:173
msgid ""
"The TCP port to connect to (default: ``21``, as specified by the FTP "
"protocol specification). It is rarely needed to specify a different port "
"number."
msgstr "要连接的 TCP 端口 (默认值: ``21``，如 FTP 协议规范所指明的)。 很少有必要指定不同的端口号。"

#: ../../library/ftplib.rst:178
msgid ""
"A timeout in seconds for the connection attempt (default: the global default"
" timeout setting)."
msgstr "针对连接尝试的以秒数表示的超时值（默认值：全局默认超时设置值）。"

#: ../../library/ftplib.rst:187
msgid ""
"Raises an :ref:`auditing event <auditing>` ``ftplib.connect`` with arguments"
" ``self``, ``host``, ``port``."
msgstr ""
"引发一个 :ref:`审计事件 <auditing>` ``ftplib.connect`` 并附带参数 ``self``, ``host``, "
"``port``。"

#: ../../library/ftplib.rst:195
msgid ""
"Return the welcome message sent by the server in reply to the initial "
"connection.  (This message sometimes contains disclaimers or help "
"information that may be relevant to the user.)"
msgstr "返回服务器发送的欢迎消息，作为连接开始的回复。（该消息有时包含与用户有关的免责声明或帮助信息。）"

#: ../../library/ftplib.rst:202
msgid ""
"Log on to the connected FTP server. This function should be called only once"
" for each instance, after a connection has been established; it should not "
"be called if the *host* and *user* arguments were given when the "
":class:`FTP` instance was created. Most FTP commands are only allowed after "
"the client has logged in."
msgstr ""
"登录到已连接的 FTP 服务器。 在建立连接后，此函数应当只为每个实例调用一次；如果在创建 :class:`FTP` 实例时给出了 *host* 和 "
"*user* 参数则不应调用该函数。 大多数 FTP 命令只有在客户端已登录后才允许使用。"

#: ../../library/ftplib.rst:209
msgid "|param_doc_user|"
msgstr "|param_doc_user|"

#: ../../library/ftplib.rst:221
msgid ""
"Abort a file transfer that is in progress.  Using this does not always work,"
" but it's worth a try."
msgstr "中止正在进行的文件传输。本方法并不总是有效，但值得一试。"

#: ../../library/ftplib.rst:227
msgid ""
"Send a simple command string to the server and return the response string."
msgstr "将一条简单的命令字符串发送到服务器，返回响应的字符串。"

#: ../../library/ftplib.rst:229 ../../library/ftplib.rst:238
msgid ""
"Raises an :ref:`auditing event <auditing>` ``ftplib.sendcmd`` with arguments"
" ``self``, ``cmd``."
msgstr ""
"引发一个 :ref:`审计事件 <auditing>` ``ftplib.sendcmd`` 并附带参数 ``self``, ``cmd``。"

#: ../../library/ftplib.rst:234
msgid ""
"Send a simple command string to the server and handle the response.  Return "
"the response string if the response code corresponds to success (codes in "
"the range 200--299).  Raise :exc:`error_reply` otherwise."
msgstr ""
"将一条简单的命令字符串发送到服务器并对响应进行处理。 如果响应代码对应执行成功（代码在 200--299 范围内）则返回响应字符串。 在其他情况下则引发"
" :exc:`error_reply`。"

#: ../../library/ftplib.rst:243
msgid "Retrieve a file in binary transfer mode."
msgstr "以二进制传输模式获取一个文件。"

#: ../../library/ftplib.rst:245
msgid "An appropriate ``RETR`` command: :samp:`\"RETR {filename}\"`."
msgstr "一个正确的 ``RETR`` 命令: :samp:`\"RETR {filename}\"`。"

#: ../../library/ftplib.rst:248
msgid ""
"A single parameter callable that is called for each block of data received, "
"with its single argument being the data as :class:`bytes`."
msgstr "一个针对所接收的每个数据块被调用的单形参可调用对象，其唯一参数即 :class:`bytes` 类型的数据。"

#: ../../library/ftplib.rst:254
msgid ""
"The maximum chunk size to read on the low-level :class:`~socket.socket` "
"object created to do the actual transfer. This also corresponds to the "
"largest size of data that will be passed to *callback*. Defaults to "
"``8192``."
msgstr ""
"在为进行实际传输而创建的底层 :class:`~socket.socket` 对象上读取的块尺寸最大值。 这也对应于将要传给 *callback* "
"的数据尺寸最大值。 默认为 ``8192``。"

#: ../../library/ftplib.rst:261 ../../library/ftplib.rst:308
msgid ""
"A ``REST`` command to be sent to the server. See the documentation for the "
"*rest* parameter of the :meth:`transfercmd` method."
msgstr "要发送给服务器的 ``REST`` 命令。 参见 :meth:`transfercmd` 方法的 *rest* 形参的文档。"

#: ../../library/ftplib.rst:268
msgid ""
"Retrieve a file or directory listing in the encoding specified by the "
"*encoding* parameter at initialization. *cmd* should be an appropriate "
"``RETR`` command (see :meth:`retrbinary`) or a command such as ``LIST`` or "
"``NLST`` (usually just the string ``'LIST'``). ``LIST`` retrieves a list of "
"files and information about those files. ``NLST`` retrieves a list of file "
"names. The *callback* function is called for each line with a string "
"argument containing the line with the trailing CRLF stripped.  The default "
"*callback* prints the line to :data:`sys.stdout`."
msgstr ""
"以在初始化时由 *encoding* 形参指定的编码格式获取文件或目录列表。 *cmd* 应为一个适当的 ``RETR`` 命令 (参见 "
":meth:`retrbinary`) 或是像 ``LIST`` 或 ``NLST`` 这样的命令 (通常即字符串 ``'LIST'``)。 "
"``LIST`` 将获取一个包含文件名及文件相关信息的列表。 ``NLST`` 将获取一个文件名的列表。 *callback* "
"函数将针对每一行被调用并附带一个包含去除了末尾 CRLF 的行的字符串参数。 默认的 *callback* 会将行内容打印到 "
":data:`sys.stdout`。"

#: ../../library/ftplib.rst:281
msgid ""
"Enable \"passive\" mode if *val* is true, otherwise disable passive mode. "
"Passive mode is on by default."
msgstr "如果 *val* 为 true，则打开“被动”模式，否则禁用被动模式。默认下被动模式是打开的。"

#: ../../library/ftplib.rst:287
msgid "Store a file in binary transfer mode."
msgstr "以二进制传输模式存储一个文件。"

#: ../../library/ftplib.rst:289
msgid "An appropriate ``STOR`` command: :samp:`\"STOR {filename}\"`."
msgstr "一个正确的 ``STOR`` 命令: :samp:`\"STOR {filename}\"`。"

#: ../../library/ftplib.rst:292
msgid ""
"A file object (opened in binary mode) which is read until EOF, using its "
":meth:`~io.RawIOBase.read` method in blocks of size *blocksize* to provide "
"the data to be stored."
msgstr ""
"一个被读取直至 EOF 的文件对象（以二进制模式打开），使用其 :meth:`~io.RawIOBase.read` 方法以大小为 "
"*blocksize* 的块来提供要存储的数据。"

#: ../../library/ftplib.rst:298
msgid "The read block size. Defaults to ``8192``."
msgstr "读取块的大小。 默认为 ``8192``。"

#: ../../library/ftplib.rst:302
msgid ""
"A single parameter callable that is called for each block of data sent, with"
" its single argument being the data as :class:`bytes`."
msgstr "一个针对所发送的每个数据块被调用的单形参可调用对象，其唯一参数即 :class:`bytes` 类型的数据。"

#: ../../library/ftplib.rst:312
msgid "The *rest* parameter was added."
msgstr "增加了 *rest* 形参。"

#: ../../library/ftplib.rst:318
msgid ""
"Store a file in line mode.  *cmd* should be an appropriate ``STOR`` command "
"(see :meth:`storbinary`).  Lines are read until EOF from the :term:`file "
"object` *fp* (opened in binary mode) using its :meth:`~io.IOBase.readline` "
"method to provide the data to be stored.  *callback* is an optional single "
"parameter callable that is called on each line after it is sent."
msgstr ""
"以文本行模式存储文件。*cmd* 应为恰当的 ``STOR`` 命令 (请参阅 :meth:`storbinary`)。 *fp* 是一个 "
":term:`文件对象 <file object>` (以二进制模式打开)，将使用它的 :meth:`~io.IOBase.readline` "
"方法读取它的每一行，用于提供要存储的数据，直到遇到 EOF。 可选参数 *callback* 是单参数函数，在每行发送后都会以该行作为参数来调用它。"

#: ../../library/ftplib.rst:327
msgid ""
"Initiate a transfer over the data connection.  If the transfer is active, "
"send an ``EPRT`` or  ``PORT`` command and the transfer command specified by "
"*cmd*, and accept the connection.  If the server is passive, send an "
"``EPSV`` or ``PASV`` command, connect to it, and start the transfer command."
"  Either way, return the socket for the connection."
msgstr ""
"在 FTP 数据连接上开始传输数据。如果传输处于活动状态，传输命令由 *cmd* 指定，需发送 ``EPRT`` 或 ``PORT`` "
"命令，然后接受连接 (accept)。如果服务器是被动服务器，需发送 ``EPSV`` 或 ``PASV`` 命令，连接到服务器 "
"(connect)，然后启动传输命令。两种方式都将返回用于连接的套接字。"

#: ../../library/ftplib.rst:333
msgid ""
"If optional *rest* is given, a ``REST`` command is sent to the server, "
"passing *rest* as an argument.  *rest* is usually a byte offset into the "
"requested file, telling the server to restart sending the file's bytes at "
"the requested offset, skipping over the initial bytes.  Note however that "
"the :meth:`transfercmd` method converts *rest* to a string with the "
"*encoding* parameter specified at initialization, but no check is performed "
"on the string's contents.  If the server does not recognize the ``REST`` "
"command, an :exc:`error_reply` exception will be raised.  If this happens, "
"simply call :meth:`transfercmd` without a *rest* argument."
msgstr ""
"如果传入了可选参数 *rest*，则一条 ``REST`` 命令会被发送到服务器，并以 *rest* 作为参数。*rest* "
"通常表示请求文件中的字节偏移量，它告诉服务器重新开始发送文件的字节，从请求的偏移量处开始，跳过起始字节。但是请注意，:meth:`transfercmd`"
" 方法会将 *rest* 转换为字符串，但是不检查字符串的内容，转换用的编码是在初始化时指定的 *encoding* 参数。如果服务器无法识别 "
"``REST`` 命令，将引发 :exc:`error_reply` 异常。如果发生这种情况，只需不带 *rest* 参数调用 "
":meth:`transfercmd`。"

#: ../../library/ftplib.rst:346
msgid ""
"Like :meth:`transfercmd`, but returns a tuple of the data connection and the"
" expected size of the data.  If the expected size could not be computed, "
"``None`` will be returned as the expected size.  *cmd* and *rest* means the "
"same thing as in :meth:`transfercmd`."
msgstr ""
"类似于 :meth:`transfercmd`，但返回一个元组，包括数据连接和数据的预计大小。如果预计大小无法计算，则返回的预计大小为 "
"``None``。*cmd* 和 *rest* 的含义与 :meth:`transfercmd` 中的相同。"

#: ../../library/ftplib.rst:354
msgid ""
"List a directory in a standardized format by using ``MLSD`` command "
"(:rfc:`3659`).  If *path* is omitted the current directory is assumed. "
"*facts* is a list of strings representing the type of information desired "
"(e.g. ``[\"type\", \"size\", \"perm\"]``).  Return a generator object "
"yielding a tuple of two elements for every file found in path.  First "
"element is the file name, the second one is a dictionary containing facts "
"about the file name.  Content of this dictionary might be limited by the "
"*facts* argument but server is not guaranteed to return all requested facts."
msgstr ""
"使用 ``MLSD`` 命令以标准格式列出目录内容 (:rfc:`3659`)。如果省略 *path* 则使用当前目录。*facts* "
"是字符串列表，表示所需的信息类型（如 ``[\"type\", \"size\", \"perm\"]``）。返回一个生成器对象，每个在 path "
"中找到的文件都将在该对象中生成两个元素的元组。第一个元素是文件名，第二个元素是该文件的 facts 的字典。该字典的内容受 *facts* "
"参数限制，但不能保证服务器会返回所有请求的 facts。"

#: ../../library/ftplib.rst:368
msgid ""
"Return a list of file names as returned by the ``NLST`` command.  The "
"optional *argument* is a directory to list (default is the current server "
"directory).  Multiple arguments can be used to pass non-standard options to "
"the ``NLST`` command."
msgstr ""
"返回一个文件名列表，文件名由 ``NLST`` 命令返回。可选参数 *argument* "
"是待列出的目录（默认为当前服务器目录）。可以使用多个参数，将非标准选项传递给 ``NLST`` 命令。"

#: ../../library/ftplib.rst:373 ../../library/ftplib.rst:385
msgid "If your server supports the command, :meth:`mlsd` offers a better API."
msgstr "如果目标服务器支持相关命令，那么 :meth:`mlsd` 提供的 API 更好。"

#: ../../library/ftplib.rst:378
msgid ""
"Produce a directory listing as returned by the ``LIST`` command, printing it"
" to standard output.  The optional *argument* is a directory to list "
"(default is the current server directory).  Multiple arguments can be used "
"to pass non-standard options to the ``LIST`` command.  If the last argument "
"is a function, it is used as a *callback* function as for :meth:`retrlines`;"
" the default prints to :data:`sys.stdout`.  This method returns ``None``."
msgstr ""
"生成一个目录列表即 ``LIST`` 命令所返回的结果，将其打印到标准输出。 可选的 *argument* 是要列出的目录（默认为当前服务器目录）。 "
"可以使用多个参数将非标准选项传给 ``LIST`` 命令。 如果最后一个参数是个函数，它将被用作 *callback* 函数，与 "
":meth:`retrlines` 的类似；默认将打印到 :data:`sys.stdout`。 此方法将返回 ``None``。"

#: ../../library/ftplib.rst:390
msgid "Rename file *fromname* on the server to *toname*."
msgstr "将服务器上的文件 *fromname* 重命名为 *toname*。"

#: ../../library/ftplib.rst:395
msgid ""
"Remove the file named *filename* from the server.  If successful, returns "
"the text of the response, otherwise raises :exc:`error_perm` on permission "
"errors or :exc:`error_reply` on other errors."
msgstr ""
"将服务器上名为 *filename* 的文件删除。如果删除成功，返回响应文本，如果删除失败，在权限错误时引发 "
":exc:`error_perm`，在其他错误时引发 :exc:`error_reply`。"

#: ../../library/ftplib.rst:402
msgid "Set the current directory on the server."
msgstr "设置服务器端的当前目录。"

#: ../../library/ftplib.rst:407
msgid "Create a new directory on the server."
msgstr "在服务器上创建一个新目录。"

#: ../../library/ftplib.rst:412
msgid "Return the pathname of the current directory on the server."
msgstr "返回服务器上当前目录的路径。"

#: ../../library/ftplib.rst:417
msgid "Remove the directory named *dirname* on the server."
msgstr "将服务器上名为 *dirname* 的目录删除。"

#: ../../library/ftplib.rst:422
msgid ""
"Request the size of the file named *filename* on the server.  On success, "
"the size of the file is returned as an integer, otherwise ``None`` is "
"returned. Note that the ``SIZE`` command is not  standardized, but is "
"supported by many common server implementations."
msgstr ""
"请求服务器上名为 *filename* 的文件大小。成功后以整数返回文件大小，未成功则返回 ``None``。注意，``SIZE`` "
"不是标准命令，但通常许多服务器的实现都支持该命令。"

#: ../../library/ftplib.rst:430
msgid ""
"Send a ``QUIT`` command to the server and close the connection. This is the "
"\"polite\" way to close a connection, but it may raise an exception if the "
"server responds with an error to the ``QUIT`` command.  This implies a call "
"to the :meth:`close` method which renders the :class:`FTP` instance useless "
"for subsequent calls (see below)."
msgstr ""
"向服务器发送 ``QUIT`` 命令并关闭连接。 这是关闭一个连接的“礼貌”方式，但是如果服务器对 ``QUIT`` "
"命令的响应带有错误消息则这会引发一个异常。 这意味着对 :meth:`close` 方法的调用，它将使得 :class:`FTP` "
"实例对后继调用无效（见下文）。"

#: ../../library/ftplib.rst:439
msgid ""
"Close the connection unilaterally.  This should not be applied to an already"
" closed connection such as after a successful call to :meth:`~FTP.quit`. "
"After this call the :class:`FTP` instance should not be used any more (after"
" a call to :meth:`close` or :meth:`~FTP.quit` you cannot reopen the "
"connection by issuing another :meth:`login` method)."
msgstr ""
"单方面关闭连接。 这不该被应用于已经关闭的连接，例如成功调用 :meth:`~FTP.quit` 之后的连接。 在此调用之后 :class:`FTP` "
"实例不应被继续使用（在调用 :meth:`close` 或 :meth:`~FTP.quit` 之后你不能通过再次唤起 :meth:`login` "
"方法重新打开连接）。"

#: ../../library/ftplib.rst:447
msgid "FTP_TLS objects"
msgstr "FTP_TLS 对象"

#: ../../library/ftplib.rst:452
msgid ""
"An :class:`FTP` subclass which adds TLS support to FTP as described in "
":rfc:`4217`. Connect to port 21 implicitly securing the FTP control "
"connection before authenticating."
msgstr ""
"一个为 FTP 添加如 :rfc:`4217` 所描述的 TLS 支持的 :class:`FTP` 的子类。 连接到 21 端口在身份验证之前隐式地确保"
" FTP 控制连接的安全。"

#: ../../library/ftplib.rst:458
msgid ""
"The user must explicitly secure the data connection by calling the "
":meth:`prot_p` method."
msgstr "用户必须通过调用 :meth:`prot_p` 方法显式地确保数据连接的安全。"

#: ../../library/ftplib.rst:476
msgid ""
"An SSL context object which allows bundling SSL configuration options, "
"certificates and private keys into a single, potentially long-lived, "
"structure. Please read :ref:`ssl-security` for best practices."
msgstr ""
"一个允许将 SSL 配置选项、证书和私钥打包至一个单独的、可以长久存在的结构体中的 SSL 上下文对象。 请参阅 :ref:`ssl-security`"
" 了解相关的最佳实践。"

#: ../../library/ftplib.rst:483
msgid ""
"A timeout in seconds for blocking operations like :meth:`~FTP.connect` "
"(default: the global default timeout setting)."
msgstr "一个用于阻塞操作如 :meth:`~FTP.connect` 的以秒数表示的超时值（默认值：全局默认超时设置）。"

#: ../../library/ftplib.rst:497
msgid "Added the *source_address* parameter."
msgstr "增加了 *source_address* 形参。"

#: ../../library/ftplib.rst:500
msgid ""
"The class now supports hostname check with "
":attr:`ssl.SSLContext.check_hostname` and *Server Name Indication* (see "
":const:`ssl.HAS_SNI`)."
msgstr ""
"该类现在支持使用 :attr:`ssl.SSLContext.check_hostname` 和 *服务器名称提示* (参见 "
":const:`ssl.HAS_SNI`) 进行主机名检测。"

#: ../../library/ftplib.rst:511
msgid "The deprecated *keyfile* and *certfile* parameters have been removed."
msgstr "已弃用的 *keyfile* 和 *certfile* 形参已被移除。"

#: ../../library/ftplib.rst:514
msgid "Here's a sample session using the :class:`FTP_TLS` class::"
msgstr "以下是使用 :class:`FTP_TLS` 类的会话示例::"

#: ../../library/ftplib.rst:516
msgid ""
">>> ftps = FTP_TLS('ftp.pureftpd.org')\n"
">>> ftps.login()\n"
"'230 Anonymous user logged in'\n"
">>> ftps.prot_p()\n"
"'200 Data protection level set to \"private\"'\n"
">>> ftps.nlst()\n"
"['6jack', 'OpenBSD', 'antilink', 'blogbench', 'bsdcam', 'clockspeed', 'djbdns-jedi', 'docs', 'eaccelerator-jedi', 'favicon.ico', 'francotone', 'fugu', 'ignore', 'libpuzzle', 'metalog', 'minidentd', 'misc', 'mysql-udf-global-user-variables', 'php-jenkins-hash', 'php-skein-hash', 'php-webdav', 'phpaudit', 'phpbench', 'pincaster', 'ping', 'posto', 'pub', 'public', 'public_keys', 'pure-ftpd', 'qscan', 'qtc', 'sharedance', 'skycache', 'sound', 'tmp', 'ucarp']"
msgstr ""
">>> ftps = FTP_TLS('ftp.pureftpd.org')\n"
">>> ftps.login()\n"
"'230 Anonymous user logged in'\n"
">>> ftps.prot_p()\n"
"'200 Data protection level set to \"private\"'\n"
">>> ftps.nlst()\n"
"['6jack', 'OpenBSD', 'antilink', 'blogbench', 'bsdcam', 'clockspeed', 'djbdns-jedi', 'docs', 'eaccelerator-jedi', 'favicon.ico', 'francotone', 'fugu', 'ignore', 'libpuzzle', 'metalog', 'minidentd', 'misc', 'mysql-udf-global-user-variables', 'php-jenkins-hash', 'php-skein-hash', 'php-webdav', 'phpaudit', 'phpbench', 'pincaster', 'ping', 'posto', 'pub', 'public', 'public_keys', 'pure-ftpd', 'qscan', 'qtc', 'sharedance', 'skycache', 'sound', 'tmp', 'ucarp']"

#: ../../library/ftplib.rst:524
msgid ""
":class:`!FTP_TLS` class inherits from :class:`FTP`, defining these "
"additional methods and attributes:"
msgstr ":class:`!FTP_TLS` 类继承自 :class:`FTP`，它定义了下列额外方法和属性："

#: ../../library/ftplib.rst:529
msgid "The SSL version to use (defaults to :data:`ssl.PROTOCOL_SSLv23`)."
msgstr "要使用的 SSL 版本 (默认为 :data:`ssl.PROTOCOL_SSLv23`)。"

#: ../../library/ftplib.rst:533
msgid ""
"Set up a secure control connection by using TLS or SSL, depending on what is"
" specified in the :attr:`ssl_version` attribute."
msgstr "通过使用 TLS 或 SSL 来设置一个安全控制连接，具体取决于 :attr:`ssl_version` 属性是如何设置的。"

#: ../../library/ftplib.rst:536
msgid ""
"The method now supports hostname check with "
":attr:`ssl.SSLContext.check_hostname` and *Server Name Indication* (see "
":const:`ssl.HAS_SNI`)."
msgstr ""
"该方法现在支持使用 :attr:`ssl.SSLContext.check_hostname` 和 *服务器名称提示* (参见 "
":const:`ssl.HAS_SNI`) 进行主机名称检测。"

#: ../../library/ftplib.rst:543
msgid ""
"Revert control channel back to plaintext.  This can be useful to take "
"advantage of firewalls that know how to handle NAT with non-secure FTP "
"without opening fixed ports."
msgstr "将控制通道回复为纯文本。 这适用于发挥知道如何使用非安全 FTP 处理 NAT 而无需打开固定端口的防火墙的优势。"

#: ../../library/ftplib.rst:551
msgid "Set up secure data connection."
msgstr "设置加密数据连接。"

#: ../../library/ftplib.rst:555
msgid "Set up clear text data connection."
msgstr "设置明文数据连接。"

#: ../../library/ftplib.rst:559
msgid "Module variables"
msgstr "模块变量"

#: ../../library/ftplib.rst:563
msgid "Exception raised when an unexpected reply is received from the server."
msgstr "从服务器收到意外答复时，将引发本异常。"

#: ../../library/ftplib.rst:568
msgid ""
"Exception raised when an error code signifying a temporary error (response "
"codes in the range 400--499) is received."
msgstr "收到表示临时错误的错误代码（响应代码在 400--499 范围内）时，将引发本异常。"

#: ../../library/ftplib.rst:574
msgid ""
"Exception raised when an error code signifying a permanent error (response "
"codes in the range 500--599) is received."
msgstr "收到表示永久性错误的错误代码（响应代码在 500--599 范围内）时，将引发本异常。"

#: ../../library/ftplib.rst:580
msgid ""
"Exception raised when a reply is received from the server that does not fit "
"the response specifications of the File Transfer Protocol, i.e. begin with a"
" digit in the range 1--5."
msgstr "从服务器收到不符合 FTP 响应规范的答复，比如以数字 1--5 开头时，将引发本异常。"

#: ../../library/ftplib.rst:587
msgid ""
"The set of all exceptions (as a tuple) that methods of :class:`FTP` "
"instances may raise as a result of problems with the FTP connection (as "
"opposed to programming errors made by the caller).  This set includes the "
"four exceptions listed above as well as :exc:`OSError` and :exc:`EOFError`."
msgstr ""
"所有异常的集合（一个元组），由于 FTP 连接出现问题（并非调用者的编码错误），:class:`FTP` "
"实例的方法可能会引发这些异常。该集合包括上面列出的四个异常以及 :exc:`OSError` 和 :exc:`EOFError`。"

#: ../../library/ftplib.rst:595
msgid "Module :mod:`netrc`"
msgstr ":mod:`netrc` 模块"

#: ../../library/ftplib.rst:596
msgid ""
"Parser for the :file:`.netrc` file format.  The file :file:`.netrc` is "
"typically used by FTP clients to load user authentication information before"
" prompting the user."
msgstr ""
":file:`.netrc` 文件格式解析器。FTP 客户端在响应用户之前，通常使用 :file:`.netrc` 文件来加载用户认证信息。"

#: ../../library/ftplib.rst:9
msgid "FTP"
msgstr "FTP"

#: ../../library/ftplib.rst:9
msgid "protocol"
msgstr "协议"

#: ../../library/ftplib.rst:9
msgid "ftplib (standard module)"
msgstr "ftplib (标准模块)"
