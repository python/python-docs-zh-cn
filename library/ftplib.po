# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2025
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-07-25 18:10+0000\n"
"PO-Revision-Date: 2025-07-18 20:09+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2025\n"
"Language-Team: Chinese (China) (https://app.transifex.com/python-doc/teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/ftplib.rst:2
msgid ":mod:`ftplib` --- FTP protocol client"
msgstr ":mod:`ftplib` --- FTP 协议客户端"

#: ../../library/ftplib.rst:7
msgid "**Source code:** :source:`Lib/ftplib.py`"
msgstr "**源代码：** :source:`Lib/ftplib.py`"

#: ../../library/ftplib.rst:15
msgid ""
"This module defines the class :class:`FTP` and a few related items. The "
":class:`FTP` class implements the client side of the FTP protocol.  You can "
"use this to write Python programs that perform a variety of automated FTP "
"jobs, such as mirroring other FTP servers.  It is also used by the module "
":mod:`urllib.request` to handle URLs that use FTP.  For more information on "
"FTP (File Transfer Protocol), see internet :rfc:`959`."
msgstr ""
"本模块定义了 :class:`FTP` 类和一些相关项目。 :class:`FTP` 类实现了 FTP 协议的客户端。 "
"你可以用这个类来编写执行各种自动化 FTP 任务的 Python 程序，例如镜像其他 FTP 服务器等。 它还被 "
":mod:`urllib.request` 模块用来处理使用 FTP 的 URL。 有关 FTP (文件传输协议) 的更多信息，请参阅 "
":rfc:`959`。"

#: ../../library/ftplib.rst:22
msgid "The default encoding is UTF-8, following :rfc:`2640`."
msgstr "默认编码为 UTF-8，遵循 :rfc:`2640`。"

#: ../../library/ftplib.rst:24
msgid "Here's a sample session using the :mod:`ftplib` module::"
msgstr "以下是使用 :mod:`ftplib` 模块的会话示例::"

#: ../../library/ftplib.rst:46
msgid "The module defines the following items:"
msgstr "这个模块定义了以下内容："

#: ../../library/ftplib.rst:50
msgid ""
"Return a new instance of the :class:`FTP` class.  When *host* is given, the "
"method call ``connect(host)`` is made.  When *user* is given, additionally "
"the method call ``login(user, passwd, acct)`` is made (where *passwd* and "
"*acct* default to the empty string when not given).  The optional *timeout* "
"parameter specifies a timeout in seconds for blocking operations like the "
"connection attempt (if is not specified, the global default timeout setting "
"will be used). *source_address* is a 2-tuple ``(host, port)`` for the socket"
" to bind to as its source address before connecting. The *encoding* "
"parameter specifies the encoding for directories and filenames."
msgstr ""
"返回一个 :class:`FTP` 类的新实例。当传入 *host* 时，将调用 ``connect(host)`` 方法。当传入 *user* "
"时，将额外调用 ``login(user, passwd, acct)`` 方法（其中 *passwd* 和 *acct* "
"若没有传入则默认为空字符串）。可选参数 *timeout* "
"指定阻塞操作（如连接尝试）的超时（以秒为单位，如果未指定超时，将使用全局默认超时设置）。*source_address* 是一个 2 元组 "
"``(host, port)``，套接字在连接前绑定它，作为其源地址。*encoding* 参数指定目录和文件名的编码。"

#: ../../library/ftplib.rst:60
msgid "The :class:`FTP` class supports the :keyword:`with` statement, e.g.:"
msgstr ":class:`FTP` 类支持 :keyword:`with` 语句，例如："

#: ../../library/ftplib.rst:74
msgid "Support for the :keyword:`with` statement was added."
msgstr "添加了对 :keyword:`with` 语句的支持。"

#: ../../library/ftplib.rst:77 ../../library/ftplib.rst:103
#: ../../library/ftplib.rst:212
msgid "*source_address* parameter was added."
msgstr "添加了 *source_address* 参数。"

#: ../../library/ftplib.rst:80 ../../library/ftplib.rst:118
msgid ""
"If the *timeout* parameter is set to be zero, it will raise a "
":class:`ValueError` to prevent the creation of a non-blocking socket. The "
"*encoding* parameter was added, and the default was changed from Latin-1 to "
"UTF-8 to follow :rfc:`2640`."
msgstr ""
"如果 *timeout* 参数设置为 0，创建非阻塞套接字时，它将引发 :class:`ValueError` 来阻止该操作。添加了 "
"*encoding* 参数，且为了遵循 :rfc:`2640`，该参数默认值从 Latin-1 改为了 UTF-8。"

#: ../../library/ftplib.rst:88
msgid ""
"A :class:`FTP` subclass which adds TLS support to FTP as described in "
":rfc:`4217`. Connect as usual to port 21 implicitly securing the FTP control"
" connection before authenticating. Securing the data connection requires the"
" user to explicitly ask for it by calling the :meth:`prot_p` method.  "
"*context* is a :class:`ssl.SSLContext` object which allows bundling SSL "
"configuration options, certificates and private keys into a single "
"(potentially long-lived) structure.  Please read :ref:`ssl-security` for "
"best practices."
msgstr ""
"一个 :class:`FTP` 的子类，它为 FTP 添加了 TLS 支持，如 :rfc:`4217` 所述。它将像通常一样连接到 21 "
"端口，暗中保护在身份验证前的 FTP 控制连接。而保护数据连接需要用户明确调用 :meth:`prot_p` 方法。*context* 是一个 "
":class:`ssl.SSLContext` 对象，该对象可以将 SSL 配置选项、证书和私钥打包放入一个单独的（可以长久存在的）结构中。请阅读 "
":ref:`ssl-security` 以获取最佳实践。"

#: ../../library/ftplib.rst:97
msgid ""
"*keyfile* and *certfile* are a legacy alternative to *context* -- they can "
"point to PEM-formatted private key and certificate chain files "
"(respectively) for the SSL connection."
msgstr ""
"*keyfile* 和 *certfile* 是可以代替 *context* 的传统方案，它们可以分别指向 PEM 格式的私钥和证书链文件，用于进行 "
"SSL 连接。"

#: ../../library/ftplib.rst:106
msgid ""
"The class now supports hostname check with "
":attr:`ssl.SSLContext.check_hostname` and *Server Name Indication* (see "
":data:`ssl.HAS_SNI`)."
msgstr ""
"本类现在支持使用 :attr:`ssl.SSLContext.check_hostname` 和 *服务器名称指示* （参阅 "
":data:`ssl.HAS_SNI`）进行主机名检查。"

#: ../../library/ftplib.rst:113
msgid ""
"*keyfile* and *certfile* are deprecated in favor of *context*. Please use "
":meth:`ssl.SSLContext.load_cert_chain` instead, or let "
":func:`ssl.create_default_context` select the system's trusted CA "
"certificates for you."
msgstr ""
"*keyfile* 和 *certfile* 已弃用并转而推荐 *context*。 请改用 "
":meth:`ssl.SSLContext.load_cert_chain` 或让 :func:`ssl.create_default_context`"
" 为你选择系统所信任的 CA 证书。"

#: ../../library/ftplib.rst:124
msgid "Here's a sample session using the :class:`FTP_TLS` class::"
msgstr "以下是使用 :class:`FTP_TLS` 类的会话示例::"

#: ../../library/ftplib.rst:137
msgid "Exception raised when an unexpected reply is received from the server."
msgstr "从服务器收到意外答复时，将引发本异常。"

#: ../../library/ftplib.rst:142
msgid ""
"Exception raised when an error code signifying a temporary error (response "
"codes in the range 400--499) is received."
msgstr "收到表示临时错误的错误代码（响应代码在 400--499 范围内）时，将引发本异常。"

#: ../../library/ftplib.rst:148
msgid ""
"Exception raised when an error code signifying a permanent error (response "
"codes in the range 500--599) is received."
msgstr "收到表示永久性错误的错误代码（响应代码在 500--599 范围内）时，将引发本异常。"

#: ../../library/ftplib.rst:154
msgid ""
"Exception raised when a reply is received from the server that does not fit "
"the response specifications of the File Transfer Protocol, i.e. begin with a"
" digit in the range 1--5."
msgstr "从服务器收到不符合 FTP 响应规范的答复，比如以数字 1--5 开头时，将引发本异常。"

#: ../../library/ftplib.rst:161
msgid ""
"The set of all exceptions (as a tuple) that methods of :class:`FTP` "
"instances may raise as a result of problems with the FTP connection (as "
"opposed to programming errors made by the caller).  This set includes the "
"four exceptions listed above as well as :exc:`OSError` and :exc:`EOFError`."
msgstr ""
"所有异常的集合（一个元组），由于 FTP 连接出现问题（并非调用者的编码错误），:class:`FTP` "
"实例的方法可能会引发这些异常。该集合包括上面列出的四个异常以及 :exc:`OSError` 和 :exc:`EOFError`。"

#: ../../library/ftplib.rst:171
msgid "Module :mod:`netrc`"
msgstr ":mod:`netrc` 模块"

#: ../../library/ftplib.rst:170
msgid ""
"Parser for the :file:`.netrc` file format.  The file :file:`.netrc` is "
"typically used by FTP clients to load user authentication information before"
" prompting the user."
msgstr ""
":file:`.netrc` 文件格式解析器。FTP 客户端在响应用户之前，通常使用 :file:`.netrc` 文件来加载用户认证信息。"

#: ../../library/ftplib.rst:178
msgid "FTP Objects"
msgstr "FTP 对象"

#: ../../library/ftplib.rst:180
msgid ""
"Several methods are available in two flavors: one for handling text files "
"and another for binary files.  These are named for the command which is used"
" followed by ``lines`` for the text version or ``binary`` for the binary "
"version."
msgstr ""
"一些方法可以按照两种方式来使用：一种处理文本文件，另一种处理二进制文件。方法名称与相应的命令相同，文本版中命令后面跟着 "
"``lines``，二进制版中命令后面跟着 ``binary``。"

#: ../../library/ftplib.rst:184
msgid ":class:`FTP` instances have the following methods:"
msgstr ":class:`FTP` 实例具有下列方法:"

#: ../../library/ftplib.rst:189
msgid ""
"Set the instance's debugging level.  This controls the amount of debugging "
"output printed.  The default, ``0``, produces no debugging output.  A value "
"of ``1`` produces a moderate amount of debugging output, generally a single "
"line per request.  A value of ``2`` or higher produces the maximum amount of"
" debugging output, logging each line sent and received on the control "
"connection."
msgstr ""
"设置实例的调试级别，它控制着调试信息的数量。默认值 ``0`` 不产生调试信息。值 ``1`` 产生中等数量的调试信息，通常每个请求产生一行。大于或等于"
" ``2`` 的值产生的调试信息最多，FTP 控制连接上发送和接收的每一行都将被记录下来。"

#: ../../library/ftplib.rst:198
msgid ""
"Connect to the given host and port.  The default port number is ``21``, as "
"specified by the FTP protocol specification.  It is rarely needed to specify"
" a different port number.  This function should be called only once for each"
" instance; it should not be called at all if a host was given when the "
"instance was created.  All other methods can only be used after a connection"
" has been made. The optional *timeout* parameter specifies a timeout in "
"seconds for the connection attempt. If no *timeout* is passed, the global "
"default timeout setting will be used. *source_address* is a 2-tuple ``(host,"
" port)`` for the socket to bind to as its source address before connecting."
msgstr ""
"连接到给定的主机和端口。默认端口号由 FTP 协议规范规定，为 "
"``21``。偶尔才需要指定其他端口号。每个实例只应调用一次本函数，如果在创建实例时就传入了 "
"host，则根本不应调用它。所有其他方法只能在建立连接后使用。可选参数 *timeout* 指定连接尝试的超时（以秒为单位）。如果没有传入 "
"*timeout*，将使用全局默认超时设置。*source_address* 是一个 2 元组 ``(host, "
"port)``，套接字在连接前绑定它，作为其源地址。"

#: ../../library/ftplib.rst:210
msgid ""
"Raises an :ref:`auditing event <auditing>` ``ftplib.connect`` with arguments"
" ``self``, ``host``, ``port``."
msgstr ""
"引发一个 :ref:`审计事件 <auditing>` ``ftplib.connect`` 并附带参数 ``self``, ``host``, "
"``port``。"

#: ../../library/ftplib.rst:218
msgid ""
"Return the welcome message sent by the server in reply to the initial "
"connection.  (This message sometimes contains disclaimers or help "
"information that may be relevant to the user.)"
msgstr "返回服务器发送的欢迎消息，作为连接开始的回复。（该消息有时包含与用户有关的免责声明或帮助信息。）"

#: ../../library/ftplib.rst:225
msgid ""
"Log in as the given *user*.  The *passwd* and *acct* parameters are optional"
" and default to the empty string.  If no *user* is specified, it defaults to"
" ``'anonymous'``.  If *user* is ``'anonymous'``, the default *passwd* is "
"``'anonymous@'``.  This function should be called only once for each "
"instance, after a connection has been established; it should not be called "
"at all if a host and user were given when the instance was created.  Most "
"FTP commands are only allowed after the client has logged in.  The *acct* "
"parameter supplies \"accounting information\"; few systems implement this."
msgstr ""
"以 *user* 的身份登录。*passwd* 和 *acct* 是可选参数，默认为空字符串。如果没有指定 *user*，则默认为 "
"``'anonymous'``。如果 *user* 为 ``'anonymous'``，那么默认的 *passwd* 是 "
"``'anonymous@'``。连接建立后，每个实例只应调用一次本函数；如果在创建实例时传入了 host 和 "
"user，则完全不应该调用本函数。在客户端登录后，才允许执行大多数 FTP 命令。*acct* 参数提供记账信息 (\"accounting "
"information\")；仅少数系统实现了该特性。"

#: ../../library/ftplib.rst:237
msgid ""
"Abort a file transfer that is in progress.  Using this does not always work,"
" but it's worth a try."
msgstr "中止正在进行的文件传输。本方法并不总是有效，但值得一试。"

#: ../../library/ftplib.rst:243
msgid ""
"Send a simple command string to the server and return the response string."
msgstr "将一条简单的命令字符串发送到服务器，返回响应的字符串。"

#: ../../library/ftplib.rst:245 ../../library/ftplib.rst:254
msgid ""
"Raises an :ref:`auditing event <auditing>` ``ftplib.sendcmd`` with arguments"
" ``self``, ``cmd``."
msgstr ""
"引发一个 :ref:`审计事件 <auditing>` ``ftplib.sendcmd`` 并附带参数 ``self``, ``cmd``。"

#: ../../library/ftplib.rst:250
msgid ""
"Send a simple command string to the server and handle the response.  Return "
"nothing if a response code corresponding to success (codes in the range 200"
"--299) is received.  Raise :exc:`error_reply` otherwise."
msgstr ""
"将一条简单的命令字符串发送到服务器，并处理响应内容。如果收到的响应代码表示的是成功（代码范围 200--299），则不返回任何内容。否则将引发 "
":exc:`error_reply`。"

#: ../../library/ftplib.rst:259
msgid ""
"Retrieve a file in binary transfer mode.  *cmd* should be an appropriate "
"``RETR`` command: ``'RETR filename'``. The *callback* function is called for"
" each block of data received, with a single bytes argument giving the data "
"block. The optional *blocksize* argument specifies the maximum chunk size to"
" read on the low-level socket object created to do the actual transfer "
"(which will also be the largest size of the data blocks passed to "
"*callback*).  A reasonable default is chosen. *rest* means the same thing as"
" in the :meth:`transfercmd` method."
msgstr ""
"以二进制传输模式下载文件。*cmd* 应为恰当的 ``RETR`` 命令：``'RETR 文件名'``。*callback* "
"函数会在收到每个数据块时调用，传入的参数是表示数据块的一个字节。为执行实际传输，创建了底层套接字对象，可选参数 *blocksize* "
"指定了读取该对象时的最大块大小（这也是传入 *callback* 的数据块的最大大小）。已经选择了合理的默认值。*rest* 的含义与 "
":meth:`transfercmd` 方法中的含义相同。"

#: ../../library/ftplib.rst:271
msgid ""
"Retrieve a file or directory listing in the encoding specified by the "
"*encoding* parameter at initialization. *cmd* should be an appropriate "
"``RETR`` command (see :meth:`retrbinary`) or a command such as ``LIST`` or "
"``NLST`` (usually just the string ``'LIST'``). ``LIST`` retrieves a list of "
"files and information about those files. ``NLST`` retrieves a list of file "
"names. The *callback* function is called for each line with a string "
"argument containing the line with the trailing CRLF stripped.  The default "
"*callback* prints the line to ``sys.stdout``."
msgstr ""
"按照初始化时的 *encoding* 参数指定的编码，获取文件或目录列表。*cmd* 应是恰当的 ``RETR`` 命令（参阅 "
":meth:`retrbinary`），也可以是诸如 ``LIST`` 或 ``NLST`` 之类的命令（通常就只是字符串 "
"``'LIST'``）。``LIST`` 获取文件列表以及那些文件的信息。``NLST`` 获取文件名称列表。*callback* "
"函数会在每一行都调用，参数就是包含一行的字符串，删除了尾部的 CRLF。默认的 *callback* 会把行打印到 ``sys.stdout``。"

#: ../../library/ftplib.rst:284
msgid ""
"Enable \"passive\" mode if *val* is true, otherwise disable passive mode. "
"Passive mode is on by default."
msgstr "如果 *val* 为 true，则打开“被动”模式，否则禁用被动模式。默认下被动模式是打开的。"

#: ../../library/ftplib.rst:290
msgid ""
"Store a file in binary transfer mode.  *cmd* should be an appropriate "
"``STOR`` command: ``\"STOR filename\"``. *fp* is a :term:`file object` "
"(opened in binary mode) which is read until EOF using its "
":meth:`~io.IOBase.read` method in blocks of size *blocksize* to provide the "
"data to be stored. The *blocksize* argument defaults to 8192.  *callback* is"
" an optional single parameter callable that is called on each block of data "
"after it is sent. *rest* means the same thing as in the :meth:`transfercmd` "
"method."
msgstr ""
"以二进制传输模式存储文件。 *cmd* 应为恰当的 ``STOR`` 命令: ``\"STOR filename\"``。*fp* 是一个 "
":term:`文件对象 <file object>` (以二进制模式打开)，将使用它的 :meth:`~io.IOBase.read` "
"方法读取它，用于提供要存储的数据，直到遇到 EOF，读取时的块大小为 *blocksize*。 参数 *blocksize* 的默认值为 8192。 "
"可选参数 *callback* 是单参数函数，在每个数据块发送后都会以该数据块作为参数来调用它。*rest* 的含义与 "
":meth:`transfercmd` 方法中的含义相同。"

#: ../../library/ftplib.rst:298
msgid "*rest* parameter added."
msgstr "添加了 *rest* 参数。"

#: ../../library/ftplib.rst:304
msgid ""
"Store a file in line mode.  *cmd* should be an appropriate ``STOR`` command "
"(see :meth:`storbinary`).  Lines are read until EOF from the :term:`file "
"object` *fp* (opened in binary mode) using its :meth:`~io.IOBase.readline` "
"method to provide the data to be stored.  *callback* is an optional single "
"parameter callable that is called on each line after it is sent."
msgstr ""
"以文本行模式存储文件。*cmd* 应为恰当的 ``STOR`` 命令 (请参阅 :meth:`storbinary`)。 *fp* 是一个 "
":term:`文件对象 <file object>` (以二进制模式打开)，将使用它的 :meth:`~io.IOBase.readline` "
"方法读取它的每一行，用于提供要存储的数据，直到遇到 EOF。 可选参数 *callback* 是单参数函数，在每行发送后都会以该行作为参数来调用它。"

#: ../../library/ftplib.rst:313
msgid ""
"Initiate a transfer over the data connection.  If the transfer is active, "
"send an ``EPRT`` or  ``PORT`` command and the transfer command specified by "
"*cmd*, and accept the connection.  If the server is passive, send an "
"``EPSV`` or ``PASV`` command, connect to it, and start the transfer command."
"  Either way, return the socket for the connection."
msgstr ""
"在 FTP 数据连接上开始传输数据。如果传输处于活动状态，传输命令由 *cmd* 指定，需发送 ``EPRT`` 或 ``PORT`` "
"命令，然后接受连接 (accept)。如果服务器是被动服务器，需发送 ``EPSV`` 或 ``PASV`` 命令，连接到服务器 "
"(connect)，然后启动传输命令。两种方式都将返回用于连接的套接字。"

#: ../../library/ftplib.rst:319
msgid ""
"If optional *rest* is given, a ``REST`` command is sent to the server, "
"passing *rest* as an argument.  *rest* is usually a byte offset into the "
"requested file, telling the server to restart sending the file's bytes at "
"the requested offset, skipping over the initial bytes.  Note however that "
"the :meth:`transfercmd` method converts *rest* to a string with the "
"*encoding* parameter specified at initialization, but no check is performed "
"on the string's contents.  If the server does not recognize the ``REST`` "
"command, an :exc:`error_reply` exception will be raised.  If this happens, "
"simply call :meth:`transfercmd` without a *rest* argument."
msgstr ""
"如果传入了可选参数 *rest*，则一条 ``REST`` 命令会被发送到服务器，并以 *rest* 作为参数。*rest* "
"通常表示请求文件中的字节偏移量，它告诉服务器重新开始发送文件的字节，从请求的偏移量处开始，跳过起始字节。但是请注意，:meth:`transfercmd`"
" 方法会将 *rest* 转换为字符串，但是不检查字符串的内容，转换用的编码是在初始化时指定的 *encoding* 参数。如果服务器无法识别 "
"``REST`` 命令，将引发 :exc:`error_reply` 异常。如果发生这种情况，只需不带 *rest* 参数调用 "
":meth:`transfercmd`。"

#: ../../library/ftplib.rst:332
msgid ""
"Like :meth:`transfercmd`, but returns a tuple of the data connection and the"
" expected size of the data.  If the expected size could not be computed, "
"``None`` will be returned as the expected size.  *cmd* and *rest* means the "
"same thing as in :meth:`transfercmd`."
msgstr ""
"类似于 :meth:`transfercmd`，但返回一个元组，包括数据连接和数据的预计大小。如果预计大小无法计算，则返回的预计大小为 "
"``None``。*cmd* 和 *rest* 的含义与 :meth:`transfercmd` 中的相同。"

#: ../../library/ftplib.rst:340
msgid ""
"List a directory in a standardized format by using ``MLSD`` command "
"(:rfc:`3659`).  If *path* is omitted the current directory is assumed. "
"*facts* is a list of strings representing the type of information desired "
"(e.g. ``[\"type\", \"size\", \"perm\"]``).  Return a generator object "
"yielding a tuple of two elements for every file found in path.  First "
"element is the file name, the second one is a dictionary containing facts "
"about the file name.  Content of this dictionary might be limited by the "
"*facts* argument but server is not guaranteed to return all requested facts."
msgstr ""
"使用 ``MLSD`` 命令以标准格式列出目录内容 (:rfc:`3659`)。如果省略 *path* 则使用当前目录。*facts* "
"是字符串列表，表示所需的信息类型（如 ``[\"type\", \"size\", \"perm\"]``）。返回一个生成器对象，每个在 path "
"中找到的文件都将在该对象中生成两个元素的元组。第一个元素是文件名，第二个元素是该文件的 facts 的字典。该字典的内容受 *facts* "
"参数限制，但不能保证服务器会返回所有请求的 facts。"

#: ../../library/ftplib.rst:354
msgid ""
"Return a list of file names as returned by the ``NLST`` command.  The "
"optional *argument* is a directory to list (default is the current server "
"directory).  Multiple arguments can be used to pass non-standard options to "
"the ``NLST`` command."
msgstr ""
"返回一个文件名列表，文件名由 ``NLST`` 命令返回。可选参数 *argument* "
"是待列出的目录（默认为当前服务器目录）。可以使用多个参数，将非标准选项传递给 ``NLST`` 命令。"

#: ../../library/ftplib.rst:359 ../../library/ftplib.rst:371
msgid "If your server supports the command, :meth:`mlsd` offers a better API."
msgstr "如果目标服务器支持相关命令，那么 :meth:`mlsd` 提供的 API 更好。"

#: ../../library/ftplib.rst:364
msgid ""
"Produce a directory listing as returned by the ``LIST`` command, printing it"
" to standard output.  The optional *argument* is a directory to list "
"(default is the current server directory).  Multiple arguments can be used "
"to pass non-standard options to the ``LIST`` command.  If the last argument "
"is a function, it is used as a *callback* function as for :meth:`retrlines`;"
" the default prints to ``sys.stdout``.  This method returns ``None``."
msgstr ""
"生成目录列表，即 ``LIST`` 命令所返回的结果，并将其打印到标准输出。可选参数 *argument* "
"是待列出的目录（默认为当前服务器目录）。可以使用多个参数，将非标准选项传递给 ``LIST`` 命令。如果最后一个参数是一个函数，它将被用作 "
"*callback* 函数，与 :meth:`retrlines` 中的相同，默认将打印到 ``sys.stdout``。本方法返回 ``None``。"

#: ../../library/ftplib.rst:376
msgid "Rename file *fromname* on the server to *toname*."
msgstr "将服务器上的文件 *fromname* 重命名为 *toname*。"

#: ../../library/ftplib.rst:381
msgid ""
"Remove the file named *filename* from the server.  If successful, returns "
"the text of the response, otherwise raises :exc:`error_perm` on permission "
"errors or :exc:`error_reply` on other errors."
msgstr ""
"将服务器上名为 *filename* 的文件删除。如果删除成功，返回响应文本，如果删除失败，在权限错误时引发 "
":exc:`error_perm`，在其他错误时引发 :exc:`error_reply`。"

#: ../../library/ftplib.rst:388
msgid "Set the current directory on the server."
msgstr "设置服务器端的当前目录。"

#: ../../library/ftplib.rst:393
msgid "Create a new directory on the server."
msgstr "在服务器上创建一个新目录。"

#: ../../library/ftplib.rst:398
msgid "Return the pathname of the current directory on the server."
msgstr "返回服务器上当前目录的路径。"

#: ../../library/ftplib.rst:403
msgid "Remove the directory named *dirname* on the server."
msgstr "将服务器上名为 *dirname* 的目录删除。"

#: ../../library/ftplib.rst:408
msgid ""
"Request the size of the file named *filename* on the server.  On success, "
"the size of the file is returned as an integer, otherwise ``None`` is "
"returned. Note that the ``SIZE`` command is not  standardized, but is "
"supported by many common server implementations."
msgstr ""
"请求服务器上名为 *filename* 的文件大小。成功后以整数返回文件大小，未成功则返回 ``None``。注意，``SIZE`` "
"不是标准命令，但通常许多服务器的实现都支持该命令。"

#: ../../library/ftplib.rst:416
msgid ""
"Send a ``QUIT`` command to the server and close the connection. This is the "
"\"polite\" way to close a connection, but it may raise an exception if the "
"server responds with an error to the ``QUIT`` command.  This implies a call "
"to the :meth:`close` method which renders the :class:`FTP` instance useless "
"for subsequent calls (see below)."
msgstr ""
"向服务器发送 ``QUIT`` 命令并关闭连接。 这是关闭一个连接的“礼貌”方式，但是如果服务器对 ``QUIT`` "
"命令的响应带有错误消息则这会引发一个异常。 这意味着对 :meth:`close` 方法的调用，它将使得 :class:`FTP` "
"实例对后继调用无效（见下文）。"

#: ../../library/ftplib.rst:425
msgid ""
"Close the connection unilaterally.  This should not be applied to an already"
" closed connection such as after a successful call to :meth:`~FTP.quit`. "
"After this call the :class:`FTP` instance should not be used any more (after"
" a call to :meth:`close` or :meth:`~FTP.quit` you cannot reopen the "
"connection by issuing another :meth:`login` method)."
msgstr ""
"单方面关闭连接。 这不该被应用于已经关闭的连接，例如成功调用 :meth:`~FTP.quit` 之后的连接。 在此调用之后 :class:`FTP` "
"实例不应被继续使用（在调用 :meth:`close` 或 :meth:`~FTP.quit` 之后你不能通过再次唤起 :meth:`login` "
"方法重新打开连接）。"

#: ../../library/ftplib.rst:433
msgid "FTP_TLS Objects"
msgstr "FTP_TLS 对象"

#: ../../library/ftplib.rst:435
msgid ""
":class:`FTP_TLS` class inherits from :class:`FTP`, defining these additional"
" objects:"
msgstr ":class:`FTP_TLS` 类继承自 :class:`FTP`，它定义了下述其他对象："

#: ../../library/ftplib.rst:439
msgid "The SSL version to use (defaults to :attr:`ssl.PROTOCOL_SSLv23`)."
msgstr "欲采用的 SSL 版本（默认为 :attr:`ssl.PROTOCOL_SSLv23`）。"

#: ../../library/ftplib.rst:443
msgid ""
"Set up a secure control connection by using TLS or SSL, depending on what is"
" specified in the :attr:`ssl_version` attribute."
msgstr "通过使用 TLS 或 SSL 来设置一个安全控制连接，具体取决于 :attr:`ssl_version` 属性是如何设置的。"

#: ../../library/ftplib.rst:446
msgid ""
"The method now supports hostname check with "
":attr:`ssl.SSLContext.check_hostname` and *Server Name Indication* (see "
":data:`ssl.HAS_SNI`)."
msgstr ""
"此方法现在支持使用 :attr:`ssl.SSLContext.check_hostname` 和 *服务器名称指示* (参见 "
":data:`ssl.HAS_SNI`) 进行主机名检查。"

#: ../../library/ftplib.rst:453
msgid ""
"Revert control channel back to plaintext.  This can be useful to take "
"advantage of firewalls that know how to handle NAT with non-secure FTP "
"without opening fixed ports."
msgstr "将控制通道回复为纯文本。 这适用于发挥知道如何使用非安全 FTP 处理 NAT 而无需打开固定端口的防火墙的优势。"

#: ../../library/ftplib.rst:461
msgid "Set up secure data connection."
msgstr "设置加密数据连接。"

#: ../../library/ftplib.rst:465
msgid "Set up clear text data connection."
msgstr "设置明文数据连接。"
