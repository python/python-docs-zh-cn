# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-07-25 16:48+0000\n"
"PO-Revision-Date: 2025-07-18 20:05+0000\n"
"Language-Team: Chinese (China) (https://app.transifex.com/python-doc/teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/glob.rst:2
msgid ":mod:`glob` --- Unix style pathname pattern expansion"
msgstr ""

#: ../../library/glob.rst:7
msgid "**Source code:** :source:`Lib/glob.py`"
msgstr ""

#: ../../library/glob.rst:21
msgid ""
"The :mod:`glob` module finds all the pathnames matching a specified pattern "
"according to the rules used by the Unix shell, although results are returned"
" in arbitrary order.  No tilde expansion is done, but ``*``, ``?``, and "
"character ranges expressed with ``[]`` will be correctly matched.  This is "
"done by using the :func:`os.scandir` and :func:`fnmatch.fnmatch` functions "
"in concert, and not by actually invoking a subshell."
msgstr ""

#: ../../library/glob.rst:28
msgid ""
"Note that files beginning with a dot (``.``) can only be matched by patterns"
" that also start with a dot, unlike :func:`fnmatch.fnmatch` or "
":func:`pathlib.Path.glob`. (For tilde and shell variable expansion, use "
":func:`os.path.expanduser` and :func:`os.path.expandvars`.)"
msgstr ""

#: ../../library/glob.rst:34
msgid ""
"For a literal match, wrap the meta-characters in brackets. For example, "
"``'[?]'`` matches the character ``'?'``."
msgstr ""

#: ../../library/glob.rst:39
msgid "The :mod:`pathlib` module offers high-level path objects."
msgstr ""

#: ../../library/glob.rst:45
msgid ""
"Return a possibly empty list of path names that match *pathname*, which must"
" be a string containing a path specification. *pathname* can be either "
"absolute (like :file:`/usr/src/Python-1.5/Makefile`) or relative (like "
":file:`../../Tools/\\*/\\*.gif`), and can contain shell-style wildcards. "
"Broken symlinks are included in the results (as in the shell). Whether or "
"not the results are sorted depends on the file system.  If a file that "
"satisfies conditions is removed or added during the call of this function, "
"whether a path name for that file be included is unspecified."
msgstr ""

#: ../../library/glob.rst:54
msgid ""
"If *root_dir* is not ``None``, it should be a :term:`path-like object` "
"specifying the root directory for searching.  It has the same effect on "
":func:`glob` as changing the current directory before calling it.  If "
"*pathname* is relative, the result will contain paths relative to "
"*root_dir*."
msgstr ""

#: ../../library/glob.rst:60
msgid ""
"This function can support :ref:`paths relative to directory descriptors "
"<dir_fd>` with the *dir_fd* parameter."
msgstr ""

#: ../../library/glob.rst:66
msgid ""
"If *recursive* is true, the pattern \"``**``\" will match any files and zero"
" or more directories, subdirectories and symbolic links to directories. If "
"the pattern is followed by an :data:`os.sep` or :data:`os.altsep` then files"
" will not match."
msgstr ""

#: ../../library/glob.rst:71
msgid ""
"If *include_hidden* is true, \"``**``\" pattern will match hidden "
"directories."
msgstr ""

#: ../../library/glob.rst:73 ../../library/glob.rst:96
msgid ""
"Raises an :ref:`auditing event <auditing>` ``glob.glob`` with arguments "
"``pathname``, ``recursive``."
msgstr ""

#: ../../library/glob.rst:74 ../../library/glob.rst:97
msgid ""
"Raises an :ref:`auditing event <auditing>` ``glob.glob/2`` with arguments "
"``pathname``, ``recursive``, ``root_dir``, ``dir_fd``."
msgstr ""

#: ../../library/glob.rst:77
msgid ""
"Using the \"``**``\" pattern in large directory trees may consume an "
"inordinate amount of time."
msgstr ""

#: ../../library/glob.rst:80 ../../library/glob.rst:99
msgid "Support for recursive globs using \"``**``\"."
msgstr ""

#: ../../library/glob.rst:83 ../../library/glob.rst:102
msgid "Added the *root_dir* and *dir_fd* parameters."
msgstr ""

#: ../../library/glob.rst:86 ../../library/glob.rst:105
msgid "Added the *include_hidden* parameter."
msgstr ""

#: ../../library/glob.rst:93
msgid ""
"Return an :term:`iterator` which yields the same values as :func:`glob` "
"without actually storing them all simultaneously."
msgstr ""

#: ../../library/glob.rst:111
msgid ""
"Escape all special characters (``'?'``, ``'*'`` and ``'['``). This is useful"
" if you want to match an arbitrary literal string that may have special "
"characters in it.  Special characters in drive/UNC sharepoints are not "
"escaped, e.g. on Windows ``escape('//?/c:/Quo vadis?.txt')`` returns "
"``'//?/c:/Quo vadis[?].txt'``."
msgstr ""

#: ../../library/glob.rst:120
msgid ""
"For example, consider a directory containing the following files: "
":file:`1.gif`, :file:`2.txt`, :file:`card.gif` and a subdirectory "
":file:`sub` which contains only the file :file:`3.txt`.  :func:`glob` will "
"produce the following results.  Notice how any leading components of the "
"path are preserved. ::"
msgstr ""

#: ../../library/glob.rst:138
msgid ""
"If the directory contains files starting with ``.`` they won't be matched by"
" default. For example, consider a directory containing :file:`card.gif` and "
":file:`.card.gif`::"
msgstr ""

#: ../../library/glob.rst:150
msgid "Module :mod:`fnmatch`"
msgstr ""

#: ../../library/glob.rst:151
msgid "Shell-style filename (not path) expansion"
msgstr ""

#: ../../library/glob.rst:9
msgid "filenames"
msgstr ""

#: ../../library/glob.rst:9
msgid "pathname expansion"
msgstr ""

#: ../../library/glob.rst:13
msgid "* (asterisk)"
msgstr ""

#: ../../library/glob.rst:13 ../../library/glob.rst:63
msgid "in glob-style wildcards"
msgstr ""

#: ../../library/glob.rst:13
msgid "? (question mark)"
msgstr ""

#: ../../library/glob.rst:13
msgid "[] (square brackets)"
msgstr ""

#: ../../library/glob.rst:13
msgid "! (exclamation)"
msgstr ""

#: ../../library/glob.rst:13
msgid "- (minus)"
msgstr ""

#: ../../library/glob.rst:13
msgid ". (dot)"
msgstr ""

#: ../../library/glob.rst:63
msgid "**"
msgstr ""
