# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Nyuan Zhang, 2025
# Stan Ulbrych, 2025
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-05 17:03+0000\n"
"PO-Revision-Date: 2025-07-18 20:05+0000\n"
"Last-Translator: Stan Ulbrych, 2025\n"
"Language-Team: Chinese (China) (https://app.transifex.com/python-doc/teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/mimetypes.rst:2
msgid ":mod:`mimetypes` --- Map filenames to MIME types"
msgstr ":mod:`mimetypes` --- 映射文件名到 MIME 类型"

#: ../../library/mimetypes.rst:9
msgid "**Source code:** :source:`Lib/mimetypes.py`"
msgstr "**源代码:** :source:`Lib/mimetypes.py`"

#: ../../library/mimetypes.rst:15
msgid ""
"The :mod:`mimetypes` module converts between a filename or URL and the MIME "
"type associated with the filename extension.  Conversions are provided from "
"filename to MIME type and from MIME type to filename extension; encodings "
"are not supported for the latter conversion."
msgstr ""
":mod:`mimetypes` 模块可以在文件名或 URL 和关联到文件扩展名的 MIME 类型之间执行转换。 所提供的转换包括从文件名到 MIME "
"类型和从 MIME 类型到文件扩展名；后一种转换不支持编码格式。"

#: ../../library/mimetypes.rst:20
msgid ""
"The module provides one class and a number of convenience functions. The "
"functions are the normal interface to this module, but some applications may"
" be interested in the class as well."
msgstr "该模块提供了一个类和一些便捷函数。 这些函数是该模块通常的接口，但某些应用程序可能也会希望使用类。"

#: ../../library/mimetypes.rst:24
msgid ""
"The functions described below provide the primary interface for this module."
"  If the module has not been initialized, they will call :func:`init` if "
"they rely on the information :func:`init` sets up."
msgstr ""
"下列函数提供了此模块的主要接口。 如果此模块尚未被初始化，它们将会调用 :func:`init`，如果它们依赖于 :func:`init` "
"所设置的信息的话。"

#: ../../library/mimetypes.rst:33
msgid ""
"Guess the type of a file based on its filename, path or URL, given by *url*."
" URL can be a string or a :term:`path-like object`."
msgstr ""
"根据 *url* 给出的文件名、路径或 URL 来猜测文件的类型，URL 可以为字符串或 :term:`path-like object`。"

#: ../../library/mimetypes.rst:36
msgid ""
"The return value is a tuple ``(type, encoding)`` where *type* is ``None`` if"
" the type can't be guessed (missing or unknown suffix) or a string of the "
"form ``'type/subtype'``, usable for a MIME :mailheader:`content-type` "
"header."
msgstr ""
"返回值是一个元组 ``(type, encoding)`` 其中 *type* 在无法猜测（后缀不存在或者未知）时为 ``None``，或者为 "
"``'type/subtype'`` 形式的字符串，可以作为 MIME :mailheader:`content-type` 标头。"

#: ../../library/mimetypes.rst:40
msgid ""
"*encoding* is ``None`` for no encoding or the name of the program used to "
"encode (e.g. :program:`compress` or :program:`gzip`). The encoding is "
"suitable for use as a :mailheader:`Content-Encoding` header, **not** as a "
":mailheader:`Content-Transfer-Encoding` header. The mappings are table "
"driven. Encoding suffixes are case sensitive; type suffixes are first tried "
"case sensitively, then case insensitively."
msgstr ""
"*encoding* 在无编码格式时为 ``None``，或者为程序所用的编码格式 (例如 :program:`compress` 或 "
":program:`gzip`)。 它可以作为 :mailheader:`Content-Encoding` 标头，但 **不可** 作为 "
":mailheader:`Content-Transfer-Encoding` 标头。 映射是表格驱动的。 "
"编码格式前缀对大小写敏感；类型前缀会先以大小写敏感方式检测再以大小写不敏感方式检测。"

#: ../../library/mimetypes.rst:47
msgid ""
"The optional *strict* argument is a flag specifying whether the list of "
"known MIME types is limited to only the official types `registered with IANA"
" <https://www.iana.org/assignments/media-types/media-types.xhtml>`_. When "
"*strict* is ``True`` (the default), only the IANA types are supported; when "
"*strict* is ``False``, some additional non-standard but commonly used MIME "
"types are also recognized."
msgstr ""
"可选的 *strict* 参数是一个旗标，指明要将已知 MIME 类型限制在 `IANA 已注册 "
"<https://www.iana.org/assignments/media-types/media-types.xhtml>`_ 的官方类型之内。 "
"当 *strict* 为 ``True`` 时（默认值），则仅支持 IANA 类型；当 *strict* 为 ``False`` "
"时，则还支持某些附加的非标准但常用的 MIME 类型。"

#: ../../library/mimetypes.rst:54
msgid "Added support for url being a :term:`path-like object`."
msgstr "增加了 :term:`path-like object` 作为 url 的支持。"

#: ../../library/mimetypes.rst:60
msgid ""
"Guess the extensions for a file based on its MIME type, given by *type*. The"
" return value is a list of strings giving all possible filename extensions, "
"including the leading dot (``'.'``).  The extensions are not guaranteed to "
"have been associated with any particular data stream, but would be mapped to"
" the MIME type *type* by :func:`guess_type`."
msgstr ""
"根据由 *type* 给出的文件 MIME 类型猜测其扩展名。 返回值是由所有可能的文件扩展名组成的字符串列表，包括开头的点号 (``'.'``)。 "
"这些扩展名不保证能关联到任何特定的数据流，但是将会由  :func:`guess_type` 映射到 MIME 类型 *type*。"

#: ../../library/mimetypes.rst:66 ../../library/mimetypes.rst:78
msgid ""
"The optional *strict* argument has the same meaning as with the "
":func:`guess_type` function."
msgstr "可选的 *strict* 参数具有与 :func:`guess_type` 函数一致的含义。"

#: ../../library/mimetypes.rst:71
msgid ""
"Guess the extension for a file based on its MIME type, given by *type*. The "
"return value is a string giving a filename extension, including the leading "
"dot (``'.'``).  The extension is not guaranteed to have been associated with"
" any particular data stream, but would be mapped to the MIME type *type* by "
":func:`guess_type`.  If no extension can be guessed for *type*, ``None`` is "
"returned."
msgstr ""
"根据由 *type* 给出的文件 MIME 类型猜测其扩展名。 返回值是一个表示文件扩展名的字符串，包括开头的点号 (``'.'``)。 "
"该扩展名不保证能关联到任何特定的数据流，但是将会由 :func:`guess_type` 映射到 MIME 类型 *type*。 如果不能猜测出 "
"*type* 的扩展名，则将返回 ``None``。"

#: ../../library/mimetypes.rst:80
msgid ""
"Some additional functions and data items are available for controlling the "
"behavior of the module."
msgstr "有一些附加函数和数据项可被用于控制此模块的行为。"

#: ../../library/mimetypes.rst:86
msgid ""
"Initialize the internal data structures.  If given, *files* must be a "
"sequence of file names which should be used to augment the default type map."
"  If omitted, the file names to use are taken from :const:`knownfiles`; on "
"Windows, the current registry settings are loaded.  Each file named in "
"*files* or :const:`knownfiles` takes precedence over those named before it."
"  Calling :func:`init` repeatedly is allowed."
msgstr ""
"初始化内部数据结构。 *files* 如果给出则必须是一个文件名序列，它应当被用于协助默认的类型映射。 如果省略则要使用的文件名会从 "
":const:`knownfiles` 中获取； 在 Windows 上，将会载入当前注册表设置。  在 *files* 或 "
":const:`knownfiles` 中指定的每个文件名的优先级将高于在它之前的文件名。 :func:`init` 允许被重复调用。"

#: ../../library/mimetypes.rst:93
msgid ""
"Specifying an empty list for *files* will prevent the system defaults from "
"being applied: only the well-known values will be present from a built-in "
"list."
msgstr "为 *files* 指定一个空列表将防止应用系统默认选项：将只保留来自内置列表的常用值。"

#: ../../library/mimetypes.rst:96
msgid ""
"If *files* is ``None`` the internal data structure is completely rebuilt to "
"its initial default value. This is a stable operation and will produce the "
"same results when called multiple times."
msgstr "如果 *files* 为 ``None`` 则内部数据结构会完全重建为其初始默认值。 这是一个稳定操作并将在多次调用时产生相同的结果。"

#: ../../library/mimetypes.rst:100
msgid "Previously, Windows registry settings were ignored."
msgstr "在之前版本中，Windows 注册表设置会被忽略。"

#: ../../library/mimetypes.rst:106
msgid ""
"Load the type map given in the file *filename*, if it exists.  The type map "
"is returned as a dictionary mapping filename extensions, including the "
"leading dot (``'.'``), to strings of the form ``'type/subtype'``.  If the "
"file *filename* does not exist or cannot be read, ``None`` is returned."
msgstr ""
"载入在文件 *filename* 中给定的类型映射，如果文件存在的话。 返回的类型映射会是一个字典，其中的键值对为文件扩展名包括开头的点号 "
"(``'.'``) 与 ``'type/subtype'`` 形式的字符串。 如果文件 *filename* 不存在或无法被读取，则返回 "
"``None``。"

#: ../../library/mimetypes.rst:114
msgid ""
"Add a mapping from the MIME type *type* to the extension *ext*. When the "
"extension is already known, the new type will replace the old one. When the "
"type is already known the extension will be added to the list of known "
"extensions."
msgstr ""
"添加一个从 MIME 类型 *type* 到扩展名 *ext* 的映射。 当扩展名已知时，新类型将替代旧类型。 "
"当类型已知时，扩展名将被添加到已知扩展名列表。"

#: ../../library/mimetypes.rst:118
msgid ""
"When *strict* is ``True`` (the default), the mapping will be added to the "
"official MIME types, otherwise to the non-standard ones."
msgstr "当 *strict* 为 ``True`` 时（默认值），映射将被添加到官方 MIME 类型，否则添加到非标准类型。"

#: ../../library/mimetypes.rst:124
msgid ""
"Flag indicating whether or not the global data structures have been "
"initialized. This is set to ``True`` by :func:`init`."
msgstr "指明全局数据结构是否已被初始化的旗标。 这会由 :func:`init` 设为 ``True``。"

#: ../../library/mimetypes.rst:132
msgid ""
"List of type map file names commonly installed.  These files are typically "
"named :file:`mime.types` and are installed in different locations by "
"different packages."
msgstr "通常安装的类型映射文件名列表。 这些文件一般被命名为 :file:`mime.types` 并会由不同的包安装在不同的位置。"

#: ../../library/mimetypes.rst:139
msgid ""
"Dictionary mapping suffixes to suffixes.  This is used to allow recognition "
"of encoded files for which the encoding and the type are indicated by the "
"same extension.  For example, the :file:`.tgz` extension is mapped to "
":file:`.tar.gz` to allow the encoding and type to be recognized separately."
msgstr ""
"将后缀映射到其他后缀的字典。 它被用来允许识别已编码的文件，其编码格式和类型是由相同的扩展名来指明的。 例如，:file:`.tgz` 扩展名被映射到 "
":file:`.tar.gz` 以允许编码格式和类型被分别识别。"

#: ../../library/mimetypes.rst:147
msgid "Dictionary mapping filename extensions to encoding types."
msgstr "映射文件扩展名到编码格式类型的字典。"

#: ../../library/mimetypes.rst:152
msgid "Dictionary mapping filename extensions to MIME types."
msgstr "映射文件扩展名到 MIME 类型的字典。"

#: ../../library/mimetypes.rst:157
msgid ""
"Dictionary mapping filename extensions to non-standard, but commonly found "
"MIME types."
msgstr "映射文件扩展名到非标准但常见的 MIME 类型的字典。"

#: ../../library/mimetypes.rst:161
msgid "An example usage of the module::"
msgstr "此模块一个使用示例::"

#: ../../library/mimetypes.rst:178
msgid "MimeTypes Objects"
msgstr "MimeTypes 对象"

#: ../../library/mimetypes.rst:180
msgid ""
"The :class:`MimeTypes` class may be useful for applications which may want "
"more than one MIME-type database; it provides an interface similar to the "
"one of the :mod:`mimetypes` module."
msgstr ""
":class:`MimeTypes` 类可以被用于那些需要多个 MIME 类型数据库的应用程序；它提供了与 :mod:`mimetypes` "
"模块所提供的类似接口。"

#: ../../library/mimetypes.rst:187
msgid ""
"This class represents a MIME-types database.  By default, it provides access"
" to the same database as the rest of this module. The initial database is a "
"copy of that provided by the module, and may be extended by loading "
"additional :file:`mime.types`\\ -style files into the database using the "
":meth:`read` or :meth:`readfp` methods.  The mapping dictionaries may also "
"be cleared before loading additional data if the default data is not "
"desired."
msgstr ""
"这个类表示 MIME 类型数据库。  默认情况下，它提供了对与此模块其余部分一致的数据库的访问权限。 "
"这个初始数据库是此模块所提供数据库的一个副本，并可以通过使用 :meth:`read` 或 :meth:`readfp` 方法将附加的 "
":file:`mime.types` 样式文载入到数据库中来进行扩展。 如果不需要默认数据的话这个映射字典也可以在载入附加数据之前先被清空。"

#: ../../library/mimetypes.rst:194
msgid ""
"The optional *filenames* parameter can be used to cause additional files to "
"be loaded \"on top\" of the default database."
msgstr "可选的 *filenames* 形参可被用来让附加文件被载入到默认数据库“之上”。"

#: ../../library/mimetypes.rst:200
msgid ""
"Dictionary mapping suffixes to suffixes.  This is used to allow recognition "
"of encoded files for which the encoding and the type are indicated by the "
"same extension.  For example, the :file:`.tgz` extension is mapped to "
":file:`.tar.gz` to allow the encoding and type to be recognized separately."
"  This is initially a copy of the global :data:`suffix_map` defined in the "
"module."
msgstr ""
"将后缀映射到其他后缀的字典。 它被用来允许识别已编码的文件，其编码格式和类型是由相同的扩展名来指明的。 例如，:file:`.tgz` 扩展名被映射到 "
":file:`.tar.gz` 以允许编码格式和类型被分别识别。 这是在模块中定义的全局 :data:`suffix_map` 的一个副本。"

#: ../../library/mimetypes.rst:209
msgid ""
"Dictionary mapping filename extensions to encoding types.  This is initially"
" a copy of the global :data:`encodings_map` defined in the module."
msgstr "映射文件扩展名到编码格式类型的字典。 这是在模块中定义的全局 :data:`encodings_map` 的一个副本。"

#: ../../library/mimetypes.rst:215
msgid ""
"Tuple containing two dictionaries, mapping filename extensions to MIME "
"types: the first dictionary is for the non-standards types and the second "
"one is for the standard types. They are initialized by :data:`common_types` "
"and :data:`types_map`."
msgstr ""
"包含两个字典的元组，将文件扩展名映射到 MIME 类型：第一个字典针对非标准类型而第二个字典针对标准类型。 它们会由 "
":data:`common_types` 和 :data:`types_map` 来初始化。"

#: ../../library/mimetypes.rst:223
msgid ""
"Tuple containing two dictionaries, mapping MIME types to a list of filename "
"extensions: the first dictionary is for the non-standards types and the "
"second one is for the standard types. They are initialized by "
":data:`common_types` and :data:`types_map`."
msgstr ""
"包含两个字典的元组，将 MIME 类型映射到文件扩展名列表：第一个字典针对非标准类型而第二个字典针对标准类型。 它们会由 "
":data:`common_types` 和 :data:`types_map` 来初始化。"

#: ../../library/mimetypes.rst:231
msgid ""
"Similar to the :func:`guess_extension` function, using the tables stored as "
"part of the object."
msgstr "类似于 :func:`guess_extension` 函数，使用存储的表作为对象的一部分。"

#: ../../library/mimetypes.rst:237
msgid ""
"Similar to the :func:`guess_type` function, using the tables stored as part "
"of the object."
msgstr "类似于 :func:`guess_type` 函数，使用存储的表作为对象的一部分。"

#: ../../library/mimetypes.rst:243
msgid ""
"Similar to the :func:`guess_all_extensions` function, using the tables "
"stored as part of the object."
msgstr "类似于 :func:`guess_all_extensions` 函数，使用存储的表作为对象的一部分。"

#: ../../library/mimetypes.rst:249
msgid ""
"Load MIME information from a file named *filename*.  This uses "
":meth:`readfp` to parse the file."
msgstr "从名称为 *filename* 的文件载入 MIME 信息。 此方法使用 :meth:`readfp` 来解析文件。"

#: ../../library/mimetypes.rst:252
msgid ""
"If *strict* is ``True``, information will be added to list of standard "
"types, else to the list of non-standard types."
msgstr "如果 *strict* 为 ``True``，信息将被添加到标准类型列表，否则添加到非标准类型列表。"

#: ../../library/mimetypes.rst:258
msgid ""
"Load MIME type information from an open file *fp*.  The file must have the "
"format of the standard :file:`mime.types` files."
msgstr "从打开的文件 *fp* 载入 MIME 类型信息。  文件必须具有标准 :file:`mime.types` 文件的格式。"

#: ../../library/mimetypes.rst:261 ../../library/mimetypes.rst:271
msgid ""
"If *strict* is ``True``, information will be added to the list of standard "
"types, else to the list of non-standard types."
msgstr "如果 *strict* 为 ``True``，信息将被添加到标准类型列表，否则添加到非标准类型列表。"

#: ../../library/mimetypes.rst:267
msgid "Load MIME type information from the Windows registry."
msgstr "从 Windows 注册表载入 MIME 类型信息。"

#: ../../library/mimetypes.rst:269
msgid ":ref:`Availability <availability>`: Windows."
msgstr ":ref:`可用性 <availability>`: Windows。"

#: ../../library/mimetypes.rst:11 ../../library/mimetypes.rst:31
msgid "MIME"
msgstr "MIME"

#: ../../library/mimetypes.rst:11
msgid "content type"
msgstr "content type"

#: ../../library/mimetypes.rst:31
msgid "headers"
msgstr "标头"

#: ../../library/mimetypes.rst:130
msgid "file"
msgstr "文件"

#: ../../library/mimetypes.rst:130
msgid "mime.types"
msgstr "mime.types"
