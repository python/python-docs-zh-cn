# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-07-25 16:48+0000\n"
"PO-Revision-Date: 2025-07-18 20:06+0000\n"
"Language-Team: Chinese (China) (https://app.transifex.com/python-doc/teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/wave.rst:2
msgid ":mod:`wave` --- Read and write WAV files"
msgstr ""

#: ../../library/wave.rst:10
msgid "**Source code:** :source:`Lib/wave.py`"
msgstr ""

#: ../../library/wave.rst:14
msgid ""
"The :mod:`wave` module provides a convenient interface to the Waveform Audio"
" \"WAVE\" (or \"WAV\") file format. Only files using ``WAVE_FORMAT_PCM`` are"
" supported. Note that this does not include files using "
"``WAVE_FORMAT_EXTENSIBLE`` even if the subformat is PCM."
msgstr ""

#: ../../library/wave.rst:19
msgid "The :mod:`wave` module defines the following function and exception:"
msgstr ""

#: ../../library/wave.rst:24
msgid ""
"If *file* is a string, open the file by that name, otherwise treat it as a "
"file-like object.  *mode* can be:"
msgstr ""

#: ../../library/wave.rst:28
msgid "``'rb'``"
msgstr ""

#: ../../library/wave.rst:28
msgid "Read only mode."
msgstr ""

#: ../../library/wave.rst:31
msgid "``'wb'``"
msgstr ""

#: ../../library/wave.rst:31
msgid "Write only mode."
msgstr ""

#: ../../library/wave.rst:33
msgid "Note that it does not allow read/write WAV files."
msgstr ""

#: ../../library/wave.rst:35
msgid ""
"A *mode* of ``'rb'`` returns a :class:`Wave_read` object, while a *mode* of "
"``'wb'`` returns a :class:`Wave_write` object.  If *mode* is omitted and a "
"file-like object is passed as *file*, ``file.mode`` is used as the default "
"value for *mode*."
msgstr ""

#: ../../library/wave.rst:40
msgid ""
"If you pass in a file-like object, the wave object will not close it when "
"its ``close()`` method is called; it is the caller's responsibility to close"
" the file object."
msgstr ""

#: ../../library/wave.rst:44
msgid ""
"The :func:`.open` function may be used in a :keyword:`with` statement.  When"
" the :keyword:`!with` block completes, the :meth:`Wave_read.close()` or "
":meth:`Wave_write.close()` method is called."
msgstr ""

#: ../../library/wave.rst:48 ../../library/wave.rst:172
msgid "Added support for unseekable files."
msgstr ""

#: ../../library/wave.rst:53
msgid ""
"An error raised when something is impossible because it violates the WAV "
"specification or hits an implementation deficiency."
msgstr ""

#: ../../library/wave.rst:60
msgid "Wave_read Objects"
msgstr ""

#: ../../library/wave.rst:64
msgid "Read a WAV file."
msgstr ""

#: ../../library/wave.rst:66
msgid ""
"Wave_read objects, as returned by :func:`.open`, have the following methods:"
msgstr ""

#: ../../library/wave.rst:71
msgid ""
"Close the stream if it was opened by :mod:`wave`, and make the instance "
"unusable.  This is called automatically on object collection."
msgstr ""

#: ../../library/wave.rst:77
msgid "Returns number of audio channels (``1`` for mono, ``2`` for stereo)."
msgstr ""

#: ../../library/wave.rst:82
msgid "Returns sample width in bytes."
msgstr ""

#: ../../library/wave.rst:87
msgid "Returns sampling frequency."
msgstr ""

#: ../../library/wave.rst:92
msgid "Returns number of audio frames."
msgstr ""

#: ../../library/wave.rst:97
msgid "Returns compression type (``'NONE'`` is the only supported type)."
msgstr ""

#: ../../library/wave.rst:102
msgid ""
"Human-readable version of :meth:`getcomptype`. Usually ``'not compressed'`` "
"parallels ``'NONE'``."
msgstr ""

#: ../../library/wave.rst:108
msgid ""
"Returns a :func:`~collections.namedtuple` ``(nchannels, sampwidth, "
"framerate, nframes, comptype, compname)``, equivalent to output of the "
"``get*()`` methods."
msgstr ""

#: ../../library/wave.rst:115
msgid ""
"Reads and returns at most *n* frames of audio, as a :class:`bytes` object."
msgstr ""

#: ../../library/wave.rst:120
msgid "Rewind the file pointer to the beginning of the audio stream."
msgstr ""

#: ../../library/wave.rst:122
msgid ""
"The following two methods are defined for compatibility with the :mod:`aifc`"
" module, and don't do anything interesting."
msgstr ""

#: ../../library/wave.rst:128
msgid "Returns ``None``."
msgstr ""

#: ../../library/wave.rst:133
msgid "Raise an error."
msgstr ""

#: ../../library/wave.rst:135
msgid ""
"The following two methods define a term \"position\" which is compatible "
"between them, and is otherwise implementation dependent."
msgstr ""

#: ../../library/wave.rst:141
msgid "Set the file pointer to the specified position."
msgstr ""

#: ../../library/wave.rst:146
msgid "Return current file pointer position."
msgstr ""

#: ../../library/wave.rst:152
msgid "Wave_write Objects"
msgstr ""

#: ../../library/wave.rst:156
msgid "Write a WAV file."
msgstr ""

#: ../../library/wave.rst:158
msgid "Wave_write objects, as returned by :func:`.open`."
msgstr ""

#: ../../library/wave.rst:160
msgid ""
"For seekable output streams, the ``wave`` header will automatically be "
"updated to reflect the number of frames actually written.  For unseekable "
"streams, the *nframes* value must be accurate when the first frame data is "
"written.  An accurate *nframes* value can be achieved either by calling "
":meth:`setnframes` or :meth:`setparams` with the number of frames that will "
"be written before :meth:`close` is called and then using "
":meth:`writeframesraw` to write the frame data, or by calling "
":meth:`writeframes` with all of the frame data to be written.  In the latter"
" case :meth:`writeframes` will calculate the number of frames in the data "
"and set *nframes* accordingly before writing the frame data."
msgstr ""

#: ../../library/wave.rst:175
msgid "Wave_write objects have the following methods:"
msgstr ""

#: ../../library/wave.rst:179
msgid ""
"Make sure *nframes* is correct, and close the file if it was opened by "
":mod:`wave`.  This method is called upon object collection.  It will raise "
"an exception if the output stream is not seekable and *nframes* does not "
"match the number of frames actually written."
msgstr ""

#: ../../library/wave.rst:187
msgid "Set the number of channels."
msgstr ""

#: ../../library/wave.rst:192
msgid "Set the sample width to *n* bytes."
msgstr ""

#: ../../library/wave.rst:197
msgid "Set the frame rate to *n*."
msgstr ""

#: ../../library/wave.rst:199
msgid "A non-integral input to this method is rounded to the nearest integer."
msgstr ""

#: ../../library/wave.rst:206
msgid ""
"Set the number of frames to *n*.  This will be changed later if the number "
"of frames actually written is different (this update attempt will raise an "
"error if the output stream is not seekable)."
msgstr ""

#: ../../library/wave.rst:213
msgid ""
"Set the compression type and description. At the moment, only compression "
"type ``NONE`` is supported, meaning no compression."
msgstr ""

#: ../../library/wave.rst:219
msgid ""
"The *tuple* should be ``(nchannels, sampwidth, framerate, nframes, comptype,"
" compname)``, with values valid for the ``set*()`` methods.  Sets all "
"parameters."
msgstr ""

#: ../../library/wave.rst:226
msgid ""
"Return current position in the file, with the same disclaimer for the "
":meth:`Wave_read.tell` and :meth:`Wave_read.setpos` methods."
msgstr ""

#: ../../library/wave.rst:232
msgid "Write audio frames, without correcting *nframes*."
msgstr ""

#: ../../library/wave.rst:234 ../../library/wave.rst:245
msgid "Any :term:`bytes-like object` is now accepted."
msgstr ""

#: ../../library/wave.rst:240
msgid ""
"Write audio frames and make sure *nframes* is correct.  It will raise an "
"error if the output stream is not seekable and the total number of frames "
"that have been written after *data* has been written does not match the "
"previously set value for *nframes*."
msgstr ""

#: ../../library/wave.rst:248
msgid ""
"Note that it is invalid to set any parameters after calling "
":meth:`writeframes` or :meth:`writeframesraw`, and any attempt to do so will"
" raise :exc:`wave.Error`."
msgstr ""
