# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2025
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.9\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-07-25 19:10+0000\n"
"PO-Revision-Date: 2025-07-18 19:17+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2025\n"
"Language-Team: Chinese (China) (https://app.transifex.com/python-doc/teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/html.parser.rst:2
msgid ":mod:`html.parser` --- Simple HTML and XHTML parser"
msgstr ""

#: ../../library/html.parser.rst:7
msgid "**Source code:** :source:`Lib/html/parser.py`"
msgstr ""

#: ../../library/html.parser.rst:15
msgid ""
"This module defines a class :class:`HTMLParser` which serves as the basis "
"for parsing text files formatted in HTML (HyperText Mark-up Language) and "
"XHTML."
msgstr ""

#: ../../library/html.parser.rst:20
msgid "Create a parser instance able to parse invalid markup."
msgstr ""

#: ../../library/html.parser.rst:22
msgid ""
"If *convert_charrefs* is ``True`` (the default), all character references "
"(except the ones in ``script``/``style`` elements) are automatically "
"converted to the corresponding Unicode characters."
msgstr ""

#: ../../library/html.parser.rst:26
msgid ""
"An :class:`.HTMLParser` instance is fed HTML data and calls handler methods "
"when start tags, end tags, text, comments, and other markup elements are "
"encountered.  The user should subclass :class:`.HTMLParser` and override its"
" methods to implement the desired behavior."
msgstr ""

#: ../../library/html.parser.rst:31
msgid ""
"This parser does not check that end tags match start tags or call the end-"
"tag handler for elements which are closed implicitly by closing an outer "
"element."
msgstr ""

#: ../../library/html.parser.rst:34
msgid "*convert_charrefs* keyword argument added."
msgstr ""

#: ../../library/html.parser.rst:37
msgid "The default value for argument *convert_charrefs* is now ``True``."
msgstr ""

#: ../../library/html.parser.rst:42
msgid "Example HTML Parser Application"
msgstr ""

#: ../../library/html.parser.rst:44
msgid ""
"As a basic example, below is a simple HTML parser that uses the "
":class:`HTMLParser` class to print out start tags, end tags, and data as "
"they are encountered::"
msgstr ""

#: ../../library/html.parser.rst:64
msgid "The output will then be:"
msgstr ""

#: ../../library/html.parser.rst:83
msgid ":class:`.HTMLParser` Methods"
msgstr ""

#: ../../library/html.parser.rst:85
msgid ":class:`HTMLParser` instances have the following methods:"
msgstr ""

#: ../../library/html.parser.rst:90
msgid ""
"Feed some text to the parser.  It is processed insofar as it consists of "
"complete elements; incomplete data is buffered until more data is fed or "
":meth:`close` is called.  *data* must be :class:`str`."
msgstr ""

#: ../../library/html.parser.rst:97
msgid ""
"Force processing of all buffered data as if it were followed by an end-of-"
"file mark.  This method may be redefined by a derived class to define "
"additional processing at the end of the input, but the redefined version "
"should always call the :class:`HTMLParser` base class method :meth:`close`."
msgstr ""

#: ../../library/html.parser.rst:105
msgid ""
"Reset the instance.  Loses all unprocessed data.  This is called implicitly "
"at instantiation time."
msgstr ""

#: ../../library/html.parser.rst:111
msgid "Return current line number and offset."
msgstr ""

#: ../../library/html.parser.rst:116
msgid ""
"Return the text of the most recently opened start tag.  This should not "
"normally be needed for structured processing, but may be useful in dealing "
"with HTML \"as deployed\" or for re-generating input with minimal changes "
"(whitespace between attributes can be preserved, etc.)."
msgstr ""

#: ../../library/html.parser.rst:122
msgid ""
"The following methods are called when data or markup elements are "
"encountered and they are meant to be overridden in a subclass.  The base "
"class implementations do nothing (except for "
":meth:`~HTMLParser.handle_startendtag`):"
msgstr ""

#: ../../library/html.parser.rst:129
msgid ""
"This method is called to handle the start tag of an element (e.g. ``<div "
"id=\"main\">``)."
msgstr ""

#: ../../library/html.parser.rst:131
msgid ""
"The *tag* argument is the name of the tag converted to lower case. The "
"*attrs* argument is a list of ``(name, value)`` pairs containing the "
"attributes found inside the tag's ``<>`` brackets.  The *name* will be "
"translated to lower case, and quotes in the *value* have been removed, and "
"character and entity references have been replaced."
msgstr ""

#: ../../library/html.parser.rst:137
msgid ""
"For instance, for the tag ``<A HREF=\"https://www.cwi.nl/\">``, this method "
"would be called as ``handle_starttag('a', [('href', "
"'https://www.cwi.nl/')])``."
msgstr ""

#: ../../library/html.parser.rst:140
msgid ""
"All entity references from :mod:`html.entities` are replaced in the "
"attribute values."
msgstr ""

#: ../../library/html.parser.rst:146
msgid ""
"This method is called to handle the end tag of an element (e.g. ``</div>``)."
msgstr ""

#: ../../library/html.parser.rst:148
msgid "The *tag* argument is the name of the tag converted to lower case."
msgstr ""

#: ../../library/html.parser.rst:153
msgid ""
"Similar to :meth:`handle_starttag`, but called when the parser encounters an"
" XHTML-style empty tag (``<img ... />``).  This method may be overridden by "
"subclasses which require this particular lexical information; the default "
"implementation simply calls :meth:`handle_starttag` and "
":meth:`handle_endtag`."
msgstr ""

#: ../../library/html.parser.rst:161
msgid ""
"This method is called to process arbitrary data (e.g. text nodes and the "
"content of ``<script>...</script>`` and ``<style>...</style>``)."
msgstr ""

#: ../../library/html.parser.rst:167
msgid ""
"This method is called to process a named character reference of the form "
"``&name;`` (e.g. ``&gt;``), where *name* is a general entity reference (e.g."
" ``'gt'``).  This method is never called if *convert_charrefs* is ``True``."
msgstr ""

#: ../../library/html.parser.rst:175
msgid ""
"This method is called to process decimal and hexadecimal numeric character "
"references of the form ``&#NNN;`` and ``&#xNNN;``.  For example, the decimal"
" equivalent for ``&gt;`` is ``&#62;``, whereas the hexadecimal is "
"``&#x3E;``; in this case the method will receive ``'62'`` or ``'x3E'``.  "
"This method is never called if *convert_charrefs* is ``True``."
msgstr ""

#: ../../library/html.parser.rst:184
msgid ""
"This method is called when a comment is encountered (e.g. ``<!--"
"comment-->``)."
msgstr ""

#: ../../library/html.parser.rst:186
msgid ""
"For example, the comment ``<!-- comment -->`` will cause this method to be "
"called with the argument ``' comment '``."
msgstr ""

#: ../../library/html.parser.rst:189
msgid ""
"The content of Internet Explorer conditional comments (condcoms) will also "
"be sent to this method, so, for ``<!--[if IE 9]>IE9-specific "
"content<![endif]-->``, this method will receive ``'[if IE 9]>IE9-specific "
"content<![endif]'``."
msgstr ""

#: ../../library/html.parser.rst:196
msgid ""
"This method is called to handle an HTML doctype declaration (e.g. "
"``<!DOCTYPE html>``)."
msgstr ""

#: ../../library/html.parser.rst:199
msgid ""
"The *decl* parameter will be the entire contents of the declaration inside "
"the ``<!...>`` markup (e.g. ``'DOCTYPE html'``)."
msgstr ""

#: ../../library/html.parser.rst:205
msgid ""
"Method called when a processing instruction is encountered.  The *data* "
"parameter will contain the entire processing instruction. For example, for "
"the processing instruction ``<?proc color='red'>``, this method would be "
"called as ``handle_pi(\"proc color='red'\")``.  It is intended to be "
"overridden by a derived class; the base class implementation does nothing."
msgstr ""

#: ../../library/html.parser.rst:213
msgid ""
"The :class:`HTMLParser` class uses the SGML syntactic rules for processing "
"instructions.  An XHTML processing instruction using the trailing ``'?'`` "
"will cause the ``'?'`` to be included in *data*."
msgstr ""

#: ../../library/html.parser.rst:220
msgid ""
"This method is called when an unrecognized declaration is read by the "
"parser."
msgstr ""

#: ../../library/html.parser.rst:222
msgid ""
"The *data* parameter will be the entire contents of the declaration inside "
"the ``<![...]>`` markup.  It is sometimes useful to be overridden by a "
"derived class.  The base class implementation does nothing."
msgstr ""

#: ../../library/html.parser.rst:230
msgid "Examples"
msgstr "例子"

#: ../../library/html.parser.rst:232
msgid ""
"The following class implements a parser that will be used to illustrate more"
" examples::"
msgstr ""

#: ../../library/html.parser.rst:269
msgid "Parsing a doctype::"
msgstr ""

#: ../../library/html.parser.rst:275
msgid "Parsing an element with a few attributes and a title::"
msgstr ""

#: ../../library/html.parser.rst:287
msgid ""
"The content of ``script`` and ``style`` elements is returned as is, without "
"further parsing::"
msgstr ""

#: ../../library/html.parser.rst:303
msgid "Parsing comments::"
msgstr ""

#: ../../library/html.parser.rst:310
msgid ""
"Parsing named and numeric character references and converting them to the "
"correct char (note: these 3 references are all equivalent to ``'>'``)::"
msgstr ""

#: ../../library/html.parser.rst:318
msgid ""
"Feeding incomplete chunks to :meth:`~HTMLParser.feed` works, but "
":meth:`~HTMLParser.handle_data` might be called more than once (unless "
"*convert_charrefs* is set to ``True``)::"
msgstr ""

#: ../../library/html.parser.rst:331
msgid "Parsing invalid HTML (e.g. unquoted attributes) also works::"
msgstr ""
