# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.9\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-07-25 19:10+0000\n"
"PO-Revision-Date: 2025-07-18 19:17+0000\n"
"Language-Team: Chinese (China) (https://app.transifex.com/python-doc/teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/pydoc.rst:2
msgid ":mod:`pydoc` --- Documentation generator and online help system"
msgstr ""

#: ../../library/pydoc.rst:10
msgid "**Source code:** :source:`Lib/pydoc.py`"
msgstr ""

#: ../../library/pydoc.rst:19
msgid ""
"The :mod:`pydoc` module automatically generates documentation from Python "
"modules.  The documentation can be presented as pages of text on the "
"console, served to a Web browser, or saved to HTML files."
msgstr ""

#: ../../library/pydoc.rst:23
msgid ""
"For modules, classes, functions and methods, the displayed documentation is "
"derived from the docstring (i.e. the :attr:`__doc__` attribute) of the "
"object, and recursively of its documentable members.  If there is no "
"docstring, :mod:`pydoc` tries to obtain a description from the block of "
"comment lines just above the definition of the class, function or method in "
"the source file, or at the top of the module (see "
":func:`inspect.getcomments`)."
msgstr ""

#: ../../library/pydoc.rst:30
msgid ""
"The built-in function :func:`help` invokes the online help system in the "
"interactive interpreter, which uses :mod:`pydoc` to generate its "
"documentation as text on the console.  The same text documentation can also "
"be viewed from outside the Python interpreter by running :program:`pydoc` as"
" a script at the operating system's command prompt. For example, running ::"
msgstr ""

#: ../../library/pydoc.rst:38
msgid ""
"at a shell prompt will display documentation on the :mod:`sys` module, in a "
"style similar to the manual pages shown by the Unix :program:`man` command."
"  The argument to :program:`pydoc` can be the name of a function, module, or"
" package, or a dotted reference to a class, method, or function within a "
"module or module in a package.  If the argument to :program:`pydoc` looks "
"like a path (that is, it contains the path separator for your operating "
"system, such as a slash in Unix), and refers to an existing Python source "
"file, then documentation is produced for that file."
msgstr ""

#: ../../library/pydoc.rst:49
msgid ""
"In order to find objects and their documentation, :mod:`pydoc` imports the "
"module(s) to be documented.  Therefore, any code on module level will be "
"executed on that occasion.  Use an ``if __name__ == '__main__':`` guard to "
"only execute code when a file is invoked as a script and not just imported."
msgstr ""

#: ../../library/pydoc.rst:54
msgid ""
"When printing output to the console, :program:`pydoc` attempts to paginate "
"the output for easier reading.  If the :envvar:`PAGER` environment variable "
"is set, :program:`pydoc` will use its value as a pagination program."
msgstr ""

#: ../../library/pydoc.rst:58
msgid ""
"Specifying a ``-w`` flag before the argument will cause HTML documentation "
"to be written out to a file in the current directory, instead of displaying "
"text on the console."
msgstr ""

#: ../../library/pydoc.rst:62
msgid ""
"Specifying a ``-k`` flag before the argument will search the synopsis lines "
"of all available modules for the keyword given as the argument, again in a "
"manner similar to the Unix :program:`man` command.  The synopsis line of a "
"module is the first line of its documentation string."
msgstr ""

#: ../../library/pydoc.rst:67
msgid ""
"You can also use :program:`pydoc` to start an HTTP server on the local "
"machine that will serve documentation to visiting Web browsers.  "
":program:`pydoc -p 1234` will start a HTTP server on port 1234, allowing you"
" to browse the documentation at ``http://localhost:1234/`` in your preferred"
" Web browser. Specifying ``0`` as the port number will select an arbitrary "
"unused port."
msgstr ""

#: ../../library/pydoc.rst:73
msgid ""
":program:`pydoc -n <hostname>` will start the server listening at the given "
"hostname.  By default the hostname is 'localhost' but if you want the server"
" to be reached from other machines, you may want to change the host name "
"that the server responds to.  During development this is especially useful "
"if you want to run pydoc from within a container."
msgstr ""

#: ../../library/pydoc.rst:79
msgid ""
":program:`pydoc -b` will start the server and additionally open a web "
"browser to a module index page.  Each served page has a navigation bar at "
"the top where you can *Get* help on an individual item, *Search* all modules"
" with a keyword in their synopsis line, and go to the *Module index*, "
"*Topics* and *Keywords* pages."
msgstr ""

#: ../../library/pydoc.rst:85
msgid ""
"When :program:`pydoc` generates documentation, it uses the current "
"environment and path to locate modules.  Thus, invoking :program:`pydoc "
"spam` documents precisely the version of the module you would get if you "
"started the Python interpreter and typed ``import spam``."
msgstr ""

#: ../../library/pydoc.rst:90
msgid ""
"Module docs for core modules are assumed to reside in "
"``https://docs.python.org/X.Y/library/`` where ``X`` and ``Y`` are the major"
" and minor version numbers of the Python interpreter.  This can be "
"overridden by setting the :envvar:`PYTHONDOCS` environment variable to a "
"different URL or to a local directory containing the Library Reference "
"Manual pages."
msgstr ""

#: ../../library/pydoc.rst:97
msgid "Added the ``-b`` option."
msgstr ""

#: ../../library/pydoc.rst:100
msgid "The ``-g`` command line option was removed."
msgstr ""

#: ../../library/pydoc.rst:103
msgid ""
":mod:`pydoc` now uses :func:`inspect.signature` rather than "
":func:`inspect.getfullargspec` to extract signature information from "
"callables."
msgstr ""

#: ../../library/pydoc.rst:108
msgid "Added the ``-n`` option."
msgstr ""
