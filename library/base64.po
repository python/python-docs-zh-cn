# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Saiyang Gou <gousaiyang223@gmail.com>, 2021
# walkinrain <walkinrain2008@outlook.com>, 2021
# Zombie110year <zombie110year@gmail.com>, 2021
# Alpha Du <alphanow@gmail.com>, 2022
# ppcfish <ppcfish@gmail.com>, 2023
# Freesand Leo <yuqinju@163.com>, 2024
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.13\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-05-02 14:19+0000\n"
"PO-Revision-Date: 2021-06-28 00:55+0000\n"
"Last-Translator: Freesand Leo <yuqinju@163.com>, 2024\n"
"Language-Team: Chinese (China) (https://app.transifex.com/python-doc/teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/base64.rst:2
msgid ":mod:`!base64` --- Base16, Base32, Base64, Base85 Data Encodings"
msgstr ":mod:`!base64` --- Base16, Base32, Base64, Base85 数据编码"

#: ../../library/base64.rst:8
msgid "**Source code:** :source:`Lib/base64.py`"
msgstr "**源代码：** :source:`Lib/base64.py`"

#: ../../library/base64.rst:16
msgid ""
"This module provides functions for encoding binary data to printable ASCII "
"characters and decoding such encodings back to binary data. It provides "
"encoding and decoding functions for the encodings specified in :rfc:`4648`, "
"which defines the Base16, Base32, and Base64 algorithms, and for the de-"
"facto standard Ascii85 and Base85 encodings."
msgstr ""
"此模块提供了将二进制数据编码为可打印的 ASCII 字符以及将这种编码格式解码回二进制数据的函数。 它为 :rfc:`4648` 所定义的 "
"Base16, Base32 和 Base64 算法及已成为事实标准的 Ascii85 和 Base85 编码格式提供了编码和解码函数。"

#: ../../library/base64.rst:22
msgid ""
"The :rfc:`4648` encodings are suitable for encoding binary data so that it "
"can be safely sent by email, used as parts of URLs, or included as part of "
"an HTTP POST request.  The encoding algorithm is not the same as the "
":program:`uuencode` program."
msgstr ""
":rfc:`4648` 中的编码格式适用于编码二进制数据使得它能安全地通过电子邮件发送、用作 URL 的一部分，或者包括在 HTTP POST "
"请求之中。 此编码格式算法与 :program:`uuencode` 程序并不相同。"

#: ../../library/base64.rst:27
msgid ""
"There are two interfaces provided by this module.  The modern interface "
"supports encoding :term:`bytes-like objects <bytes-like object>` to ASCII "
":class:`bytes`, and decoding :term:`bytes-like objects <bytes-like object>` "
"or strings containing ASCII to :class:`bytes`.  Both base-64 alphabets "
"defined in :rfc:`4648` (normal, and URL- and filesystem-safe) are supported."
msgstr ""
"此模块提供了两个接口。 较新的接口支持将 :term:`字节类对象 <bytes-like object>` 编码为 ASCII "
":class:`bytes`，以及将 :term:`字节类对象 <bytes-like object>` 或包含 ASCII 的字符串解码为 "
":class:`bytes`。 在 :rfc:`4648` 中定义的几种 base-64 字母表（普通的以及 URL 和文件系统安全的）都受到支持。"

#: ../../library/base64.rst:33
msgid ""
"The legacy interface does not support decoding from strings, but it does "
"provide functions for encoding and decoding to and from :term:`file objects "
"<file object>`.  It only supports the Base64 standard alphabet, and it adds "
"newlines every 76 characters as per :rfc:`2045`.  Note that if you are "
"looking for :rfc:`2045` support you probably want to be looking at the "
":mod:`email` package instead."
msgstr ""
"旧的接口不提供从字符串的解码操作，但提供了操作 :term:`文件对象 <file object>` 的编码和解码函数。旧接口只支持标准的 Base64"
" 字母表，并且按照 :rfc:`2045` 的规范每 76 个字符增加一个换行符。注意：如果你需要支持 :rfc:`2045`，那么使用 "
":mod:`email` 模块可能更加合适。"

#: ../../library/base64.rst:41
msgid ""
"ASCII-only Unicode strings are now accepted by the decoding functions of the"
" modern interface."
msgstr "新的接口提供的解码函数现在已经支持只包含 ASCII 的 Unicode 字符串。"

#: ../../library/base64.rst:45
msgid ""
"Any :term:`bytes-like objects <bytes-like object>` are now accepted by all "
"encoding and decoding functions in this module.  Ascii85/Base85 support "
"added."
msgstr ""
"所有 :term:`类字节对象 <bytes-like object>` 现在已经被所有编码和解码函数接受。添加了对 Ascii85/Base85 "
"的支持。"

#: ../../library/base64.rst:49
msgid "The modern interface provides:"
msgstr "新的接口提供："

#: ../../library/base64.rst:53
msgid ""
"Encode the :term:`bytes-like object` *s* using Base64 and return the encoded"
" :class:`bytes`."
msgstr "对 :term:`bytes-like object` *s* 进行 Base64 编码，并返回编码后的 :class:`bytes`。"

#: ../../library/base64.rst:56
msgid ""
"Optional *altchars* must be a :term:`bytes-like object` of length 2 which "
"specifies an alternative alphabet for the ``+`` and ``/`` characters. This "
"allows an application to e.g. generate URL or filesystem safe Base64 "
"strings.  The default is ``None``, for which the standard Base64 alphabet is"
" used."
msgstr ""
"可选项 *altchars* 必须是一个长度为 2 的 :term:`bytes-like object`，它指定了用于替换 ``+`` 和 ``/``"
" 的字符表。 这允许应用程序生成对 URL 或文件系统安全的 Base64 字符串。 默认值为 ``None``，即使用标准 Base64 字符表。"

#: ../../library/base64.rst:61
msgid ""
"May assert or raise a :exc:`ValueError` if the length of *altchars* is not "
"2.  Raises a :exc:`TypeError` if *altchars* is not a :term:`bytes-like "
"object`."
msgstr ""
"如果 *altchars* 的长度不为 2 则可以断言或引发 :exc:`ValueError`。 如果 *altchars* 不是 "
":term:`bytes-like object` 则会引发 :exc:`TypeError`。"

#: ../../library/base64.rst:67
msgid ""
"Decode the Base64 encoded :term:`bytes-like object` or ASCII string *s* and "
"return the decoded :class:`bytes`."
msgstr ""
"解码 Base64 编码过的 :term:`bytes-like object` 或 ASCII 字符串 *s* 并返回解码过的 "
":class:`bytes`。"

#: ../../library/base64.rst:70
msgid ""
"Optional *altchars* must be a :term:`bytes-like object` or ASCII string of "
"length 2 which specifies the alternative alphabet used instead of the ``+`` "
"and ``/`` characters."
msgstr ""
"可选项 *altchars* 必须是一个长度为 2 的 :term:`bytes-like object` 或 ASCII 字符串，它指定了用于替换 "
"``+`` 和 ``/`` 的字符表。"

#: ../../library/base64.rst:74
msgid ""
"A :exc:`binascii.Error` exception is raised if *s* is incorrectly padded."
msgstr "如果 *s* 被不正确地填写，一个 :exc:`binascii.Error` 错误将被抛出。"

#: ../../library/base64.rst:77
msgid ""
"If *validate* is ``False`` (the default), characters that are neither in the"
" normal base-64 alphabet nor the alternative alphabet are discarded prior to"
" the padding check.  If *validate* is ``True``, these non-alphabet "
"characters in the input result in a :exc:`binascii.Error`."
msgstr ""
"如果 *validate* 值为 ``False`` （默认情况），则在填充检查前，将丢弃既不在标准 base-64 "
"字母表之中也不在备用字母表中的字符。如果 *validate* 为 ``True``，这些非 base64 字符将导致 "
":exc:`binascii.Error`。"

#: ../../library/base64.rst:83
msgid ""
"For more information about the strict base64 check, see "
":func:`binascii.a2b_base64`"
msgstr "有关严格 base64 检查的详情，请参阅 :func:`binascii.a2b_base64`"

#: ../../library/base64.rst:85
msgid ""
"May assert or raise a :exc:`ValueError` if the length of *altchars* is not "
"2."
msgstr "如果 *altchars* 不为 2 则可以断言设定或引发 :exc:`ValueError`。"

#: ../../library/base64.rst:89
msgid ""
"Encode :term:`bytes-like object` *s* using the standard Base64 alphabet and "
"return the encoded :class:`bytes`."
msgstr ""
"编码 :term:`bytes-like object` *s*，使用标准 Base64 字母表并返回编码过的 :class:`bytes`。"

#: ../../library/base64.rst:95
msgid ""
"Decode :term:`bytes-like object` or ASCII string *s* using the standard "
"Base64 alphabet and return the decoded :class:`bytes`."
msgstr ""
"解码 :term:`bytes-like object` 或 ASCII 字符串 *s*，使用标准 Base64 字母表并返回编码过的 "
":class:`bytes`。"

#: ../../library/base64.rst:101
msgid ""
"Encode :term:`bytes-like object` *s* using the URL- and filesystem-safe "
"alphabet, which substitutes ``-`` instead of ``+`` and ``_`` instead of "
"``/`` in the standard Base64 alphabet, and return the encoded "
":class:`bytes`.  The result can still contain ``=``."
msgstr ""
"编码 :term:`bytes-like object` *s*，使用 URL 与文件系统安全的字母表，使用 ``-`` 以及 ``_`` 代替标准 "
"Base64 字母表中的 ``+`` 和 ``/``。返回编码过的 :class:`bytes`。结果中可能包含 ``=``。"

#: ../../library/base64.rst:110
msgid ""
"Decode :term:`bytes-like object` or ASCII string *s* using the URL- and "
"filesystem-safe alphabet, which substitutes ``-`` instead of ``+`` and ``_``"
" instead of ``/`` in the standard Base64 alphabet, and return the decoded "
":class:`bytes`."
msgstr ""
"解码 :term:`bytes-like object` 或 ASCII 字符串 *s*，使用 URL 与文件系统安全的字母表，使用 ``-`` 以及 "
"``_`` 代替标准 Base64 字母表中的 ``+`` 和 ``/``。返回解码过的 :class:`bytes`"

#: ../../library/base64.rst:119
msgid ""
"Encode the :term:`bytes-like object` *s* using Base32 and return the encoded"
" :class:`bytes`."
msgstr "用 Base32 编码 :term:`bytes-like object` *s* 并返回编码过的 :class:`bytes`"

#: ../../library/base64.rst:125
msgid ""
"Decode the Base32 encoded :term:`bytes-like object` or ASCII string *s* and "
"return the decoded :class:`bytes`."
msgstr ""
"解码 Base32 编码过的 :term:`bytes-like object` 或 ASCII 字符串 *s* 并返回解码过的 "
":class:`bytes`。"

#: ../../library/base64.rst:128 ../../library/base64.rst:176
msgid ""
"Optional *casefold* is a flag specifying whether a lowercase alphabet is "
"acceptable as input.  For security purposes, the default is ``False``."
msgstr "可选的 *casefold* 是一个指定小写字幕是否可接受为输入的标志。为了安全考虑，默认值为 ``False``。"

#: ../../library/base64.rst:132
msgid ""
":rfc:`4648` allows for optional mapping of the digit 0 (zero) to the letter "
"O (oh), and for optional mapping of the digit 1 (one) to either the letter I"
" (eye) or letter L (el).  The optional argument *map01* when not ``None``, "
"specifies which letter the digit 1 should be mapped to (when *map01* is not "
"``None``, the digit 0 is always mapped to the letter O).  For security "
"purposes the default is ``None``, so that 0 and 1 are not allowed in the "
"input."
msgstr ""
":rfc:`4648` 允许可以选择将数码 0 (zero) 映射为字母 O (oh)，并可以选择将数码 1 (one) 映射为字母 I (eye) "
"或字母 L (el)。 可选参数 *map01* 在不为 ``None`` 时，指定数码 1 应当映射为哪个字母 (当 *map01* 不为 "
"``None`` 时，数码 0 总是被映射为字母 O)。 出于安全考虑其默认值为 ``None``，因而在输入中不允许 0 和 1。"

#: ../../library/base64.rst:139 ../../library/base64.rst:180
msgid ""
"A :exc:`binascii.Error` is raised if *s* is incorrectly padded or if there "
"are non-alphabet characters present in the input."
msgstr "如果 *s* 被错误地填写或输入中存在字母表之外的字符，将抛出 :exc:`binascii.Error`。"

#: ../../library/base64.rst:146
msgid ""
"Similar to :func:`b32encode` but uses the Extended Hex Alphabet, as defined "
"in :rfc:`4648`."
msgstr "类似于 :func:`b32encode` 但是使用 Extended Hex Alphabet，如 :rfc:`4648` 所定义。"

#: ../../library/base64.rst:154
msgid ""
"Similar to :func:`b32decode` but uses the Extended Hex Alphabet, as defined "
"in :rfc:`4648`."
msgstr "类似于 :func:`b32decode` 但是使用 Extended Hex Alphabet，如 :rfc:`4648` 所定义。"

#: ../../library/base64.rst:157
msgid ""
"This version does not allow the digit 0 (zero) to the letter O (oh) and "
"digit 1 (one) to either the letter I (eye) or letter L (el) mappings, all "
"these characters are included in the Extended Hex Alphabet and are not "
"interchangeable."
msgstr ""
"这个版本不允许数字 0（零）与字母 O（oh）和数字 1（一）与字母 I（eye）或字母 L "
"（el）的映射，所有这些字符都包含在扩展的十六进制字母表中，不能互换。"

#: ../../library/base64.rst:167
msgid ""
"Encode the :term:`bytes-like object` *s* using Base16 and return the encoded"
" :class:`bytes`."
msgstr "用 Base16 编码 :term:`bytes-like object` *s* 并返回编码过的 :class:`bytes`"

#: ../../library/base64.rst:173
msgid ""
"Decode the Base16 encoded :term:`bytes-like object` or ASCII string *s* and "
"return the decoded :class:`bytes`."
msgstr ""
"解码 Base16 编码过的 :term:`bytes-like object` 或 ASCII 字符串 *s* 并返回解码过的 "
":class:`bytes`。"

#: ../../library/base64.rst:187
msgid ""
"Encode the :term:`bytes-like object` *b* using Ascii85 and return the "
"encoded :class:`bytes`."
msgstr "用 Ascii85 编码 :term:`bytes-like object` *s* 并返回编码过的 :class:`bytes`"

#: ../../library/base64.rst:190
msgid ""
"*foldspaces* is an optional flag that uses the special short sequence 'y' "
"instead of 4 consecutive spaces (ASCII 0x20) as supported by 'btoa'. This "
"feature is not supported by the \"standard\" Ascii85 encoding."
msgstr ""
"*foldspaces* 是一个可选的标志，使用特殊的短序列 'y' 代替 'btoa' 提供的 4 个连续空格 (ASCII 0x20)。这个特性不被"
" \"标准\" Ascii85 编码支持。"

#: ../../library/base64.rst:194
msgid ""
"*wrapcol* controls whether the output should have newline (``b'\\n'``) "
"characters added to it. If this is non-zero, each output line will be at "
"most this many characters long, excluding the trailing newline."
msgstr ""
"*wrapcol* 控制输出是否应当添加换行符 (``b'\\n'``)。 如其为非零值，则每个输出行将只有该值所限定长度的字符数量，不包括末尾换行符。"

#: ../../library/base64.rst:198
msgid ""
"*pad* controls whether the input is padded to a multiple of 4 before "
"encoding. Note that the ``btoa`` implementation always pads."
msgstr "*pad* 控制在编码之前输入是否填充为4的倍数。请注意，``btoa`` 实现总是填充。"

#: ../../library/base64.rst:201
msgid ""
"*adobe* controls whether the encoded byte sequence is framed with ``<~`` and"
" ``~>``, which is used by the Adobe implementation."
msgstr "*adobe* 控制编码后的字节序列是否要加上 ``<~`` 和 ``~>``，这是 Adobe 实现所使用的。"

#: ../../library/base64.rst:209
msgid ""
"Decode the Ascii85 encoded :term:`bytes-like object` or ASCII string *b* and"
" return the decoded :class:`bytes`."
msgstr ""
"解码 Ascii85 编码过的 :term:`bytes-like object` 或 ASCII 字符串 *s* 并返回解码过的 "
":class:`bytes`。"

#: ../../library/base64.rst:212
msgid ""
"*foldspaces* is a flag that specifies whether the 'y' short sequence should "
"be accepted as shorthand for 4 consecutive spaces (ASCII 0x20). This feature"
" is not supported by the \"standard\" Ascii85 encoding."
msgstr ""
"*foldspaces* 旗标指明是否应接受 'y' 短序列作为 4 个连续空格 (ASCII 0x20) 的快捷方式。 此特性不被 \"标准\" "
"Ascii85 编码格式所支持。"

#: ../../library/base64.rst:216
msgid ""
"*adobe* controls whether the input sequence is in Adobe Ascii85 format (i.e."
" is framed with <~ and ~>)."
msgstr "*adobe* 控制输入序列是否为 Adobe Ascii85 格式 (即附加 <~ 和 ~>)。"

#: ../../library/base64.rst:219
msgid ""
"*ignorechars* should be a :term:`bytes-like object` or ASCII string "
"containing characters to ignore from the input. This should only contain "
"whitespace characters, and by default contains all whitespace characters in "
"ASCII."
msgstr ""
"*ignorechars* 应当是一个 :term:`bytes-like object` 或 ASCII 字符串，其中包含要从输入中忽略的字符。 "
"这应当只包含空白字符，并且默认包含 ASCII 中所有的空白字符。"

#: ../../library/base64.rst:229
msgid ""
"Encode the :term:`bytes-like object` *b* using base85 (as used in e.g. git-"
"style binary diffs) and return the encoded :class:`bytes`."
msgstr ""
"用 base85（如 git 风格的二进制 diff 数据所用格式）编码 :term:`bytes-like object` *b* 并返回编码后的 "
":class:`bytes`。"

#: ../../library/base64.rst:232
msgid ""
"If *pad* is true, the input is padded with ``b'\\0'`` so its length is a "
"multiple of 4 bytes before encoding."
msgstr "如果 *pad* 为真值，输入将以 ``b'\\0'`` 填充以使其编码前长度为 4 字节的倍数。"

#: ../../library/base64.rst:240
msgid ""
"Decode the base85-encoded :term:`bytes-like object` or ASCII string *b* and "
"return the decoded :class:`bytes`.  Padding is implicitly removed, if "
"necessary."
msgstr ""
"解码 base85 编码过的 :term:`bytes-like object` 或 ASCII 字符串 *b* 并返回解码过的 "
":class:`bytes`。 如有必要，填充会被隐式地移除。"

#: ../../library/base64.rst:249
msgid ""
"Encode the :term:`bytes-like object` *s* using Z85 (as used in ZeroMQ) and "
"return the encoded :class:`bytes`.  See `Z85  specification "
"<https://rfc.zeromq.org/spec/32/>`_ for more information."
msgstr ""
"使用 Z85 (如在 ZeroMQ 中所使用的) 来编码 :term:`bytes-like object` *s* 并返回已编码的 "
":class:`bytes`。 请参阅 `Z85 规范说明 <https://rfc.zeromq.org/spec/32/>`_ 了解详情。"

#: ../../library/base64.rst:258
msgid ""
"Decode the Z85-encoded :term:`bytes-like object` or ASCII string *s* and "
"return the decoded :class:`bytes`.  See `Z85  specification "
"<https://rfc.zeromq.org/spec/32/>`_ for more information."
msgstr ""
"解码 Z85 编码的 :term:`bytes-like object` 或 ASCII 字符串 *s* 并返回已解码的 :class:`bytes`。"
" 请参阅 `Z85 规范说明 <https://rfc.zeromq.org/spec/32/>`_ 了解详情。"

#: ../../library/base64.rst:265
msgid "The legacy interface:"
msgstr "旧式接口:"

#: ../../library/base64.rst:269
msgid ""
"Decode the contents of the binary *input* file and write the resulting "
"binary data to the *output* file. *input* and *output* must be :term:`file "
"objects <file object>`. *input* will be read until ``input.readline()`` "
"returns an empty bytes object."
msgstr ""
"解码二进制 *input* 文件的内容并将结果二进制数据写入 *output* 文件。 *input* 和 *output* 必须为 "
":term:`文件对象 <file object>`. *input* 将被读取直至 ``input.readline()`` 返回空字节串对象。"

#: ../../library/base64.rst:277
msgid ""
"Decode the :term:`bytes-like object` *s*, which must contain one or more "
"lines of base64 encoded data, and return the decoded :class:`bytes`."
msgstr ""
"解码 :term:`bytes-like object` *s*，该对象必须包含一行或多行 base64 编码的数据，并返回已解码的 "
":class:`bytes`。"

#: ../../library/base64.rst:285
msgid ""
"Encode the contents of the binary *input* file and write the resulting "
"base64 encoded data to the *output* file. *input* and *output* must be "
":term:`file objects <file object>`. *input* will be read until "
"``input.read()`` returns an empty bytes object. :func:`encode` inserts a "
"newline character (``b'\\n'``) after every 76 bytes of the output, as well "
"as ensuring that the output always ends with a newline, as per :rfc:`2045` "
"(MIME)."
msgstr ""
"编码二进制 *input* 文件的内容并将经 base64 编码的数据写入 *output* 文件。 *input* 和 *output* 必须为 "
":term:`文件对象 <file object>`。 *input* 将被读取直到 ``input.read()`` 返回空字节串对象。 "
":func:`encode` 会在每输出 76 个字节之后插入一个换行符 (``b'\\n'``)，并会确保输出总是以换行符来结束，如 "
":rfc:`2045` (MIME) 所规定的那样。"

#: ../../library/base64.rst:295
msgid ""
"Encode the :term:`bytes-like object` *s*, which can contain arbitrary binary"
" data, and return :class:`bytes` containing the base64-encoded data, with "
"newlines (``b'\\n'``) inserted after every 76 bytes of output, and ensuring "
"that there is a trailing newline, as per :rfc:`2045` (MIME)."
msgstr ""
"编码 :term:`bytes-like object` *s*，其中可以包含任意二进制数据，并返回包含经 base64 编码数据的 "
":class:`bytes`，每输出 76 个字节之后将带一个换行符 (``b'\\n'``)，并会确保在末尾也有一个换行符，如 :rfc:`2045`"
" (MIME) 所规定的那样。"

#: ../../library/base64.rst:303
msgid "An example usage of the module:"
msgstr "此模块的一个使用示例:"

#: ../../library/base64.rst:316
msgid "Security Considerations"
msgstr "安全考量"

#: ../../library/base64.rst:318
msgid ""
"A new security considerations section was added to :rfc:`4648` (section 12);"
" it's recommended to review the security section for any code deployed to "
"production."
msgstr "在 :rfc:`4648` 中新增了安全事项部分（第 12 节）；对于要部署到生产环境的任何代码都建议充分考虑此安全事项部分。"

#: ../../library/base64.rst:323
msgid "Module :mod:`binascii`"
msgstr "模块 :mod:`binascii`"

#: ../../library/base64.rst:324
msgid ""
"Support module containing ASCII-to-binary and binary-to-ASCII conversions."
msgstr "支持模块，包含ASCII到二进制和二进制到ASCII转换。"

#: ../../library/base64.rst:326
msgid ""
":rfc:`1521` - MIME (Multipurpose Internet Mail Extensions) Part One: "
"Mechanisms for Specifying and Describing the Format of Internet Message "
"Bodies"
msgstr ""
":rfc:`1521` - MIME (Multipurpose Internet Mail Extensions) "
"第一部分：规定并描述因特网消息体的格式的机制。"

#: ../../library/base64.rst:327
msgid ""
"Section 5.2, \"Base64 Content-Transfer-Encoding,\" provides the definition "
"of the base64 encoding."
msgstr "第 5.2 节，“Base64 内容转换编码格式” 提供了 base64 编码格式的定义。"

#: ../../library/base64.rst:10
msgid "base64"
msgstr "base64"

#: ../../library/base64.rst:10
msgid "encoding"
msgstr "encoding"

#: ../../library/base64.rst:10
msgid "MIME"
msgstr "MIME"

#: ../../library/base64.rst:10
msgid "base64 encoding"
msgstr "base64 编码格式"
