# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# 叶浚安 <ye.pandaaaa906@gmail.com>, 2021
# nick <2330458484@qq.com>, 2021
# Freesand Leo <yuqinju@163.com>, 2025
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-05-09 14:19+0000\n"
"PO-Revision-Date: 2021-06-28 01:11+0000\n"
"Last-Translator: Freesand Leo <yuqinju@163.com>, 2025\n"
"Language-Team: Chinese (China) (https://app.transifex.com/python-doc/teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/plistlib.rst:2
msgid ":mod:`!plistlib` --- Generate and parse Apple ``.plist`` files"
msgstr ":mod:`!plistlib` --- 生成与解析 Apple ``.plist`` 文件"

#: ../../library/plistlib.rst:11
msgid "**Source code:** :source:`Lib/plistlib.py`"
msgstr "**源代码:** :source:`Lib/plistlib.py`"

#: ../../library/plistlib.rst:19
msgid ""
"This module provides an interface for reading and writing the \"property "
"list\" files used by Apple, primarily on macOS and iOS. This module supports"
" both binary and XML plist files."
msgstr ""
"此模块提供了可读写 Apple \"property list\" 文件的接口，它主要用于 macOS 和 iOS 系统。 此模块同时支持二进制和 "
"XML plist 文件。"

#: ../../library/plistlib.rst:23
msgid ""
"The property list (``.plist``) file format is a simple serialization "
"supporting basic object types, like dictionaries, lists, numbers and "
"strings.  Usually the top level object is a dictionary."
msgstr ""
"property list (``.plist``) 文件格式是一种简单的序列化格式，它支持一些基本对象类型，例如字典、列表、数字和字符串等。 "
"通常使用一个字典作为最高层级对象。"

#: ../../library/plistlib.rst:27
msgid ""
"To write out and to parse a plist file, use the :func:`dump` and "
":func:`load` functions."
msgstr "要写入和解析 plist 文件，请使用 :func:`dump` 和 :func:`load` 函数。"

#: ../../library/plistlib.rst:30
msgid ""
"To work with plist data in bytes or string objects, use :func:`dumps` and "
":func:`loads`."
msgstr "要以字节串或字符串对象形式操作 plist 数据，请使用 :func:`dumps` 和 :func:`loads`。"

#: ../../library/plistlib.rst:33
msgid ""
"Values can be strings, integers, floats, booleans, tuples, lists, "
"dictionaries (but only with string keys), :class:`bytes`, :class:`bytearray`"
" or :class:`datetime.datetime` objects."
msgstr ""
"值可以为字符串、整数、浮点数、布尔值、元组、列表、字典（但只允许用字符串作为键）、:class:`bytes`、:class:`bytearray` 或"
" :class:`datetime.datetime` 对象。"

#: ../../library/plistlib.rst:37
msgid "New API, old API deprecated.  Support for binary format plists added."
msgstr "新版 API，旧版 API 已被弃用。 添加了对二进制 plist 格式的支持。"

#: ../../library/plistlib.rst:40
msgid ""
"Support added for reading and writing :class:`UID` tokens in binary plists "
"as used by NSKeyedArchiver and NSKeyedUnarchiver."
msgstr ""
"添加了在二进制 plist 中读写 :class:`UID` 令牌的支持，例如用于 NSKeyedArchiver 和 "
"NSKeyedUnarchiver。"

#: ../../library/plistlib.rst:44
msgid "Old API removed."
msgstr "旧 API 已被移除。"

#: ../../library/plistlib.rst:49
msgid ""
"`PList manual page "
"<https://developer.apple.com/library/archive/documentation/Cocoa/Conceptual/PropertyLists/>`_"
msgstr ""
"`PList 指南页面 "
"<https://developer.apple.com/library/archive/documentation/Cocoa/Conceptual/PropertyLists/>`_"

#: ../../library/plistlib.rst:50
msgid "Apple's documentation of the file format."
msgstr "针对该文件格式的 Apple 文档。"

#: ../../library/plistlib.rst:53
msgid "This module defines the following functions:"
msgstr "这个模块定义了以下函数："

#: ../../library/plistlib.rst:57
msgid ""
"Read a plist file. *fp* should be a readable and binary file object. Return "
"the unpacked root object (which usually is a dictionary)."
msgstr "读取 plist 文件。 *fp* 应当可读并且为二进制文件对象。 返回已解包的根对象（通常是一个字典）。"

#: ../../library/plistlib.rst:61
msgid ""
"The *fmt* is the format of the file and the following values are valid:"
msgstr "*fmt* 为文件的格式，有效的值如下:"

#: ../../library/plistlib.rst:63
msgid ":data:`None`: Autodetect the file format"
msgstr ":data:`None`: 自动检测文件格式"

#: ../../library/plistlib.rst:65
msgid ":data:`FMT_XML`: XML file format"
msgstr ":data:`FMT_XML`: XML 文件格式"

#: ../../library/plistlib.rst:67
msgid ":data:`FMT_BINARY`: Binary plist format"
msgstr ":data:`FMT_BINARY`: 二进制 plist 格式"

#: ../../library/plistlib.rst:69
msgid ""
"The *dict_type* is the type used for dictionaries that are read from the "
"plist file."
msgstr "*dict_type* 为字典用来从 plist 文件读取的类型。"

#: ../../library/plistlib.rst:72
msgid ""
"When *aware_datetime* is true, fields with type ``datetime.datetime`` will "
"be created as :ref:`aware object <datetime-naive-aware>`, with "
":attr:`!tzinfo` as :const:`datetime.UTC`."
msgstr ""
"当 *aware_datetime* 为真值时，类型为 ``datetime.datetime`` 的字段将被创建为 :ref:`感知型对象 "
"<datetime-naive-aware>`，其 :attr:`!tzinfo` 将设为 :const:`datetime.UTC`。"

#: ../../library/plistlib.rst:76
msgid ""
"XML data for the :data:`FMT_XML` format is parsed using the Expat parser "
"from :mod:`xml.parsers.expat` -- see its documentation for possible "
"exceptions on ill-formed XML.  Unknown elements will simply be ignored by "
"the plist parser."
msgstr ""
":data:`FMT_XML` 格式的 XML 数据 会使用来自 :mod:`xml.parsers.expat` 的 Expat 解析器 -- "
"请参阅其文档了解错误格式 XML 可能引发的异常。 未知元素将被 plist 解析器直接略过。"

#: ../../library/plistlib.rst:81
msgid ""
"The parser raises :exc:`InvalidFileException` when the file cannot be "
"parsed."
msgstr "当文件无法被解析时解析器将引发 :exc:`InvalidFileException`。"

#: ../../library/plistlib.rst:85 ../../library/plistlib.rst:130
msgid "The keyword-only parameter *aware_datetime* has been added."
msgstr "增加了仅限关键字形参 *aware_datetime*。"

#: ../../library/plistlib.rst:91
msgid ""
"Load a plist from a bytes or string object. See :func:`load` for an "
"explanation of the keyword arguments."
msgstr "从一个字节串或字符串对象加载 plist。 请参阅 :func:`load` 获取相应关键字参数的说明。"

#: ../../library/plistlib.rst:96
msgid "*data* can be a string when *fmt* equals :data:`FMT_XML`."
msgstr "当 *fmt* 等于 :data:`FMT_XML` 时 *data* 可以为字符串。"

#: ../../library/plistlib.rst:101
msgid ""
"Write *value* to a plist file. *fp* should be a writable, binary file "
"object."
msgstr "将 *value* 写入 plist 文件。 *fp* 应当是一个可写的二进制文件对象。"

#: ../../library/plistlib.rst:104
msgid ""
"The *fmt* argument specifies the format of the plist file and can be one of "
"the following values:"
msgstr "*fmt* 参数指定 plist 文件的格式，可以是以下值之一:"

#: ../../library/plistlib.rst:107
msgid ":data:`FMT_XML`: XML formatted plist file"
msgstr ":data:`FMT_XML`: XML 格式的 plist 文件"

#: ../../library/plistlib.rst:109
msgid ":data:`FMT_BINARY`: Binary formatted plist file"
msgstr ":data:`FMT_BINARY`: 二进制格式的 plist 文件"

#: ../../library/plistlib.rst:111
msgid ""
"When *sort_keys* is true (the default) the keys for dictionaries will be "
"written to the plist in sorted order, otherwise they will be written in the "
"iteration order of the dictionary."
msgstr "当 *sort_keys* 为真值（默认）时字典的键将经过排序再写入 plist，否则将按字典的迭代顺序写入。"

#: ../../library/plistlib.rst:115
msgid ""
"When *skipkeys* is false (the default) the function raises :exc:`TypeError` "
"when a key of a dictionary is not a string, otherwise such keys are skipped."
msgstr "当 *skipkeys* 为假值（默认）时该函数将在字典的键不为字符串时引发 :exc:`TypeError`，否则将跳过这样的键。"

#: ../../library/plistlib.rst:118
msgid ""
"When *aware_datetime* is true and any field with type ``datetime.datetime`` "
"is set as an :ref:`aware object <datetime-naive-aware>`, it will convert to "
"UTC timezone before writing it."
msgstr ""
"当 *aware_datetime* 为真值并且有任何类型为 ``datetime.datetime`` 的字段被设为 :ref:`感知型对象 "
"<datetime-naive-aware>`，它将在写入之前转换为 UTC 时区。"

#: ../../library/plistlib.rst:122
msgid ""
"A :exc:`TypeError` will be raised if the object is of an unsupported type or"
" a container that contains objects of unsupported types."
msgstr "如果对象是不受支持的类型或者是包含不受支持类型的对象的容器则将引发 :exc:`TypeError`。"

#: ../../library/plistlib.rst:125
msgid ""
"An :exc:`OverflowError` will be raised for integer values that cannot be "
"represented in (binary) plist files."
msgstr "对于无法在（二进制）plist 文件中表示的整数值，将会引发 :exc:`OverflowError`。"

#: ../../library/plistlib.rst:136
msgid ""
"Return *value* as a plist-formatted bytes object. See the documentation for "
":func:`dump` for an explanation of the keyword arguments of this function."
msgstr "将 *value* 以 plist 格式字节串对象的形式返回。 参阅 :func:`dump` 的文档获取此函数的关键字参数的说明。"

#: ../../library/plistlib.rst:143
msgid "The following classes are available:"
msgstr "可以使用以下的类:"

#: ../../library/plistlib.rst:147
msgid ""
"Wraps an :class:`int`.  This is used when reading or writing NSKeyedArchiver"
" encoded data, which contains UID (see PList manual)."
msgstr ""
"包装一个 :class:`int`。 该类将在读取或写入 NSKeyedArchiver 编码的数据时被使用，其中包含 UID（参见 PList "
"指南）。"

#: ../../library/plistlib.rst:152
msgid "Int value of the UID.  It must be in the range ``0 <= data < 2**64``."
msgstr "UID 的整数值。 它必须在 ``0 <= data < 2**64`` 范围内。"

#: ../../library/plistlib.rst:157
msgid "The following constants are available:"
msgstr "可以使用以下的常量:"

#: ../../library/plistlib.rst:161
msgid "The XML format for plist files."
msgstr "用于 plist 文件的 XML 格式。"

#: ../../library/plistlib.rst:168
msgid "The binary format for plist files"
msgstr "用于 plist 文件的二进制格式。"

#: ../../library/plistlib.rst:173
msgid "The module defines the following exceptions:"
msgstr "此模块定义了下列异常："

#: ../../library/plistlib.rst:177
msgid "Raised when a file cannot be parsed."
msgstr "当文件无法被解析时将被引发。"

#: ../../library/plistlib.rst:183
msgid "Examples"
msgstr "例子"

#: ../../library/plistlib.rst:185
msgid "Generating a plist::"
msgstr "生成一个 plist::"

#: ../../library/plistlib.rst:187
msgid ""
"import datetime\n"
"import plistlib\n"
"\n"
"pl = dict(\n"
"    aString = \"Doodah\",\n"
"    aList = [\"A\", \"B\", 12, 32.1, [1, 2, 3]],\n"
"    aFloat = 0.1,\n"
"    anInt = 728,\n"
"    aDict = dict(\n"
"        anotherString = \"<hello & hi there!>\",\n"
"        aThirdString = \"M\\xe4ssig, Ma\\xdf\",\n"
"        aTrueValue = True,\n"
"        aFalseValue = False,\n"
"    ),\n"
"    someData = b\"<binary gunk>\",\n"
"    someMoreData = b\"<lots of binary gunk>\" * 10,\n"
"    aDate = datetime.datetime.now()\n"
")\n"
"print(plistlib.dumps(pl).decode())"
msgstr ""
"import datetime\n"
"import plistlib\n"
"\n"
"pl = dict(\n"
"    aString = \"Doodah\",\n"
"    aList = [\"A\", \"B\", 12, 32.1, [1, 2, 3]],\n"
"    aFloat = 0.1,\n"
"    anInt = 728,\n"
"    aDict = dict(\n"
"        anotherString = \"<hello & hi there!>\",\n"
"        aThirdString = \"M\\xe4ssig, Ma\\xdf\",\n"
"        aTrueValue = True,\n"
"        aFalseValue = False,\n"
"    ),\n"
"    someData = b\"<binary gunk>\",\n"
"    someMoreData = b\"<lots of binary gunk>\" * 10,\n"
"    aDate = datetime.datetime.now()\n"
")\n"
"print(plistlib.dumps(pl).decode())"

#: ../../library/plistlib.rst:207
msgid "Parsing a plist::"
msgstr "解析一个 plist::"

#: ../../library/plistlib.rst:209
msgid ""
"import plistlib\n"
"\n"
"plist = b\"\"\"<plist version=\"1.0\">\n"
"<dict>\n"
"    <key>foo</key>\n"
"    <string>bar</string>\n"
"</dict>\n"
"</plist>\"\"\"\n"
"pl = plistlib.loads(plist)\n"
"print(pl[\"foo\"])"
msgstr ""
"import plistlib\n"
"\n"
"plist = b\"\"\"<plist version=\"1.0\">\n"
"<dict>\n"
"    <key>foo</key>\n"
"    <string>bar</string>\n"
"</dict>\n"
"</plist>\"\"\"\n"
"pl = plistlib.loads(plist)\n"
"print(pl[\"foo\"])"

#: ../../library/plistlib.rst:13
msgid "plist"
msgstr "plist"

#: ../../library/plistlib.rst:13
msgid "file"
msgstr "文件"

#: ../../library/plistlib.rst:13
msgid "property list"
msgstr "property list"
