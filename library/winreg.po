# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2025
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-07-25 18:10+0000\n"
"PO-Revision-Date: 2025-07-18 20:10+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2025\n"
"Language-Team: Chinese (China) (https://app.transifex.com/python-doc/teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/winreg.rst:2
msgid ":mod:`winreg` --- Windows registry access"
msgstr ":mod:`winreg` --- 访问 Windows 注册表"

#: ../../library/winreg.rst:12
msgid ""
"These functions expose the Windows registry API to Python.  Instead of using"
" an integer as the registry handle, a :ref:`handle object <handle-object>` "
"is used to ensure that the handles are closed correctly, even if the "
"programmer neglects to explicitly close them."
msgstr ""
"这些函数将 Windows 注册表 API 暴露给 Python。 "
"为了确保即便程序员忘记显式关闭时也能够正确关闭，这里没有用整数作为注册表句柄，而是采用了 :ref:`句柄对象 <handle-object>`。"

#: ../../library/winreg.rst:19
msgid ""
"Several functions in this module used to raise a :exc:`WindowsError`, which "
"is now an alias of :exc:`OSError`."
msgstr "模块中有几个函数用于触发 :exc:`WindowsError`，此异常现在是 :exc:`OSError` 的别名。"

#: ../../library/winreg.rst:26
msgid "Functions"
msgstr "函数"

#: ../../library/winreg.rst:28
msgid "This module offers the following functions:"
msgstr "该模块提供了下列函数："

#: ../../library/winreg.rst:33
msgid ""
"Closes a previously opened registry key.  The *hkey* argument specifies a "
"previously opened key."
msgstr "关闭之前打开的注册表键。参数 *hkey* 指之前打开的键。"

#: ../../library/winreg.rst:38
msgid ""
"If *hkey* is not closed using this method (or via :meth:`hkey.Close() "
"<PyHKEY.Close>`), it is closed when the *hkey* object is destroyed by "
"Python."
msgstr ""
"如果没有使用该方法关闭 *hkey* (或者通过 :meth:`hkey.Close() <PyHKEY.Close>`)，在对象 *hkey* 被 "
"Python 销毁时会将其关闭。"

#: ../../library/winreg.rst:45
msgid ""
"Establishes a connection to a predefined registry handle on another "
"computer, and returns a :ref:`handle object <handle-object>`."
msgstr "建立到另一台计算机上的预定义注册表句柄的连接，并返回一个 :ref:`句柄对象 <handle-object>`。"

#: ../../library/winreg.rst:48
msgid ""
"*computer_name* is the name of the remote computer, of the form "
"``r\"\\\\computername\"``.  If ``None``, the local computer is used."
msgstr ""
"*computer_name* 是远程计算机的名称，以 ``r\"\\\\computername\"`` 的形式。如果是 ``None`` "
"，将会使用本地计算机。"

#: ../../library/winreg.rst:51
msgid "*key* is the predefined handle to connect to."
msgstr "*key* 是所连接到的预定义句柄。"

#: ../../library/winreg.rst:53 ../../library/winreg.rst:77
#: ../../library/winreg.rst:109
msgid ""
"The return value is the handle of the opened key. If the function fails, an "
":exc:`OSError` exception is raised."
msgstr "返回值是所开打键的句柄。如果函数失败，则引发一个 :exc:`OSError` 异常。"

#: ../../library/winreg.rst:56
msgid ""
"Raises an :ref:`auditing event <auditing>` ``winreg.ConnectRegistry`` with "
"arguments ``computer_name``, ``key``."
msgstr ""
"引发一个 :ref:`审计事件 <auditing>` ``winreg.ConnectRegistry`` 并附带参数 "
"``computer_name``, ``key``。"

#: ../../library/winreg.rst:58 ../../library/winreg.rst:84
#: ../../library/winreg.rst:118 ../../library/winreg.rst:139
#: ../../library/winreg.rst:172 ../../library/winreg.rst:203
#: ../../library/winreg.rst:238 ../../library/winreg.rst:329
msgid "See :ref:`above <exception-changed>`."
msgstr "参考 :ref:`上文 <exception-changed>`。"

#: ../../library/winreg.rst:64 ../../library/winreg.rst:90
msgid ""
"Creates or opens the specified key, returning a :ref:`handle object <handle-"
"object>`."
msgstr "创建或打开特定的键，返回一个 :ref:`handle 对象 <handle-object>`。"

#: ../../library/winreg.rst:67 ../../library/winreg.rst:93
#: ../../library/winreg.rst:126 ../../library/winreg.rst:147
#: ../../library/winreg.rst:180 ../../library/winreg.rst:192
#: ../../library/winreg.rst:211 ../../library/winreg.rst:260
#: ../../library/winreg.rst:307 ../../library/winreg.rst:337
#: ../../library/winreg.rst:363 ../../library/winreg.rst:383
#: ../../library/winreg.rst:407 ../../library/winreg.rst:432
#: ../../library/winreg.rst:460 ../../library/winreg.rst:491
#: ../../library/winreg.rst:508 ../../library/winreg.rst:523
msgid ""
"*key* is an already open key, or one of the predefined :ref:`HKEY_* "
"constants <hkey-constants>`."
msgstr "*key* 为某个已经打开的键，或者预定义的 :ref:`HKEY_* 常量 <hkey-constants>` 之一。"

#: ../../library/winreg.rst:70 ../../library/winreg.rst:96
msgid "*sub_key* is a string that names the key this method opens or creates."
msgstr "*sub_key* 是用于命名该方法所打开或创建的键的字符串。"

#: ../../library/winreg.rst:72 ../../library/winreg.rst:104
msgid ""
"If *key* is one of the predefined keys, *sub_key* may be ``None``. In that "
"case, the handle returned is the same key handle passed in to the function."
msgstr "如果 *key* 是预定义键之一，*sub_key* 可能会是 ``None``。该情况下，返回的句柄就是传入函数的句柄。"

#: ../../library/winreg.rst:75 ../../library/winreg.rst:107
msgid "If the key already exists, this function opens the existing key."
msgstr "如果键已经存在，则该函数打开已经存在的该键。"

#: ../../library/winreg.rst:80 ../../library/winreg.rst:112
msgid ""
"Raises an :ref:`auditing event <auditing>` ``winreg.CreateKey`` with "
"arguments ``key``, ``sub_key``, ``access``."
msgstr ""
"引发一个 :ref:`审计事件 <auditing>` ``winreg.CreateKey`` 并附带参数 ``key``, ``sub_key``,"
" ``access``。"

#: ../../library/winreg.rst:82 ../../library/winreg.rst:114
#: ../../library/winreg.rst:324
msgid ""
"Raises an :ref:`auditing event <auditing>` ``winreg.OpenKey/result`` with "
"argument ``key``."
msgstr "引发一个 :ref:`审计事件 <auditing>` ``winreg.OpenKey/result`` 并附带参数 ``key``。"

#: ../../library/winreg.rst:98 ../../library/winreg.rst:154
msgid ""
"*reserved* is a reserved integer, and must be zero. The default is zero."
msgstr "*reserved* 是一个保留的整数，必须是零。 默认值为零。"

#: ../../library/winreg.rst:100
msgid ""
"*access* is an integer that specifies an access mask that describes the "
"desired security access for the key.  Default is :const:`KEY_WRITE`.  See "
":ref:`Access Rights <access-rights>` for other allowed values."
msgstr ""
"*access* 为一个整数，用于给键的预期安全访问指定访问掩码。默认值为 :const:`KEY_WRITE`。 参阅 :ref:`Access "
"Rights <access-rights>`  了解其它允许值。"

#: ../../library/winreg.rst:124 ../../library/winreg.rst:145
msgid "Deletes the specified key."
msgstr "删除指定的键。"

#: ../../library/winreg.rst:129
msgid ""
"*sub_key* is a string that must be a subkey of the key identified by the "
"*key* parameter.  This value must not be ``None``, and the key may not have "
"subkeys."
msgstr "*sub_key* 这个字符串必须是由 *key* 参数所指定键的一个子项。该值项不可以是 ``None``，同时键也不可以有子项。"

#: ../../library/winreg.rst:132 ../../library/winreg.rst:161
msgid "*This method can not delete keys with subkeys.*"
msgstr "*该方法不能删除带有子项的键。*"

#: ../../library/winreg.rst:134 ../../library/winreg.rst:163
msgid ""
"If the method succeeds, the entire key, including all of its values, is "
"removed. If the method fails, an :exc:`OSError` exception is raised."
msgstr "如果方法成功，则整个键，包括其所有值项都会被移除。如果方法失败，则引发一个 :exc:`OSError` 异常。"

#: ../../library/winreg.rst:137 ../../library/winreg.rst:168
msgid ""
"Raises an :ref:`auditing event <auditing>` ``winreg.DeleteKey`` with "
"arguments ``key``, ``sub_key``, ``access``."
msgstr ""
"引发一个 :ref:`审计事件 <auditing>` ``winreg.DeleteKey`` 并附带参数 ``key``, ``sub_key``,"
" ``access``。"

#: ../../library/winreg.rst:150
msgid ""
"*sub_key* is a string that must be a subkey of the key identified by the "
"*key* parameter. This value must not be ``None``, and the key may not have "
"subkeys."
msgstr "*sub_key* 这个字符串必须是由 *key* 参数所指定键的一个子项。该值项不可以是 ``None``，同时键也不可以有子项。"

#: ../../library/winreg.rst:156
msgid ""
"*access* is an integer that specifies an access mask that describes the "
"desired security access for the key.  Default is :const:`KEY_WOW64_64KEY`. "
"On 32-bit Windows, the WOW64 constants are ignored. See :ref:`Access Rights "
"<access-rights>` for other allowed values."
msgstr ""
"*access* 是一个指定描述注册表键所需的安全权限的访问掩码的整数。 默认值为 :const:`KEY_WOW64_64KEY`。 在 32-bit"
" Windows 上，WOW64 常量会被忽略。 请参阅 :ref:`访问权限 <access-rights>` 了解其他可用的值。"

#: ../../library/winreg.rst:166
msgid "On unsupported Windows versions, :exc:`NotImplementedError` is raised."
msgstr "在不支持的 Windows 版本之上，将会引发 :exc:`NotImplementedError` 异常。"

#: ../../library/winreg.rst:178
msgid "Removes a named value from a registry key."
msgstr "从某个注册键中删除一个命名值项。"

#: ../../library/winreg.rst:183
msgid "*value* is a string that identifies the value to remove."
msgstr "*value* 为标识所要删除值项的字符串。"

#: ../../library/winreg.rst:185
msgid ""
"Raises an :ref:`auditing event <auditing>` ``winreg.DeleteValue`` with "
"arguments ``key``, ``value``."
msgstr ""
"引发一个 :ref:`审计事件 <auditing>` ``winreg.DeleteValue`` 并附带参数 ``key``, ``value``。"

#: ../../library/winreg.rst:190
msgid "Enumerates subkeys of an open registry key, returning a string."
msgstr "列举某个已经打开注册表键的子项，并返回一个字符串。"

#: ../../library/winreg.rst:195
msgid ""
"*index* is an integer that identifies the index of the key to retrieve."
msgstr "*index* 为一个整数，用于标识所获取键的索引。"

#: ../../library/winreg.rst:197
msgid ""
"The function retrieves the name of one subkey each time it is called.  It is"
" typically called repeatedly until an :exc:`OSError` exception is raised, "
"indicating, no more values are available."
msgstr "每次调用该函数都会获取一个子项的名字。通常它会被反复调用，直到引发 :exc:`OSError` 异常，这说明已经没有更多的可用值了。"

#: ../../library/winreg.rst:201
msgid ""
"Raises an :ref:`auditing event <auditing>` ``winreg.EnumKey`` with arguments"
" ``key``, ``index``."
msgstr ""
"引发一个 :ref:`审计事件 <auditing>` ``winreg.EnumKey`` 并附带参数 ``key``, ``index``。"

#: ../../library/winreg.rst:209
msgid "Enumerates values of an open registry key, returning a tuple."
msgstr "列举某个已经打开注册表键的值项，并返回一个元组。"

#: ../../library/winreg.rst:214
msgid ""
"*index* is an integer that identifies the index of the value to retrieve."
msgstr "*index* 为一个整数，用于标识要获取值项的索引。"

#: ../../library/winreg.rst:216
msgid ""
"The function retrieves the name of one subkey each time it is called. It is "
"typically called repeatedly, until an :exc:`OSError` exception is raised, "
"indicating no more values."
msgstr "每次调用该函数都会获取一个子项的名字。通常它会被反复调用，直到引发 :exc:`OSError` 异常，这说明已经没有更多的可用值了。"

#: ../../library/winreg.rst:220 ../../library/winreg.rst:340
msgid "The result is a tuple of 3 items:"
msgstr "结果为3元素的元组。"

#: ../../library/winreg.rst:223 ../../library/winreg.rst:343
#: ../../library/winreg.rst:391
msgid "Index"
msgstr "索引"

#: ../../library/winreg.rst:223 ../../library/winreg.rst:343
#: ../../library/winreg.rst:391
msgid "Meaning"
msgstr "含意"

#: ../../library/winreg.rst:225 ../../library/winreg.rst:345
#: ../../library/winreg.rst:393
msgid "``0``"
msgstr "``0``"

#: ../../library/winreg.rst:225
msgid "A string that identifies the value name"
msgstr "用于标识值项名称的字符串。"

#: ../../library/winreg.rst:227 ../../library/winreg.rst:348
#: ../../library/winreg.rst:395
msgid "``1``"
msgstr "``1``"

#: ../../library/winreg.rst:227
msgid ""
"An object that holds the value data, and whose type depends on the "
"underlying registry type"
msgstr "保存值项数据的对象，其类型取决于背后的注册表类型。"

#: ../../library/winreg.rst:231 ../../library/winreg.rst:351
msgid "``2``"
msgstr "``2``"

#: ../../library/winreg.rst:231
msgid ""
"An integer that identifies the type of the value data (see table in docs for"
" :meth:`SetValueEx`)"
msgstr "标识值项数据类型的整数。（请查阅 :meth:`SetValueEx` 文档中的表格）"

#: ../../library/winreg.rst:236
msgid ""
"Raises an :ref:`auditing event <auditing>` ``winreg.EnumValue`` with "
"arguments ``key``, ``index``."
msgstr ""
"引发一个 :ref:`审计事件 <auditing>` ``winreg.EnumValue`` 并附带参数 ``key``, ``index``。"

#: ../../library/winreg.rst:247
msgid ""
"Expands environment variable placeholders ``%NAME%`` in strings like "
":const:`REG_EXPAND_SZ`::"
msgstr " 像 :const:`REG_EXPAND_SZ` 那样展开环境变量占位符 ``%NAME%``::"

#: ../../library/winreg.rst:253
msgid ""
"Raises an :ref:`auditing event <auditing>` "
"``winreg.ExpandEnvironmentStrings`` with argument ``str``."
msgstr ""
"引发一个 :ref:`审计事件 <auditing>` ``winreg.ExpandEnvironmentStrings`` 并附带参数 "
"``str``。"

#: ../../library/winreg.rst:258
msgid "Writes all the attributes of a key to the registry."
msgstr "将某个键的所有属性写入注册表。"

#: ../../library/winreg.rst:263
msgid ""
"It is not necessary to call :func:`FlushKey` to change a key. Registry "
"changes are flushed to disk by the registry using its lazy flusher.  "
"Registry changes are also flushed to disk at system shutdown.  Unlike "
":func:`CloseKey`, the :func:`FlushKey` method returns only when all the data"
" has been written to the registry. An application should only call "
":func:`FlushKey` if it requires absolute certainty that registry changes are"
" on disk."
msgstr ""
"没有必要调用 :func:`FlushKey` 去改动注册表键。注册表的变动是由其延迟刷新机制更新到磁盘的。在系统关机时，也会将注册表的变动写入磁盘。与"
"  :func:`CloseKey` 不同， :func:`FlushKey` "
"方法只有等到所有数据都写入注册表后才会返回。只有需要绝对确认注册表变动已写入磁盘时，应用程序才应去调用 :func:`FlushKey`。"

#: ../../library/winreg.rst:272
msgid ""
"If you don't know whether a :func:`FlushKey` call is required, it probably "
"isn't."
msgstr "如果不知道是否要调用 :func:`FlushKey` ，可能就是不需要。"

#: ../../library/winreg.rst:278
msgid ""
"Creates a subkey under the specified key and stores registration information"
" from a specified file into that subkey."
msgstr "在指定键之下创建一个子键，并将指定文件中的注册表信息存入该子键中。"

#: ../../library/winreg.rst:281
msgid ""
"*key* is a handle returned by :func:`ConnectRegistry` or one of the "
"constants :const:`HKEY_USERS` or :const:`HKEY_LOCAL_MACHINE`."
msgstr ""
"*key* 是由 :func:`ConnectRegistry` 返回的句柄，或者是常量 :const:`HKEY_USERS` 或 "
":const:`HKEY_LOCAL_MACHINE`。"

#: ../../library/winreg.rst:284
msgid "*sub_key* is a string that identifies the subkey to load."
msgstr "*sub_key* 是个字符串，用于标识需要载入的子键。"

#: ../../library/winreg.rst:286
msgid ""
"*file_name* is the name of the file to load registry data from. This file "
"must have been created with the :func:`SaveKey` function. Under the file "
"allocation table (FAT) file system, the filename may not have an extension."
msgstr ""
"*file_name* 是要加载注册表数据的文件名。该文件必须是用 :func:`SaveKey` "
"函数创建的。在文件分配表（FAT）文件系统中，文件名可能不带扩展名。"

#: ../../library/winreg.rst:290
msgid ""
"A call to :func:`LoadKey` fails if the calling process does not have the "
":const:`SE_RESTORE_PRIVILEGE` privilege.  Note that privileges are different"
" from permissions -- see the `RegLoadKey documentation "
"<https://msdn.microsoft.com/en-us/library/ms724889%28v=VS.85%29.aspx>`__ for"
" more details."
msgstr ""
"如果调用 :func:`LoadKey` 的进程没有 :const:`SE_RESTORE_PRIVILEGE` "
"权限，则调用会失败。请注意，特权与权限不同 —— 更多细节请参阅 `RegLoadKey 文档 "
"<https://msdn.microsoft.com/en-us/library/ms724889%28v=VS.85%29.aspx>`__。"

#: ../../library/winreg.rst:296
msgid ""
"If *key* is a handle returned by :func:`ConnectRegistry`, then the path "
"specified in *file_name* is relative to the remote computer."
msgstr ""
"如果 *key* 是由 :func:`ConnectRegistry` 返回的句柄，那么 *file_name* 指定的路径是相对于远程计算机而言的。"

#: ../../library/winreg.rst:299
msgid ""
"Raises an :ref:`auditing event <auditing>` ``winreg.LoadKey`` with arguments"
" ``key``, ``sub_key``, ``file_name``."
msgstr ""
"引发一个 :ref:`审计事件 <auditing>` ``winreg.LoadKey`` 并附带参数 ``key``, ``sub_key``, "
"``file_name``。"

#: ../../library/winreg.rst:305
msgid ""
"Opens the specified key, returning a :ref:`handle object <handle-object>`."
msgstr "打开指定的注册表键，返回 :ref:`handle对象 <handle-object>`。"

#: ../../library/winreg.rst:310
msgid "*sub_key* is a string that identifies the sub_key to open."
msgstr "*sub_key* 是个字符串，标识了需要打开的子键。"

#: ../../library/winreg.rst:312
msgid ""
"*reserved* is a reserved integer, and must be zero.  The default is zero."
msgstr "*reserved* 是个保留整数，必须为零。默认值为零。"

#: ../../library/winreg.rst:314
msgid ""
"*access* is an integer that specifies an access mask that describes the "
"desired security access for the key.  Default is :const:`KEY_READ`.  See "
":ref:`Access Rights <access-rights>` for other allowed values."
msgstr ""
"*access* 是个指定访问掩码的整数，掩码描述了注册表键所需的安全权限。 默认值为 :const:`KEY_READ`。 其他合法值参见 "
":ref:`访问权限 <access-rights>`。"

#: ../../library/winreg.rst:318
msgid "The result is a new handle to the specified key."
msgstr "返回结果为一个新句柄，指向指定的注册表键。"

#: ../../library/winreg.rst:320
msgid "If the function fails, :exc:`OSError` is raised."
msgstr "如果调用失败，则会触发  :exc:`OSError` 。"

#: ../../library/winreg.rst:322
msgid ""
"Raises an :ref:`auditing event <auditing>` ``winreg.OpenKey`` with arguments"
" ``key``, ``sub_key``, ``access``."
msgstr ""
"引发一个 :ref:`审计事件 <auditing>` ``winreg.OpenKey`` 并附带参数 ``key``, ``sub_key``, "
"``access``。"

#: ../../library/winreg.rst:326
msgid "Allow the use of named arguments."
msgstr "允许使用命名参数。"

#: ../../library/winreg.rst:335
msgid "Returns information about a key, as a tuple."
msgstr "以元组形式返回某注册表键的信息。"

#: ../../library/winreg.rst:345
msgid "An integer giving the number of sub keys this key has."
msgstr "整数值，给出了此注册表键的子键数量。"

#: ../../library/winreg.rst:348
msgid "An integer giving the number of values this key has."
msgstr "整数值，给出了此注册表键的值的数量。"

#: ../../library/winreg.rst:351
msgid ""
"An integer giving when the key was last modified (if available) as 100's of "
"nanoseconds since Jan 1, 1601."
msgstr "整数值，给出了此注册表键的最后修改时间，单位为自 1601 年 1 月 1 日以来的 100 纳秒。"

#: ../../library/winreg.rst:356
msgid ""
"Raises an :ref:`auditing event <auditing>` ``winreg.QueryInfoKey`` with "
"argument ``key``."
msgstr "引发一个 :ref:`审计事件 <auditing>` ``winreg.QueryInfoKey`` 并附带参数 ``key``。"

#: ../../library/winreg.rst:361
msgid "Retrieves the unnamed value for a key, as a string."
msgstr "读取某键的未命名值，形式为字符串。"

#: ../../library/winreg.rst:366
msgid ""
"*sub_key* is a string that holds the name of the subkey with which the value"
" is associated.  If this parameter is ``None`` or empty, the function "
"retrieves the value set by the :func:`SetValue` method for the key "
"identified by *key*."
msgstr ""
"*sub_key* 是个字符串，用于保存与某个值相关的子键名称。如果本参数为 ``None`` 或空，函数将读取由 :func:`SetValue` "
"方法为 *key* 键设置的值。"

#: ../../library/winreg.rst:370
msgid ""
"Values in the registry have name, type, and data components. This method "
"retrieves the data for a key's first value that has a ``NULL`` name. But the"
" underlying API call doesn't return the type, so always use "
":func:`QueryValueEx` if possible."
msgstr ""
"注册表中的值包含名称、类型和数据。本方法将读取注册表键值的第一个名称为 ``NULL`` 的数据。可是底层的 API "
"调用不会返回类型，所以只要有可能就一定要使用 :func:`QueryValueEx`。"

#: ../../library/winreg.rst:375 ../../library/winreg.rst:400
msgid ""
"Raises an :ref:`auditing event <auditing>` ``winreg.QueryValue`` with "
"arguments ``key``, ``sub_key``, ``value_name``."
msgstr ""
"引发一个 :ref:`审计事件 <auditing>` ``winreg.QueryValue`` 并附带参数 ``key``, "
"``sub_key``, ``value_name``。"

#: ../../library/winreg.rst:380
msgid ""
"Retrieves the type and data for a specified value name associated with an "
"open registry key."
msgstr "读取已打开注册表键指定值名称的类型和数据。"

#: ../../library/winreg.rst:386
msgid "*value_name* is a string indicating the value to query."
msgstr "*value_name* 是字符串，表示要查询的值。"

#: ../../library/winreg.rst:388
msgid "The result is a tuple of 2 items:"
msgstr "结果为二元组："

#: ../../library/winreg.rst:393
msgid "The value of the registry item."
msgstr "注册表项的值。"

#: ../../library/winreg.rst:395
msgid ""
"An integer giving the registry type for this value (see table in docs for "
":meth:`SetValueEx`)"
msgstr "整数值，给出该值的注册表类型（请查看文档中的表格了解 :meth:`SetValueEx` ）。"

#: ../../library/winreg.rst:405
msgid "Saves the specified key, and all its subkeys to the specified file."
msgstr "将指定注册表键及其所有子键存入指定的文件。"

#: ../../library/winreg.rst:410
msgid ""
"*file_name* is the name of the file to save registry data to.  This file "
"cannot already exist. If this filename includes an extension, it cannot be "
"used on file allocation table (FAT) file systems by the :meth:`LoadKey` "
"method."
msgstr ""
"*file_name* 是要保存注册表数据的文件名。该文件不能已存在。如果文件名包括扩展名，也不能在文件分配表（FAT）文件系统中用于 "
":meth:`LoadKey` 方法。"

#: ../../library/winreg.rst:415
msgid ""
"If *key* represents a key on a remote computer, the path described by "
"*file_name* is relative to the remote computer. The caller of this method "
"must possess the :const:`SeBackupPrivilege` security privilege.  Note that "
"privileges are different than permissions -- see the `Conflicts Between User"
" Rights and Permissions documentation <https://msdn.microsoft.com/en-"
"us/library/ms724878%28v=VS.85%29.aspx>`__ for more details."
msgstr ""
"如果 *key* 代表远程计算机的注册表键，那么 *file_name* 所描述的路径是相对于远程计算机的。本方法的调用者必须拥有 "
":const:`SeBackupPrivilege` 特权。请注意，特权与权限是不同的 —— 更多细节请参见 `用户权利和权限之间的冲突文档 "
"<https://msdn.microsoft.com/en-us/library/ms724878%28v=VS.85%29.aspx>`__。"

#: ../../library/winreg.rst:423
msgid "This function passes ``NULL`` for *security_attributes* to the API."
msgstr "本函数将 ``NULL`` 传给 API 的 *security_attributes*。"

#: ../../library/winreg.rst:425
msgid ""
"Raises an :ref:`auditing event <auditing>` ``winreg.SaveKey`` with arguments"
" ``key``, ``file_name``."
msgstr ""
"引发一个 :ref:`审计事件 <auditing>` ``winreg.SaveKey`` 并附带参数 ``key``, ``file_name``。"

#: ../../library/winreg.rst:430
msgid "Associates a value with a specified key."
msgstr "将值与指定的注册表键关联。"

#: ../../library/winreg.rst:435
msgid ""
"*sub_key* is a string that names the subkey with which the value is "
"associated."
msgstr "*sub_key* 是个字符串，用于命名与该值相关的子键。"

#: ../../library/winreg.rst:437
msgid ""
"*type* is an integer that specifies the type of the data. Currently this "
"must be :const:`REG_SZ`, meaning only strings are supported.  Use the "
":func:`SetValueEx` function for support for other data types."
msgstr ""
"*type* 是个整数，用于指定数据的类型。目前这必须是 :const:`REG_SZ` ，意味着只支持字符串。请用 "
":func:`SetValueEx` 函数支持其他的数据类型。"

#: ../../library/winreg.rst:441 ../../library/winreg.rst:471
msgid "*value* is a string that specifies the new value."
msgstr "*value* 是设置新值的字符串。"

#: ../../library/winreg.rst:443
msgid ""
"If the key specified by the *sub_key* parameter does not exist, the SetValue"
" function creates it."
msgstr "如果 *sub_key* 参数指定的注册表键不存在，SetValue 函数会创建一个。"

#: ../../library/winreg.rst:446 ../../library/winreg.rst:479
msgid ""
"Value lengths are limited by available memory. Long values (more than 2048 "
"bytes) should be stored as files with the filenames stored in the "
"configuration registry.  This helps the registry perform efficiently."
msgstr "值的长度受到可用内存的限制。较长的值（超过 2048 字节）应存为文件，并将文件名存入配置注册表。这有助于提高注册表的使用效率。"

#: ../../library/winreg.rst:450
msgid ""
"The key identified by the *key* parameter must have been opened with "
":const:`KEY_SET_VALUE` access."
msgstr "由 *key* 参数标识的注册表键，必须已用 :const:`KEY_SET_VALUE` 方式打开。"

#: ../../library/winreg.rst:453 ../../library/winreg.rst:483
msgid ""
"Raises an :ref:`auditing event <auditing>` ``winreg.SetValue`` with "
"arguments ``key``, ``sub_key``, ``type``, ``value``."
msgstr ""
"引发一个 :ref:`审计事件 <auditing>` ``winreg.SetValue`` 并附带参数 ``key``, ``sub_key``, "
"``type``, ``value``。"

#: ../../library/winreg.rst:458
msgid "Stores data in the value field of an open registry key."
msgstr "将数据存入已打开的注册表键的值中。"

#: ../../library/winreg.rst:463
msgid ""
"*value_name* is a string that names the subkey with which the value is "
"associated."
msgstr "*value_name* 是个字符串，用于命名与值相关的子键。"

#: ../../library/winreg.rst:466
msgid "*reserved* can be anything -- zero is always passed to the API."
msgstr "*reserved* 可以是任意数据 —— 传给 API 的总是 0。"

#: ../../library/winreg.rst:468
msgid ""
"*type* is an integer that specifies the type of the data. See :ref:`Value "
"Types <value-types>` for the available types."
msgstr "*type* 是个整数，用于指定数据的类型。请参阅 :ref:`Value Types <value-types>` 了解可用的类型。"

#: ../../library/winreg.rst:473
msgid ""
"This method can also set additional value and type information for the "
"specified key.  The key identified by the key parameter must have been "
"opened with :const:`KEY_SET_VALUE` access."
msgstr "本方法也可为指定的注册表键设置额外的值和类型信息。注册表键必须已用 :const:`KEY_SET_VALUE` 方式打开。"

#: ../../library/winreg.rst:477
msgid "To open the key, use the :func:`CreateKey` or :func:`OpenKey` methods."
msgstr "请用 :func:`CreateKey` 或 :func:`OpenKey` 方法打开注册表键。"

#: ../../library/winreg.rst:488
msgid ""
"Disables registry reflection for 32-bit processes running on a 64-bit "
"operating system."
msgstr "禁用运行于 64 位操作系统的 32 位进程的注册表重定向。"

#: ../../library/winreg.rst:494 ../../library/winreg.rst:511
#: ../../library/winreg.rst:528
msgid ""
"Will generally raise :exc:`NotImplementedError` if executed on a 32-bit "
"operating system."
msgstr "如果在 32 位操作系统上执行，一般会触发 :exc:`NotImplementedError`。"

#: ../../library/winreg.rst:497
msgid ""
"If the key is not on the reflection list, the function succeeds but has no "
"effect.  Disabling reflection for a key does not affect reflection of any "
"subkeys."
msgstr "如果注册表键不在重定向列表中，函数会调用成功，但没有实际效果。禁用注册表键的重定向不会影响任何子键的重定向。"

#: ../../library/winreg.rst:501
msgid ""
"Raises an :ref:`auditing event <auditing>` ``winreg.DisableReflectionKey`` "
"with argument ``key``."
msgstr ""
"引发一个 :ref:`审计事件 <auditing>` ``winreg.DisableReflectionKey`` 并附带参数 ``key``。"

#: ../../library/winreg.rst:506
msgid "Restores registry reflection for the specified disabled key."
msgstr "恢复已禁用注册表键的重定向。"

#: ../../library/winreg.rst:514
msgid ""
"Restoring reflection for a key does not affect reflection of any subkeys."
msgstr "恢复注册表键的重定向不会影响任何子键的重定向。"

#: ../../library/winreg.rst:516
msgid ""
"Raises an :ref:`auditing event <auditing>` ``winreg.EnableReflectionKey`` "
"with argument ``key``."
msgstr ""
"引发一个 :ref:`审计事件 <auditing>` ``winreg.EnableReflectionKey`` 并附带参数 ``key``。"

#: ../../library/winreg.rst:521
msgid "Determines the reflection state for the specified key."
msgstr "确定给定注册表键的重定向状况。"

#: ../../library/winreg.rst:526
msgid "Returns ``True`` if reflection is disabled."
msgstr "如果重定向已禁用则返回 ``True``。"

#: ../../library/winreg.rst:531
msgid ""
"Raises an :ref:`auditing event <auditing>` ``winreg.QueryReflectionKey`` "
"with argument ``key``."
msgstr ""
"引发一个 :ref:`审计事件 <auditing>` ``winreg.QueryReflectionKey`` 并附带参数 ``key``。"

#: ../../library/winreg.rst:537
msgid "Constants"
msgstr "常量"

#: ../../library/winreg.rst:539
msgid ""
"The following constants are defined for use in many :mod:`_winreg` "
"functions."
msgstr "以下常量定义成可供很多 :mod:`_winreg` 函数使用。"

#: ../../library/winreg.rst:544
msgid "HKEY_* Constants"
msgstr "HKEY_* 常量"

#: ../../library/winreg.rst:548
msgid ""
"Registry entries subordinate to this key define types (or classes) of "
"documents and the properties associated with those types. Shell and COM "
"applications use the information stored under this key."
msgstr "本注册表键下的注册表项定义了文件的类型（或类别）及相关属性。Shell 和 COM 应用程序将使用该注册表键下保存的信息。"

#: ../../library/winreg.rst:555
msgid ""
"Registry entries subordinate to this key define the preferences of the "
"current user. These preferences include the settings of environment "
"variables, data about program groups, colors, printers, network connections,"
" and application preferences."
msgstr "属于该注册表键的表项定义了当前用户的偏好。这些偏好值包括环境变量设置、程序组数据、颜色、打印机、网络连接和应用程序参数。"

#: ../../library/winreg.rst:562
msgid ""
"Registry entries subordinate to this key define the physical state of the "
"computer, including data about the bus type, system memory, and installed "
"hardware and software."
msgstr "属于该注册表键的表项定义了计算机的物理状态，包括总线类型、系统内存和已安装软硬件等数据。"

#: ../../library/winreg.rst:568
msgid ""
"Registry entries subordinate to this key define the default user "
"configuration for new users on the local computer and the user configuration"
" for the current user."
msgstr "属于该注册表键的表项定义了当前计算机中新用户的默认配置和当前用户配置。"

#: ../../library/winreg.rst:574
msgid ""
"Registry entries subordinate to this key allow you to access performance "
"data. The data is not actually stored in the registry; the registry "
"functions cause the system to collect the data from its source."
msgstr "属于该注册表键的表项可用于读取性能数据。这些数据其实并不存放于注册表中；注册表提供功能让系统收集数据。"

#: ../../library/winreg.rst:582
msgid ""
"Contains information about the current hardware profile of the local "
"computer system."
msgstr "包含有关本地计算机系统当前硬件配置的信息。"

#: ../../library/winreg.rst:587
msgid "This key is not used in versions of Windows after 98."
msgstr "Windows 98 以上版本不使用该注册表键。"

#: ../../library/winreg.rst:593
msgid "Access Rights"
msgstr "访问权限"

#: ../../library/winreg.rst:595
msgid ""
"For more information, see `Registry Key Security and Access "
"<https://msdn.microsoft.com/en-us/library/ms724878%28v=VS.85%29.aspx>`__."
msgstr ""
"更多信息，请参阅 `注册表密钥安全和访问 <https://msdn.microsoft.com/en-"
"us/library/ms724878%28v=VS.85%29.aspx>`__。"

#: ../../library/winreg.rst:600
msgid ""
"Combines the STANDARD_RIGHTS_REQUIRED, :const:`KEY_QUERY_VALUE`, "
":const:`KEY_SET_VALUE`, :const:`KEY_CREATE_SUB_KEY`, "
":const:`KEY_ENUMERATE_SUB_KEYS`, :const:`KEY_NOTIFY`, and "
":const:`KEY_CREATE_LINK` access rights."
msgstr ""
"组合了 STANDARD_RIGHTS_REQUIRED 、:const:`KEY_QUERY_VALUE` 、 "
":const:`KEY_SET_VALUE` 、 :const:`KEY_CREATE_SUB_KEY` 、 "
":const:`KEY_ENUMERATE_SUB_KEYS` 、 :const:`KEY_NOTIFY` 和 "
":const:`KEY_CREATE_LINK` 访问权限。"

#: ../../library/winreg.rst:607
msgid ""
"Combines the STANDARD_RIGHTS_WRITE, :const:`KEY_SET_VALUE`, and "
":const:`KEY_CREATE_SUB_KEY` access rights."
msgstr ""
"组合了 STANDARD_RIGHTS_WRITE 、 :const:`KEY_SET_VALUE` 和 "
":const:`KEY_CREATE_SUB_KEY` 访问权限。"

#: ../../library/winreg.rst:612
msgid ""
"Combines the STANDARD_RIGHTS_READ, :const:`KEY_QUERY_VALUE`, "
":const:`KEY_ENUMERATE_SUB_KEYS`, and :const:`KEY_NOTIFY` values."
msgstr ""
"组合了 STANDARD_RIGHTS_READ 、 :const:`KEY_QUERY_VALUE` 、 "
":const:`KEY_ENUMERATE_SUB_KEYS` 和 :const:`KEY_NOTIFY` 。"

#: ../../library/winreg.rst:617
msgid "Equivalent to :const:`KEY_READ`."
msgstr "等价于  :const:`KEY_READ`。"

#: ../../library/winreg.rst:621
msgid "Required to query the values of a registry key."
msgstr "查询注册表键值时需要用到。"

#: ../../library/winreg.rst:625
msgid "Required to create, delete, or set a registry value."
msgstr "创建、删除或设置注册表值时需要用到。"

#: ../../library/winreg.rst:629
msgid "Required to create a subkey of a registry key."
msgstr "创建注册表键的子键时需要用到。"

#: ../../library/winreg.rst:633
msgid "Required to enumerate the subkeys of a registry key."
msgstr "枚举注册表键的子键时需要用到。"

#: ../../library/winreg.rst:637
msgid ""
"Required to request change notifications for a registry key or for subkeys "
"of a registry key."
msgstr "为注册表键或子键请求修改通知时需要用到。"

#: ../../library/winreg.rst:642
msgid "Reserved for system use."
msgstr "保留给系统使用。"

#: ../../library/winreg.rst:648
msgid "64-bit Specific"
msgstr "64 位系统特有"

#: ../../library/winreg.rst:650
msgid ""
"For more information, see `Accessing an Alternate Registry View "
"<https://msdn.microsoft.com/en-us/library/aa384129(v=VS.85).aspx>`__."
msgstr ""
"详情请参阅 `Accessing an Alternate Registry View <https://msdn.microsoft.com/en-"
"us/library/aa384129(v=VS.85).aspx>`__。"

#: ../../library/winreg.rst:655
msgid ""
"Indicates that an application on 64-bit Windows should operate on the 64-bit"
" registry view. On 32-bit Windows, this constant is ignored."
msgstr ""
"表示一个应用程序在 64 位 Windows 上应当在 64 位的注册表视图上进行操作。 在 32 位 Windows 上，此常量会被忽略。"

#: ../../library/winreg.rst:660
msgid ""
"Indicates that an application on 64-bit Windows should operate on the 32-bit"
" registry view. On 32-bit Windows, this constant is ignored."
msgstr ""
"表示一个应用程序在 64 位 Windows 上应当在 32 位的注册表视图上进行操作。 在 32 位 Windows 上，此常量会被忽略。"

#: ../../library/winreg.rst:666
msgid "Value Types"
msgstr "注册表值的类型"

#: ../../library/winreg.rst:668
msgid ""
"For more information, see `Registry Value Types "
"<https://msdn.microsoft.com/en-us/library/ms724884%28v=VS.85%29.aspx>`__."
msgstr ""
"详情请参阅 `Registry Value Types <https://msdn.microsoft.com/en-"
"us/library/ms724884%28v=VS.85%29.aspx>`__。"

#: ../../library/winreg.rst:673
msgid "Binary data in any form."
msgstr "任意格式的二进制数据。"

#: ../../library/winreg.rst:677
msgid "32-bit number."
msgstr "32 位数字。"

#: ../../library/winreg.rst:681
msgid ""
"A 32-bit number in little-endian format. Equivalent to :const:`REG_DWORD`."
msgstr "32 位低字节序格式的数字。相当于 :const:`REG_DWORD`。"

#: ../../library/winreg.rst:685
msgid "A 32-bit number in big-endian format."
msgstr "32 位高字节序格式的数字。"

#: ../../library/winreg.rst:689
msgid ""
"Null-terminated string containing references to environment variables "
"(``%PATH%``)."
msgstr "包含环境变量（``%PATH%``）的字符串，以空字符结尾。"

#: ../../library/winreg.rst:694
msgid "A Unicode symbolic link."
msgstr "Unicode 符号链接。"

#: ../../library/winreg.rst:698
msgid ""
"A sequence of null-terminated strings, terminated by two null characters. "
"(Python handles this termination automatically.)"
msgstr "一串以空字符结尾的字符串，最后以两个空字符结尾。Python 会自动处理这种结尾形式。"

#: ../../library/winreg.rst:703
msgid "No defined value type."
msgstr "未定义的类型。"

#: ../../library/winreg.rst:707
msgid "A 64-bit number."
msgstr "64 位数字。"

#: ../../library/winreg.rst:713
msgid ""
"A 64-bit number in little-endian format. Equivalent to :const:`REG_QWORD`."
msgstr "64 位低字节序格式的数字。相当于 :const:`REG_QWORD`。"

#: ../../library/winreg.rst:719
msgid "A device-driver resource list."
msgstr "设备驱动程序资源列表。"

#: ../../library/winreg.rst:723
msgid "A hardware setting."
msgstr "硬件设置。"

#: ../../library/winreg.rst:727
msgid "A hardware resource list."
msgstr "硬件资源列表。"

#: ../../library/winreg.rst:731
msgid "A null-terminated string."
msgstr "空字符结尾的字符串。"

#: ../../library/winreg.rst:737
msgid "Registry Handle Objects"
msgstr "注册表句柄对象"

#: ../../library/winreg.rst:739
msgid ""
"This object wraps a Windows HKEY object, automatically closing it when the "
"object is destroyed.  To guarantee cleanup, you can call either the "
":meth:`~PyHKEY.Close` method on the object, or the :func:`CloseKey` "
"function."
msgstr ""
"该对象封装了 Windows HKEY 对象，对象销毁时会自动关闭。为确保资源得以清理，可调用 :meth:`~PyHKEY.Close` 方法或 "
":func:`CloseKey` 函数。"

#: ../../library/winreg.rst:743
msgid "All registry functions in this module return one of these objects."
msgstr "本模块中的所有注册表函数都会返回注册表句柄对象。"

#: ../../library/winreg.rst:745
msgid ""
"All registry functions in this module which accept a handle object also "
"accept an integer, however, use of the handle object is encouraged."
msgstr "本模块中所有接受注册表句柄对象的注册表函数，也能接受一个整数，但鼓励大家使用句柄对象。"

#: ../../library/winreg.rst:748
msgid "Handle objects provide semantics for :meth:`__bool__` -- thus ::"
msgstr "注册表句柄对象支持 :meth:`__bool__` 语义 —— 因此如果当前句柄有效（未关闭或断开连接）："

#: ../../library/winreg.rst:753
msgid ""
"will print ``Yes`` if the handle is currently valid (has not been closed or "
"detached)."
msgstr "将会打印出 ``Yes`` 。"

#: ../../library/winreg.rst:756
msgid ""
"The object also support comparison semantics, so handle objects will compare"
" true if they both reference the same underlying Windows handle value."
msgstr "句柄对象还支持比较语义，因此若多个句柄对象都引用了同一底层 Windows 句柄值，那么比较操作结果将为 True。"

#: ../../library/winreg.rst:759
msgid ""
"Handle objects can be converted to an integer (e.g., using the built-in "
":func:`int` function), in which case the underlying Windows handle value is "
"returned.  You can also use the :meth:`~PyHKEY.Detach` method to return the "
"integer handle, and also disconnect the Windows handle from the handle "
"object."
msgstr ""
"句柄对象可转换为整数（如利用内置函数 :func:`int`），这时会返回底层的 Windows 句柄值。用 "
":meth:`~PyHKEY.Detach` 方法也可返回整数句柄，同时会断开与 Windows 句柄的连接。"

#: ../../library/winreg.rst:767
msgid "Closes the underlying Windows handle."
msgstr "关闭底层的 Windows 句柄。"

#: ../../library/winreg.rst:769
msgid "If the handle is already closed, no error is raised."
msgstr "如果句柄已关闭，不会引发错误。"

#: ../../library/winreg.rst:774
msgid "Detaches the Windows handle from the handle object."
msgstr "断开与 Windows 句柄的连接。"

#: ../../library/winreg.rst:776
msgid ""
"The result is an integer that holds the value of the handle before it is "
"detached.  If the handle is already detached or closed, this will return "
"zero."
msgstr "结果为一个整数，存有被断开连接之前的句柄值。如果该句柄已断开连接或关闭，则返回 0。"

#: ../../library/winreg.rst:780
msgid ""
"After calling this function, the handle is effectively invalidated, but the "
"handle is not closed.  You would call this function when you need the "
"underlying Win32 handle to exist beyond the lifetime of the handle object."
msgstr "调用本函数后，注册表句柄将被迅速禁用，但并没有关闭。当需要底层的 Win32 句柄在句柄对象的生命周期之后仍然存在时，可以调用这个函数。"

#: ../../library/winreg.rst:784
msgid ""
"Raises an :ref:`auditing event <auditing>` ``winreg.PyHKEY.Detach`` with "
"argument ``key``."
msgstr "引发一个 :ref:`审计事件 <auditing>` ``winreg.PyHKEY.Detach`` 并附带参数 ``key``。"

#: ../../library/winreg.rst:790
msgid ""
"The HKEY object implements :meth:`~object.__enter__` and "
":meth:`~object.__exit__` and thus supports the context protocol for the "
":keyword:`with` statement::"
msgstr ""
"HKEY 对象实现了 :meth:`~object.__enter__` 和 :meth:`~object.__exit__` 方法，因此支持 "
":keyword:`with` 语句的上下文协议："

#: ../../library/winreg.rst:797
msgid ""
"will automatically close *key* when control leaves the :keyword:`with` "
"block."
msgstr "在离开 :keyword:`with` 语句块时，*key* 会自动关闭。"
