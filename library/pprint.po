# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2024
# Freesand Leo <yuqinju@163.com>, 2025
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-05-30 16:16+0000\n"
"PO-Revision-Date: 2023-05-24 02:18+0000\n"
"Last-Translator: Freesand Leo <yuqinju@163.com>, 2025\n"
"Language-Team: Chinese (China) (https://app.transifex.com/python-doc/teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/pprint.rst:2
msgid ":mod:`pprint` --- Data pretty printer"
msgstr ":mod:`pprint` --- 数据美化输出"

#: ../../library/pprint.rst:10
msgid "**Source code:** :source:`Lib/pprint.py`"
msgstr "**源代码：** :source:`Lib/pprint.py`"

#: ../../library/pprint.rst:14
msgid ""
"The :mod:`pprint` module provides a capability to \"pretty-print\" arbitrary"
" Python data structures in a form which can be used as input to the "
"interpreter. If the formatted structures include objects which are not "
"fundamental Python types, the representation may not be loadable.  This may "
"be the case if objects such as files, sockets or classes are included, as "
"well as many other objects which are not representable as Python literals."
msgstr ""
":mod:`pprint` 模块提供了“美化打印”任意 Python 数据结构的功能，这种美化形式可用作对解释器的输入。 如果经格式化的结构包含非基本 "
"Python 类型的对象，则其美化形式可能无法被加载。 包含文件、套接字或类对象，以及许多其他不能用 Python "
"字面值来表示的对象都有可能导致这样的结果。"

#: ../../library/pprint.rst:21
msgid ""
"The formatted representation keeps objects on a single line if it can, and "
"breaks them onto multiple lines if they don't fit within the allowed width. "
"Construct :class:`PrettyPrinter` objects explicitly if you need to adjust "
"the width constraint."
msgstr ""
"格式化后的形式会在可能的情况下以单行来表示对象，并在无法在允许宽度内容纳对象的情况下将其分为多行。 如果你需要调整宽度限制则应显式地构造 "
":class:`PrettyPrinter` 对象。"

#: ../../library/pprint.rst:26
msgid "Dictionaries are sorted by key before the display is computed."
msgstr "字典在计算其显示形式前会先根据键来排序。"

#: ../../library/pprint.rst:28
msgid "Added support for pretty-printing :class:`types.SimpleNamespace`."
msgstr "添加了对美化打印 :class:`types.SimpleNamespace` 的支持。"

#: ../../library/pprint.rst:31
msgid "Added support for pretty-printing :class:`dataclasses.dataclass`."
msgstr "添加了对美化打印 :class:`dataclasses.dataclass` 的支持。"

#: ../../library/pprint.rst:37
msgid "Functions"
msgstr "函数"

#: ../../library/pprint.rst:41
msgid ""
"Prints the formatted representation of *object* followed by a newline. If "
"*sort_dicts* is false (the default), dictionaries will be displayed with "
"their keys in insertion order, otherwise the dict keys will be sorted. "
"*args* and *kwargs* will be passed to :func:`~pprint.pprint` as formatting "
"parameters."
msgstr ""
"打印 *对象* 的格式化表示，后跟换行符。如果 *sort_dicts* 为 "
"false（默认），字典将按插入顺序显示键值，否则将对字典键值进行排序。*args* 和 *kwargs* 将作为格式化形参传递给 "
":func:`~pprint.pprint` 。"

#: ../../library/pprint.rst:64
msgid ""
"Prints the formatted representation of *object* on *stream*, followed by a "
"newline.  If *stream* is ``None``, :data:`sys.stdout` is used. This may be "
"used in the interactive interpreter instead of the :func:`print` function "
"for inspecting values (you can even reassign ``print = pprint.pprint`` for "
"use within a scope)."
msgstr ""
"在 *stream* 上打印 *object* 的格式化表示形式。 如果 *stream* 为 ``None``，则会使用 "
":data:`sys.stdout` 。 这可以在交互式解释器中代替 :func:`print` 函数使用以便检查对象的值（你甚至可以通过重赋值 "
"``print = pprint.pprint`` 在特定作用域内使用）。"

#: ../../library/pprint.rst:70
msgid ""
"The configuration parameters *stream*, *indent*, *width*, *depth*, "
"*compact*, *sort_dicts* and *underscore_numbers* are passed to the "
":class:`PrettyPrinter` constructor and their meanings are as described in "
"its documentation below."
msgstr ""
"配置形参 *stream*, *indent*, *width*, *depth*, *compact*, *sort_dicts* 和 "
"*underscore_numbers* 将被传递给 :class:`PrettyPrinter` 构造器，它们的含义见下文相关文档的说明。"

#: ../../library/pprint.rst:75
msgid ""
"Note that *sort_dicts* is ``True`` by default and you might want to use "
":func:`~pprint.pp` instead where it is ``False`` by default."
msgstr ""
"请注意 *sort_dicts* 默认为 ``True``，你可能会考虑改用此参数默认为 ``False`` 的 :func:`~pprint.pp`。"

#: ../../library/pprint.rst:81
msgid ""
"Return the formatted representation of *object* as a string.  *indent*, "
"*width*, *depth*, *compact*, *sort_dicts* and *underscore_numbers* are "
"passed to the :class:`PrettyPrinter` constructor as formatting parameters "
"and their meanings are as described in its documentation below."
msgstr ""
"将 *object* 的格式化表示形式作为字符串返回。 *indent*, *width*, *depth*, *compact*, "
"*sort_dicts* 和 *underscore_numbers* 将作为格式化形参传递给 :class:`PrettyPrinter` "
"构造器，它们的含义见下文相应文件的说明。"

#: ../../library/pprint.rst:91
msgid ""
"Determine if the formatted representation of *object* is \"readable\", or "
"can be used to reconstruct the value using :func:`eval`.  This always "
"returns ``False`` for recursive objects."
msgstr ""
"确定 *object* 的格式化表示是否“可读”，或是否可被用来通过 :func:`eval` 重新构建对象的值。 此函数对于递归对象总是返回 "
"``False``。"

#: ../../library/pprint.rst:101
msgid "Determine if *object* requires a recursive representation."
msgstr ""

#: ../../library/pprint.rst:106
msgid ""
"Return a string representation of *object*, protected against recursive data"
" structures.  If the representation of *object* exposes a recursive entry, "
"the recursive reference will be represented as ``<Recursion on typename with"
" id=number>``.  The representation is not otherwise formatted."
msgstr ""

#: ../../library/pprint.rst:118
msgid "PrettyPrinter Objects"
msgstr "PrettyPrinter 对象"

#: ../../library/pprint.rst:120
msgid "This module defines one class:"
msgstr "此模块定义了一个类："

#: ../../library/pprint.rst:130
msgid ""
"Construct a :class:`PrettyPrinter` instance.  This constructor understands "
"several keyword parameters."
msgstr "构造一个 :class:`PrettyPrinter` 实例。 这个构造器支持一些关键字形参。"

#: ../../library/pprint.rst:133
msgid ""
"*stream* (default :data:`!sys.stdout`) is a :term:`file-like object` to "
"which the output will be written by calling its :meth:`!write` method. If "
"both *stream* and :data:`!sys.stdout` are ``None``, then "
":meth:`~PrettyPrinter.pprint` silently returns."
msgstr ""
"*stream* (默认为 :data:`!sys.stdout`) 是一个 :term:`file-like object`，它是当调用其 "
":meth:`!write` 方法时的输出将要写入的目标。 如果 *stream* 和 :data:`!sys.stdout` 均为 "
"``None``，则 :meth:`~PrettyPrinter.pprint` 将静默地返回。"

#: ../../library/pprint.rst:138
msgid ""
"Other values configure the manner in which nesting of complex data "
"structures is displayed."
msgstr "其他值可用来配置复杂数据结构嵌套要以何种形式被展示。"

#: ../../library/pprint.rst:141
msgid ""
"*indent* (default 1) specifies the amount of indentation added for each "
"nesting level."
msgstr "*indent* (默认为 1) 指定要为每个缩进层级添加的缩进量。"

#: ../../library/pprint.rst:144
msgid ""
"*depth* controls the number of nesting levels which may be printed; if the "
"data structure being printed is too deep, the next contained level is "
"replaced by ``...``.  By default, there is no constraint on the depth of the"
" objects being formatted."
msgstr ""
"*depth* 控制可被打印的缩进层级数量；如果要打印的数据结构层级过深，则其所包含的下一层级将用 ``...`` 替换。 "
"默认情况下，对于被格式化对象的层级深度没有任何限制。"

#: ../../library/pprint.rst:149
msgid ""
"*width* (default 80) specifies the desired maximum number of characters per "
"line in the output. If a structure cannot be formatted within the width "
"constraint, a best effort will be made."
msgstr "*width* (默认为 80) 指定输出中每行所允许的最大字符数。 如果一个数据结构无法在宽度限制之内被格式化，将显示尽可能多的内容。"

#: ../../library/pprint.rst:153
msgid ""
"*compact* impacts the way that long sequences (lists, tuples, sets, etc) are"
" formatted. If *compact* is false (the default) then each item of a sequence"
" will be formatted on a separate line.  If *compact* is true, as many items "
"as will fit within the *width* will be formatted on each output line."
msgstr ""
"*compact* 影响长序列（列表、元组、集合等等）的格式化方式。 如果 *compact* 为假值（默认）则序列的每一项将格式化为单独的行。 如果 "
"*compact* 为真值，则每个输出行格式化时将在 *width* 的限制之内尽可能地容纳多个条目。"

#: ../../library/pprint.rst:159
msgid ""
"If *sort_dicts* is true (the default), dictionaries will be formatted with "
"their keys sorted, otherwise they will display in insertion order."
msgstr "如果 *sort_dicts* 为真值（默认），字典在格式化时将基于键进行排序，否则它们将按插入顺序显示。"

#: ../../library/pprint.rst:162
msgid ""
"If *underscore_numbers* is true, integers will be formatted with the ``_`` "
"character for a thousands separator, otherwise underscores are not displayed"
" (the default)."
msgstr "如果 *underscore_numbers* 为真值，整数在格式化时将使用 ``_`` 字符作为千位分隔符，否则不显示下划线（默认）。"

#: ../../library/pprint.rst:166
msgid "Added the *compact* parameter."
msgstr "增加了 *compact* 形参。"

#: ../../library/pprint.rst:169
msgid "Added the *sort_dicts* parameter."
msgstr "增加了 *sort_dicts* 形参。"

#: ../../library/pprint.rst:172
msgid "Added the *underscore_numbers* parameter."
msgstr "添加了 *underscore_numbers* 形参。"

#: ../../library/pprint.rst:175
msgid "No longer attempts to write to :data:`!sys.stdout` if it is ``None``."
msgstr "如果 :data:`!sys.stdout` 为 ``None`` 则将不会尝试向其中写入。"

#: ../../library/pprint.rst:202
msgid ":class:`PrettyPrinter` instances have the following methods:"
msgstr ":class:`PrettyPrinter` 的实例具有下列方法："

#: ../../library/pprint.rst:207
msgid ""
"Return the formatted representation of *object*.  This takes into account "
"the options passed to the :class:`PrettyPrinter` constructor."
msgstr "返回 *object* 格式化表示。 这会将传给 :class:`PrettyPrinter` 构造器的选项纳入考虑。"

#: ../../library/pprint.rst:213
msgid ""
"Print the formatted representation of *object* on the configured stream, "
"followed by a newline."
msgstr "在所配置的流上打印 *object* 的格式化表示，并附加一个换行符。"

#: ../../library/pprint.rst:216
msgid ""
"The following methods provide the implementations for the corresponding "
"functions of the same names.  Using these methods on an instance is slightly"
" more efficient since new :class:`PrettyPrinter` objects don't need to be "
"created."
msgstr ""
"下列方法提供了与同名函数相对应的实现。 在实例上使用这些方法效率会更高一些，因为不需要创建新的 :class:`PrettyPrinter` 对象。"

#: ../../library/pprint.rst:226
msgid ""
"Determine if the formatted representation of the object is \"readable,\" or "
"can be used to reconstruct the value using :func:`eval`.  Note that this "
"returns ``False`` for recursive objects.  If the *depth* parameter of the "
":class:`PrettyPrinter` is set and the object is deeper than allowed, this "
"returns ``False``."
msgstr ""
"确定对象的格式化表示是否“可读”，或者是否可使用 :func:`eval` 重建对象值。 请注意此方法对于递归对象将返回 ``False``。 "
"如果设置了 :class:`PrettyPrinter` 的 *depth* 形参并且对象深度超出允许范围，此方法将返回 ``False``。"

#: ../../library/pprint.rst:235
msgid "Determine if the object requires a recursive representation."
msgstr "确定对象是否需要递归表示。"

#: ../../library/pprint.rst:237
msgid ""
"This method is provided as a hook to allow subclasses to modify the way "
"objects are converted to strings.  The default implementation uses the "
"internals of the :func:`saferepr` implementation."
msgstr "此方法作为一个钩子提供，允许子类修改将对象转换为字符串的方式。 默认实现使用 :func:`saferepr` 实现的内部方式。"

#: ../../library/pprint.rst:244
msgid ""
"Returns three values: the formatted version of *object* as a string, a flag "
"indicating whether the result is readable, and a flag indicating whether "
"recursion was detected.  The first argument is the object to be presented.  "
"The second is a dictionary which contains the :func:`id` of objects that are"
" part of the current presentation context (direct and indirect containers "
"for *object* that are affecting the presentation) as the keys; if an object "
"needs to be presented which is already represented in *context*, the third "
"return value should be ``True``.  Recursive calls to the :meth:`.format` "
"method should add additional entries for containers to this dictionary.  The"
" third argument, *maxlevels*, gives the requested limit to recursion; this "
"will be ``0`` if there is no requested limit.  This argument should be "
"passed unmodified to recursive calls. The fourth argument, *level*, gives "
"the current level; recursive calls should be passed a value less than that "
"of the current call."
msgstr ""
"返回三个值：字符串形式的 *object* 已格式化版本，指明结果是否可读的旗标，以及指明是否检测到递归的旗标。 第一个参数是要表示的对象。 "
"第二个是以对象 :func:`id` 为键的字典，这些对象是当前表示上下文的一部分（影响 *object* "
"表示的直接和间接容器）；如果需要呈现一个已经在 *context* 中表示的对象，则第三个返回值应当为 ``True``。 对 "
":meth:`.format` 方法的递归调用应当将容器的附加条目添加到此字典中。 第三个参数 *maxlevels* "
"给出了对递归的请求限制；如果没有请求限制则其值将为 ``0``。 此参数应当不加修改地传给递归调用。 第四个参数 *level* "
"给出于当前层级；传给递归调用的参数值应当小于当前调用的值。"

#: ../../library/pprint.rst:262
msgid "Example"
msgstr "示例"

#: ../../library/pprint.rst:264
msgid ""
"To demonstrate several uses of the :func:`~pprint.pp` function and its "
"parameters, let's fetch information about a project from `PyPI "
"<https://pypi.org>`_::"
msgstr ""
"为了演示 :func:`~pprint.pp` 函数及其形参的几种用法，让我们从 `PyPI <https://pypi.org>`_ "
"获取关于某个项目的信息::"

#: ../../library/pprint.rst:273
msgid "In its basic form, :func:`~pprint.pp` shows the whole object::"
msgstr "在其基本形式中，:func:`~pprint.pp` 会显示整个对象::"

#: ../../library/pprint.rst:329
msgid ""
"The result can be limited to a certain *depth* (ellipsis is used for deeper "
"contents)::"
msgstr "结果可以被限制到特定的 *depth* (更深层的内容将使用省略号)::"

#: ../../library/pprint.rst:375
msgid ""
"Additionally, maximum character *width* can be suggested. If a long object "
"cannot be split, the specified width will be exceeded::"
msgstr "此外，还可以设置建议的最大字符 *width*。 如果一个对象无法被拆分，则将超出指定宽度::"

#: ../../library/pprint.rst:89 ../../library/pprint.rst:224
msgid "built-in function"
msgstr "内置函数"

#: ../../library/pprint.rst:89 ../../library/pprint.rst:224
msgid "eval"
msgstr "eval"

#: ../../library/pprint.rst:125
msgid "..."
msgstr "..."

#: ../../library/pprint.rst:125
msgid "placeholder"
msgstr "placeholder"
