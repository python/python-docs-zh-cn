# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2025
# Freesand Leo <yuqinju@163.com>, 2025
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.13\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-05-30 14:58+0000\n"
"PO-Revision-Date: 2025-05-08 05:10+0000\n"
"Last-Translator: Freesand Leo <yuqinju@163.com>, 2025\n"
"Language-Team: Chinese (China) (https://app.transifex.com/python-doc/teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/pprint.rst:2
msgid ":mod:`!pprint` --- Data pretty printer"
msgstr ":mod:`!pprint` --- 数据美化输出"

#: ../../library/pprint.rst:10
msgid "**Source code:** :source:`Lib/pprint.py`"
msgstr "**源代码：** :source:`Lib/pprint.py`"

#: ../../library/pprint.rst:14
msgid ""
"The :mod:`pprint` module provides a capability to \"pretty-print\" arbitrary"
" Python data structures in a form which can be used as input to the "
"interpreter. If the formatted structures include objects which are not "
"fundamental Python types, the representation may not be loadable.  This may "
"be the case if objects such as files, sockets or classes are included, as "
"well as many other objects which are not representable as Python literals."
msgstr ""
":mod:`pprint` 模块提供了“美化打印”任意 Python 数据结构的功能，这种美化形式可用作对解释器的输入。 如果经格式化的结构包含非基本 "
"Python 类型的对象，则其美化形式可能无法被加载。 包含文件、套接字或类对象，以及许多其他不能用 Python "
"字面值来表示的对象都有可能导致这样的结果。"

#: ../../library/pprint.rst:21
msgid ""
"The formatted representation keeps objects on a single line if it can, and "
"breaks them onto multiple lines if they don't fit within the allowed width, "
"adjustable by the *width* parameter defaulting to 80 characters."
msgstr ""
"已格式化的表示形式会在可能的情况下将对象放在单行中，而当它们不能在允许宽度中被容纳时将其分为多行，允许宽度可由默认为 80 个字符的 *width* "
"形参加以调整。"

#: ../../library/pprint.rst:25
msgid "Dictionaries are sorted by key before the display is computed."
msgstr "字典在计算其显示形式前会先根据键来排序。"

#: ../../library/pprint.rst:27
msgid "Added support for pretty-printing :class:`types.SimpleNamespace`."
msgstr "添加了对美化打印 :class:`types.SimpleNamespace` 的支持。"

#: ../../library/pprint.rst:30
msgid "Added support for pretty-printing :class:`dataclasses.dataclass`."
msgstr "添加了对美化打印 :class:`dataclasses.dataclass` 的支持。"

#: ../../library/pprint.rst:36
msgid "Functions"
msgstr "函数"

#: ../../library/pprint.rst:41
msgid ""
"Prints the formatted representation of *object*, followed by a newline. This"
" function may be used in the interactive interpreter instead of the "
":func:`print` function for inspecting values. Tip: you can reassign ``print "
"= pprint.pp`` for use within a scope."
msgstr ""
"打印 *object* 的格式化表示形式，末尾加一个换行符。 此函数可以在交互式解释器中代替 :func:`print` 函数用于检查对象值。 "
"提示：你可以执行重赋值 ``print = pprint.pp`` 以在指定作用域内使用。"

#: ../../library/pprint.rst:0
msgid "Parameters"
msgstr "参数"

#: ../../library/pprint.rst:46
msgid "The object to be printed."
msgstr "要打印的对象。"

#: ../../library/pprint.rst:49
msgid ""
"A file-like object to which the output will be written by calling its "
":meth:`!write` method. If ``None`` (the default), :data:`sys.stdout` is "
"used."
msgstr ""
"一个文件型对象，可通过调用其 :meth:`!write` 方法将输出写入该对象。 如为 ``None`` (默认值 )，则使用 "
":data:`sys.stdout`。"

#: ../../library/pprint.rst:55
msgid "The amount of indentation added for each nesting level."
msgstr "要为每个嵌套层级添加的缩进量。"

#: ../../library/pprint.rst:58
msgid ""
"The desired maximum number of characters per line in the output. If a "
"structure cannot be formatted within the width constraint, a best effort "
"will be made."
msgstr "输出中每行所允许的最大字符数。 如果一个结构无法在宽度限制内被格式化，则将尽可能的接近。"

#: ../../library/pprint.rst:63
msgid ""
"The number of nesting levels which may be printed. If the data structure "
"being printed is too deep, the next contained level is replaced by ``...``. "
"If ``None`` (the default), there is no constraint on the depth of the "
"objects being formatted."
msgstr ""
"可被打印的嵌套层级数量。 如果要打印的数据结构具有过深的层级，则其包含的下一层级将用 ``...`` 替换。 如为 ``None`` "
"(默认值)，则不会限制被格式化对象的层级深度。"

#: ../../library/pprint.rst:71
msgid ""
"Control the way long :term:`sequences <sequence>` are formatted. If "
"``False`` (the default), each item of a sequence will be formatted on a "
"separate line, otherwise as many items as will fit within the *width* will "
"be formatted on each output line."
msgstr ""
"控制长 :term:`序列 <sequence>` 的格式化方式。 如为 ``False`` "
"(默认值)，则序列的每一项将被格式化为单独的行，否则在格式化每个输出行时将根据 *width* 限制容纳尽可能多的条目。"

#: ../../library/pprint.rst:78
msgid ""
"If ``True``, dictionaries will be formatted with their keys sorted, "
"otherwise they will be displayed in insertion order (the default)."
msgstr "如为 ``True``，则在格式化字典时将基于键进行排序，否则将按插入顺序显示它们（默认）。"

#: ../../library/pprint.rst:83
msgid ""
"If ``True``, integers will be formatted with the ``_`` character for a "
"thousands separator, otherwise underscores are not displayed (the default)."
msgstr "如为 ``True``，则在格式化整数时将使用 ``_`` 字符作为千位分隔符，否则将不显示下划线（默认）。"

#: ../../library/pprint.rst:105
msgid ""
"Alias for :func:`~pprint.pp` with *sort_dicts* set to ``True`` by default, "
"which would automatically sort the dictionaries' keys, you might want to use"
" :func:`~pprint.pp` instead where it is ``False`` by default."
msgstr ""
"默认将 *sort_dicts* 设为 ``True`` 的 :func:`~pprint.pp` "
"的别名，它将自动按字典的键进行排序，你也可以选择使用该参数默认为 ``False`` 的 :func:`~pprint.pp`。"

#: ../../library/pprint.rst:113
msgid ""
"Return the formatted representation of *object* as a string.  *indent*, "
"*width*, *depth*, *compact*, *sort_dicts* and *underscore_numbers* are "
"passed to the :class:`PrettyPrinter` constructor as formatting parameters "
"and their meanings are as described in the documentation above."
msgstr ""
"将 *object* 的格式化表示形式作为字符串返回。 *indent*, *width*, *depth*, *compact*, "
"*sort_dicts* 和 *underscore_numbers* 将作为格式化形参传递给 :class:`PrettyPrinter` "
"构造器，它们的含义请参阅前面文档中的说明。"

#: ../../library/pprint.rst:123
msgid ""
"Determine if the formatted representation of *object* is \"readable\", or "
"can be used to reconstruct the value using :func:`eval`.  This always "
"returns ``False`` for recursive objects."
msgstr ""
"确定 *object* 的格式化表示是否“可读”，或是否可被用来通过 :func:`eval` 重新构建对象的值。 此函数对于递归对象总是返回 "
"``False``。"

#: ../../library/pprint.rst:133
msgid ""
"Determine if *object* requires a recursive representation.  This function is"
" subject to the same limitations as noted in :func:`saferepr` below and may "
"raise an :exc:`RecursionError` if it fails to detect a recursive object."
msgstr ""
"确定 *object* 是否需要递归的表示。 此函数会受到下面 :func:`saferepr` "
"所提及的同样限制的影响并可能在无法检测到可递归对象时引发 :exc:`RecursionError`。"

#: ../../library/pprint.rst:140
msgid ""
"Return a string representation of *object*, protected against recursion in "
"some common data structures, namely instances of :class:`dict`, "
":class:`list` and :class:`tuple` or subclasses whose ``__repr__`` has not "
"been overridden.  If the representation of object exposes a recursive entry,"
" the recursive reference will be represented as ``<Recursion on typename "
"with id=number>``.  The representation is not otherwise formatted."
msgstr ""
"返回 *object* 的字符串表示，并为某些通用数据结构提供防递归保护，包括 :class:`dict`, :class:`list` 和 "
":class:`tuple` 或其未重载 ``__repr__`` 的子类的实例。 如果该对象表示形式公开了一个递归条目，该递归引用会被表示为 "
"``<Recursion on typename with id=number>``。 否则该表示形式将不会被格式化。"

#: ../../library/pprint.rst:153
msgid "PrettyPrinter Objects"
msgstr "PrettyPrinter 对象"

#: ../../library/pprint.rst:160
msgid "Construct a :class:`PrettyPrinter` instance."
msgstr "构造一个 :class:`PrettyPrinter` 实例。"

#: ../../library/pprint.rst:162
msgid ""
"Arguments have the same meaning as for :func:`~pprint.pp`. Note that they "
"are in a different order, and that *sort_dicts* defaults to ``True``."
msgstr ""
"参数的含义与 :func:`~pprint.pp` 的相同。 注意它们的顺序有所不同，并且 *sort_dicts* 默认为 ``True``。"

#: ../../library/pprint.rst:189
msgid "Added the *compact* parameter."
msgstr "增加了 *compact* 形参。"

#: ../../library/pprint.rst:192
msgid "Added the *sort_dicts* parameter."
msgstr "增加了 *sort_dicts* 形参。"

#: ../../library/pprint.rst:195
msgid "Added the *underscore_numbers* parameter."
msgstr "添加了 *underscore_numbers* 形参。"

#: ../../library/pprint.rst:198
msgid "No longer attempts to write to :data:`!sys.stdout` if it is ``None``."
msgstr "如果 :data:`!sys.stdout` 为 ``None`` 则将不会尝试向其中写入。"

#: ../../library/pprint.rst:202
msgid ":class:`PrettyPrinter` instances have the following methods:"
msgstr ":class:`PrettyPrinter` 的实例具有下列方法："

#: ../../library/pprint.rst:207
msgid ""
"Return the formatted representation of *object*.  This takes into account "
"the options passed to the :class:`PrettyPrinter` constructor."
msgstr "返回 *object* 格式化表示。 这会将传给 :class:`PrettyPrinter` 构造器的选项纳入考虑。"

#: ../../library/pprint.rst:213
msgid ""
"Print the formatted representation of *object* on the configured stream, "
"followed by a newline."
msgstr "在所配置的流上打印 *object* 的格式化表示，并附加一个换行符。"

#: ../../library/pprint.rst:216
msgid ""
"The following methods provide the implementations for the corresponding "
"functions of the same names.  Using these methods on an instance is slightly"
" more efficient since new :class:`PrettyPrinter` objects don't need to be "
"created."
msgstr ""
"下列方法提供了与同名函数相对应的实现。 在实例上使用这些方法效率会更高一些，因为不需要创建新的 :class:`PrettyPrinter` 对象。"

#: ../../library/pprint.rst:226
msgid ""
"Determine if the formatted representation of the object is \"readable,\" or "
"can be used to reconstruct the value using :func:`eval`.  Note that this "
"returns ``False`` for recursive objects.  If the *depth* parameter of the "
":class:`PrettyPrinter` is set and the object is deeper than allowed, this "
"returns ``False``."
msgstr ""
"确定对象的格式化表示是否“可读”，或者是否可使用 :func:`eval` 重建对象值。 请注意此方法对于递归对象将返回 ``False``。 "
"如果设置了 :class:`PrettyPrinter` 的 *depth* 形参并且对象深度超出允许范围，此方法将返回 ``False``。"

#: ../../library/pprint.rst:235
msgid "Determine if the object requires a recursive representation."
msgstr "确定对象是否需要递归表示。"

#: ../../library/pprint.rst:237
msgid ""
"This method is provided as a hook to allow subclasses to modify the way "
"objects are converted to strings.  The default implementation uses the "
"internals of the :func:`saferepr` implementation."
msgstr "此方法作为一个钩子提供，允许子类修改将对象转换为字符串的方式。 默认实现使用 :func:`saferepr` 实现的内部方式。"

#: ../../library/pprint.rst:244
msgid ""
"Returns three values: the formatted version of *object* as a string, a flag "
"indicating whether the result is readable, and a flag indicating whether "
"recursion was detected.  The first argument is the object to be presented.  "
"The second is a dictionary which contains the :func:`id` of objects that are"
" part of the current presentation context (direct and indirect containers "
"for *object* that are affecting the presentation) as the keys; if an object "
"needs to be presented which is already represented in *context*, the third "
"return value should be ``True``.  Recursive calls to the :meth:`.format` "
"method should add additional entries for containers to this dictionary.  The"
" third argument, *maxlevels*, gives the requested limit to recursion; this "
"will be ``0`` if there is no requested limit.  This argument should be "
"passed unmodified to recursive calls. The fourth argument, *level*, gives "
"the current level; recursive calls should be passed a value less than that "
"of the current call."
msgstr ""
"返回三个值：字符串形式的 *object* 已格式化版本，指明结果是否可读的旗标，以及指明是否检测到递归的旗标。 第一个参数是要表示的对象。 "
"第二个是以对象 :func:`id` 为键的字典，这些对象是当前表示上下文的一部分（影响 *object* "
"表示的直接和间接容器）；如果需要呈现一个已经在 *context* 中表示的对象，则第三个返回值应当为 ``True``。 对 "
":meth:`.format` 方法的递归调用应当将容器的附加条目添加到此字典中。 第三个参数 *maxlevels* "
"给出了对递归的请求限制；如果没有请求限制则其值将为 ``0``。 此参数应当不加修改地传给递归调用。 第四个参数 *level* "
"给出于当前层级；传给递归调用的参数值应当小于当前调用的值。"

#: ../../library/pprint.rst:262
msgid "Example"
msgstr "示例"

#: ../../library/pprint.rst:264
msgid ""
"To demonstrate several uses of the :func:`~pprint.pp` function and its "
"parameters, let's fetch information about a project from `PyPI "
"<https://pypi.org>`_::"
msgstr ""
"为了演示To demonstrate several uses of the :func:`~pprint.pp` 函数及其形参的几种用法，让我们从 "
"`PyPI <https://pypi.org>`_ 获取关于某个项目的信息::"

#: ../../library/pprint.rst:267
msgid ""
">>> import json\n"
">>> import pprint\n"
">>> from urllib.request import urlopen\n"
">>> with urlopen('https://pypi.org/pypi/sampleproject/1.2.0/json') as resp:\n"
"...     project_info = json.load(resp)['info']"
msgstr ""
">>> import json\n"
">>> import pprint\n"
">>> from urllib.request import urlopen\n"
">>> with urlopen('https://pypi.org/pypi/sampleproject/1.2.0/json') as resp:\n"
"...     project_info = json.load(resp)['info']"

#: ../../library/pprint.rst:273
msgid "In its basic form, :func:`~pprint.pp` shows the whole object::"
msgstr "在其基本形式中，:func:`~pprint.pp` 会显示整个对象::"

#: ../../library/pprint.rst:275
msgid ""
">>> pprint.pp(project_info)\n"
"{'author': 'The Python Packaging Authority',\n"
" 'author_email': 'pypa-dev@googlegroups.com',\n"
" 'bugtrack_url': None,\n"
" 'classifiers': ['Development Status :: 3 - Alpha',\n"
"                 'Intended Audience :: Developers',\n"
"                 'License :: OSI Approved :: MIT License',\n"
"                 'Programming Language :: Python :: 2',\n"
"                 'Programming Language :: Python :: 2.6',\n"
"                 'Programming Language :: Python :: 2.7',\n"
"                 'Programming Language :: Python :: 3',\n"
"                 'Programming Language :: Python :: 3.2',\n"
"                 'Programming Language :: Python :: 3.3',\n"
"                 'Programming Language :: Python :: 3.4',\n"
"                 'Topic :: Software Development :: Build Tools'],\n"
" 'description': 'A sample Python project\\n'\n"
"                '=======================\\n'\n"
"                '\\n'\n"
"                'This is the description file for the project.\\n'\n"
"                '\\n'\n"
"                'The file should use UTF-8 encoding and be written using '\n"
"                'ReStructured Text. It\\n'\n"
"                'will be used to generate the project webpage on PyPI, and '\n"
"                'should be written for\\n'\n"
"                'that purpose.\\n'\n"
"                '\\n'\n"
"                'Typical contents for this file would include an overview of '\n"
"                'the project, basic\\n'\n"
"                'usage examples, etc. Generally, including the project '\n"
"                'changelog in here is not\\n'\n"
"                'a good idea, although a simple \"What\\'s New\" section for the '\n"
"                'most recent version\\n'\n"
"                'may be appropriate.',\n"
" 'description_content_type': None,\n"
" 'docs_url': None,\n"
" 'download_url': 'UNKNOWN',\n"
" 'downloads': {'last_day': -1, 'last_month': -1, 'last_week': -1},\n"
" 'home_page': 'https://github.com/pypa/sampleproject',\n"
" 'keywords': 'sample setuptools development',\n"
" 'license': 'MIT',\n"
" 'maintainer': None,\n"
" 'maintainer_email': None,\n"
" 'name': 'sampleproject',\n"
" 'package_url': 'https://pypi.org/project/sampleproject/',\n"
" 'platform': 'UNKNOWN',\n"
" 'project_url': 'https://pypi.org/project/sampleproject/',\n"
" 'project_urls': {'Download': 'UNKNOWN',\n"
"                  'Homepage': 'https://github.com/pypa/sampleproject'},\n"
" 'release_url': 'https://pypi.org/project/sampleproject/1.2.0/',\n"
" 'requires_dist': None,\n"
" 'requires_python': None,\n"
" 'summary': 'A sample Python project',\n"
" 'version': '1.2.0'}"
msgstr ""
">>> pprint.pp(project_info)\n"
"{'author': 'The Python Packaging Authority',\n"
" 'author_email': 'pypa-dev@googlegroups.com',\n"
" 'bugtrack_url': None,\n"
" 'classifiers': ['Development Status :: 3 - Alpha',\n"
"                 'Intended Audience :: Developers',\n"
"                 'License :: OSI Approved :: MIT License',\n"
"                 'Programming Language :: Python :: 2',\n"
"                 'Programming Language :: Python :: 2.6',\n"
"                 'Programming Language :: Python :: 2.7',\n"
"                 'Programming Language :: Python :: 3',\n"
"                 'Programming Language :: Python :: 3.2',\n"
"                 'Programming Language :: Python :: 3.3',\n"
"                 'Programming Language :: Python :: 3.4',\n"
"                 'Topic :: Software Development :: Build Tools'],\n"
" 'description': 'A sample Python project\\n'\n"
"                '=======================\\n'\n"
"                '\\n'\n"
"                'This is the description file for the project.\\n'\n"
"                '\\n'\n"
"                'The file should use UTF-8 encoding and be written using '\n"
"                'ReStructured Text. It\\n'\n"
"                'will be used to generate the project webpage on PyPI, and '\n"
"                'should be written for\\n'\n"
"                'that purpose.\\n'\n"
"                '\\n'\n"
"                'Typical contents for this file would include an overview of '\n"
"                'the project, basic\\n'\n"
"                'usage examples, etc. Generally, including the project '\n"
"                'changelog in here is not\\n'\n"
"                'a good idea, although a simple \"What\\'s New\" section for the '\n"
"                'most recent version\\n'\n"
"                'may be appropriate.',\n"
" 'description_content_type': None,\n"
" 'docs_url': None,\n"
" 'download_url': 'UNKNOWN',\n"
" 'downloads': {'last_day': -1, 'last_month': -1, 'last_week': -1},\n"
" 'home_page': 'https://github.com/pypa/sampleproject',\n"
" 'keywords': 'sample setuptools development',\n"
" 'license': 'MIT',\n"
" 'maintainer': None,\n"
" 'maintainer_email': None,\n"
" 'name': 'sampleproject',\n"
" 'package_url': 'https://pypi.org/project/sampleproject/',\n"
" 'platform': 'UNKNOWN',\n"
" 'project_url': 'https://pypi.org/project/sampleproject/',\n"
" 'project_urls': {'Download': 'UNKNOWN',\n"
"                  'Homepage': 'https://github.com/pypa/sampleproject'},\n"
" 'release_url': 'https://pypi.org/project/sampleproject/1.2.0/',\n"
" 'requires_dist': None,\n"
" 'requires_python': None,\n"
" 'summary': 'A sample Python project',\n"
" 'version': '1.2.0'}"

#: ../../library/pprint.rst:329
msgid ""
"The result can be limited to a certain *depth* (ellipsis is used for deeper "
"contents)::"
msgstr "结果可以被限制到特定的 *depth* (更深层的内容将使用省略号)::"

#: ../../library/pprint.rst:332
msgid ""
">>> pprint.pp(project_info, depth=1)\n"
"{'author': 'The Python Packaging Authority',\n"
" 'author_email': 'pypa-dev@googlegroups.com',\n"
" 'bugtrack_url': None,\n"
" 'classifiers': [...],\n"
" 'description': 'A sample Python project\\n'\n"
"                '=======================\\n'\n"
"                '\\n'\n"
"                'This is the description file for the project.\\n'\n"
"                '\\n'\n"
"                'The file should use UTF-8 encoding and be written using '\n"
"                'ReStructured Text. It\\n'\n"
"                'will be used to generate the project webpage on PyPI, and '\n"
"                'should be written for\\n'\n"
"                'that purpose.\\n'\n"
"                '\\n'\n"
"                'Typical contents for this file would include an overview of '\n"
"                'the project, basic\\n'\n"
"                'usage examples, etc. Generally, including the project '\n"
"                'changelog in here is not\\n'\n"
"                'a good idea, although a simple \"What\\'s New\" section for the '\n"
"                'most recent version\\n'\n"
"                'may be appropriate.',\n"
" 'description_content_type': None,\n"
" 'docs_url': None,\n"
" 'download_url': 'UNKNOWN',\n"
" 'downloads': {...},\n"
" 'home_page': 'https://github.com/pypa/sampleproject',\n"
" 'keywords': 'sample setuptools development',\n"
" 'license': 'MIT',\n"
" 'maintainer': None,\n"
" 'maintainer_email': None,\n"
" 'name': 'sampleproject',\n"
" 'package_url': 'https://pypi.org/project/sampleproject/',\n"
" 'platform': 'UNKNOWN',\n"
" 'project_url': 'https://pypi.org/project/sampleproject/',\n"
" 'project_urls': {...},\n"
" 'release_url': 'https://pypi.org/project/sampleproject/1.2.0/',\n"
" 'requires_dist': None,\n"
" 'requires_python': None,\n"
" 'summary': 'A sample Python project',\n"
" 'version': '1.2.0'}"
msgstr ""
">>> pprint.pp(project_info, depth=1)\n"
"{'author': 'The Python Packaging Authority',\n"
" 'author_email': 'pypa-dev@googlegroups.com',\n"
" 'bugtrack_url': None,\n"
" 'classifiers': [...],\n"
" 'description': 'A sample Python project\\n'\n"
"                '=======================\\n'\n"
"                '\\n'\n"
"                'This is the description file for the project.\\n'\n"
"                '\\n'\n"
"                'The file should use UTF-8 encoding and be written using '\n"
"                'ReStructured Text. It\\n'\n"
"                'will be used to generate the project webpage on PyPI, and '\n"
"                'should be written for\\n'\n"
"                'that purpose.\\n'\n"
"                '\\n'\n"
"                'Typical contents for this file would include an overview of '\n"
"                'the project, basic\\n'\n"
"                'usage examples, etc. Generally, including the project '\n"
"                'changelog in here is not\\n'\n"
"                'a good idea, although a simple \"What\\'s New\" section for the '\n"
"                'most recent version\\n'\n"
"                'may be appropriate.',\n"
" 'description_content_type': None,\n"
" 'docs_url': None,\n"
" 'download_url': 'UNKNOWN',\n"
" 'downloads': {...},\n"
" 'home_page': 'https://github.com/pypa/sampleproject',\n"
" 'keywords': 'sample setuptools development',\n"
" 'license': 'MIT',\n"
" 'maintainer': None,\n"
" 'maintainer_email': None,\n"
" 'name': 'sampleproject',\n"
" 'package_url': 'https://pypi.org/project/sampleproject/',\n"
" 'platform': 'UNKNOWN',\n"
" 'project_url': 'https://pypi.org/project/sampleproject/',\n"
" 'project_urls': {...},\n"
" 'release_url': 'https://pypi.org/project/sampleproject/1.2.0/',\n"
" 'requires_dist': None,\n"
" 'requires_python': None,\n"
" 'summary': 'A sample Python project',\n"
" 'version': '1.2.0'}"

#: ../../library/pprint.rst:375
msgid ""
"Additionally, maximum character *width* can be suggested. If a long object "
"cannot be split, the specified width will be exceeded::"
msgstr "此外，还可以设置建议的最大字符 *width*。 如果一个对象无法被拆分，则将超出指定宽度::"

#: ../../library/pprint.rst:378
msgid ""
">>> pprint.pp(project_info, depth=1, width=60)\n"
"{'author': 'The Python Packaging Authority',\n"
" 'author_email': 'pypa-dev@googlegroups.com',\n"
" 'bugtrack_url': None,\n"
" 'classifiers': [...],\n"
" 'description': 'A sample Python project\\n'\n"
"                '=======================\\n'\n"
"                '\\n'\n"
"                'This is the description file for the '\n"
"                'project.\\n'\n"
"                '\\n'\n"
"                'The file should use UTF-8 encoding and be '\n"
"                'written using ReStructured Text. It\\n'\n"
"                'will be used to generate the project '\n"
"                'webpage on PyPI, and should be written '\n"
"                'for\\n'\n"
"                'that purpose.\\n'\n"
"                '\\n'\n"
"                'Typical contents for this file would '\n"
"                'include an overview of the project, '\n"
"                'basic\\n'\n"
"                'usage examples, etc. Generally, including '\n"
"                'the project changelog in here is not\\n'\n"
"                'a good idea, although a simple \"What\\'s '\n"
"                'New\" section for the most recent version\\n'\n"
"                'may be appropriate.',\n"
" 'description_content_type': None,\n"
" 'docs_url': None,\n"
" 'download_url': 'UNKNOWN',\n"
" 'downloads': {...},\n"
" 'home_page': 'https://github.com/pypa/sampleproject',\n"
" 'keywords': 'sample setuptools development',\n"
" 'license': 'MIT',\n"
" 'maintainer': None,\n"
" 'maintainer_email': None,\n"
" 'name': 'sampleproject',\n"
" 'package_url': 'https://pypi.org/project/sampleproject/',\n"
" 'platform': 'UNKNOWN',\n"
" 'project_url': 'https://pypi.org/project/sampleproject/',\n"
" 'project_urls': {...},\n"
" 'release_url': 'https://pypi.org/project/sampleproject/1.2.0/',\n"
" 'requires_dist': None,\n"
" 'requires_python': None,\n"
" 'summary': 'A sample Python project',\n"
" 'version': '1.2.0'}"
msgstr ""
">>> pprint.pp(project_info, depth=1, width=60)\n"
"{'author': 'The Python Packaging Authority',\n"
" 'author_email': 'pypa-dev@googlegroups.com',\n"
" 'bugtrack_url': None,\n"
" 'classifiers': [...],\n"
" 'description': 'A sample Python project\\n'\n"
"                '=======================\\n'\n"
"                '\\n'\n"
"                'This is the description file for the '\n"
"                'project.\\n'\n"
"                '\\n'\n"
"                'The file should use UTF-8 encoding and be '\n"
"                'written using ReStructured Text. It\\n'\n"
"                'will be used to generate the project '\n"
"                'webpage on PyPI, and should be written '\n"
"                'for\\n'\n"
"                'that purpose.\\n'\n"
"                '\\n'\n"
"                'Typical contents for this file would '\n"
"                'include an overview of the project, '\n"
"                'basic\\n'\n"
"                'usage examples, etc. Generally, including '\n"
"                'the project changelog in here is not\\n'\n"
"                'a good idea, although a simple \"What\\'s '\n"
"                'New\" section for the most recent version\\n'\n"
"                'may be appropriate.',\n"
" 'description_content_type': None,\n"
" 'docs_url': None,\n"
" 'download_url': 'UNKNOWN',\n"
" 'downloads': {...},\n"
" 'home_page': 'https://github.com/pypa/sampleproject',\n"
" 'keywords': 'sample setuptools development',\n"
" 'license': 'MIT',\n"
" 'maintainer': None,\n"
" 'maintainer_email': None,\n"
" 'name': 'sampleproject',\n"
" 'package_url': 'https://pypi.org/project/sampleproject/',\n"
" 'platform': 'UNKNOWN',\n"
" 'project_url': 'https://pypi.org/project/sampleproject/',\n"
" 'project_urls': {...},\n"
" 'release_url': 'https://pypi.org/project/sampleproject/1.2.0/',\n"
" 'requires_dist': None,\n"
" 'requires_python': None,\n"
" 'summary': 'A sample Python project',\n"
" 'version': '1.2.0'}"

#: ../../library/pprint.rst:121 ../../library/pprint.rst:224
msgid "built-in function"
msgstr "内置函数"

#: ../../library/pprint.rst:121 ../../library/pprint.rst:224
msgid "eval"
msgstr "eval"

#: ../../library/pprint.rst:155
msgid "..."
msgstr "..."

#: ../../library/pprint.rst:155
msgid "placeholder"
msgstr "placeholder"
