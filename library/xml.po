# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2025
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.12\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-07-25 16:03+0000\n"
"PO-Revision-Date: 2025-07-18 19:58+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2025\n"
"Language-Team: Chinese (China) (https://app.transifex.com/python-doc/teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/xml.rst:4
msgid "XML Processing Modules"
msgstr "XML处理模块"

#: ../../library/xml.rst:12
msgid "**Source code:** :source:`Lib/xml/`"
msgstr "**源码：** :source:`Lib/xml/`"

#: ../../library/xml.rst:16
msgid ""
"Python's interfaces for processing XML are grouped in the ``xml`` package."
msgstr "用于处理XML的Python接口分组在 ``xml`` 包中。"

#: ../../library/xml.rst:20
msgid ""
"The XML modules are not secure against erroneous or maliciously constructed "
"data.  If you need to parse untrusted or unauthenticated data see the "
":ref:`xml-vulnerabilities` and :ref:`defusedxml-package` sections."
msgstr ""
"XML 模块对于错误或恶意构造的数据是不安全的。 如果你需要解析不受信任或未经身份验证的数据，请参阅 :ref:`xml-"
"vulnerabilities` 和 :ref:`defusedxml-package` 部分。"

#: ../../library/xml.rst:25
msgid ""
"It is important to note that modules in the :mod:`xml` package require that "
"there be at least one SAX-compliant XML parser available. The Expat parser "
"is included with Python, so the :mod:`xml.parsers.expat` module will always "
"be available."
msgstr ""
"值得注意的是 :mod:`xml` 包中的模块要求至少有一个 SAX 兼容的 XML 解析器可用。在 Python 中包含 Expat 解析器，因此 "
":mod:`xml.parsers.expat` 模块将始终可用。"

#: ../../library/xml.rst:30
msgid ""
"The documentation for the :mod:`xml.dom` and :mod:`xml.sax` packages are the"
" definition of the Python bindings for the DOM and SAX interfaces."
msgstr ":mod:`xml.dom` 和 :mod:`xml.sax` 包的文档是 DOM 和 SAX 接口的 Python 绑定的定义。"

#: ../../library/xml.rst:33
msgid "The XML handling submodules are:"
msgstr "XML 处理子模块包括:"

#: ../../library/xml.rst:35
msgid ""
":mod:`xml.etree.ElementTree`: the ElementTree API, a simple and lightweight "
"XML processor"
msgstr ":mod:`xml.etree.ElementTree`： ElementTree API，一个简单而轻量级的XML处理器"

#: ../../library/xml.rst:40
msgid ":mod:`xml.dom`: the DOM API definition"
msgstr ":mod:`xml.dom`：DOM API 定义"

#: ../../library/xml.rst:41
msgid ":mod:`xml.dom.minidom`: a minimal DOM implementation"
msgstr ":mod:`xml.dom.minidom`：最小的 DOM 实现"

#: ../../library/xml.rst:42
msgid ":mod:`xml.dom.pulldom`: support for building partial DOM trees"
msgstr ":mod:`xml.dom.pulldom`：支持构建部分 DOM 树"

#: ../../library/xml.rst:46
msgid ":mod:`xml.sax`: SAX2 base classes and convenience functions"
msgstr ":mod:`xml.sax`：SAX2 基类和便利函数"

#: ../../library/xml.rst:47
msgid ":mod:`xml.parsers.expat`: the Expat parser binding"
msgstr ":mod:`xml.parsers.expat`：Expat解析器绑定"

#: ../../library/xml.rst:53
msgid "XML vulnerabilities"
msgstr "XML 漏洞"

#: ../../library/xml.rst:55
msgid ""
"The XML processing modules are not secure against maliciously constructed "
"data. An attacker can abuse XML features to carry out denial of service "
"attacks, access local files, generate network connections to other machines,"
" or circumvent firewalls."
msgstr ""
"XML 处理模块对于恶意构造的数据是不安全的。 攻击者可能滥用 XML 功能来执行拒绝服务攻击、访问本地文件、生成与其它计算机的网络连接或绕过防火墙。"

#: ../../library/xml.rst:60
msgid ""
"The following table gives an overview of the known attacks and whether the "
"various modules are vulnerable to them."
msgstr "下表概述了已知的攻击以及各种模块是否容易受到攻击。"

#: ../../library/xml.rst:64
msgid "kind"
msgstr "种类"

#: ../../library/xml.rst:64
msgid "sax"
msgstr "sax"

#: ../../library/xml.rst:64
msgid "etree"
msgstr "etree"

#: ../../library/xml.rst:64
msgid "minidom"
msgstr "minidom"

#: ../../library/xml.rst:64
msgid "pulldom"
msgstr "pulldom"

#: ../../library/xml.rst:64
msgid "xmlrpc"
msgstr "xmlrpc"

#: ../../library/xml.rst:66
msgid "billion laughs"
msgstr "billion laughs"

#: ../../library/xml.rst:66 ../../library/xml.rst:67
msgid "**Vulnerable** (1)"
msgstr "**易受攻击** (1)"

#: ../../library/xml.rst:67
msgid "quadratic blowup"
msgstr "quadratic blowup"

#: ../../library/xml.rst:68 ../../library/xml.rst:106
msgid "external entity expansion"
msgstr "external entity expansion"

#: ../../library/xml.rst:68 ../../library/xml.rst:69
msgid "Safe (5)"
msgstr "安全 (5)"

#: ../../library/xml.rst:68
msgid "Safe (2)"
msgstr "安全 (2)"

#: ../../library/xml.rst:68
msgid "Safe (3)"
msgstr "安全 (3)"

#: ../../library/xml.rst:68
msgid "Safe (4)"
msgstr "安全 (4)"

#: ../../library/xml.rst:69 ../../library/xml.rst:111
msgid "`DTD`_ retrieval"
msgstr "`DTD`_ retrieval"

#: ../../library/xml.rst:69 ../../library/xml.rst:70
msgid "Safe"
msgstr "安全"

#: ../../library/xml.rst:70 ../../library/xml.rst:116
msgid "decompression bomb"
msgstr "decompression bomb"

#: ../../library/xml.rst:70
msgid "**Vulnerable**"
msgstr "**易受攻击**"

#: ../../library/xml.rst:71 ../../library/xml.rst:123
msgid "large tokens"
msgstr "解析大量词元"

#: ../../library/xml.rst:71
msgid "**Vulnerable** (6)"
msgstr "**易受攻击** (6)"

#: ../../library/xml.rst:74
msgid ""
"Expat 2.4.1 and newer is not vulnerable to the \"billion laughs\" and "
"\"quadratic blowup\" vulnerabilities. Items still listed as vulnerable due "
"to potential reliance on system-provided libraries. Check "
":const:`!pyexpat.EXPAT_VERSION`."
msgstr ""
"Expat 2.4.1 及更新的版本不易受 \"billion laughs\" 和 \"quadratic blowup\" 漏洞的影响。 "
"因为可能要依赖系统提供的库而仍被列为易受攻击的项。 请检查 :const:`!pyexpat.EXPAT_VERSION`。"

#: ../../library/xml.rst:78
msgid ""
":mod:`xml.etree.ElementTree` doesn't expand external entities and raises a "
":exc:`~xml.etree.ElementTree.ParseError` when an entity occurs."
msgstr ""
":mod:`xml.etree.ElementTree` 不会扩展外部实体并将在遇到实体时引发 "
":exc:`~xml.etree.ElementTree.ParseError`。"

#: ../../library/xml.rst:80
msgid ""
":mod:`xml.dom.minidom` doesn't expand external entities and simply returns "
"the unexpanded entity verbatim."
msgstr ":mod:`xml.dom.minidom` 不会扩展外部实体，只是简单地返回未扩展的实体。"

#: ../../library/xml.rst:82
msgid ":mod:`xmlrpc.client` doesn't expand external entities and omits them."
msgstr ":mod:`xmlrpc.client` 不会扩展外部实体并将忽略它们。"

#: ../../library/xml.rst:83
msgid ""
"Since Python 3.7.1, external general entities are no longer processed by "
"default."
msgstr "从 Python 3.7.1 开始，默认情况下不再处理外部通用实体。"

#: ../../library/xml.rst:85
msgid ""
"Expat 2.6.0 and newer is not vulnerable to denial of service through "
"quadratic runtime caused by parsing large tokens. Items still listed as "
"vulnerable due to potential reliance on system-provided libraries. Check "
":const:`!pyexpat.EXPAT_VERSION`."
msgstr ""
"Expat 2.6.0 及更新的版本不易受到因解析大量词元而导致利用指数级运行时间的拒绝服务攻击。 "
"由于对系统所提供的库的潜在依赖仍会有一些项目被列为易受攻击。 请检查 :const:`!pyexpat.EXPAT_VERSION`。"

#: ../../library/xml.rst:92
msgid "billion laughs / exponential entity expansion"
msgstr "billion laughs / exponential entity expansion （狂笑/递归实体扩展）"

#: ../../library/xml.rst:93
msgid ""
"The `Billion Laughs`_ attack -- also known as exponential entity expansion "
"-- uses multiple levels of nested entities. Each entity refers to another "
"entity several times, and the final entity definition contains a small "
"string. The exponential expansion results in several gigabytes of text and "
"consumes lots of memory and CPU time."
msgstr ""
"`Billion Laughs`_ 攻击 -- 也称为递归实体扩展 -- 使用多级嵌套实体。 每个实体多次引用另一个实体，最终实体定义包含一个小字符串。"
" 指数级扩展导致几千 GB 的文本，并消耗大量内存和 CPU 时间。"

#: ../../library/xml.rst:99
msgid "quadratic blowup entity expansion"
msgstr "quadratic blowup entity expansion（二次爆炸实体扩展）"

#: ../../library/xml.rst:100
msgid ""
"A quadratic blowup attack is similar to a `Billion Laughs`_ attack; it "
"abuses entity expansion, too. Instead of nested entities it repeats one "
"large entity with a couple of thousand chars over and over again. The attack"
" isn't as efficient as the exponential case but it avoids triggering parser "
"countermeasures that forbid deeply nested entities."
msgstr ""
"二次爆炸攻击类似于 `Billion Laughs`_ 攻击；它也滥用了实体扩展。 它不是嵌套实体，而是一遍又一遍地重复一个具有几千个字符的大型实体。 "
"这种攻击不如递归情况有效，但它可避免触发禁止深度嵌套实体的解析器对策。"

#: ../../library/xml.rst:107
msgid ""
"Entity declarations can contain more than just text for replacement. They "
"can also point to external resources or local files. The XML parser accesses"
" the resource and embeds the content into the XML document."
msgstr "实体声明可以包含的不仅仅是替换文本。 它们还可以指向外部资源或本地文件。 XML 解析器访问资源并将内容嵌入到 XML 文档中。"

#: ../../library/xml.rst:112
msgid ""
"Some XML libraries like Python's :mod:`xml.dom.pulldom` retrieve document "
"type definitions from remote or local locations. The feature has similar "
"implications as the external entity expansion issue."
msgstr ""
"Python 的一些 XML 库 :mod:`xml.dom.pulldom` 从远程或本地位置检索文档类型定义。 "
"该功能与外部实体扩展问题具有相似的含义。"

#: ../../library/xml.rst:117
msgid ""
"Decompression bombs (aka `ZIP bomb`_) apply to all XML libraries that can "
"parse compressed XML streams such as gzipped HTTP streams or LZMA-compressed"
" files. For an attacker it can reduce the amount of transmitted data by "
"three magnitudes or more."
msgstr ""
"Decompression bombs（解压炸弹，又名 `ZIP bomb`_）适用于所有可以解析压缩 XML 流（例如 gzip 压缩的 HTTP "
"流或 LZMA 压缩的文件）的 XML 库。 对于攻击者来说，它可以将传输的数据量减少三个量级或更多。"

#: ../../library/xml.rst:124
msgid ""
"Expat needs to re-parse unfinished tokens; without the protection introduced"
" in Expat 2.6.0, this can lead to quadratic runtime that can be used to "
"cause denial of service in the application parsing XML. The issue is known "
"as :cve:`2023-52425`."
msgstr ""
"Expat 需要重新解析未完成的词元；在没有 Expat 2.6.0 所引入的防护措施的情况下，这会导致可被用来在解析 XML "
"的应用程序中制造拒绝服务攻击的指数级运行时间。 此问题被称为 :cve:`2023-52425`。"

#: ../../library/xml.rst:129
msgid ""
"The documentation for :pypi:`defusedxml` on PyPI has further information "
"about all known attack vectors with examples and references."
msgstr "PyPI 上 :pypi:`defusedxml` 的文档包含关于所有已知攻击向量的更多信息并附带示例和参考资料。"

#: ../../library/xml.rst:135
msgid "The :mod:`!defusedxml` Package"
msgstr ":mod:`!defusedxml` 包"

#: ../../library/xml.rst:137
msgid ""
":pypi:`defusedxml` is a pure Python package with modified subclasses of all "
"stdlib XML parsers that prevent any potentially malicious operation. Use of "
"this package is recommended for any server code that parses untrusted XML "
"data. The package also ships with example exploits and extended "
"documentation on more XML exploits such as XPath injection."
msgstr ""
":pypi:`defusedxml` 是一个纯 Python 软件包，它修改了所有 stdlib XML 解析器的子类，可以防止任何潜在的恶意操作。 "
"对于解析不受信任的 XML 数据的任何服务器代码推荐使用此软件包。 该软件包还附带了关于其他 XML 漏洞（如 XPath 注入）的利用示例和扩展文档。"
