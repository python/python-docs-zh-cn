# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2025
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.13\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-07-25 15:00+0000\n"
"PO-Revision-Date: 2025-07-18 19:21+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2025\n"
"Language-Team: Chinese (China) (https://app.transifex.com/python-doc/teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/email.charset.rst:2
msgid ":mod:`!email.charset`: Representing character sets"
msgstr ":mod:`!email.charset`: 表示字符集"

#: ../../library/email.charset.rst:7
msgid "**Source code:** :source:`Lib/email/charset.py`"
msgstr "**源代码:** :source:`Lib/email/charset.py`"

#: ../../library/email.charset.rst:11
msgid ""
"This module is part of the legacy (``Compat32``) email API.  In the new API "
"only the aliases table is used."
msgstr "此模块是旧版 (``Compat32``) email API 的组成部分。 在新版 API 中只会使用其中的别名表。"

#: ../../library/email.charset.rst:14
msgid ""
"The remaining text in this section is the original documentation of the "
"module."
msgstr "本节中的其余文本是此模块的原始文档。"

#: ../../library/email.charset.rst:16
msgid ""
"This module provides a class :class:`Charset` for representing character "
"sets and character set conversions in email messages, as well as a character"
" set registry and several convenience methods for manipulating this "
"registry. Instances of :class:`Charset` are used in several other modules "
"within the :mod:`email` package."
msgstr ""
"此模块提供了一个 :class:`Charset` "
"类用来表示电子邮件消息中的字符集和字符集转换操作，以及一个字符集注册表和几个用于操作此注册表的便捷方法。 :class:`Charset` 的实例在 "
":mod:`email` 包的其他几个模块中也有使用。"

#: ../../library/email.charset.rst:22
msgid "Import this class from the :mod:`email.charset` module."
msgstr "请从 :mod:`email.charset` 模块导入这个类。"

#: ../../library/email.charset.rst:27
msgid "Map character sets to their email properties."
msgstr "将字符集映射到其 email 特征属性。"

#: ../../library/email.charset.rst:29
msgid ""
"This class provides information about the requirements imposed on email for "
"a specific character set.  It also provides convenience routines for "
"converting between character sets, given the availability of the applicable "
"codecs.  Given a character set, it will do its best to provide information "
"on how to use that character set in an email message in an RFC-compliant "
"way."
msgstr ""
"这个类提供了特定字符集对于电子邮件的要求的相关信息。 考虑到适用编解码器的可用性，它还为字符集之间的转换提供了一些便捷例程。 "
"在给定字符集的情况下，它将尽可能地以符合 RFC 的方式在电子邮件消息中提供有关如何使用该字符集的信息。"

#: ../../library/email.charset.rst:35
msgid ""
"Certain character sets must be encoded with quoted-printable or base64 when "
"used in email headers or bodies.  Certain character sets must be converted "
"outright, and are not allowed in email."
msgstr ""
"特定字符集当在电子邮件标头或消息体中使用时必须以 quoted-printable 或 base64 来编码。 "
"某些字符集则必须被立即转换，不允许在电子邮件中使用。"

#: ../../library/email.charset.rst:39
msgid ""
"Optional *input_charset* is as described below; it is always coerced to "
"lower case.  After being alias normalized it is also used as a lookup into "
"the registry of character sets to find out the header encoding, body "
"encoding, and output conversion codec to be used for the character set.  For"
" example, if *input_charset* is ``iso-8859-1``, then headers and bodies will"
" be encoded using quoted-printable and no output conversion codec is "
"necessary.  If *input_charset* is ``euc-jp``, then headers will be encoded "
"with base64, bodies will not be encoded, but output text will be converted "
"from the ``euc-jp`` character set to the ``iso-2022-jp`` character set."
msgstr ""
"可选的 *input_charset* 说明如下；它总是会被强制转为小写。 "
"在进行别名正规化后它还会被用来查询字符集注册表以找出用于该字符集的标头编码格式、消息体编码格式和输出转换编解码器。 举例来说，如果 "
"*input_charset* 为 ``iso-8859-1``，则标头和消息体将会使用 quoted-printable "
"来编码并且不需要输出转换编解码器。 如果 *input_charset* 为 ``euc-jp``，则标头将使用 base64 "
"来编码，消息体将不会被编码，但输出文本将从 ``euc-jp`` 字符集转换为 ``iso-2022-jp`` 字符集。"

#: ../../library/email.charset.rst:49
msgid ":class:`Charset` instances have the following data attributes:"
msgstr ":class:`Charset` 实例具有下列数据属性:"

#: ../../library/email.charset.rst:53
msgid ""
"The initial character set specified.  Common aliases are converted to their "
"*official* email names (e.g. ``latin_1`` is converted to ``iso-8859-1``).  "
"Defaults to 7-bit ``us-ascii``."
msgstr ""
"指定的初始字符集。 通用别名会被转换为它们的 *官方* 电子邮件名称 (例如 ``latin_1`` 会被转换为 ``iso-8859-1``)。 "
"默认值为 7 位 ``us-ascii``。"

#: ../../library/email.charset.rst:60
msgid ""
"If the character set must be encoded before it can be used in an email "
"header, this attribute will be set to ``charset.QP`` (for quoted-printable),"
" ``charset.BASE64`` (for base64 encoding), or ``charset.SHORTEST`` for the "
"shortest of QP or BASE64 encoding. Otherwise, it will be ``None``."
msgstr ""
"如果字符集在用于电子邮件标头之前必须被编码，此属性将被设为 ``charset.QP`` (表示 quoted-printable 编码格式), "
"``charset.BASE64`` (表示 base64 编码格式) 或 ``charset.SHORTEST`` 表示 QP 或 BASE64 "
"编码格式中最简短的一个。 在其他情况下，该属性将为 ``None``。"

#: ../../library/email.charset.rst:69
msgid ""
"Same as *header_encoding*, but describes the encoding for the mail message's"
" body, which indeed may be different than the header encoding. "
"``charset.SHORTEST`` is not allowed for *body_encoding*."
msgstr ""
"与 *header_encoding* 一样，但是用来描述电子邮件消息体的编码格式，它实际上可以与标头编码格式不同。 "
"``charset.SHORTEST`` 不允许被用作 *body_encoding*。"

#: ../../library/email.charset.rst:76
msgid ""
"Some character sets must be converted before they can be used in email "
"headers or bodies.  If the *input_charset* is one of them, this attribute "
"will contain the name of the character set output will be converted to. "
"Otherwise, it will be ``None``."
msgstr ""
"某些字符集在用于电子邮件标头或消息体之前必须被转换。 如果 *input_charset* 是这些字符集之一，该属性将包含输出将要转换的字符集名称。 "
"在其他情况下，该属性将为 ``None``。"

#: ../../library/email.charset.rst:84
msgid ""
"The name of the Python codec used to convert the *input_charset* to Unicode."
"  If no conversion codec is necessary, this attribute will be ``None``."
msgstr ""
"用于将 *input_charset* 转换为 Unicode 的 Python 编解码器名称。 如果不需要任何转换编解码器，该属性将为 "
"``None``。"

#: ../../library/email.charset.rst:91
msgid ""
"The name of the Python codec used to convert Unicode to the "
"*output_charset*.  If no conversion codec is necessary, this attribute will "
"have the same value as the *input_codec*."
msgstr ""
"用于将 Unicode 转换为 *output_charset* 的 Python 编解码器名称。 如果不需要任何转换编解码器，该属性将具有与 "
"*input_codec* 相同的值。"

#: ../../library/email.charset.rst:96
msgid ":class:`Charset` instances also have the following methods:"
msgstr ":class:`Charset` 实例还有下列方法:"

#: ../../library/email.charset.rst:100
msgid "Return the content transfer encoding used for body encoding."
msgstr "返回用于消息体编码的内容转换编码格式。"

#: ../../library/email.charset.rst:102
msgid ""
"This is either the string ``quoted-printable`` or ``base64`` depending on "
"the encoding used, or it is a function, in which case you should call the "
"function with a single argument, the Message object being encoded.  The "
"function should then set the :mailheader:`Content-Transfer-Encoding` header "
"itself to whatever is appropriate."
msgstr ""
"根据所使用的编码格式返回 ``quoted-printable`` 或 "
"``base64``，或是返回一个函数，在这种情况下你应当调用该函数并附带一个参数，即被编码的消息对象。 该函数应当自行将 "
":mailheader:`Content-Transfer-Encoding` 标头设为适当的值。"

#: ../../library/email.charset.rst:108
msgid ""
"Returns the string ``quoted-printable`` if *body_encoding* is ``QP``, "
"returns the string ``base64`` if *body_encoding* is ``BASE64``, and returns "
"the string ``7bit`` otherwise."
msgstr ""
"如果 *body_encoding* 为 ``QP`` 则返回字符串 ``quoted-printable``，如果 *body_encoding* 为"
" ``BASE64`` 则返回字符串 ``base64``，并在其他情况下返回字符串 ``7bit``。"

#: ../../library/email.charset.rst:115
msgid "Return the output character set."
msgstr "返回输出字符集。"

#: ../../library/email.charset.rst:117
msgid ""
"This is the *output_charset* attribute if that is not ``None``, otherwise it"
" is *input_charset*."
msgstr "如果 *output_charset* 属性不为 ``None`` 则返回该属性，否则返回 *input_charset*。"

#: ../../library/email.charset.rst:123
msgid "Header-encode the string *string*."
msgstr "对字符串 *string* 执行标头编码。"

#: ../../library/email.charset.rst:125
msgid ""
"The type of encoding (base64 or quoted-printable) will be based on the "
"*header_encoding* attribute."
msgstr "编码格式的类型 (base64 或 quoted-printable) 将取决于 *header_encoding* 属性。"

#: ../../library/email.charset.rst:131
msgid "Header-encode a *string* by converting it first to bytes."
msgstr "通过先将 *string* 转换为字节串来对其执行标头编码。"

#: ../../library/email.charset.rst:133
msgid ""
"This is similar to :meth:`header_encode` except that the string is fit into "
"maximum line lengths as given by the argument *maxlengths*, which must be an"
" iterator: each element returned from this iterator will provide the next "
"maximum line length."
msgstr ""
"这类似于 :meth:`header_encode`，区别是字符串会被调整至参数 *maxlengths* "
"所给出的最大行长度，它应当是一个迭代器：该迭代器返回的每个元素将提供下一个最大行长度。"

#: ../../library/email.charset.rst:141
msgid "Body-encode the string *string*."
msgstr "对字符串 *string* 执行消息体编码。"

#: ../../library/email.charset.rst:143
msgid ""
"The type of encoding (base64 or quoted-printable) will be based on the "
"*body_encoding* attribute."
msgstr "编码格式的类型 (base64 或 quoted-printable) 将取决于 *body_encoding* 属性。"

#: ../../library/email.charset.rst:146
msgid ""
"The :class:`Charset` class also provides a number of methods to support "
"standard operations and built-in functions."
msgstr ":class:`Charset` 类还提供了一些方法以支持标准运算和内置函数。"

#: ../../library/email.charset.rst:152
msgid ""
"Returns *input_charset* as a string coerced to lower case. :meth:`!__repr__`"
" is an alias for :meth:`!__str__`."
msgstr ""
"将 *input_charset* 以转为小写的字符串形式返回。 :meth:`!__repr__` 是 :meth:`!__str__` 的别名。"

#: ../../library/email.charset.rst:158
msgid ""
"This method allows you to compare two :class:`Charset` instances for "
"equality."
msgstr "这个方法允许你对两个 :class:`Charset` 实例进行相等比较。"

#: ../../library/email.charset.rst:164
msgid ""
"This method allows you to compare two :class:`Charset` instances for "
"inequality."
msgstr "这个方法允许你对两个 :class:`Charset` 实例进行相等比较。"

#: ../../library/email.charset.rst:167
msgid ""
"The :mod:`email.charset` module also provides the following functions for "
"adding new entries to the global character set, alias, and codec registries:"
msgstr ":mod:`email.charset` 模块还提供了下列函数用于向全局字符集、别名以及编解码器注册表添加新条目:"

#: ../../library/email.charset.rst:173
msgid "Add character properties to the global registry."
msgstr "向全局注册表添加字符特征属性。"

#: ../../library/email.charset.rst:175
msgid ""
"*charset* is the input character set, and must be the canonical name of a "
"character set."
msgstr "*charset* 是输入字符集，它必须为某个字符集的正规名称。"

#: ../../library/email.charset.rst:178
msgid ""
"Optional *header_enc* and *body_enc* is either ``charset.QP`` for quoted-"
"printable, ``charset.BASE64`` for base64 encoding, ``charset.SHORTEST`` for "
"the shortest of quoted-printable or base64 encoding, or ``None`` for no "
"encoding.  ``SHORTEST`` is only valid for *header_enc*. The default is "
"``None`` for no encoding."
msgstr ""
"可选的 *header_enc* 和 *body_enc* 可以是 ``charset.QP`` 表示 quoted-printable 编码格式, "
"``charset.BASE64`` 表示 base64 编码格式, ``charset.SHORTEST`` 表示 quoted-printable "
"或 base64 编码格式中较短的一个，或者为 ``None`` 表示没有编码格式。 ``SHORTEST`` 仅对 *header_enc* 有效。 "
"默认值为 ``None`` 表示没有编码格式。"

#: ../../library/email.charset.rst:184
msgid ""
"Optional *output_charset* is the character set that the output should be in."
" Conversions will proceed from input charset, to Unicode, to the output "
"charset when the method :meth:`Charset.convert` is called.  The default is "
"to output in the same character set as the input."
msgstr ""
"可选的 *output_charset* 是输出所应当采用的字符集。 当 :meth:`Charset.convert` "
"方法被调用时将会执行从输入字符集到输出字符集的转换。 默认情况下输出字符集将与输入字符集相同。"

#: ../../library/email.charset.rst:189
msgid ""
"Both *input_charset* and *output_charset* must have Unicode codec entries in"
" the module's character set-to-codec mapping; use :func:`add_codec` to add "
"codecs the module does not know about.  See the :mod:`codecs` module's "
"documentation for more information."
msgstr ""
"*input_charset* 和 *output_charset* 都必须在模块的字符集-编解码器映射中具有 Unicode 编解码器条目；使用 "
":func:`add_codec` 可添加本模块还不知道的编解码器。 请参阅 :mod:`codecs` 模块的文档来了解更多信息。"

#: ../../library/email.charset.rst:194
msgid ""
"The global character set registry is kept in the module global dictionary "
"``CHARSETS``."
msgstr "全局字符集注册表保存在模块全局字典 ``CHARSETS`` 中。"

#: ../../library/email.charset.rst:200
msgid ""
"Add a character set alias.  *alias* is the alias name, e.g. ``latin-1``. "
"*canonical* is the character set's canonical name, e.g. ``iso-8859-1``."
msgstr ""
"添加一个字符集别名。 *alias* 为特定的别名，例如 ``latin-1``。 *canonical* 是字符集的正规名称，例如 "
"``iso-8859-1``。"

#: ../../library/email.charset.rst:203
msgid ""
"The global charset alias registry is kept in the module global dictionary "
"``ALIASES``."
msgstr "全局字符集注册表保存在模块全局字典 ``ALIASES`` 中。"

#: ../../library/email.charset.rst:209
msgid ""
"Add a codec that map characters in the given character set to and from "
"Unicode."
msgstr "添加在给定字符集的字符和 Unicode 之间建立映射的编解码器。"

#: ../../library/email.charset.rst:211
msgid ""
"*charset* is the canonical name of a character set. *codecname* is the name "
"of a Python codec, as appropriate for the second argument to the "
":class:`str`'s :meth:`~str.encode` method."
msgstr ""
"*charset* 是某个字符集的正规名称。 *codecname* 是某个 Python 编解码器的名称，可以被用来作为 :class:`str` 的"
" :meth:`~str.encode` 方法的第二个参数。"
