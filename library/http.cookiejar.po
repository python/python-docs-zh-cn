# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2025
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.9\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-07-25 19:10+0000\n"
"PO-Revision-Date: 2025-07-18 19:17+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2025\n"
"Language-Team: Chinese (China) (https://app.transifex.com/python-doc/teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/http.cookiejar.rst:2
msgid ":mod:`http.cookiejar` --- Cookie handling for HTTP clients"
msgstr ""

#: ../../library/http.cookiejar.rst:10
msgid "**Source code:** :source:`Lib/http/cookiejar.py`"
msgstr ""

#: ../../library/http.cookiejar.rst:14
msgid ""
"The :mod:`http.cookiejar` module defines classes for automatic handling of "
"HTTP cookies.  It is useful for accessing web sites that require small "
"pieces of data -- :dfn:`cookies` -- to be set on the client machine by an "
"HTTP response from a web server, and then returned to the server in later "
"HTTP requests."
msgstr ""

#: ../../library/http.cookiejar.rst:19
msgid ""
"Both the regular Netscape cookie protocol and the protocol defined by "
":rfc:`2965` are handled.  RFC 2965 handling is switched off by default. "
":rfc:`2109` cookies are parsed as Netscape cookies and subsequently treated "
"either as Netscape or RFC 2965 cookies according to the 'policy' in effect. "
"Note that the great majority of cookies on the Internet are Netscape "
"cookies. :mod:`http.cookiejar` attempts to follow the de-facto Netscape "
"cookie protocol (which differs substantially from that set out in the "
"original Netscape specification), including taking note of the ``max-age`` "
"and ``port`` cookie-attributes introduced with RFC 2965."
msgstr ""

#: ../../library/http.cookiejar.rst:31
msgid ""
"The various named parameters found in :mailheader:`Set-Cookie` and "
":mailheader:`Set-Cookie2` headers (eg. ``domain`` and ``expires``) are "
"conventionally referred to as :dfn:`attributes`.  To distinguish them from "
"Python attributes, the documentation for this module uses the term "
":dfn:`cookie-attribute` instead."
msgstr ""

#: ../../library/http.cookiejar.rst:38
msgid "The module defines the following exception:"
msgstr ""

#: ../../library/http.cookiejar.rst:43
msgid ""
"Instances of :class:`FileCookieJar` raise this exception on failure to load "
"cookies from a file.  :exc:`LoadError` is a subclass of :exc:`OSError`."
msgstr ""

#: ../../library/http.cookiejar.rst:46
msgid ""
"LoadError was made a subclass of :exc:`OSError` instead of :exc:`IOError`."
msgstr ""

#: ../../library/http.cookiejar.rst:51
msgid "The following classes are provided:"
msgstr ""

#: ../../library/http.cookiejar.rst:56
msgid ""
"*policy* is an object implementing the :class:`CookiePolicy` interface."
msgstr ""

#: ../../library/http.cookiejar.rst:58
msgid ""
"The :class:`CookieJar` class stores HTTP cookies.  It extracts cookies from "
"HTTP requests, and returns them in HTTP responses. :class:`CookieJar` "
"instances automatically expire contained cookies when necessary.  Subclasses"
" are also responsible for storing and retrieving cookies from a file or "
"database."
msgstr ""

#: ../../library/http.cookiejar.rst:66
msgid ""
"*policy* is an object implementing the :class:`CookiePolicy` interface.  For"
" the other arguments, see the documentation for the corresponding "
"attributes."
msgstr ""

#: ../../library/http.cookiejar.rst:69
msgid ""
"A :class:`CookieJar` which can load cookies from, and perhaps save cookies "
"to, a file on disk.  Cookies are **NOT** loaded from the named file until "
"either the :meth:`load` or :meth:`revert` method is called.  Subclasses of "
"this class are documented in section :ref:`file-cookie-jar-classes`."
msgstr ""

#: ../../library/http.cookiejar.rst:76 ../../library/http.cookiejar.rst:350
msgid "The filename parameter supports a :term:`path-like object`."
msgstr ""

#: ../../library/http.cookiejar.rst:81
msgid ""
"This class is responsible for deciding whether each cookie should be "
"accepted from / returned to the server."
msgstr ""

#: ../../library/http.cookiejar.rst:87
msgid ""
"Constructor arguments should be passed as keyword arguments only. "
"*blocked_domains* is a sequence of domain names that we never accept cookies"
" from, nor return cookies to. *allowed_domains* if not :const:`None`, this "
"is a sequence of the only domains for which we accept and return cookies. "
"*secure_protocols* is a sequence of protocols for which secure cookies can "
"be added to. By default *https* and *wss* (secure websocket) are considered "
"secure protocols. For all other arguments, see the documentation for "
":class:`CookiePolicy` and :class:`DefaultCookiePolicy` objects."
msgstr ""

#: ../../library/http.cookiejar.rst:96
msgid ""
":class:`DefaultCookiePolicy` implements the standard accept / reject rules "
"for Netscape and :rfc:`2965` cookies.  By default, :rfc:`2109` cookies (ie. "
"cookies received in a :mailheader:`Set-Cookie` header with a version cookie-"
"attribute of 1) are treated according to the RFC 2965 rules.  However, if "
"RFC 2965 handling is turned off or :attr:`rfc2109_as_netscape` is ``True``, "
"RFC 2109 cookies are 'downgraded' by the :class:`CookieJar` instance to "
"Netscape cookies, by setting the :attr:`version` attribute of the "
":class:`Cookie` instance to 0. :class:`DefaultCookiePolicy` also provides "
"some parameters to allow some fine-tuning of policy."
msgstr ""

#: ../../library/http.cookiejar.rst:109
msgid ""
"This class represents Netscape, :rfc:`2109` and :rfc:`2965` cookies.  It is "
"not expected that users of :mod:`http.cookiejar` construct their own "
":class:`Cookie` instances.  Instead, if necessary, call :meth:`make_cookies`"
" on a :class:`CookieJar` instance."
msgstr ""

#: ../../library/http.cookiejar.rst:118
msgid "Module :mod:`urllib.request`"
msgstr ""

#: ../../library/http.cookiejar.rst:118
msgid "URL opening with automatic cookie handling."
msgstr ""

#: ../../library/http.cookiejar.rst:123
msgid "Module :mod:`http.cookies`"
msgstr ""

#: ../../library/http.cookiejar.rst:121
msgid ""
"HTTP cookie classes, principally useful for server-side code.  The "
":mod:`http.cookiejar` and :mod:`http.cookies` modules do not depend on each "
"other."
msgstr ""

#: ../../library/http.cookiejar.rst:129
msgid "https://curl.se/rfc/cookie_spec.html"
msgstr ""

#: ../../library/http.cookiejar.rst:126
msgid ""
"The specification of the original Netscape cookie protocol.  Though this is "
"still the dominant protocol, the 'Netscape cookie protocol' implemented by "
"all the major browsers (and :mod:`http.cookiejar`) only bears a passing "
"resemblance to the one sketched out in ``cookie_spec.html``."
msgstr ""

#: ../../library/http.cookiejar.rst:132
msgid ":rfc:`2109` - HTTP State Management Mechanism"
msgstr ""

#: ../../library/http.cookiejar.rst:132
msgid ""
"Obsoleted by :rfc:`2965`. Uses :mailheader:`Set-Cookie` with version=1."
msgstr ""

#: ../../library/http.cookiejar.rst:136
msgid ":rfc:`2965` - HTTP State Management Mechanism"
msgstr ""

#: ../../library/http.cookiejar.rst:135
msgid ""
"The Netscape protocol with the bugs fixed.  Uses :mailheader:`Set-Cookie2` "
"in place of :mailheader:`Set-Cookie`.  Not widely used."
msgstr ""

#: ../../library/http.cookiejar.rst:139
msgid "http://kristol.org/cookie/errata.html"
msgstr ""

#: ../../library/http.cookiejar.rst:139
msgid "Unfinished errata to :rfc:`2965`."
msgstr ""

#: ../../library/http.cookiejar.rst:141
msgid ":rfc:`2964` - Use of HTTP State Management"
msgstr ""

#: ../../library/http.cookiejar.rst:146
msgid "CookieJar and FileCookieJar Objects"
msgstr ""

#: ../../library/http.cookiejar.rst:148
msgid ""
":class:`CookieJar` objects support the :term:`iterator` protocol for "
"iterating over contained :class:`Cookie` objects."
msgstr ""

#: ../../library/http.cookiejar.rst:151
msgid ":class:`CookieJar` has the following methods:"
msgstr ""

#: ../../library/http.cookiejar.rst:156
msgid "Add correct :mailheader:`Cookie` header to *request*."
msgstr ""

#: ../../library/http.cookiejar.rst:158
msgid ""
"If policy allows (ie. the :attr:`rfc2965` and :attr:`hide_cookie2` "
"attributes of the :class:`CookieJar`'s :class:`CookiePolicy` instance are "
"true and false respectively), the :mailheader:`Cookie2` header is also added"
" when appropriate."
msgstr ""

#: ../../library/http.cookiejar.rst:162
msgid ""
"The *request* object (usually a :class:`urllib.request.Request` instance) "
"must support the methods :meth:`get_full_url`, :meth:`get_host`, "
":meth:`get_type`, :meth:`unverifiable`, :meth:`has_header`, "
":meth:`get_header`, :meth:`header_items`, :meth:`add_unredirected_header` "
"and :attr:`origin_req_host` attribute as documented by "
":mod:`urllib.request`."
msgstr ""

#: ../../library/http.cookiejar.rst:171 ../../library/http.cookiejar.rst:197
msgid ""
"*request* object needs :attr:`origin_req_host` attribute. Dependency on a "
"deprecated method :meth:`get_origin_req_host` has been removed."
msgstr ""

#: ../../library/http.cookiejar.rst:177
msgid ""
"Extract cookies from HTTP *response* and store them in the "
":class:`CookieJar`, where allowed by policy."
msgstr ""

#: ../../library/http.cookiejar.rst:180
msgid ""
"The :class:`CookieJar` will look for allowable :mailheader:`Set-Cookie` and "
":mailheader:`Set-Cookie2` headers in the *response* argument, and store "
"cookies as appropriate (subject to the :meth:`CookiePolicy.set_ok` method's "
"approval)."
msgstr ""

#: ../../library/http.cookiejar.rst:184
msgid ""
"The *response* object (usually the result of a call to "
":meth:`urllib.request.urlopen`, or similar) should support an :meth:`info` "
"method, which returns an :class:`email.message.Message` instance."
msgstr ""

#: ../../library/http.cookiejar.rst:188
msgid ""
"The *request* object (usually a :class:`urllib.request.Request` instance) "
"must support the methods :meth:`get_full_url`, :meth:`get_host`, "
":meth:`unverifiable`, and :attr:`origin_req_host` attribute, as documented "
"by :mod:`urllib.request`.  The request is used to set default values for "
"cookie-attributes as well as for checking that the cookie is allowed to be "
"set."
msgstr ""

#: ../../library/http.cookiejar.rst:202
msgid "Set the :class:`CookiePolicy` instance to be used."
msgstr ""

#: ../../library/http.cookiejar.rst:207
msgid ""
"Return sequence of :class:`Cookie` objects extracted from *response* object."
msgstr ""

#: ../../library/http.cookiejar.rst:209
msgid ""
"See the documentation for :meth:`extract_cookies` for the interfaces "
"required of the *response* and *request* arguments."
msgstr ""

#: ../../library/http.cookiejar.rst:215
msgid "Set a :class:`Cookie` if policy says it's OK to do so."
msgstr ""

#: ../../library/http.cookiejar.rst:220
msgid ""
"Set a :class:`Cookie`, without checking with policy to see whether or not it"
" should be set."
msgstr ""

#: ../../library/http.cookiejar.rst:226
msgid "Clear some cookies."
msgstr ""

#: ../../library/http.cookiejar.rst:228
msgid ""
"If invoked without arguments, clear all cookies.  If given a single "
"argument, only cookies belonging to that *domain* will be removed. If given "
"two arguments, cookies belonging to the specified *domain* and URL *path* "
"are removed.  If given three arguments, then the cookie with the specified "
"*domain*, *path* and *name* is removed."
msgstr ""

#: ../../library/http.cookiejar.rst:234
msgid "Raises :exc:`KeyError` if no matching cookie exists."
msgstr ""

#: ../../library/http.cookiejar.rst:239
msgid "Discard all session cookies."
msgstr ""

#: ../../library/http.cookiejar.rst:241
msgid ""
"Discards all contained cookies that have a true :attr:`discard` attribute "
"(usually because they had either no ``max-age`` or ``expires`` cookie-"
"attribute, or an explicit ``discard`` cookie-attribute).  For interactive "
"browsers, the end of a session usually corresponds to closing the browser "
"window."
msgstr ""

#: ../../library/http.cookiejar.rst:246
msgid ""
"Note that the :meth:`save` method won't save session cookies anyway, unless "
"you ask otherwise by passing a true *ignore_discard* argument."
msgstr ""

#: ../../library/http.cookiejar.rst:249
msgid ":class:`FileCookieJar` implements the following additional methods:"
msgstr ""

#: ../../library/http.cookiejar.rst:254
msgid "Save cookies to a file."
msgstr ""

#: ../../library/http.cookiejar.rst:256
msgid ""
"This base class raises :exc:`NotImplementedError`.  Subclasses may leave "
"this method unimplemented."
msgstr ""

#: ../../library/http.cookiejar.rst:259
msgid ""
"*filename* is the name of file in which to save cookies.  If *filename* is "
"not specified, :attr:`self.filename` is used (whose default is the value "
"passed to the constructor, if any); if :attr:`self.filename` is "
":const:`None`, :exc:`ValueError` is raised."
msgstr ""

#: ../../library/http.cookiejar.rst:264
msgid ""
"*ignore_discard*: save even cookies set to be discarded. *ignore_expires*: "
"save even cookies that have expired"
msgstr ""

#: ../../library/http.cookiejar.rst:267
msgid ""
"The file is overwritten if it already exists, thus wiping all the cookies it"
" contains.  Saved cookies can be restored later using the :meth:`load` or "
":meth:`revert` methods."
msgstr ""

#: ../../library/http.cookiejar.rst:274
msgid "Load cookies from a file."
msgstr ""

#: ../../library/http.cookiejar.rst:276
msgid "Old cookies are kept unless overwritten by newly loaded ones."
msgstr ""

#: ../../library/http.cookiejar.rst:278
msgid "Arguments are as for :meth:`save`."
msgstr ""

#: ../../library/http.cookiejar.rst:280
msgid ""
"The named file must be in the format understood by the class, or "
":exc:`LoadError` will be raised.  Also, :exc:`OSError` may be raised, for "
"example if the file does not exist."
msgstr ""

#: ../../library/http.cookiejar.rst:284
msgid ""
":exc:`IOError` used to be raised, it is now an alias of :exc:`OSError`."
msgstr ""

#: ../../library/http.cookiejar.rst:290
msgid "Clear all cookies and reload cookies from a saved file."
msgstr ""

#: ../../library/http.cookiejar.rst:292
msgid ""
":meth:`revert` can raise the same exceptions as :meth:`load`. If there is a "
"failure, the object's state will not be altered."
msgstr ""

#: ../../library/http.cookiejar.rst:295
msgid ":class:`FileCookieJar` instances have the following public attributes:"
msgstr ""

#: ../../library/http.cookiejar.rst:300
msgid ""
"Filename of default file in which to keep cookies.  This attribute may be "
"assigned to."
msgstr ""

#: ../../library/http.cookiejar.rst:306
msgid ""
"If true, load cookies lazily from disk.  This attribute should not be "
"assigned to.  This is only a hint, since this only affects performance, not "
"behaviour (unless the cookies on disk are changing). A :class:`CookieJar` "
"object may ignore it.  None of the :class:`FileCookieJar` classes included "
"in the standard library lazily loads cookies."
msgstr ""

#: ../../library/http.cookiejar.rst:316
msgid "FileCookieJar subclasses and co-operation with web browsers"
msgstr ""

#: ../../library/http.cookiejar.rst:318
msgid ""
"The following :class:`CookieJar` subclasses are provided for reading and "
"writing."
msgstr ""

#: ../../library/http.cookiejar.rst:323
msgid ""
"A :class:`FileCookieJar` that can load from and save cookies to disk in the "
"Mozilla ``cookies.txt`` file format (which is also used by the Lynx and "
"Netscape browsers)."
msgstr ""

#: ../../library/http.cookiejar.rst:329
msgid ""
"This loses information about :rfc:`2965` cookies, and also about newer or "
"non-standard cookie-attributes such as ``port``."
msgstr ""

#: ../../library/http.cookiejar.rst:334
msgid ""
"Back up your cookies before saving if you have cookies whose loss / "
"corruption would be inconvenient (there are some subtleties which may lead "
"to slight changes in the file over a load / save round-trip)."
msgstr ""

#: ../../library/http.cookiejar.rst:338
msgid ""
"Also note that cookies saved while Mozilla is running will get clobbered by "
"Mozilla."
msgstr ""

#: ../../library/http.cookiejar.rst:344
msgid ""
"A :class:`FileCookieJar` that can load from and save cookies to disk in "
"format compatible with the libwww-perl library's ``Set-Cookie3`` file "
"format.  This is convenient if you want to store cookies in a human-readable"
" file."
msgstr ""

#: ../../library/http.cookiejar.rst:355
msgid "CookiePolicy Objects"
msgstr ""

#: ../../library/http.cookiejar.rst:357
msgid ""
"Objects implementing the :class:`CookiePolicy` interface have the following "
"methods:"
msgstr ""

#: ../../library/http.cookiejar.rst:363
msgid ""
"Return boolean value indicating whether cookie should be accepted from "
"server."
msgstr ""

#: ../../library/http.cookiejar.rst:365
msgid ""
"*cookie* is a :class:`Cookie` instance.  *request* is an object implementing"
" the interface defined by the documentation for "
":meth:`CookieJar.extract_cookies`."
msgstr ""

#: ../../library/http.cookiejar.rst:372
msgid ""
"Return boolean value indicating whether cookie should be returned to server."
msgstr ""

#: ../../library/http.cookiejar.rst:374
msgid ""
"*cookie* is a :class:`Cookie` instance.  *request* is an object implementing"
" the interface defined by the documentation for "
":meth:`CookieJar.add_cookie_header`."
msgstr ""

#: ../../library/http.cookiejar.rst:381
msgid ""
"Return ``False`` if cookies should not be returned, given cookie domain."
msgstr ""

#: ../../library/http.cookiejar.rst:383
msgid ""
"This method is an optimization.  It removes the need for checking every "
"cookie with a particular domain (which might involve reading many files).  "
"Returning true from :meth:`domain_return_ok` and :meth:`path_return_ok` "
"leaves all the work to :meth:`return_ok`."
msgstr ""

#: ../../library/http.cookiejar.rst:388
msgid ""
"If :meth:`domain_return_ok` returns true for the cookie domain, "
":meth:`path_return_ok` is called for the cookie path.  Otherwise, "
":meth:`path_return_ok` and :meth:`return_ok` are never called for that "
"cookie domain.  If :meth:`path_return_ok` returns true, :meth:`return_ok` is"
" called with the :class:`Cookie` object itself for a full check.  Otherwise,"
" :meth:`return_ok` is never called for that cookie path."
msgstr ""

#: ../../library/http.cookiejar.rst:395
msgid ""
"Note that :meth:`domain_return_ok` is called for every *cookie* domain, not "
"just for the *request* domain.  For example, the function might be called "
"with both ``\".example.com\"`` and ``\"www.example.com\"`` if the request "
"domain is ``\"www.example.com\"``.  The same goes for "
":meth:`path_return_ok`."
msgstr ""

#: ../../library/http.cookiejar.rst:400
msgid "The *request* argument is as documented for :meth:`return_ok`."
msgstr ""

#: ../../library/http.cookiejar.rst:405
msgid "Return ``False`` if cookies should not be returned, given cookie path."
msgstr ""

#: ../../library/http.cookiejar.rst:407
msgid "See the documentation for :meth:`domain_return_ok`."
msgstr ""

#: ../../library/http.cookiejar.rst:409
msgid ""
"In addition to implementing the methods above, implementations of the "
":class:`CookiePolicy` interface must also supply the following attributes, "
"indicating which protocols should be used, and how.  All of these attributes"
" may be assigned to."
msgstr ""

#: ../../library/http.cookiejar.rst:417
msgid "Implement Netscape protocol."
msgstr ""

#: ../../library/http.cookiejar.rst:422
msgid "Implement :rfc:`2965` protocol."
msgstr ""

#: ../../library/http.cookiejar.rst:427
msgid ""
"Don't add :mailheader:`Cookie2` header to requests (the presence of this "
"header indicates to the server that we understand :rfc:`2965` cookies)."
msgstr ""

#: ../../library/http.cookiejar.rst:430
msgid ""
"The most useful way to define a :class:`CookiePolicy` class is by "
"subclassing from :class:`DefaultCookiePolicy` and overriding some or all of "
"the methods above.  :class:`CookiePolicy` itself may be used as a 'null "
"policy' to allow setting and receiving any and all cookies (this is unlikely"
" to be useful)."
msgstr ""

#: ../../library/http.cookiejar.rst:439
msgid "DefaultCookiePolicy Objects"
msgstr ""

#: ../../library/http.cookiejar.rst:441
msgid "Implements the standard rules for accepting and returning cookies."
msgstr ""

#: ../../library/http.cookiejar.rst:443
msgid ""
"Both :rfc:`2965` and Netscape cookies are covered.  RFC 2965 handling is "
"switched off by default."
msgstr ""

#: ../../library/http.cookiejar.rst:446
msgid ""
"The easiest way to provide your own policy is to override this class and "
"call its methods in your overridden implementations before adding your own "
"additional checks::"
msgstr ""

#: ../../library/http.cookiejar.rst:459
msgid ""
"In addition to the features required to implement the :class:`CookiePolicy` "
"interface, this class allows you to block and allow domains from setting and"
" receiving cookies.  There are also some strictness switches that allow you "
"to tighten up the rather loose Netscape protocol rules a little bit (at the "
"cost of blocking some benign cookies)."
msgstr ""

#: ../../library/http.cookiejar.rst:465
msgid ""
"A domain blacklist and whitelist is provided (both off by default). Only "
"domains not in the blacklist and present in the whitelist (if the whitelist "
"is active) participate in cookie setting and returning.  Use the "
"*blocked_domains* constructor argument, and :meth:`blocked_domains` and "
":meth:`set_blocked_domains` methods (and the corresponding argument and "
"methods for *allowed_domains*).  If you set a whitelist, you can turn it off"
" again by setting it to :const:`None`."
msgstr ""

#: ../../library/http.cookiejar.rst:473
msgid ""
"Domains in block or allow lists that do not start with a dot must equal the "
"cookie domain to be matched.  For example, ``\"example.com\"`` matches a "
"blacklist entry of ``\"example.com\"``, but ``\"www.example.com\"`` does "
"not.  Domains that do start with a dot are matched by more specific domains "
"too. For example, both ``\"www.example.com\"`` and "
"``\"www.coyote.example.com\"`` match ``\".example.com\"`` (but "
"``\"example.com\"`` itself does not).  IP addresses are an exception, and "
"must match exactly.  For example, if blocked_domains contains "
"``\"192.168.1.2\"`` and ``\".168.1.2\"``, 192.168.1.2 is blocked, but "
"193.168.1.2 is not."
msgstr ""

#: ../../library/http.cookiejar.rst:482
msgid ""
":class:`DefaultCookiePolicy` implements the following additional methods:"
msgstr ""

#: ../../library/http.cookiejar.rst:487
msgid "Return the sequence of blocked domains (as a tuple)."
msgstr ""

#: ../../library/http.cookiejar.rst:492
msgid "Set the sequence of blocked domains."
msgstr ""

#: ../../library/http.cookiejar.rst:497
msgid ""
"Return whether *domain* is on the blacklist for setting or receiving "
"cookies."
msgstr ""

#: ../../library/http.cookiejar.rst:502
msgid "Return :const:`None`, or the sequence of allowed domains (as a tuple)."
msgstr ""

#: ../../library/http.cookiejar.rst:507
msgid "Set the sequence of allowed domains, or :const:`None`."
msgstr ""

#: ../../library/http.cookiejar.rst:512
msgid ""
"Return whether *domain* is not on the whitelist for setting or receiving "
"cookies."
msgstr ""

#: ../../library/http.cookiejar.rst:515
msgid ""
":class:`DefaultCookiePolicy` instances have the following attributes, which "
"are all initialised from the constructor arguments of the same name, and "
"which may all be assigned to."
msgstr ""

#: ../../library/http.cookiejar.rst:522
msgid ""
"If true, request that the :class:`CookieJar` instance downgrade :rfc:`2109` "
"cookies (ie. cookies received in a :mailheader:`Set-Cookie` header with a "
"version cookie-attribute of 1) to Netscape cookies by setting the version "
"attribute of the :class:`Cookie` instance to 0.  The default value is "
":const:`None`, in which case RFC 2109 cookies are downgraded if and only if "
":rfc:`2965` handling is turned off.  Therefore, RFC 2109 cookies are "
"downgraded by default."
msgstr ""

#: ../../library/http.cookiejar.rst:530
msgid "General strictness switches:"
msgstr ""

#: ../../library/http.cookiejar.rst:534
msgid ""
"Don't allow sites to set two-component domains with country-code top-level "
"domains like ``.co.uk``, ``.gov.uk``, ``.co.nz``.etc.  This is far from "
"perfect and isn't guaranteed to work!"
msgstr ""

#: ../../library/http.cookiejar.rst:539
msgid ":rfc:`2965` protocol strictness switches:"
msgstr ""

#: ../../library/http.cookiejar.rst:543
msgid ""
"Follow :rfc:`2965` rules on unverifiable transactions (usually, an "
"unverifiable transaction is one resulting from a redirect or a request for "
"an image hosted on another site).  If this is false, cookies are *never* "
"blocked on the basis of verifiability"
msgstr ""

#: ../../library/http.cookiejar.rst:549
msgid "Netscape protocol strictness switches:"
msgstr ""

#: ../../library/http.cookiejar.rst:553
msgid ""
"Apply :rfc:`2965` rules on unverifiable transactions even to Netscape "
"cookies."
msgstr ""

#: ../../library/http.cookiejar.rst:558
msgid ""
"Flags indicating how strict to be with domain-matching rules for Netscape "
"cookies.  See below for acceptable values."
msgstr ""

#: ../../library/http.cookiejar.rst:564
msgid ""
"Ignore cookies in Set-Cookie: headers that have names starting with ``'$'``."
msgstr ""

#: ../../library/http.cookiejar.rst:569
msgid "Don't allow setting cookies whose path doesn't path-match request URI."
msgstr ""

#: ../../library/http.cookiejar.rst:571
msgid ""
":attr:`strict_ns_domain` is a collection of flags.  Its value is constructed"
" by or-ing together (for example, "
"``DomainStrictNoDots|DomainStrictNonDomain`` means both flags are set)."
msgstr ""

#: ../../library/http.cookiejar.rst:578
msgid ""
"When setting cookies, the 'host prefix' must not contain a dot (eg. "
"``www.foo.bar.com`` can't set a cookie for ``.bar.com``, because ``www.foo``"
" contains a dot)."
msgstr ""

#: ../../library/http.cookiejar.rst:585
msgid ""
"Cookies that did not explicitly specify a ``domain`` cookie-attribute can "
"only be returned to a domain equal to the domain that set the cookie (eg. "
"``spam.example.com`` won't be returned cookies from ``example.com`` that had"
" no ``domain`` cookie-attribute)."
msgstr ""

#: ../../library/http.cookiejar.rst:593
msgid "When setting cookies, require a full :rfc:`2965` domain-match."
msgstr ""

#: ../../library/http.cookiejar.rst:595
msgid ""
"The following attributes are provided for convenience, and are the most "
"useful combinations of the above flags:"
msgstr ""

#: ../../library/http.cookiejar.rst:601
msgid ""
"Equivalent to 0 (ie. all of the above Netscape domain strictness flags "
"switched off)."
msgstr ""

#: ../../library/http.cookiejar.rst:607
msgid "Equivalent to ``DomainStrictNoDots|DomainStrictNonDomain``."
msgstr ""

#: ../../library/http.cookiejar.rst:611
msgid "Cookie Objects"
msgstr ""

#: ../../library/http.cookiejar.rst:613
msgid ""
":class:`Cookie` instances have Python attributes roughly corresponding to "
"the standard cookie-attributes specified in the various cookie standards.  "
"The correspondence is not one-to-one, because there are complicated rules "
"for assigning default values, because the ``max-age`` and ``expires`` "
"cookie-attributes contain equivalent information, and because :rfc:`2109` "
"cookies may be 'downgraded' by :mod:`http.cookiejar` from version 1 to "
"version 0 (Netscape) cookies."
msgstr ""

#: ../../library/http.cookiejar.rst:621
msgid ""
"Assignment to these attributes should not be necessary other than in rare "
"circumstances in a :class:`CookiePolicy` method.  The class does not enforce"
" internal consistency, so you should know what you're doing if you do that."
msgstr ""

#: ../../library/http.cookiejar.rst:628
msgid ""
"Integer or :const:`None`.  Netscape cookies have :attr:`version` 0. "
":rfc:`2965` and :rfc:`2109` cookies have a ``version`` cookie-attribute of "
"1.  However, note that :mod:`http.cookiejar` may 'downgrade' RFC 2109 "
"cookies to Netscape cookies, in which case :attr:`version` is 0."
msgstr ""

#: ../../library/http.cookiejar.rst:636
msgid "Cookie name (a string)."
msgstr ""

#: ../../library/http.cookiejar.rst:641
msgid "Cookie value (a string), or :const:`None`."
msgstr ""

#: ../../library/http.cookiejar.rst:646
msgid ""
"String representing a port or a set of ports (eg. '80', or '80,8080'), or "
":const:`None`."
msgstr ""

#: ../../library/http.cookiejar.rst:652
msgid "Cookie path (a string, eg. ``'/acme/rocket_launchers'``)."
msgstr ""

#: ../../library/http.cookiejar.rst:657
msgid "``True`` if cookie should only be returned over a secure connection."
msgstr ""

#: ../../library/http.cookiejar.rst:662
msgid ""
"Integer expiry date in seconds since epoch, or :const:`None`.  See also the "
":meth:`is_expired` method."
msgstr ""

#: ../../library/http.cookiejar.rst:668
msgid "``True`` if this is a session cookie."
msgstr ""

#: ../../library/http.cookiejar.rst:673
msgid ""
"String comment from the server explaining the function of this cookie, or "
":const:`None`."
msgstr ""

#: ../../library/http.cookiejar.rst:679
msgid ""
"URL linking to a comment from the server explaining the function of this "
"cookie, or :const:`None`."
msgstr ""

#: ../../library/http.cookiejar.rst:685
msgid ""
"``True`` if this cookie was received as an :rfc:`2109` cookie (ie. the "
"cookie arrived in a :mailheader:`Set-Cookie` header, and the value of the "
"Version cookie-attribute in that header was 1).  This attribute is provided "
"because :mod:`http.cookiejar` may 'downgrade' RFC 2109 cookies to Netscape "
"cookies, in which case :attr:`version` is 0."
msgstr ""

#: ../../library/http.cookiejar.rst:694
msgid ""
"``True`` if a port or set of ports was explicitly specified by the server "
"(in the :mailheader:`Set-Cookie` / :mailheader:`Set-Cookie2` header)."
msgstr ""

#: ../../library/http.cookiejar.rst:700
msgid "``True`` if a domain was explicitly specified by the server."
msgstr ""

#: ../../library/http.cookiejar.rst:705
msgid ""
"``True`` if the domain explicitly specified by the server began with a dot "
"(``'.'``)."
msgstr ""

#: ../../library/http.cookiejar.rst:708
msgid ""
"Cookies may have additional non-standard cookie-attributes.  These may be "
"accessed using the following methods:"
msgstr ""

#: ../../library/http.cookiejar.rst:714
msgid "Return ``True`` if cookie has the named cookie-attribute."
msgstr ""

#: ../../library/http.cookiejar.rst:719
msgid ""
"If cookie has the named cookie-attribute, return its value. Otherwise, "
"return *default*."
msgstr ""

#: ../../library/http.cookiejar.rst:725
msgid "Set the value of the named cookie-attribute."
msgstr ""

#: ../../library/http.cookiejar.rst:727
msgid "The :class:`Cookie` class also defines the following method:"
msgstr ""

#: ../../library/http.cookiejar.rst:732
msgid ""
"``True`` if cookie has passed the time at which the server requested it "
"should expire.  If *now* is given (in seconds since the epoch), return "
"whether the cookie has expired at the specified time."
msgstr ""

#: ../../library/http.cookiejar.rst:738
msgid "Examples"
msgstr "例子"

#: ../../library/http.cookiejar.rst:740
msgid ""
"The first example shows the most common usage of :mod:`http.cookiejar`::"
msgstr ""

#: ../../library/http.cookiejar.rst:747
msgid ""
"This example illustrates how to open a URL using your Netscape, Mozilla, or "
"Lynx cookies (assumes Unix/Netscape convention for location of the cookies "
"file)::"
msgstr ""

#: ../../library/http.cookiejar.rst:756
msgid ""
"The next example illustrates the use of :class:`DefaultCookiePolicy`. Turn "
"on :rfc:`2965` cookies, be more strict about domains when setting and "
"returning Netscape cookies, and block some domains from setting cookies or "
"having them returned::"
msgstr ""
