# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# 汪心禾 <wangxinhe06@gmail.com>, 2024
# Freesand Leo <yuqinju@163.com>, 2024
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-05-09 14:19+0000\n"
"PO-Revision-Date: 2024-10-11 14:19+0000\n"
"Last-Translator: Freesand Leo <yuqinju@163.com>, 2024\n"
"Language-Team: Chinese (China) (https://app.transifex.com/python-doc/teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../howto/argparse-optparse.rst:8
msgid "Migrating ``optparse`` code to ``argparse``"
msgstr "将 ``optparse`` 代码迁移至 ``argparse``"

#: ../../howto/argparse-optparse.rst:10
msgid ""
"The :mod:`argparse` module offers several higher level features not natively"
" provided by the :mod:`optparse` module, including:"
msgstr ":mod:`argparse` 模块提供了一些未获 :mod:`optparse` 模块原生支持的更高层级特性，包括："

#: ../../howto/argparse-optparse.rst:13
msgid "Handling positional arguments."
msgstr "处理位置参数。"

#: ../../howto/argparse-optparse.rst:14
msgid "Supporting subcommands."
msgstr "支持子命令。"

#: ../../howto/argparse-optparse.rst:15
msgid "Allowing alternative option prefixes like ``+`` and ``/``."
msgstr "允许替代选项前缀例如 ``+`` 和 ``/``。"

#: ../../howto/argparse-optparse.rst:16
msgid "Handling zero-or-more and one-or-more style arguments."
msgstr "处理零个或多个以及一个或多个风格的参数。"

#: ../../howto/argparse-optparse.rst:17
msgid "Producing more informative usage messages."
msgstr "生成更具信息量的用法消息。"

#: ../../howto/argparse-optparse.rst:18
msgid "Providing a much simpler interface for custom ``type`` and ``action``."
msgstr "提供用于定制 ``type`` 和 ``action`` 的更为简单的接口。"

#: ../../howto/argparse-optparse.rst:20
msgid ""
"Originally, the :mod:`argparse` module attempted to maintain compatibility "
"with :mod:`optparse`.  However, the fundamental design differences between "
"supporting declarative command line option processing (while leaving "
"positional argument processing to application code), and supporting both "
"named options and positional arguments in the declarative interface mean "
"that the API has diverged from that of ``optparse`` over time."
msgstr ""
"最初的时候，:mod:`argparse` 模块试图维持与 :mod:`optparse` 的兼容性。 "
"不过，在支持声明式命令行选项处理（并将位置参数处理留给应用程序代码）以及在声明式界面中同时支持名称选项和位置参数之间底层设计方面的差异意味着其 API "
"逐渐与 ``optparse`` 的拉开了差距。"

#: ../../howto/argparse-optparse.rst:27
msgid ""
"As described in :ref:`choosing-an-argument-parser`, applications that are "
"currently using :mod:`optparse` and are happy with the way it works can just"
" continue to use ``optparse``."
msgstr ""
"正如 :ref:`choosing-an-argument-parser` 中所描述的，目前使用 :mod:`optparse` "
"并且对其效果感到满意的应用程序完全可以继续使用 ``optparse``。"

#: ../../howto/argparse-optparse.rst:31
msgid ""
"Application developers that are considering migrating should also review the"
" list of intrinsic behavioural differences described in that section before "
"deciding whether or not migration is desirable."
msgstr "考虑迁移的应用程序开发者也应当先仔细查看在该章节中描述的内在行为差异列表再决定是否需要迁移。"

#: ../../howto/argparse-optparse.rst:35
msgid ""
"For applications that do choose to migrate from :mod:`optparse` to "
":mod:`argparse`, the following suggestions should be helpful:"
msgstr "对于确定选择从 :mod:`optparse` 迁移到 :mod:`argparse` 的应用程序，下列建议应该会有帮助："

#: ../../howto/argparse-optparse.rst:38
msgid ""
"Replace all :meth:`optparse.OptionParser.add_option` calls with "
":meth:`ArgumentParser.add_argument` calls."
msgstr ""
"将所有 :meth:`optparse.OptionParser.add_option` 调用替换为 "
":meth:`ArgumentParser.add_argument` 调用。"

#: ../../howto/argparse-optparse.rst:41
msgid ""
"Replace ``(options, args) = parser.parse_args()`` with ``args = "
"parser.parse_args()`` and add additional :meth:`ArgumentParser.add_argument`"
" calls for the positional arguments. Keep in mind that what was previously "
"called ``options``, now in the :mod:`argparse` context is called ``args``."
msgstr ""
"将 ``(options, args) = parser.parse_args()`` 替换为 ``args = "
"parser.parse_args()`` 并为位置参数添加额外的 :meth:`ArgumentParser.add_argument` 调用。 "
"请注意之前所谓的 ``options`` 在 :mod:`argparse` 上下文中被称为 ``args``。"

#: ../../howto/argparse-optparse.rst:46
msgid ""
"Replace :meth:`optparse.OptionParser.disable_interspersed_args` by using "
":meth:`~ArgumentParser.parse_intermixed_args` instead of "
":meth:`~ArgumentParser.parse_args`."
msgstr ""
"通过使用 :meth:`~ArgumentParser.parse_intermixed_args` 而非 "
":meth:`~ArgumentParser.parse_args` 来替换 "
":meth:`optparse.OptionParser.disable_interspersed_args`。"

#: ../../howto/argparse-optparse.rst:50
msgid ""
"Replace callback actions and the ``callback_*`` keyword arguments with "
"``type`` or ``action`` arguments."
msgstr "将回调动作和 ``callback_*`` 关键字参数替换为 ``type`` 或 ``action`` 参数。"

#: ../../howto/argparse-optparse.rst:53
msgid ""
"Replace string names for ``type`` keyword arguments with the corresponding "
"type objects (e.g. int, float, complex, etc)."
msgstr "将 ``type`` 关键字参数字符串名称替换为相应的类型对象（例如 int, float, complex 等）。"

#: ../../howto/argparse-optparse.rst:56
msgid ""
"Replace :class:`optparse.Values` with :class:`Namespace` and "
":exc:`optparse.OptionError` and :exc:`optparse.OptionValueError` with "
":exc:`ArgumentError`."
msgstr ""
"将 :class:`optparse.Values` 替换为 :class:`Namespace` 并将 "
":exc:`optparse.OptionError` 和 :exc:`optparse.OptionValueError` 替换为 "
":exc:`ArgumentError`。"

#: ../../howto/argparse-optparse.rst:60
msgid ""
"Replace strings with implicit arguments such as ``%default`` or ``%prog`` "
"with the standard Python syntax to use dictionaries to format strings, that "
"is, ``%(default)s`` and ``%(prog)s``."
msgstr ""
"将隐式参数字符串例如使用标准 Python 字典语法的 ``%default`` 或 ``%prog`` 替换为格式字符串，即 "
"``%(default)s`` 和 ``%(prog)s``。"

#: ../../howto/argparse-optparse.rst:64
msgid ""
"Replace the OptionParser constructor ``version`` argument with a call to "
"``parser.add_argument('--version', action='version', version='<the "
"version>')``."
msgstr ""
"将 OptionParser 构造器 ``version`` 参数替换为对 ``parser.add_argument('--version', "
"action='version', version='<the version>')`` 的调用。"
