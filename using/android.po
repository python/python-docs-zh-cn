# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2025
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.13\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-07-25 15:00+0000\n"
"PO-Revision-Date: 2025-07-18 19:22+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2025\n"
"Language-Team: Chinese (China) (https://app.transifex.com/python-doc/teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../using/android.rst:5
msgid "Using Python on Android"
msgstr "在Android上使用 Python"

#: ../../using/android.rst:7
msgid ""
"Python on Android is unlike Python on desktop platforms. On a desktop "
"platform, Python is generally installed as a system resource that can be "
"used by any user of that computer. Users then interact with Python by "
"running a :program:`python` executable and entering commands at an "
"interactive prompt, or by running a Python script."
msgstr ""
"Python 在 Android 上与桌面平台上不同。 在桌面平台上，通常是作为系统资源安装的，该计算机的任何用户都可以使用。 然后，用户通过运行 "
":program:`python` 可执行文件并交互提示器中输入命令 ，或运行脚本。"

#: ../../using/android.rst:13
msgid ""
"On Android, there is no concept of installing as a system resource. The only"
" unit of software distribution is an \"app\". There is also no console where"
" you could run a :program:`python` executable, or interact with a Python "
"REPL."
msgstr ""
"在安卓系统中，没有将安装作为系统资源的概念。 软件分发的唯一单位是\"应用程序\"。 也没有可以运行 :program:`python` 可执行文件或与"
" Python REPL 交互的控制台。"

#: ../../using/android.rst:17
msgid ""
"As a result, the only way you can use Python on Android is in embedded mode "
"– that is, by writing a native Android application, embedding a Python "
"interpreter using ``libpython``, and invoking Python code using the "
":ref:`Python embedding API <embedding>`. The full Python interpreter, the "
"standard library, and all your Python code is then packaged into your app "
"for its own private use."
msgstr ""
" 因此，在 Android 上使用 Python 的唯一方式是嵌入模式，即编写本地 Android 应用 ，使用 ``libpython`` "
"嵌入Python 解释器 ，并使用 :ref:`Python 嵌入式 API <embedding>` 代码。然后，完整的 Python 解释器 "
"、标准库和所有 Python 代码都会打包到您的应用程序中，供其单独使用。"

#: ../../using/android.rst:23
msgid ""
"The Python standard library has some notable omissions and restrictions on "
"Android. See the :ref:`API availability guide <mobile-availability>` for "
"details."
msgstr ""
"Python 标准库在 Android 上有一些明显的遗漏和限制。 详情参见 :ref:`API 可用性指南 <mobile-"
"availability>`。"

#: ../../using/android.rst:28
msgid "Adding Python to an Android app"
msgstr "添加Python到Android app"

#: ../../using/android.rst:30
msgid ""
"Most app developers should use one of the following tools, which will "
"provide a much easier experience:"
msgstr "大多数开发者应当使用下列工具之一，它们将提供更便捷的体验："

#: ../../using/android.rst:33
msgid ""
"`Briefcase <https://briefcase.readthedocs.io>`__, from the BeeWare project"
msgstr "来自 BeeWare 项目的 `Briefcase <https://briefcase.readthedocs.io>`__"

#: ../../using/android.rst:34
msgid ""
"`Buildozer <https://buildozer.readthedocs.io>`__, from the Kivy project"
msgstr "来自 Kivy 项目的 `Buildozer <https://buildozer.readthedocs.io>`__"

#: ../../using/android.rst:35
msgid "`Chaquopy <https://chaquo.com/chaquopy>`__"
msgstr "`Chaquopy <https://chaquo.com/chaquopy>`__"

#: ../../using/android.rst:36
msgid ""
"`pyqtdeploy <https://www.riverbankcomputing.com/static/Docs/pyqtdeploy/>`__"
msgstr ""
"`pyqtdeploy <https://www.riverbankcomputing.com/static/Docs/pyqtdeploy/>`__"

#: ../../using/android.rst:37
msgid "`Termux <https://termux.dev/en/>`__"
msgstr "`Termux <https://termux.dev/en/>`__"

#: ../../using/android.rst:39
msgid ""
"If you're sure you want to do all of this manually, read on. You can use the"
" :source:`testbed app <Android/testbed>` as a guide; each step below "
"contains a link to the relevant file."
msgstr ""
"如果您确定要手动完成所有这些操作，请继续阅读。您可以使用 :source:`testbed app <Android/testbed>` "
"作为指南；下面的每个步骤都包含相关文件的链接。"

#: ../../using/android.rst:43
msgid ""
"Build Python by following the instructions in :source:`Android/README.md`. "
"This will create the directory ``cross-build/HOST/prefix``."
msgstr ""
"请遵照 :source:`Android/README.md` 中的指导来构建 Python。 这将创建 ``cross-"
"build/HOST/prefix`` 目录。"

#: ../../using/android.rst:46
msgid ""
"Add code to your :source:`build.gradle "
"<Android/testbed/app/build.gradle.kts>` file to copy the following items "
"into your project. All except your own Python code can be copied from "
"``prefix/lib``:"
msgstr ""
"向你的 :source:`build.gradle <Android/testbed/app/build.gradle.kts>` "
"文件添加代码来将以下条目拷贝到你的项目中。 除了你自己的 Python 代码以外所有内容均可从 ``prefix/lib`` 拷贝："

#: ../../using/android.rst:50
msgid "In your JNI libraries:"
msgstr "在 JNI 库中:"

#: ../../using/android.rst:52
msgid "``libpython*.*.so``"
msgstr "``libpython*.*.so``"

#: ../../using/android.rst:53
msgid "``lib*_python.so`` (external libraries such as OpenSSL)"
msgstr "``lib*_python.so`` (外部库，如 OpenSSL）"

#: ../../using/android.rst:55
msgid "In your assets:"
msgstr "在您的资源文件中："

#: ../../using/android.rst:57
msgid "``python*.*`` (the Python standard library)"
msgstr "``python*.*`` (Python 标准库)"

#: ../../using/android.rst:58
msgid "``python*.*/site-packages`` (your own Python code)"
msgstr "``python*.*/site-packages`` （您自己的 Python 代码）"

#: ../../using/android.rst:60
msgid ""
"Add code to your app to :source:`extract the assets to the filesystem "
"<Android/testbed/app/src/main/java/org/python/testbed/MainActivity.kt>`."
msgstr ""
"在应用程序中添加代码以 :source:`提取资源文件到文件系统 "
"<Android/testbed/app/src/main/java/org/python/testbed/MainActivity.kt>`。"

#: ../../using/android.rst:63
msgid ""
"Add code to your app to :source:`start Python in embedded mode "
"<Android/testbed/app/src/main/c/main_activity.c>`. This will need to be C "
"code called via JNI."
msgstr ""
"在应用程序中添加代码 :source:`以嵌入模式启动 Python "
"<Android/testbed/app/src/main/c/main_activity.c>`。 这需要通过 JNI 调用 C 代码。"

#: ../../using/android.rst:68
msgid "Building a Python package for Android"
msgstr "为 Android 构建 Python 软件包"

#: ../../using/android.rst:70
msgid ""
"Python packages can be built for Android as wheels and released on PyPI. The"
" recommended tool for doing this is `cibuildwheel "
"<https://cibuildwheel.pypa.io/en/stable/platforms/#android>`__, which "
"automates all the details of setting up a cross-compilation environment, "
"building the wheel, and testing it on an emulator."
msgstr ""
"Python 软件包可以作为针对 Android 构建的 wheel 文件并在 PyPI 上发布。 完成此任务的推荐工具是 `cibuildwheel "
"<https://cibuildwheel.pypa.io/en/stable/platforms/#android>`__，它将自动化设置交叉编译环境、构建"
" wheel 以及在模拟器上进行测试等所有细节。"
