# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-07-25 16:48+0000\n"
"PO-Revision-Date: 2025-07-18 20:04+0000\n"
"Language-Team: Chinese (China) (https://app.transifex.com/python-doc/teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../distutils/configfile.rst:5
msgid "Writing the Setup Configuration File"
msgstr ""

#: ../../distutils/_setuptools_disclaimer.rst:3
msgid ""
"This document is being retained solely until the ``setuptools`` "
"documentation at https://setuptools.readthedocs.io/en/latest/setuptools.html"
" independently covers all of the relevant information currently included "
"here."
msgstr ""

#: ../../distutils/configfile.rst:9
msgid ""
"Often, it's not possible to write down everything needed to build a "
"distribution *a priori*: you may need to get some information from the user,"
" or from the user's system, in order to proceed.  As long as that "
"information is fairly simple---a list of directories to search for C header "
"files or libraries, for example---then providing a configuration file, "
":file:`setup.cfg`, for users to edit is a cheap and easy way to solicit it."
"  Configuration files also let you provide default values for any command "
"option, which the installer can then override either on the command-line or "
"by editing the config file."
msgstr ""

#: ../../distutils/configfile.rst:18
msgid ""
"The setup configuration file is a useful middle-ground between the setup "
"script---which, ideally, would be opaque to installers [#]_---and the "
"command-line to the setup script, which is outside of your control and "
"entirely up to the installer.  In fact, :file:`setup.cfg` (and any other "
"Distutils configuration files present on the target system) are processed "
"after the contents of the setup script, but before the command-line.  This "
"has  several useful consequences:"
msgstr ""

#: ../../distutils/configfile.rst:32
msgid ""
"installers can override some of what you put in :file:`setup.py` by editing "
":file:`setup.cfg`"
msgstr ""

#: ../../distutils/configfile.rst:35
msgid ""
"you can provide non-standard defaults for options that are not easily set in"
" :file:`setup.py`"
msgstr ""

#: ../../distutils/configfile.rst:38
msgid ""
"installers can override anything in :file:`setup.cfg` using the command-line"
" options to :file:`setup.py`"
msgstr ""

#: ../../distutils/configfile.rst:41
msgid "The basic syntax of the configuration file is simple:"
msgstr ""

#: ../../distutils/configfile.rst:49
msgid ""
"where *command* is one of the Distutils commands (e.g. :command:`build_py`, "
":command:`install`), and *option* is one of the options that command "
"supports. Any number of options can be supplied for each command, and any "
"number of command sections can be included in the file.  Blank lines are "
"ignored, as are comments, which run from a ``'#'`` character until the end "
"of the line.  Long option values can be split across multiple lines simply "
"by indenting the continuation lines."
msgstr ""

#: ../../distutils/configfile.rst:57
msgid ""
"You can find out the list of options supported by a particular command with "
"the universal :option:`!--help` option, e.g."
msgstr ""

#: ../../distutils/configfile.rst:75
msgid ""
"Note that an option spelled :option:`!--foo-bar` on the command-line  is "
"spelled ``foo_bar`` in configuration files."
msgstr ""

#: ../../distutils/configfile.rst:80
msgid ""
"For example, say you want your extensions to be built \"in-place\"---that "
"is, you have an extension :mod:`pkg.ext`, and you want the compiled "
"extension file (:file:`ext.so` on Unix, say) to be put in the same source "
"directory as your pure Python modules :mod:`pkg.mod1` and :mod:`pkg.mod2`.  "
"You can always use the :option:`!--inplace` option on the command-line to "
"ensure this:"
msgstr ""

#: ../../distutils/configfile.rst:90
msgid ""
"But this requires that you always specify the :command:`build_ext` command "
"explicitly, and remember to provide :option:`!--inplace`. An easier way is "
"to \"set and forget\" this option, by encoding it in :file:`setup.cfg`, the "
"configuration file for this distribution:"
msgstr ""

#: ../../distutils/configfile.rst:100
msgid ""
"This will affect all builds of this module distribution, whether or not you "
"explicitly specify :command:`build_ext`.  If you include :file:`setup.cfg` "
"in your source distribution, it will also affect end-user builds---which is "
"probably a bad idea for this option, since always building extensions in-"
"place would break installation of the module distribution.  In certain "
"peculiar cases, though, modules are built right in their installation "
"directory, so this is conceivably a useful ability.  (Distributing "
"extensions that expect to be built in their installation directory is almost"
" always a bad idea, though.)"
msgstr ""

#: ../../distutils/configfile.rst:109
msgid ""
"Another example: certain commands take a lot of options that don't change "
"from run to run; for example, :command:`bdist_rpm` needs to know everything "
"required to generate a \"spec\" file for creating an RPM distribution.  Some"
" of this information comes from the setup script, and some is automatically "
"generated by the Distutils (such as the list of files installed).  But some "
"of it has to be supplied as options to :command:`bdist_rpm`, which would be "
"very tedious to do on the command-line for every run.  Hence, here is a "
"snippet from the Distutils' own :file:`setup.cfg`:"
msgstr ""

#: ../../distutils/configfile.rst:129
msgid ""
"Note that the ``doc_files`` option is simply a whitespace-separated string "
"split across multiple lines for readability."
msgstr ""

#: ../../distutils/configfile.rst:136
msgid ":ref:`inst-config-syntax` in \"Installing Python Modules\""
msgstr ""

#: ../../distutils/configfile.rst:136
msgid ""
"More information on the configuration files is available in the manual for "
"system administrators."
msgstr ""

#: ../../distutils/configfile.rst:141
msgid "Footnotes"
msgstr ""

#: ../../distutils/configfile.rst:142
msgid ""
"This ideal probably won't be achieved until auto-configuration is fully "
"supported by the Distutils."
msgstr ""
