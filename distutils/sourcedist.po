# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Nyuan Zhang, 2025
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-07-25 16:48+0000\n"
"PO-Revision-Date: 2025-07-18 20:04+0000\n"
"Last-Translator: Nyuan Zhang, 2025\n"
"Language-Team: Chinese (China) (https://app.transifex.com/python-doc/teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../distutils/sourcedist.rst:5
msgid "Creating a Source Distribution"
msgstr "创建源代码分发包"

#: ../../distutils/_setuptools_disclaimer.rst:3
msgid ""
"This document is being retained solely until the ``setuptools`` "
"documentation at https://setuptools.readthedocs.io/en/latest/setuptools.html"
" independently covers all of the relevant information currently included "
"here."
msgstr ""
"这篇文档是历史遗留文档，在 https://setuptools.readthedocs.io/en/latest/setuptools.html 上的"
" ``setuptools`` 文档独立涵盖此处包含的所有相关信息之后，将不再单独作为正式文档保留。"

#: ../../distutils/sourcedist.rst:9
msgid ""
"As shown in section :ref:`distutils-simple-example`, you use the "
":command:`sdist` command to create a source distribution.  In the simplest "
"case, ::"
msgstr ""
"如 :ref:`distutils-simple-example` 一节所示，可以使用 :command:`sdist` 命令来创建一个源代码分发包。 "
"在最简单的场景下，::"

#: ../../distutils/sourcedist.rst:14
msgid ""
"(assuming you haven't specified any :command:`sdist` options in the setup "
"script or config file), :command:`sdist` creates the archive of the default "
"format for the current platform.  The default format is a gzip'ed tar file "
"(:file:`.tar.gz`) on Unix, and ZIP file on Windows."
msgstr ""
"（假定你没有在设置脚本或配置文件中指定任何 :command:`sdist` 选项），:command:`sdist` "
"将创建基于当前平台的默认格式的归档。 在 Unix 上默认格式为 gzip 的 tar 文件，而在 Windows 上则为 ZIP 文件。"

#: ../../distutils/sourcedist.rst:19
msgid ""
"You can specify as many formats as you like using the :option:`!--formats` "
"option, for example::"
msgstr "你可以使用 :option:`!--formats` 选项来指定任何你想要的格式，例如::"

#: ../../distutils/sourcedist.rst:24
msgid ""
"to create a gzipped tarball and a zip file.  The available formats are:"
msgstr "是创建一个 gzip 的 tar 文件和一个 zip 文件。 可用的格式有:"

#: ../../distutils/sourcedist.rst:27
msgid "Format"
msgstr "格式"

#: ../../distutils/sourcedist.rst:27
msgid "Description"
msgstr "描述"

#: ../../distutils/sourcedist.rst:27
msgid "Notes"
msgstr "备注"

#: ../../distutils/sourcedist.rst:29
msgid "``zip``"
msgstr "``zip``"

#: ../../distutils/sourcedist.rst:29
msgid "zip file (:file:`.zip`)"
msgstr "zip 文件 (:file:`.zip`)"

#: ../../distutils/sourcedist.rst:29
msgid "(1),(3)"
msgstr "(1),(3)"

#: ../../distutils/sourcedist.rst:31
msgid "``gztar``"
msgstr "``gztar``"

#: ../../distutils/sourcedist.rst:31
msgid "gzip'ed tar file (:file:`.tar.gz`)"
msgstr "gzip 的 tar 文件 (:file:`.tar.gz`)"

#: ../../distutils/sourcedist.rst:31
msgid "\\(2)"
msgstr "\\(2)"

#: ../../distutils/sourcedist.rst:34
msgid "``bztar``"
msgstr "``bztar``"

#: ../../distutils/sourcedist.rst:34
msgid "bzip2'ed tar file (:file:`.tar.bz2`)"
msgstr "bzip2 的 tar 文件 (:file:`.tar.bz2`)"

#: ../../distutils/sourcedist.rst:34 ../../distutils/sourcedist.rst:37
#: ../../distutils/sourcedist.rst:43
msgid "\\(5)"
msgstr "\\(5)"

#: ../../distutils/sourcedist.rst:37
msgid "``xztar``"
msgstr "``xztar``"

#: ../../distutils/sourcedist.rst:37
msgid "xz'ed tar file (:file:`.tar.xz`)"
msgstr "xz 的 tar 文件 (:file:`.tar.xz`)"

#: ../../distutils/sourcedist.rst:40
msgid "``ztar``"
msgstr "``ztar``"

#: ../../distutils/sourcedist.rst:40
msgid "compressed tar file (:file:`.tar.Z`)"
msgstr "带压缩的 tar 文件 (:file:`.tar.Z`)"

#: ../../distutils/sourcedist.rst:40
msgid "(4),(5)"
msgstr "(4),(5)"

#: ../../distutils/sourcedist.rst:43
msgid "``tar``"
msgstr "``tar``"

#: ../../distutils/sourcedist.rst:43
msgid "tar file (:file:`.tar`)"
msgstr "tar 文件 (:file:`.tar`)"

#: ../../distutils/sourcedist.rst:46
msgid "Added support for the ``xztar`` format."
msgstr "添加了对 ``xztar`` 格式的支持"

#: ../../distutils/sourcedist.rst:49
msgid "Notes:"
msgstr "注释："

#: ../../distutils/sourcedist.rst:52
msgid "default on Windows"
msgstr "默认Windows"

#: ../../distutils/sourcedist.rst:55
msgid "default on Unix"
msgstr "默认 Unix"

#: ../../distutils/sourcedist.rst:58
msgid ""
"requires either external :program:`zip` utility or :mod:`zipfile` module "
"(part of the standard Python library since Python 1.6)"
msgstr ""
"需要有外部 :program:`zip` 工具或 :mod:`zipfile` 模块（自 Python 1.6 起是标准 Python 库的一部分）"

#: ../../distutils/sourcedist.rst:62
msgid ""
"requires the :program:`compress` program. Notice that this format is now "
"pending for deprecation and will be removed in the future versions of "
"Python."
msgstr "需要有 :program:`compress` 程序。 请注意此格式计划要弃用并将在未来的 Python 版本中被移除。"

#: ../../distutils/sourcedist.rst:65
msgid ""
"deprecated by `PEP 527 <https://peps.python.org/pep-0527/>`_; `PyPI "
"<https://pypi.org>`_ only accepts ``.zip`` and ``.tar.gz`` files."
msgstr ""
"已被 `PEP 527 <https://peps.python.org/pep-0527/>`_ 弃用; `PyPI "
"<https://pypi.org>`_ 只接受 ``.zip`` 和 ``.tar.gz`` 文件。"

#: ../../distutils/sourcedist.rst:68
msgid ""
"When using any ``tar`` format (``gztar``, ``bztar``, ``xztar``, ``ztar`` or "
"``tar``), under Unix you can specify the ``owner`` and ``group`` names that "
"will be set for each member of the archive."
msgstr ""
"当使用任意 ``tar`` 格式 (``gztar``, ``bztar``, ``xztar``, ``ztar`` 或 ``tar``) 时，在 "
"Unix 中你可以指定将为每个归档成员设置的 ``owner`` 和 ``group`` 名称。"

#: ../../distutils/sourcedist.rst:72
msgid ""
"For example, if you want all files of the archive to be owned by root::"
msgstr "举例来说，如果你希望归档中的全部文件均为 root 所有::"

#: ../../distutils/sourcedist.rst:80
msgid "Specifying the files to distribute"
msgstr "指定要分发的文件"

#: ../../distutils/sourcedist.rst:82
msgid ""
"If you don't supply an explicit list of files (or instructions on how to "
"generate one), the :command:`sdist` command puts a minimal default set into "
"the source distribution:"
msgstr "如果你没有显式提供文件列表（或如何生成该列表的说明），则 :command:`sdist` 命令会将一个最小化默认集加入源代码分发版:"

#: ../../distutils/sourcedist.rst:86
msgid ""
"all Python source files implied by the ``py_modules`` and ``packages`` "
"options"
msgstr "通过 ``py_modules`` 和 ``packages`` 选项指明的所有 Python 源文件"

#: ../../distutils/sourcedist.rst:89
msgid ""
"all C source files mentioned in the ``ext_modules`` or ``libraries`` options"
msgstr "在 ``ext_modules`` 在 ``libraries`` 选项提及的所有 C 源代码文件"

#: ../../distutils/sourcedist.rst:95
msgid ""
"scripts identified by the ``scripts`` option See :ref:`distutils-installing-"
"scripts`."
msgstr "通过 ``scripts`` 选项标识的脚本，参见 :ref:`distutils-installing-scripts`。"

#: ../../distutils/sourcedist.rst:98
msgid ""
"anything that looks like a test script: :file:`test/test\\*.py` (currently, "
"the Distutils don't do anything with test scripts except include them in "
"source distributions, but in the future there will be a standard for testing"
" Python module distributions)"
msgstr ""
"任何看起来像是测试脚本的文件: :file:`test/test\\*.py` (目前，Distutils "
"不会对测试脚本做除了将它们包括到源代码分发版以外的任何操作，但是在未来将会有一个测试 Python 模块分发版的标准)"

#: ../../distutils/sourcedist.rst:103
msgid ""
"Any of the standard README files (:file:`README`, :file:`README.txt`, or "
":file:`README.rst`), :file:`setup.py` (or whatever you called your setup "
"script), and :file:`setup.cfg`."
msgstr ""
"任何标准的 README 文件 (:file:`README`, :file:`README.txt` 或 :file:`README.rst`), "
":file:`setup.py` (或任何你指定的安装脚本) 以及 :file:`setup.cfg`。"

#: ../../distutils/sourcedist.rst:107
msgid ""
"all files that matches the ``package_data`` metadata. See :ref:`distutils-"
"installing-package-data`."
msgstr ""
"所有匹配 ``package_data`` 元数据的文件。 参见 :ref:`distutils-installing-package-data`。"

#: ../../distutils/sourcedist.rst:110
msgid ""
"all files that matches the ``data_files`` metadata. See :ref:`distutils-"
"additional-files`."
msgstr "所有匹配 ``data_files`` 元数据的文件。 参见 :ref:`distutils-additional-files`。"

#: ../../distutils/sourcedist.rst:113
msgid ""
"Sometimes this is enough, but usually you will want to specify additional "
"files to distribute.  The typical way to do this is to write a *manifest "
"template*, called :file:`MANIFEST.in` by default.  The manifest template is "
"just a list of instructions for how to generate your manifest file, "
":file:`MANIFEST`, which is the exact list of files to include in your source"
" distribution.  The :command:`sdist` command processes this template and "
"generates a manifest based on its instructions and what it finds in the "
"filesystem."
msgstr ""
"有时这就足够了，但通常你还会希望指定要分发的额外文件。 实现这一点的通常方式是编写一个 *声明模板*，默认名称为 "
":file:`MANIFEST.in`。 声明模板就是一个有关如何生成你的声明文件 :file:`MANIFEST` "
"的指令列表，也就是要实际包括在你的源代码分发版中的文件的列表。 :command:`sdist` "
"命令会处理这个模板并基于其指令及其在文件系统中的查找结果生成一个声明文件。"

#: ../../distutils/sourcedist.rst:121
msgid ""
"If you prefer to roll your own manifest file, the format is simple: one "
"filename per line, regular files (or symlinks to them) only.  If you do "
"supply your own :file:`MANIFEST`, you must specify everything: the default "
"set of files described above does not apply in this case."
msgstr ""
"如果你想要制作你自己的声明文件，格式很简单：每行一个文件名，仅限常规文件。 如果你提供你自己的 "
":file:`MANIFEST`，你必须指明一切：上面描述的默认集将不适用于这种情况。"

#: ../../distutils/sourcedist.rst:126
msgid ""
"An existing generated :file:`MANIFEST` will be regenerated without "
":command:`sdist` comparing its modification time to the one of "
":file:`MANIFEST.in` or :file:`setup.py`."
msgstr ""
"现有的已生成 :file:`MANIFEST` 将被生成而无需 :command:`sdist` 来将其修改时间与 "
":file:`MANIFEST.in` 或 :file:`setup.py` 的修改时间进行比较。"

#: ../../distutils/sourcedist.rst:131
msgid ""
":file:`MANIFEST` files start with a comment indicating they are generated. "
"Files without this comment are not overwritten or removed."
msgstr ":file:`MANIFEST` 文件以一个表明它们已生成的注释开始。 没有这条注释的文件不会被覆盖或移除。"

#: ../../distutils/sourcedist.rst:135
msgid ""
":command:`sdist` will read a :file:`MANIFEST` file if no :file:`MANIFEST.in`"
" exists, like it used to do."
msgstr ""
":command:`sdist` 将在不存在 :file:`MANIFEST.in` 时读取一个 :file:`MANIFEST` "
"文件，如它以前所做的一样。"

#: ../../distutils/sourcedist.rst:139
msgid ""
":file:`README.rst` is now included in the list of distutils standard "
"READMEs."
msgstr ":file:`README.rst` 现在已被包括在 distutils 标准 README 列表中。"

#: ../../distutils/sourcedist.rst:143
msgid ""
"The manifest template has one command per line, where each command specifies"
" a set of files to include or exclude from the source distribution.  For an "
"example, again we turn to the Distutils' own manifest template:"
msgstr ""
"声明模板每行都有一个命令，其中每个命令指定了一组源代码发布版中要包括或排除的文件。 举例来说，我们再次关注 Distutils 自己的声明模板:"

#: ../../distutils/sourcedist.rst:153
msgid ""
"The meanings should be fairly clear: include all files in the distribution "
"root matching :file:`\\*.txt`, all files anywhere under the :file:`examples`"
" directory matching :file:`\\*.txt` or :file:`\\*.py`, and exclude all "
"directories matching :file:`examples/sample?/build`.  All of this is done "
"*after* the standard include set, so you can exclude files from the standard"
" set with explicit instructions in the manifest template.  (Or, you can use "
"the :option:`!--no-defaults` option to disable the standard set entirely.)  "
"There are several other commands available in the manifest template mini-"
"language; see section :ref:`sdist-cmd`."
msgstr ""
"其含义应当很清楚：包括发布在根目录中所有匹配 :file:`\\*.txt` 的文件，在 :file:`examples` 目录下任何位置上匹配 "
":file:`\\*.txt` 或 :file:`\\*.py` 的所有文件，并排除匹配 :file:`examples/sample?/build` "
"的所有目录。 所有这些操作都将在标准的包括集 *之后* 执行，因此你可以通过在声明模板中的显式指令来排除标准集中的文件。 （或者，你也可以使用 "
":option:`!--no-defaults` 选项来完全禁用标准集。） 在声明模板迷你语言中还有一些其他的可用命令；参见 :ref:`sdist-"
"cmd` 小节。"

#: ../../distutils/sourcedist.rst:163
msgid ""
"The order of commands in the manifest template matters: initially, we have "
"the list of default files as described above, and each command in the "
"template adds to or removes from that list of files.  Once we have fully "
"processed the manifest template, we remove files that should not be included"
" in the source distribution:"
msgstr ""
"声明模板中命令的顺序是很重要的：在初始状态下，我们有如上所述的默认文件列表，而模板中的每个命令将在该文件列表中添加或移除条目。 "
"一旦我们完全处理好声明模板，我们将再移除不应包括在源代码发布版中的文件:"

#: ../../distutils/sourcedist.rst:169
msgid "all files in the Distutils \"build\" tree (default :file:`build/`)"
msgstr "Distutils \"构建\" 目录树中的所有文件 (默认值 :file:`build/`)"

#: ../../distutils/sourcedist.rst:171
msgid ""
"all files in directories named :file:`RCS`, :file:`CVS`, :file:`.svn`, "
":file:`.hg`, :file:`.git`, :file:`.bzr` or :file:`_darcs`"
msgstr ""
"目录中所有名为 :file:`RCS`, :file:`CVS`, :file:`.svn`, :file:`.hg`, :file:`.git`, "
":file:`.bzr` 或 :file:`_darcs` 的文件"

#: ../../distutils/sourcedist.rst:174
msgid ""
"Now we have our complete list of files, which is written to the manifest for"
" future reference, and then used to build the source distribution "
"archive(s)."
msgstr "现在我们有了完整的文件列表，它已被写入声明以供将来引用，并随后用于构建源代码分发压缩 包。"

#: ../../distutils/sourcedist.rst:177
msgid ""
"You can disable the default set of included files with the :option:`!--no-"
"defaults` option, and you can disable the standard exclude set with "
":option:`!--no-prune`."
msgstr ""
"你可以通过 :option:`!--no-defaults` 选项禁用默认的包括文件集，你还可以通过 :option:`!--no-prune` "
"禁用默认的排除文件集。"

#: ../../distutils/sourcedist.rst:181
msgid ""
"Following the Distutils' own manifest template, let's trace how the "
":command:`sdist` command builds the list of files to include in the "
"Distutils source distribution:"
msgstr ""
"跟随 Distutils 自己的声明模板，让我们追踪' own manifest template, let's trace how the "
":command:`sdist` 命令是如何构建要包括在 Distutils 源代码分发版中的文件列表的:"

#: ../../distutils/sourcedist.rst:185
msgid ""
"include all Python source files in the :file:`distutils` and "
":file:`distutils/command` subdirectories (because packages corresponding to "
"those two directories were mentioned in the ``packages`` option in the setup"
" script---see section :ref:`setup-script`)"
msgstr ""
"包括 :file:`distutils` 和 :file:`distutils/command` 子目录中的所有 Python "
"源代码文件（因为与这两个目录对应的包在 setup 脚本的 ``packages`` 选项中被提及 --- 参见 :ref:`setup-script`"
" 一节）"

#: ../../distutils/sourcedist.rst:190
msgid ""
"include :file:`README.txt`, :file:`setup.py`, and :file:`setup.cfg` "
"(standard files)"
msgstr "包括 :file:`README.txt`, :file:`setup.py` 和 :file:`setup.cfg` (标准文件)"

#: ../../distutils/sourcedist.rst:193
msgid "include :file:`test/test\\*.py` (standard files)"
msgstr "包括 :file:`test/test\\*.py` (标准文件)"

#: ../../distutils/sourcedist.rst:195
msgid ""
"include :file:`\\*.txt` in the distribution root (this will find "
":file:`README.txt` a second time, but such redundancies are weeded out "
"later)"
msgstr "包括分发根目录下的 :file:`\\*.txt` (这将第二次找到 :file:`README.txt`，但这样的冗余随后会被清除)"

#: ../../distutils/sourcedist.rst:198
msgid ""
"include anything matching :file:`\\*.txt` or :file:`\\*.py` in the sub-tree "
"under :file:`examples`,"
msgstr "包括 :file:`examples` 下所有子目录树中匹配 :file:`\\*.txt` 或 :file:`\\*.py` 的任何文件，"

#: ../../distutils/sourcedist.rst:201
msgid ""
"exclude all files in the sub-trees starting at directories matching "
":file:`examples/sample?/build`\\ ---this may exclude files included by the "
"previous two steps, so it's important that the ``prune`` command in the "
"manifest template comes after the ``recursive-include`` command"
msgstr ""
"排除从匹配 :file:`examples/sample?/build` 的目录开始的子目录树中的所有文件 --- "
"这可能会排除之前两个步骤所包括的文件，因此重要的一点是声明模板中的 ``prune`` 命令应放在 ``recursive-include`` 命令之后"

#: ../../distutils/sourcedist.rst:206
msgid ""
"exclude the entire :file:`build` tree, and any :file:`RCS`, :file:`CVS`, "
":file:`.svn`, :file:`.hg`, :file:`.git`, :file:`.bzr` and :file:`_darcs` "
"directories"
msgstr ""
"排除整个 :file:`build` 目录树，以及任何 :file:`RCS`, :file:`CVS`, :file:`.svn`, "
":file:`.hg`, :file:`.git`, :file:`.bzr` and :file:`_darcs` 目录"

#: ../../distutils/sourcedist.rst:210
msgid ""
"Just like in the setup script, file and directory names in the manifest "
"template should always be slash-separated; the Distutils will take care of "
"converting them to the standard representation on your platform. That way, "
"the manifest template is portable across operating systems."
msgstr ""
"就像在设置脚本中一样，声明模板中的文件和目录名应当总是以斜杠分隔；Distutils 将会负责把它们转化为你的系统平台上的标准表示形式。 "
"通过这种方式，声明模板将可跨操作系统移植。"

#: ../../distutils/sourcedist.rst:219
msgid "Manifest-related options"
msgstr "声明相关选项"

#: ../../distutils/sourcedist.rst:221
msgid ""
"The normal course of operations for the :command:`sdist` command is as "
"follows:"
msgstr "针对 :command:`sdist` 命令的正常操作过程如下:"

#: ../../distutils/sourcedist.rst:223
msgid ""
"if the manifest file (:file:`MANIFEST` by default) exists and the first line"
" does not have a comment indicating it is generated from "
":file:`MANIFEST.in`, then it is used as is, unaltered"
msgstr ""
"如果声明文件 (默认为 :file:`MANIFEST`) 存在且第一行不为表示它是由 :file:`MANIFEST.in` "
"生成的注释，则它会被不加修改地原样使用"

#: ../../distutils/sourcedist.rst:227
msgid ""
"if the manifest file doesn't exist or has been previously automatically "
"generated, read :file:`MANIFEST.in` and create the manifest"
msgstr "如果声明文件不存在或是在此之前被自动生成的，则读取 :file:`MANIFEST.in` 并创建声明文件"

#: ../../distutils/sourcedist.rst:230
msgid ""
"if neither :file:`MANIFEST` nor :file:`MANIFEST.in` exist, create a manifest"
" with just the default file set"
msgstr "如果 :file:`MANIFEST` 或 :file:`MANIFEST.in` 均不存在，则使用默认文件集创建声明文件"

#: ../../distutils/sourcedist.rst:233
msgid ""
"use the list of files now in :file:`MANIFEST` (either just generated or read"
" in) to create the source distribution archive(s)"
msgstr "使用当前 :file:`MANIFEST` (刚生成的或读入的) 中的文件列表创建源代码分发压缩包"

#: ../../distutils/sourcedist.rst:236
msgid ""
"There are a couple of options that modify this behaviour.  First, use the "
":option:`!--no-defaults` and :option:`!--no-prune` to disable the standard "
"\"include\" and \"exclude\" sets."
msgstr ""
"有数个选项可以修改此行为。 首先，使用 :option:`!--no-defaults` 和 :option:`!--no-prune` 来禁用标准的 "
"\"包括\" 和 \"排除\" 集。"

#: ../../distutils/sourcedist.rst:240
msgid ""
"Second, you might just want to (re)generate the manifest, but not create a "
"source distribution::"
msgstr "第二，你可能只是想要（重）生成声明文件，但不想要创建源代码分发包::"

#: ../../distutils/sourcedist.rst:245
msgid ":option:`!-o` is a shortcut for :option:`!--manifest-only`."
msgstr ":option:`!-o` 是 :option:`!--manifest-only` 的缩写。"
