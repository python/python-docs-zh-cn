# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2025
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-07-25 18:10+0000\n"
"PO-Revision-Date: 2025-07-18 20:10+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2025\n"
"Language-Team: Chinese (China) (https://app.transifex.com/python-doc/teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../whatsnew/2.7.rst:3
msgid "What's New in Python 2.7"
msgstr "Python 2.7 有什么新变化"

#: ../../whatsnew/2.7.rst:0
msgid "Author"
msgstr "作者"

#: ../../whatsnew/2.7.rst:5
msgid "A.M. Kuchling (amk at amk.ca)"
msgstr "A.M. Kuchling (amk at amk.ca)"

#: ../../whatsnew/2.7.rst:52
msgid ""
"This article explains the new features in Python 2.7.  Python 2.7 was "
"released on July 3, 2010."
msgstr "本文介绍了Python 2.7 的新功能。 Python 2.7 于2010年7月3日发布。"

#: ../../whatsnew/2.7.rst:55
msgid ""
"Numeric handling has been improved in many ways, for both floating-point "
"numbers and for the :class:`~decimal.Decimal` class. There are some useful "
"additions to the standard library, such as a greatly enhanced "
":mod:`unittest` module, the :mod:`argparse` module for parsing command-line "
"options, convenient :class:`~collections.OrderedDict` and "
":class:`~collections.Counter` classes in the :mod:`collections` module, and "
"many other improvements."
msgstr ""
"数字处理在许多方面得到了改进，包括浮点数和 :class:`~decimal.Decimal` 类。标准库中有一些有用的补充，例如大大增强的 "
":mod:`unittest` 模块，用于解析命令行选项的 :mod:`argparse` 模块，在 :mod:`collections` 模块中方便的"
" :class:`~collections.OrderedDict` 和 :class:`~collections.Counter` "
"类，以及许多其他改进。"

#: ../../whatsnew/2.7.rst:63
msgid ""
"Python 2.7 is planned to be the last of the 2.x releases, so we worked on "
"making it a good release for the long term.  To help with porting to Python "
"3, several new features from the Python 3.x series have been included in "
"2.7."
msgstr ""
"Python 2.7计划成为2.x版本的最后一个发布版本，因此我们努力使其成为长期支持的好版本。为了帮助迁移到Python "
"3，我们在2.7中包含了几个来自Python 3.x系列的新特性。"

#: ../../whatsnew/2.7.rst:68
msgid ""
"This article doesn't attempt to provide a complete specification of the new "
"features, but instead provides a convenient overview.  For full details, you"
" should refer to the documentation for Python 2.7 at "
"https://docs.python.org. If you want to understand the rationale for the "
"design and implementation, refer to the PEP for a particular new feature or "
"the issue on https://bugs.python.org in which a change was discussed.  "
"Whenever possible, \"What's New in Python\" links to the bug/patch item for "
"each change."
msgstr ""
"本文并不试图提供新特性的完整规范说明，而是提供一个方便的概览。要了解完整的细节，请参阅Python "
"2.7的文档。如果你想了解有关设计和实现的具体考量，请参阅特定新特性的PEP或在https://bugs.python.org上讨论更改的问题。在可能的情况下，“What's"
" New in Python”链接到每个更改的错误修正/补丁项。"

#: ../../whatsnew/2.7.rst:80
msgid "The Future for Python 2.x"
msgstr "Python 2.x的未来"

#: ../../whatsnew/2.7.rst:82
msgid ""
"Python 2.7 is the last major release in the 2.x series, as the Python "
"maintainers have shifted the focus of their new feature development efforts "
"to the Python 3.x series. This means that while Python 2 continues to "
"receive bug fixes, and to be updated to build correctly on new hardware and "
"versions of supported operated systems, there will be no new full feature "
"releases for the language or standard library."
msgstr ""
"Python 2.7 是 2.x 系列中的最后一个主版本，因为Python 维护人员已将新功能开发工作的重点转移到了 Python 3.x "
"系列中。这意味着，尽管 Python 2 会继续修复bug并更新，以便在新的硬件和支持操作系统版本上正确构建，但不会有新的功能发布。"

#: ../../whatsnew/2.7.rst:89
msgid ""
"However, while there is a large common subset between Python 2.7 and Python "
"3, and many of the changes involved in migrating to that common subset, or "
"directly to Python 3, can be safely automated, some other changes (notably "
"those associated with Unicode handling) may require careful consideration, "
"and preferably robust automated regression test suites, to migrate "
"effectively."
msgstr ""
"然而，尽管在 Python 2.7 和 Python 3 之间有一个很大的公共子集，并且迁移到该公共子集或直接迁移到 Python 3 "
"所涉及的许多更改可以安全地自动化完成。但是一些其他更改（特别是那些与Unicode处理相关的更改）可能需要仔细考虑，并且最好用自动化回归测试套件进行健壮性测试，以便有效地迁移。"

#: ../../whatsnew/2.7.rst:96
msgid ""
"This means that Python 2.7 will remain in place for a long time, providing a"
" stable and supported base platform for production systems that have not yet"
" been ported to Python 3. The full expected lifecycle of the Python 2.7 "
"series is detailed in :pep:`373`."
msgstr ""
"这意味着 Python2.7 将长期保留，为尚未移植到 Python 3 的生产系统提供一个稳定且受支持的基础平台。Python "
"2.7系列的预期完整生命周期在 :pep:`373` 中有详细介绍。"

#: ../../whatsnew/2.7.rst:101
msgid "Some key consequences of the long-term significance of 2.7 are:"
msgstr "长期保留 2.7 版的的一些关键后果："

#: ../../whatsnew/2.7.rst:103
msgid ""
"As noted above, the 2.7 release has a much longer period of maintenance when"
" compared to earlier 2.x versions. Python 2.7 is currently expected to "
"remain supported by the core development team (receiving security updates "
"and other bug fixes) until at least 2020 (10 years after its initial "
"release, compared to the more typical support period of 18--24 months)."
msgstr ""
"如上所述，与早期的2.x版本相比，2.7版本的维护时间更长。目前，预计核心开发团队将继续支持Python "
"2.7（接收安全更新和其他错误修复），直到至少2020年（首次发布后10年，相比之下，通常的支持期为18--24个月）。"

#: ../../whatsnew/2.7.rst:109
msgid ""
"As the Python 2.7 standard library ages, making effective use of the Python "
"Package Index (either directly or via a redistributor) becomes more "
"important for Python 2 users. In addition to a wide variety of third party "
"packages for various tasks, the available packages include backports of new "
"modules and features from the Python 3 standard library that are compatible "
"with Python 2, as well as various tools and libraries that can make it "
"easier to migrate to Python 3. The `Python Packaging User Guide "
"<https://packaging.python.org>`__ provides guidance on downloading and "
"installing software from the Python Package Index."
msgstr ""
"随着 Python 2.7 标准库的老化，有效地利用 Python 包索引（直接或通过重新分发者）对 Python 2 "
"用户来说变得更加重要。除了各种任务的第三方包之外，可用的包还包括与 Python 2 兼容的 Python 3 "
"标准库中的新模块和功能的后端移植，以及各种工具和库，这些工具和库可以让用户更容易迁移到 Python 3。 `Python 包用户指南 "
"<https://packaging.python.org>`__ 提供了从 Python 包索引的下载和安装软件的指导。"

#: ../../whatsnew/2.7.rst:119
msgid ""
"While the preferred approach to enhancing Python 2 is now the publication of"
" new packages on the Python Package Index, this approach doesn't necessarily"
" work in all cases, especially those related to network security. In "
"exceptional cases that cannot be handled adequately by publishing new or "
"updated packages on PyPI, the Python Enhancement Proposal process may be "
"used to make the case for adding new features directly to the Python 2 "
"standard library. Any such additions, and the maintenance releases where "
"they were added, will be noted in the :ref:`py27-maintenance-enhancements` "
"section below."
msgstr ""
"虽然现在增强 Python 2 "
"的首选方法是在Python包索引上发布新包，但这种方法不一定适用于所有情况，尤其是与网络安全相关的情况。在一些特殊情况下，如果在PyPI上发布新的或更新的包无法得到充分的处理，则可以使用Python增强建议过程来提出直接在Python"
" 2标准库中添加新功能。任何此类添加及其添加的维护版本将在下面的 :ref:`py27-maintenance-enhancements` 部分中注明。"

#: ../../whatsnew/2.7.rst:129
msgid ""
"For projects wishing to migrate from Python 2 to Python 3, or for library "
"and framework developers wishing to support users on both Python 2 and "
"Python 3, there are a variety of tools and guides available to help decide "
"on a suitable approach and manage some of the technical details involved. "
"The recommended starting point is the :ref:`pyporting-howto` HOWTO guide."
msgstr ""
"对于希望从 Python2 迁移到 Python3 的项目，或者对于希望同时支持 Python2 和 Python3 "
"用户的库和框架开发人员，可以使用各种工具和指南来帮助决定合适的方法并管理所涉及的一些技术细节。建议从 :ref:`pyporting-howto` "
"操作指南开始。"

#: ../../whatsnew/2.7.rst:137
msgid "Changes to the Handling of Deprecation Warnings"
msgstr "对于弃用警告处理方式的改变"

#: ../../whatsnew/2.7.rst:139
msgid ""
"For Python 2.7, a policy decision was made to silence warnings only of "
"interest to developers by default.  :exc:`DeprecationWarning` and its "
"descendants are now ignored unless otherwise requested, preventing users "
"from seeing warnings triggered by an application.  This change was also made"
" in the branch that became Python 3.2. (Discussed on stdlib-sig and carried "
"out in :issue:`7319`.)"
msgstr ""
"对于 Python 2.7，一个策略决定是默认情况下禁止只对开发人员有兴趣的警告。 现在，除非另有要求，否则将忽略 "
":exc:`DeprecationWarning` 及其子类，以防止用户看到应用程序触发的警告。 这个更改也在成为Python 3.2 "
"的分歧点上进行了。 （在 stdlib-sig 上进行了讨论，并在 :issue:`7319` 中执行。）"

#: ../../whatsnew/2.7.rst:146
msgid ""
"In previous releases, :exc:`DeprecationWarning` messages were enabled by "
"default, providing Python developers with a clear indication of where their "
"code may break in a future major version of Python."
msgstr ""
"在以前的版本中，默认情况下启用了 :exc:`DeprecationWarning` 消息，为 Python "
"开发人员提供了一个明确的指示，说明他们的代码可能在未来的 Python 主要版本中出现问题。"

#: ../../whatsnew/2.7.rst:151
msgid ""
"However, there are increasingly many users of Python-based applications who "
"are not directly involved in the development of those applications.  "
":exc:`DeprecationWarning` messages are irrelevant to such users, making them"
" worry about an application that's actually working correctly and burdening "
"application developers with responding to these concerns."
msgstr ""
"然而，越来越多基于 Python 的应用程序的用户并不直接参与这些应用程序的开发。 :exc:`DeprecationWarning` "
"消息与这些用户无关，这让他们担心应用能否真正正常工作，并让应用开发人员承担起回应这些担忧的负担。"

#: ../../whatsnew/2.7.rst:158
msgid ""
"You can re-enable display of :exc:`DeprecationWarning` messages by running "
"Python with the :option:`-Wdefault <-W>` (short form: :option:`-Wd <-W>`) "
"switch, or by setting the :envvar:`PYTHONWARNINGS` environment variable to "
"``\"default\"`` (or ``\"d\"``) before running Python.  Python code can also "
"re-enable them by calling ``warnings.simplefilter('default')``."
msgstr ""
"显示通过使用 :option:`-Wdefault<-W>` (简写: :option:`-Wd<-W>`) 开关运行 Python，或者在运行 "
"Python 之前将 :envvar:`PYTHONWARNINGS` 环境变量设置为 ``\"default\"`` (或 "
"``\"d\"``)，可以重新启用 :exc:`DeprecationWarning` 消息。 Python 代码也可以通过调用 "
"``warnings.simplefilter('default')`` 重新启用它们。"

#: ../../whatsnew/2.7.rst:165
msgid ""
"The ``unittest`` module also automatically reenables deprecation warnings "
"when running tests."
msgstr "``unittest`` 模块还会在运行测试时自动重新启用弃用警告。"

#: ../../whatsnew/2.7.rst:170
msgid "Python 3.1 Features"
msgstr "Python 3.1 特性"

#: ../../whatsnew/2.7.rst:172
msgid ""
"Much as Python 2.6 incorporated features from Python 3.0, version 2.7 "
"incorporates some of the new features in Python 3.1.  The 2.x series "
"continues to provide tools for migrating to the 3.x series."
msgstr ""
"就像 Python2.6 集成了 Python3.0 的特性一样，2.7版也集成了 Python3.1 中的一些新特性。2.x "
"系列继续提供迁移到3.x系列的工具。"

#: ../../whatsnew/2.7.rst:177
msgid "A partial list of 3.1 features that were backported to 2.7:"
msgstr "3.1 功能的部分列表，这些功能已反向移植到 2.7："

#: ../../whatsnew/2.7.rst:179
msgid "The syntax for set literals (``{1,2,3}`` is a mutable set)."
msgstr "用于集合字面值的语法 (``{1,2,3}`` 是一个可变集合)。"

#: ../../whatsnew/2.7.rst:180
msgid "Dictionary and set comprehensions (``{i: i*2 for i in range(3)}``)."
msgstr "字典与集合推导式 (``{i: i*2 for i in range(3)}``)。"

#: ../../whatsnew/2.7.rst:181
msgid "Multiple context managers in a single :keyword:`with` statement."
msgstr "单个 :keyword:`with` 语句中使用多个上下文管理器。"

#: ../../whatsnew/2.7.rst:182
msgid ""
"A new version of the :mod:`io` library, rewritten in C for performance."
msgstr "一个 :mod:`io` 库的新版本，用 C 重写以提升性能。"

#: ../../whatsnew/2.7.rst:183
msgid "The ordered-dictionary type described in :ref:`pep-0372`."
msgstr ":ref:`pep-0372` 所描述的有序字典类型。"

#: ../../whatsnew/2.7.rst:184
msgid "The new ``\",\"`` format specifier described in :ref:`pep-0378`."
msgstr ":ref:`pep-0378` 所描述的新的 ``\",\"`` 格式说明符。"

#: ../../whatsnew/2.7.rst:185
msgid "The :class:`memoryview` object."
msgstr ":class:`memoryview` 对象。"

#: ../../whatsnew/2.7.rst:186
msgid ""
"A small subset of the :mod:`importlib` module, `described below <#importlib-"
"section>`__."
msgstr ":mod:`importlib` 模块的一个较小子集，`described below <#importlib-section>`__。"

#: ../../whatsnew/2.7.rst:188
msgid ""
"The :func:`repr` of a float ``x`` is shorter in many cases: it's now based "
"on the shortest decimal string that's guaranteed to round back to ``x``.  As"
" in previous versions of Python, it's guaranteed that ``float(repr(x))`` "
"recovers ``x``."
msgstr ""
"在很多情况下，浮点数 ``x`` 的 :func:`repr` 更短：现在它基于最短的十进制字符串 ，保证四舍五入到 ``x``。  与 Python "
"以前的版本一样，保证 ``float(repr(x))`` 能恢复到 ``x``。"

#: ../../whatsnew/2.7.rst:192
msgid ""
"Float-to-string and string-to-float conversions are correctly rounded. The "
":func:`round` function is also now correctly rounded."
msgstr "浮点数到字符串和字符串到浮点数的转换已正确舍入。 :func:`round` 函数现在也能正确舍入。"

#: ../../whatsnew/2.7.rst:194
msgid ""
"The :c:type:`PyCapsule` type, used to provide a C API for extension modules."
msgstr ":c:type:`PyCapsule` 类型，用于为扩展模块提供 C API 。"

#: ../../whatsnew/2.7.rst:195
msgid "The :c:func:`PyLong_AsLongAndOverflow` C API function."
msgstr ":c:func:`PyLong_AsLongAndOverflow` C API 函数 。"

#: ../../whatsnew/2.7.rst:197
msgid "Other new Python3-mode warnings include:"
msgstr "其他新的 Python3 模式警告包括："

#: ../../whatsnew/2.7.rst:199
msgid ""
":func:`operator.isCallable` and :func:`operator.sequenceIncludes`, which are"
" not supported in 3.x, now trigger warnings."
msgstr ""

#: ../../whatsnew/2.7.rst:201
msgid ""
"The :option:`!-3` switch now automatically enables the :option:`!-Qwarn` "
"switch that causes warnings about using classic division with integers and "
"long integers."
msgstr ""
":option:`!-3` 开关现在会自动启用:option:`!-Qwarn` 开关，该开关会在使用经典整除法处理整数和长整数时发出警告。"

#: ../../whatsnew/2.7.rst:214
msgid "PEP 372: Adding an Ordered Dictionary to collections"
msgstr "PEP 372：将有序字典 添加到收藏集"

#: ../../whatsnew/2.7.rst:216
msgid ""
"Regular Python dictionaries iterate over key/value pairs in arbitrary order."
" Over the years, a number of authors have written alternative "
"implementations that remember the order that the keys were originally "
"inserted.  Based on the experiences from those implementations, 2.7 "
"introduces a new :class:`~collections.OrderedDict` class in the "
":mod:`collections` module."
msgstr ""
"常规 Python 字典以任意顺序遍历键/值对。 多年来，许多作者编写了替代实现，以记住键最初插入的顺序。 基于这些实现的经验，2.7 在 "
":mod:`collections` 模块中引入了一个新的 :class:`~collections.OrderedDict` 类。"

#: ../../whatsnew/2.7.rst:222
msgid ""
"The :class:`~collections.OrderedDict` API provides the same interface as "
"regular dictionaries but iterates over keys and values in a guaranteed order"
" depending on when a key was first inserted::"
msgstr ""
":class:`~collections.OrderedDict` API 提供与普通字典相同的接口 "
"，但会根据键首次插入的时间，按一定顺序遍历键和值：："

#: ../../whatsnew/2.7.rst:233
msgid ""
"If a new entry overwrites an existing entry, the original insertion position"
" is left unchanged::"
msgstr "如果新条目覆盖了现有条目，则原插入位置保持不变 ::"

#: ../../whatsnew/2.7.rst:240
msgid "Deleting an entry and reinserting it will move it to the end::"
msgstr "删除条目并重新插入会将其移至末尾 ::"

#: ../../whatsnew/2.7.rst:247
msgid ""
"The :meth:`~collections.OrderedDict.popitem` method has an optional *last* "
"argument that defaults to ``True``.  If *last* is true, the most recently "
"added key is returned and removed; if it's false, the oldest key is "
"selected::"
msgstr ""
":meth:`~collections.OrderedDict.popitem` 方法有一个可选 *last* 参数 ，默认为 ``True`` 。如果"
" *last* 为真 ，则返回并删除最近添加的密钥；如果为 false ，则选择最旧的密钥  ::"

#: ../../whatsnew/2.7.rst:262
msgid ""
"Comparing two ordered dictionaries checks both the keys and values, and "
"requires that the insertion order was the same::"
msgstr "比较两个有序字典会同时检查键和值，并要求插入顺序相同 ::"

#: ../../whatsnew/2.7.rst:278
msgid ""
"Comparing an :class:`~collections.OrderedDict` with a regular dictionary "
"ignores the insertion order and just compares the keys and values."
msgstr "将 :class:`~collections.OrderedDict` 与普通字典进行比较时，会忽略插入顺序，只比较键和值。"

#: ../../whatsnew/2.7.rst:281
msgid ""
"How does the :class:`~collections.OrderedDict` work?  It maintains a doubly "
"linked list of keys, appending new keys to the list as they're inserted. A "
"secondary dictionary maps keys to their corresponding list node, so deletion"
" doesn't have to traverse the entire linked list and therefore remains O(1)."
msgstr ""

#: ../../whatsnew/2.7.rst:287
msgid ""
"The standard library now supports use of ordered dictionaries in several "
"modules."
msgstr "现在，标准库支持在多个模块 中使用有序字典。"

#: ../../whatsnew/2.7.rst:290
msgid ""
"The :mod:`ConfigParser` module uses them by default, meaning that "
"configuration files can now be read, modified, and then written back in "
"their original order."
msgstr ""

#: ../../whatsnew/2.7.rst:294
msgid ""
"The :meth:`~collections.somenamedtuple._asdict()` method for "
":func:`collections.namedtuple` now returns an ordered dictionary with the "
"values appearing in the same order as the underlying tuple indices."
msgstr ""
":func:`collections.namedtuple` 的 "
":meth:`~collections.somenamedtuple._asdict()` "
"方法现在会返回一个有序字典，其值的出现顺序与底层元组的索引相同。"

#: ../../whatsnew/2.7.rst:298
msgid ""
"The :mod:`json` module's :class:`~json.JSONDecoder` class constructor was "
"extended with an *object_pairs_hook* parameter to allow :class:`OrderedDict`"
" instances to be built by the decoder. Support was also added for third-"
"party tools like `PyYAML <https://pyyaml.org/>`_."
msgstr ""
":mod:`json` 模块的 :class:`~json.JSONDecoder` 类构造器扩展了一个 *object_pairs_hook* 形参 "
"，允许解码器构建 :class:`OrderedDict` 实例。此外，还添加了对第三方工具的支持，如 `PyYAML "
"<https://pyyaml.org/>`_ 。"

#: ../../whatsnew/2.7.rst:307
msgid ":pep:`372` - Adding an ordered dictionary to collections"
msgstr ":pep:`372` - 将有序词典添加到集合中"

#: ../../whatsnew/2.7.rst:307
msgid ""
"PEP written by Armin Ronacher and Raymond Hettinger; implemented by Raymond "
"Hettinger."
msgstr "PEP 由 Armin Ronacher 和 Raymond Hettinger 撰写，由 Raymond Hettinger 实现。"

#: ../../whatsnew/2.7.rst:313
msgid "PEP 378: Format Specifier for Thousands Separator"
msgstr "PEP 378: 千位分隔符的格式说明符"

#: ../../whatsnew/2.7.rst:315
msgid ""
"To make program output more readable, it can be useful to add separators to "
"large numbers, rendering them as 18,446,744,073,709,551,616 instead of "
"18446744073709551616."
msgstr ""
"为了使程序输出更易读，可以在大数字上添加分隔符，将其显示为 18,446,744,073,709,551,616 而不是 "
"18446744073709551616。"

#: ../../whatsnew/2.7.rst:319
msgid ""
"The fully general solution for doing this is the :mod:`locale` module, which"
" can use different separators (\",\" in North America, \".\" in Europe) and "
"different grouping sizes, but :mod:`locale` is complicated to use and "
"unsuitable for multi-threaded applications where different threads are "
"producing output for different locales."
msgstr ""
"完全通用的解决方案是 :mod:`locale` 模块 ，它可以使用不同的分隔符（北美为\",\"，欧洲为\".\"）和不同的分组大小，但 "
":mod:`locale` 使用起来比较复杂，而且不适合多线程应用程序，因为不同的线程会为不同的本地生成输出。"

#: ../../whatsnew/2.7.rst:325
msgid ""
"Therefore, a simple comma-grouping mechanism has been added to the mini-"
"language used by the :meth:`str.format` method.  When formatting a floating-"
"point number, simply include a comma between the width and the precision::"
msgstr ""
"因此，在 :meth:`str.format` 方法使用的迷你语言中添加了一个简单的逗号分组机制。 在格式化浮点数时，只需在宽度和精度之间加上逗号 ::"

#: ../../whatsnew/2.7.rst:333
msgid "When formatting an integer, include the comma after the width:"
msgstr "格式化整数时，在宽度后面加上逗号："

#: ../../whatsnew/2.7.rst:338
msgid ""
"This mechanism is not adaptable at all; commas are always used as the "
"separator and the grouping is always into three-digit groups.  The comma-"
"formatting mechanism isn't as general as the :mod:`locale` module, but it's "
"easier to use."
msgstr ""
"这种机制完全没有适应性；逗号总是用作分隔符，分组总是以三位数为一组。 逗号格式机制不如 :mod:`locale` 模块通用，但使用起来更方便。"

#: ../../whatsnew/2.7.rst:345
msgid ":pep:`378` - Format Specifier for Thousands Separator"
msgstr ":pep:`378` - 千位分隔符的格式说明符"

#: ../../whatsnew/2.7.rst:346
msgid "PEP written by Raymond Hettinger; implemented by Eric Smith."
msgstr "PEP 由 Raymond Hettinger 撰写，由 Eric Smith 实现"

#: ../../whatsnew/2.7.rst:349
msgid "PEP 389: The argparse Module for Parsing Command Lines"
msgstr "PEP 389：用于解析命令行的 argparse 模块 "

#: ../../whatsnew/2.7.rst:351
msgid ""
"The :mod:`argparse` module for parsing command-line arguments was added as a"
" more powerful replacement for the :mod:`optparse` module."
msgstr "用于解析命令-line参数的 :mod:`argparse` 模块是作为 :mod:`optparse` 模块更强大的替代功能而添加的。"

#: ../../whatsnew/2.7.rst:355
msgid ""
"This means Python now supports three different modules for parsing command-"
"line arguments: :mod:`getopt`, :mod:`optparse`, and :mod:`argparse`.  The "
":mod:`getopt` module closely resembles the C library's :c:func:`getopt` "
"function, so it remains useful if you're writing a Python prototype that "
"will eventually be rewritten in C. :mod:`optparse` becomes redundant, but "
"there are no plans to remove it because there are many scripts still using "
"it, and there's no automated way to update these scripts.  (Making the "
":mod:`argparse` API consistent with :mod:`optparse`'s interface was "
"discussed but rejected as too messy and difficult.)"
msgstr ""

#: ../../whatsnew/2.7.rst:366
msgid ""
"In short, if you're writing a new script and don't need to worry about "
"compatibility with earlier versions of Python, use :mod:`argparse` instead "
"of :mod:`optparse`."
msgstr ""
"简而言之，如果你是在编写新脚本并且不需要担心与 Python 较早版本的兼容性，请使用 :mod:`argparse` 而不是 "
":mod:`optparse`。"

#: ../../whatsnew/2.7.rst:370
msgid "Here's an example::"
msgstr "以下是为示例代码::"

#: ../../whatsnew/2.7.rst:393
msgid ""
"Unless you override it, :option:`!-h` and :option:`!--help` switches are "
"automatically added, and produce neatly formatted output::"
msgstr "除非你覆盖它，否则会自动添加 :option:`!-h` 和 :option:`!--help` 开关，并产生格式化良好的输出::"

#: ../../whatsnew/2.7.rst:410
msgid ""
"As with :mod:`optparse`, the command-line switches and arguments are "
"returned as an object with attributes named by the *dest* parameters::"
msgstr "与 :mod:`optparse` 一样，命令行开关和参数将返回为一个具有通过 *dest* 形参所指定的属性的对象::"

#: ../../whatsnew/2.7.rst:425
msgid ""
":mod:`argparse` has much fancier validation than :mod:`optparse`; you can "
"specify an exact number of arguments as an integer, 0 or more arguments by "
"passing ``'*'``, 1 or more by passing ``'+'``, or an optional argument with "
"``'?'``.  A top-level parser can contain sub-parsers to define subcommands "
"that have different sets of switches, as in ``svn commit``, ``svn "
"checkout``, etc.  You can specify an argument's type as "
":class:`~argparse.FileType`, which will automatically open files for you and"
" understands that ``'-'`` means standard input or output."
msgstr ""
":mod:`argparse` має набагато кращу перевірку, ніж :mod:`optparse`; ви можете"
" вказати точну кількість аргументів у вигляді цілого числа, 0 або більше "
"аргументів, передавши ``'*'``, 1 або більше, передавши ``'+'``, або "
"необов'язковий аргумент за допомогою ``'?'``. Парсер верхнього рівня може "
"містити суб-парсери для визначення підкоманд, які мають різні набори "
"перемикачів, як-от ``svn commit``, ``svn checkout`` тощо. Ви можете вказати "
"тип аргументу як :class:`~argparse.FileType`, який автоматично відкриватиме "
"для вас файли та розуміє, що ``'-'`` означає стандартне введення або "
"виведення."

#: ../../whatsnew/2.7.rst:438
msgid ":mod:`argparse` documentation"
msgstr ":mod:`argparse` 文档"

#: ../../whatsnew/2.7.rst:438
msgid "The documentation page of the argparse module."
msgstr "argparse 模块的文档页面。"

#: ../../whatsnew/2.7.rst:442
msgid ":ref:`upgrading-optparse-code`"
msgstr ":ref:`upgrading-optparse-code`"

#: ../../whatsnew/2.7.rst:441
msgid ""
"Part of the Python documentation, describing how to convert code that uses "
":mod:`optparse`."
msgstr "Python 文档的一部分，描述如何转换使用了 :mod:`optparse` 的代码。"

#: ../../whatsnew/2.7.rst:444
msgid ":pep:`389` - argparse - New Command Line Parsing Module"
msgstr ":pep:`389` - argparse - 新的命令行解析模块"

#: ../../whatsnew/2.7.rst:445
msgid "PEP written and implemented by Steven Bethard."
msgstr "PEP 由 Steven Bethard 撰写并实现。"

#: ../../whatsnew/2.7.rst:448
msgid "PEP 391: Dictionary-Based Configuration For Logging"
msgstr "PEP 391: 基于字典的日志配置"

#: ../../whatsnew/2.7.rst:450
msgid ""
"The :mod:`logging` module is very flexible; applications can define a tree "
"of logging subsystems, and each logger in this tree can filter out certain "
"messages, format them differently, and direct messages to a varying number "
"of handlers."
msgstr ""
"Модуль :mod:`logging` дуже гнучкий; Програми можуть визначати дерево "
"підсистем журналювання, і кожен реєстратор у цьому дереві може фільтрувати "
"певні повідомлення, форматувати їх по-різному та направляти повідомлення до "
"різної кількості обробників."

#: ../../whatsnew/2.7.rst:455
msgid ""
"All this flexibility can require a lot of configuration.  You can write "
"Python statements to create objects and set their properties, but a complex "
"set-up requires verbose but boring code. :mod:`logging` also supports a "
":func:`~logging.fileConfig` function that parses a file, but the file format"
" doesn't support configuring filters, and it's messier to generate "
"programmatically."
msgstr ""

#: ../../whatsnew/2.7.rst:462
msgid ""
"Python 2.7 adds a :func:`~logging.dictConfig` function that uses a "
"dictionary to configure logging.  There are many ways to produce a "
"dictionary from different sources: construct one with code; parse a file "
"containing JSON; or use a YAML parsing library if one is installed.  For "
"more information see :ref:`logging-config-api`."
msgstr ""

#: ../../whatsnew/2.7.rst:468
msgid ""
"The following example configures two loggers, the root logger and a logger "
"named \"network\".  Messages sent to the root logger will be sent to the "
"system log using the syslog protocol, and messages to the \"network\" logger"
" will be written to a :file:`network.log` file that will be rotated once the"
" log reaches 1MB."
msgstr ""
"У наступному прикладі налаштовуються два реєстратори, кореневий реєстратор і"
" реєстратор під назвою \"мережа\". Повідомлення, надіслані до кореневого "
"реєстратора, надсилатимуться до системного журналу за допомогою протоколу "
"системного журналу, а повідомлення до \"мережевого\" реєстратора "
"записуватимуться у файл :file:`network.log`, який буде обертатися, коли "
"розмір журналу досягне 1 МБ."

#: ../../whatsnew/2.7.rst:518
msgid ""
"Three smaller enhancements to the :mod:`logging` module, all implemented by "
"Vinay Sajip, are:"
msgstr ""
"Три менші вдосконалення модуля :mod:`logging`, усі реалізовані Вінаєм "
"Саджипом, це:"

#: ../../whatsnew/2.7.rst:523
msgid ""
"The :class:`~logging.handlers.SysLogHandler` class now supports syslogging "
"over TCP.  The constructor has a *socktype* parameter giving the type of "
"socket to use, either :const:`socket.SOCK_DGRAM` for UDP or "
":const:`socket.SOCK_STREAM` for TCP.  The default protocol remains UDP."
msgstr ""
"Клас :class:`~logging.handlers.SysLogHandler` тепер підтримує ведення "
"системного журналу через TCP. Конструктор має параметр *socktype*, що вказує"
" тип сокета для використання: :const:`socket.SOCK_DGRAM` для UDP або "
":const:`socket.SOCK_STREAM` для TCP. Стандартним протоколом залишається UDP."

#: ../../whatsnew/2.7.rst:529
msgid ""
":class:`~logging.Logger` instances gained a :meth:`~logging.Logger.getChild`"
" method that retrieves a descendant logger using a relative path. For "
"example, once you retrieve a logger by doing ``log = getLogger('app')``, "
"calling ``log.getChild('network.listen')`` is equivalent to "
"``getLogger('app.network.listen')``."
msgstr ""
"Екземпляри :class:`~logging.Logger` отримали метод "
":meth:`~logging.Logger.getChild`, який отримує реєстратор-нащадок за "
"допомогою відносного шляху. Наприклад, якщо ви отримуєте реєстратор за "
"допомогою ``log = getLogger('app')``, виклик "
"``log.getChild('network.listen')`` еквівалентний ``getLogger('app.network. "
"слухай')``."

#: ../../whatsnew/2.7.rst:535
msgid ""
"The :class:`~logging.LoggerAdapter` class gained an "
":meth:`~logging.LoggerAdapter.isEnabledFor` method that takes a *level* and "
"returns whether the underlying logger would process a message of that level "
"of importance."
msgstr ""

#: ../../whatsnew/2.7.rst:544
msgid ":pep:`391` - Dictionary-Based Configuration For Logging"
msgstr ":pep:`391` - 基于字典的日志配置"

#: ../../whatsnew/2.7.rst:545
msgid "PEP written and implemented by Vinay Sajip."
msgstr "PEP 由 Vinay Sajip 撰写并实现"

#: ../../whatsnew/2.7.rst:548
msgid "PEP 3106: Dictionary Views"
msgstr "PEP 3106: 字典视图"

#: ../../whatsnew/2.7.rst:550
msgid ""
"The dictionary methods :meth:`~dict.keys`, :meth:`~dict.values`, and "
":meth:`~dict.items` are different in Python 3.x.  They return an object "
"called a :dfn:`view` instead of a fully materialized list."
msgstr ""
"字典方法 :meth:`~dict.keys`, :meth:`~dict.values`, and :meth:`~dict.items` 在 "
"Python 3.x 有所不同。 它们将返回名为 :dfn:`view` 的对象而不是完整的列表。"

#: ../../whatsnew/2.7.rst:554
msgid ""
"It's not possible to change the return values of :meth:`~dict.keys`, "
":meth:`~dict.values`, and :meth:`~dict.items` in Python 2.7 because too much"
" code would break.  Instead the 3.x versions were added under the new names "
":meth:`~dict.viewkeys`, :meth:`~dict.viewvalues`, and "
":meth:`~dict.viewitems`."
msgstr ""

#: ../../whatsnew/2.7.rst:568
msgid ""
"Views can be iterated over, but the key and item views also behave like "
"sets.  The ``&`` operator performs intersection, and ``|`` performs a "
"union::"
msgstr "视图可以被迭代，但键和条目视图的行为也很像是集合。 ``&`` 运算符执行交集运算，``|`` 执行并集运算::"

#: ../../whatsnew/2.7.rst:579
msgid ""
"The view keeps track of the dictionary and its contents change as the "
"dictionary is modified::"
msgstr "视图会追踪字典及字典被修改时的内容变化::"

#: ../../whatsnew/2.7.rst:589
msgid ""
"However, note that you can't add or remove keys while you're iterating over "
"the view::"
msgstr "但是，请注意在对视图进行迭代时你是不能添加或移除键的::"

#: ../../whatsnew/2.7.rst:599
msgid ""
"You can use the view methods in Python 2.x code, and the 2to3 converter will"
" change them to the standard :meth:`~dict.keys`, :meth:`~dict.values`, and "
":meth:`~dict.items` methods."
msgstr ""
"Ви можете використовувати методи перегляду в коді Python 2.x, а конвертер "
"2to3 змінить їх на стандартні :meth:`~dict.keys`, :meth:`~dict.values` і "
"Методи :meth:`~dict.items`."

#: ../../whatsnew/2.7.rst:606
msgid ":pep:`3106` - Revamping dict.keys(), .values() and .items()"
msgstr ":pep:`3106` - 改造 dict.keys(), .values() 和 .items()"

#: ../../whatsnew/2.7.rst:606
msgid ""
"PEP written by Guido van Rossum. Backported to 2.7 by Alexandre Vassalotti; "
":issue:`1967`."
msgstr ""
"PEP 由 Guido van Rossum 撰写。 由 Alexandre Vassalotti 反向移植到 2.7； :issue:`1967`。"

#: ../../whatsnew/2.7.rst:611
msgid "PEP 3137: The memoryview Object"
msgstr "PEP 3137: memoryview 对象"

#: ../../whatsnew/2.7.rst:613
msgid ""
"The :class:`memoryview` object provides a view of another object's memory "
"content that matches the :class:`bytes` type's interface."
msgstr ":class:`memoryview` 对象提供与 :class:`bytes` 类型的接口相匹配的另一个对象的内存内容的视图。"

#: ../../whatsnew/2.7.rst:631
msgid ""
"The content of the view can be converted to a string of bytes or a list of "
"integers:"
msgstr "视图的内容可被转换为一个字节串或整数列表："

#: ../../whatsnew/2.7.rst:643
msgid ""
":class:`memoryview` objects allow modifying the underlying object if it's a "
"mutable object."
msgstr ":class:`memoryview` 对象允许对属于可变对象的下层对象进行修改。"

#: ../../whatsnew/2.7.rst:666
msgid ":pep:`3137` - Immutable Bytes and Mutable Buffer"
msgstr ":pep:`3137` - 不变字节和可变缓冲区"

#: ../../whatsnew/2.7.rst:665
msgid ""
"PEP written by Guido van Rossum. Implemented by Travis Oliphant, Antoine "
"Pitrou and others. Backported to 2.7 by Antoine Pitrou; :issue:`2396`."
msgstr ""
"PEP 由 Guido van Rossum 撰写。 由 Travis Oliphant, Antoine Pitrou 等人实现。 由 Antoine"
" Pitrou 向下移植到 2.7; :issue:`2396`。"

#: ../../whatsnew/2.7.rst:672
msgid "Other Language Changes"
msgstr "其他语言特性修改"

#: ../../whatsnew/2.7.rst:674
msgid "Some smaller changes made to the core Python language are:"
msgstr "对Python 语言核心进行的小改动："

#: ../../whatsnew/2.7.rst:676
msgid ""
"The syntax for set literals has been backported from Python 3.x. Curly "
"brackets are used to surround the contents of the resulting mutable set; set"
" literals are distinguished from dictionaries by not containing colons and "
"values. ``{}`` continues to represent an empty dictionary; use ``set()`` for"
" an empty set."
msgstr ""
"已从 Python 3.x 向下移植了集合字面值语法。 使用花括号来标记可变集合的内容；集合与字典的区别在于它不包含冒号及映射的值。 ``{}`` "
"仍然表示空字典；请使用 ``set()`` 来表示空集合。"

#: ../../whatsnew/2.7.rst:693
msgid "Backported by Alexandre Vassalotti; :issue:`2335`."
msgstr "由 Alexandre Vassalotti 向下移植; :issue:`2335`。"

#: ../../whatsnew/2.7.rst:695
msgid ""
"Dictionary and set comprehensions are another feature backported from 3.x, "
"generalizing list/generator comprehensions to use the literal syntax for "
"sets and dictionaries."
msgstr "字典与集合推导式是另一个从 3.x 向下移植的特性，对列表/生成器推导式进行一般化以针对集合与字典使用字面值语法。"

#: ../../whatsnew/2.7.rst:707
msgid "Backported by Alexandre Vassalotti; :issue:`2333`."
msgstr "由 Alexandre Vassalotti 向下移植; :issue:`2333`。"

#: ../../whatsnew/2.7.rst:709
msgid ""
"The :keyword:`with` statement can now use multiple context managers in one "
"statement.  Context managers are processed from left to right and each one "
"is treated as beginning a new :keyword:`!with` statement. This means that::"
msgstr ""
"现在 :keyword:`with` 语句可以在一个语句中使用多个上下文管理器。 上下文管理器将按从左到右的顺序处理并且每个都会被视为开始一个新的 "
":keyword:`!with` 语句。 这意味着::"

#: ../../whatsnew/2.7.rst:717
msgid "is equivalent to::"
msgstr "相当于::"

#: ../../whatsnew/2.7.rst:723
msgid ""
"The :func:`contextlib.nested` function provides a very similar function, so "
"it's no longer necessary and has been deprecated."
msgstr ""

#: ../../whatsnew/2.7.rst:726
msgid ""
"(Proposed in https://codereview.appspot.com/53094; implemented by Georg "
"Brandl.)"
msgstr ""
"(Запропоновано в https://codereview.appspot.com/53094; реалізовано Георгом "
"Брандлом.)"

#: ../../whatsnew/2.7.rst:729
msgid ""
"Conversions between floating-point numbers and strings are now correctly "
"rounded on most platforms.  These conversions occur in many different "
"places: :func:`str` on floats and complex numbers; the :class:`float` and "
":class:`complex` constructors; numeric formatting; serializing and "
"deserializing floats and complex numbers using the :mod:`marshal`, "
":mod:`pickle` and :mod:`json` modules; parsing of float and imaginary "
"literals in Python code; and :class:`~decimal.Decimal`-to-float conversion."
msgstr ""
"Перетворення між числами з плаваючою комою та рядками тепер правильно "
"округлені на більшості платформ. Ці перетворення відбуваються в багатьох "
"різних місцях: :func:`str` для чисел з плаваючою точкою та комплексних "
"чисел; конструктори :class:`float` і :class:`complex`; форматування чисел; "
"серіалізація та десеріалізація плаваючих і комплексних чисел за допомогою "
"модулів :mod:`marshal`, :mod:`pickle` і :mod:`json`; розбір літералів з "
"плаваючою точкою та уявних літералів у коді Python; і перетворення з "
":class:`~decimal.Decimal` в число з плаваючою точкою."

#: ../../whatsnew/2.7.rst:741
msgid ""
"Related to this, the :func:`repr` of a floating-point number *x* now returns"
" a result based on the shortest decimal string that's guaranteed to round "
"back to *x* under correct rounding (with round-half-to-even rounding mode)."
"  Previously it gave a string based on rounding x to 17 decimal digits."
msgstr ""
"Пов’язано з цим, :func:`repr` числа з плаваючою комою *x* тепер повертає "
"результат на основі найкоротшого десяткового рядка, який гарантовано "
"повертається до *x* за правильного округлення (з округленням від половини "
"до- рівномірний режим округлення). Раніше він давав рядок на основі "
"округлення x до 17 десяткових цифр."

#: ../../whatsnew/2.7.rst:749
msgid ""
"The rounding library responsible for this improvement works on Windows and "
"on Unix platforms using the gcc, icc, or suncc compilers.  There may be a "
"small number of platforms where correct operation of this code cannot be "
"guaranteed, so the code is not used on such systems.  You can find out which"
" code is being used by checking :data:`sys.float_repr_style`,  which will be"
" ``short`` if the new code is in use and ``legacy`` if it isn't."
msgstr ""
"Бібліотека округлення, відповідальна за це вдосконалення, працює на "
"платформах Windows і Unix за допомогою компіляторів gcc, icc або suncc. Може"
" існувати невелика кількість платформ, на яких коректна робота цього коду не"
" може бути гарантована, тому код не використовується в таких системах. Ви "
"можете дізнатися, який код використовується, перевіривши "
":data:`sys.float_repr_style`, який буде ``short``, якщо новий код "
"використовується, і ``legacy``, якщо він не використовується."

#: ../../whatsnew/2.7.rst:757
msgid ""
"Implemented by Eric Smith and Mark Dickinson, using David Gay's "
":file:`dtoa.c` library; :issue:`7117`."
msgstr ""
"Реалізовано Еріком Смітом і Марком Дікінсоном, використовуючи бібліотеку "
":file:`dtoa.c` Девіда Гея; :issue:`7117`."

#: ../../whatsnew/2.7.rst:760
msgid ""
"Conversions from long integers and regular integers to floating point now "
"round differently, returning the floating-point number closest to the "
"number.  This doesn't matter for small integers that can be converted "
"exactly, but for large numbers that will unavoidably lose precision, Python "
"2.7 now approximates more closely.  For example, Python 2.6 computed the "
"following::"
msgstr ""
"Перетворення довгих цілих і звичайних цілих чисел у числа з плаваючою комою "
"тепер округлюються по-різному, повертаючи найближче до числа число з "
"плаваючою комою. Це не має значення для малих цілих чисел, які можна точно "
"перетворити, але для великих чисел, які неминуче втратять точність, Python "
"2.7 тепер наближається точніше. Наприклад, Python 2.6 обчислив наступне:"

#: ../../whatsnew/2.7.rst:773
msgid ""
"Python 2.7's floating-point result is larger, but much closer to the true "
"value::"
msgstr ""
"Результат Python 2.7 з плаваючою комою більший, але набагато ближчий до "
"справжнього значення::"

#: ../../whatsnew/2.7.rst:782
msgid "(Implemented by Mark Dickinson; :issue:`3166`.)"
msgstr "(Реалізовано Марком Дікінсоном; :issue:`3166`.)"

#: ../../whatsnew/2.7.rst:784
msgid ""
"Integer division is also more accurate in its rounding behaviours.  (Also "
"implemented by Mark Dickinson; :issue:`1811`.)"
msgstr ""
"Цілочисельне ділення також є більш точним у своїй поведінці округлення. "
"(Також реалізовано Марком Дікінсоном; :issue:`1811`.)"

#: ../../whatsnew/2.7.rst:787
msgid ""
"Implicit coercion for complex numbers has been removed; the interpreter will"
" no longer ever attempt to call a :meth:`__coerce__` method on complex "
"objects.  (Removed by Meador Inge and Mark Dickinson; :issue:`5211`.)"
msgstr ""

#: ../../whatsnew/2.7.rst:791
msgid ""
"The :meth:`str.format` method now supports automatic numbering of the "
"replacement fields.  This makes using :meth:`str.format` more closely "
"resemble using ``%s`` formatting::"
msgstr ""
"Метод :meth:`str.format` тепер підтримує автоматичну нумерацію полів заміни."
" Це робить використання :meth:`str.format` більш схожим на використання "
"``%s`` форматування::"

#: ../../whatsnew/2.7.rst:800
msgid ""
"The auto-numbering takes the fields from left to right, so the first "
"``{...}`` specifier will use the first argument to :meth:`str.format`, the "
"next specifier will use the next argument, and so on.  You can't mix auto-"
"numbering and explicit numbering -- either number all of your specifier "
"fields or none of them -- but you can mix auto-numbering and named fields, "
"as in the second example above.  (Contributed by Eric Smith; :issue:`5237`.)"
msgstr ""
"Автоматична нумерація виконує поля зліва направо, тому перший специфікатор "
"``{...}`` використовуватиме перший аргумент :meth:`str.format`, наступний "
"специфікатор використовуватиме наступний аргумент, а так далі. Ви не можете "
"змішувати автоматичну нумерацію та явну нумерацію — або пронумеруйте всі "
"поля специфікаторів, або жодне з них — але ви можете поєднувати автоматичну "
"нумерацію та іменовані поля, як у другому прикладі вище. (Надав Ерік Сміт; "
":issue:`5237`.)"

#: ../../whatsnew/2.7.rst:807
msgid ""
"Complex numbers now correctly support usage with :func:`format`, and default"
" to being right-aligned. Specifying a precision or comma-separation applies "
"to both the real and imaginary parts of the number, but a specified field "
"width and alignment is applied to the whole of the resulting ``1.5+3j`` "
"output.  (Contributed by Eric Smith; :issue:`1588` and :issue:`7988`.)"
msgstr ""
"Комплексні числа тепер правильно підтримують використання з :func:`format` і"
" за замовчуванням вирівнюються по правому краю. Вказівка точності або "
"розділення комами застосовується як до дійсної, так і до уявної частин "
"числа, але задана ширина поля та вирівнювання застосовуються до всього "
"результуючого результату ``1,5+3j``. (Надав Ерік Сміт; :issue:`1588` і "
":issue:`7988`.)"

#: ../../whatsnew/2.7.rst:814
msgid ""
"The 'F' format code now always formats its output using uppercase "
"characters, so it will now produce 'INF' and 'NAN'. (Contributed by Eric "
"Smith; :issue:`3382`.)"
msgstr ""
"Код формату \"F\" тепер завжди форматує вихідні дані за допомогою символів у"
" верхньому регістрі, тому тепер він створюватиме \"INF\" і \"NAN\". (Надав "
"Ерік Сміт; :issue:`3382`.)"

#: ../../whatsnew/2.7.rst:818
msgid ""
"A low-level change: the :meth:`object.__format__` method now triggers a "
":exc:`PendingDeprecationWarning` if it's passed a format string, because the"
" :meth:`__format__` method for :class:`object` converts the object to a "
"string representation and formats that.  Previously the method silently "
"applied the format string to the string representation, but that could hide "
"mistakes in Python code.  If you're supplying formatting information such as"
" an alignment or precision, presumably you're expecting the formatting to be"
" applied in some object-specific way.  (Fixed by Eric Smith; :issue:`7994`.)"
msgstr ""

#: ../../whatsnew/2.7.rst:828
msgid ""
"The :func:`int` and :func:`long` types gained a ``bit_length`` method that "
"returns the number of bits necessary to represent its argument in binary::"
msgstr ""

#: ../../whatsnew/2.7.rst:843
msgid "(Contributed by Fredrik Johansson and Victor Stinner; :issue:`3439`.)"
msgstr ""
"(Kontribusi dari Fredrik Johansson dan Victor Stinner; :issue:`3439`.)"

#: ../../whatsnew/2.7.rst:845
msgid ""
"The :keyword:`import` statement will no longer try an absolute import if a "
"relative import (e.g. ``from .os import sep``) fails.  This fixes a bug, but"
" could possibly break certain :keyword:`!import` statements that were only "
"working by accident.  (Fixed by Meador Inge; :issue:`7902`.)"
msgstr ""
"Оператор :keyword:`import` більше не намагатиметься виконати абсолютний "
"імпорт, якщо відносний імпорт (наприклад, ``from .os import sep``) не "
"вдається. Це виправляє помилку, але, можливо, може порушити певні оператори "
":keyword:`!import`, які працювали лише випадково. (Виправлено Meador Inge; "
":issue:`7902`.)"

#: ../../whatsnew/2.7.rst:851
msgid ""
"It's now possible for a subclass of the built-in :class:`unicode` type to "
"override the :meth:`__unicode__` method.  (Implemented by Victor Stinner; "
":issue:`1583863`.)"
msgstr ""

#: ../../whatsnew/2.7.rst:855
msgid ""
"The :class:`bytearray` type's :meth:`~bytearray.translate` method now "
"accepts ``None`` as its first argument.  (Fixed by Georg Brandl; "
":issue:`4759`.)"
msgstr ""
"Метод :meth:`~bytearray.translate` типу :class:`bytearray` тепер приймає як "
"перший аргумент ``None``. (Виправлено Георгом Брандлом; :issue:`4759`.)"

#: ../../whatsnew/2.7.rst:861
msgid ""
"When using ``@classmethod`` and ``@staticmethod`` to wrap methods as class "
"or static methods, the wrapper object now exposes the wrapped function as "
"their :attr:`__func__` attribute. (Contributed by Amaury Forgeot d'Arc, "
"after a suggestion by George Sakkis; :issue:`5982`.)"
msgstr ""

#: ../../whatsnew/2.7.rst:867 ../../whatsnew/2.7.rst:2462
msgid ""
"When a restricted set of attributes were set using ``__slots__``, deleting "
"an unset attribute would not raise :exc:`AttributeError` as you would "
"expect.  Fixed by Benjamin Peterson; :issue:`7604`.)"
msgstr ""
"Коли обмежений набір атрибутів було встановлено за допомогою ``__slots__``, "
"видалення невстановленого атрибута не викликало б :exc:`AttributeError`, як "
"ви очікували. Виправлено Бенджаміном Петерсоном; :issue:`7604`.)"

#: ../../whatsnew/2.7.rst:871
msgid ""
"Two new encodings are now supported: \"cp720\", used primarily for Arabic "
"text; and \"cp858\", a variant of CP 850 that adds the euro symbol.  (CP720 "
"contributed by Alexander Belchenko and Amaury Forgeot d'Arc in "
":issue:`1616979`; CP858 contributed by Tim Hatch in :issue:`8016`.)"
msgstr ""
"Тепер підтримуються два нових кодування: \"cp720\", що використовується "
"переважно для арабського тексту; і \"cp858\", варіант CP 850, який додає "
"символ євро. (CP720 надано Олександром Бельченком і Аморі Форже д'Арком у "
":issue:`1616979`; CP858 надано Тімом Хетчем у :issue:`8016`.)"

#: ../../whatsnew/2.7.rst:877
msgid ""
"The :class:`file` object will now set the :attr:`filename` attribute on the "
":exc:`IOError` exception when trying to open a directory on POSIX platforms "
"(noted by Jan Kaliszewski; :issue:`4764`), and now explicitly checks for and"
" forbids writing to read-only file objects instead of trusting the C library"
" to catch and report the error (fixed by Stefan Krah; :issue:`5677`)."
msgstr ""

#: ../../whatsnew/2.7.rst:884
msgid ""
"The Python tokenizer now translates line endings itself, so the "
":func:`compile` built-in function now accepts code using any line-ending "
"convention.  Additionally, it no longer requires that the code end in a "
"newline."
msgstr ""
"Токенізатор Python тепер сам перекладає закінчення рядків, тож вбудована "
"функція :func:`compile` тепер приймає код із використанням будь-якої угоди "
"про закінчення рядків. Крім того, більше не потрібно, щоб код закінчувався "
"символом нового рядка."

#: ../../whatsnew/2.7.rst:889
msgid ""
"Extra parentheses in function definitions are illegal in Python 3.x, meaning"
" that you get a syntax error from ``def f((x)): pass``.  In Python3-warning "
"mode, Python 2.7 will now warn about this odd usage. (Noted by James "
"Lingard; :issue:`7362`.)"
msgstr ""
"Додаткові круглі дужки у визначеннях функцій заборонені в Python 3.x, що "
"означає, що ви отримуєте синтаксичну помилку від ``def f((x)): pass``. У "
"режимі попередження Python3 Python 2.7 тепер попереджатиме про це дивне "
"використання. (Примітив Джеймс Лінгард; :issue:`7362`.)"

#: ../../whatsnew/2.7.rst:894
msgid ""
"It's now possible to create weak references to old-style class objects.  "
"New-style classes were always weak-referenceable.  (Fixed by Antoine Pitrou;"
" :issue:`8268`.)"
msgstr ""
"Тепер можна створювати слабкі посилання на об’єкти класу старого стилю. "
"Класи нового стилю завжди мали слабкі посилання. (Виправлено Антуаном Пітру;"
" :issue:`8268`.)"

#: ../../whatsnew/2.7.rst:898
msgid ""
"When a module object is garbage-collected, the module's dictionary is now "
"only cleared if no one else is holding a reference to the dictionary "
"(:issue:`7140`)."
msgstr ""
"Коли об’єкт модуля збирає сміття, словник модуля тепер очищається, лише якщо"
" ніхто інший не містить посилання на словник (:issue:`7140`)."

#: ../../whatsnew/2.7.rst:907
msgid "Interpreter Changes"
msgstr "解释器改动"

#: ../../whatsnew/2.7.rst:909
msgid ""
"A new environment variable, :envvar:`PYTHONWARNINGS`, allows controlling "
"warnings.  It should be set to a string containing warning settings, "
"equivalent to those used with the :option:`-W` switch, separated by commas. "
"(Contributed by Brian Curtin; :issue:`7301`.)"
msgstr ""
"Нова змінна середовища, :envvar:`PYTHONWARNINGS`, дозволяє контролювати "
"попередження. Його слід встановити на рядок, що містить параметри "
"попередження, еквівалентні тим, що використовуються з перемикачем "
":option:`-W`, розділені комами. (Надав Браян Кертін; :issue:`7301`.)"

#: ../../whatsnew/2.7.rst:915
msgid ""
"For example, the following setting will print warnings every time they "
"occur, but turn warnings from the :mod:`Cookie` module into an error.  (The "
"exact syntax for setting an environment variable varies across operating "
"systems and shells.)"
msgstr ""

#: ../../whatsnew/2.7.rst:928
msgid "Optimizations"
msgstr "性能优化"

#: ../../whatsnew/2.7.rst:930
msgid "Several performance enhancements have been added:"
msgstr "Додано кілька покращень продуктивності:"

#: ../../whatsnew/2.7.rst:932
msgid ""
"A new opcode was added to perform the initial setup for :keyword:`with` "
"statements, looking up the :meth:`__enter__` and :meth:`__exit__` methods.  "
"(Contributed by Benjamin Peterson.)"
msgstr ""

#: ../../whatsnew/2.7.rst:936
msgid ""
"The garbage collector now performs better for one common usage pattern: when"
" many objects are being allocated without deallocating any of them.  This "
"would previously take quadratic time for garbage collection, but now the "
"number of full garbage collections is reduced as the number of objects on "
"the heap grows. The new logic only performs a full garbage collection pass "
"when the middle generation has been collected 10 times and when the number "
"of survivor objects from the middle generation exceeds 10% of the number of "
"objects in the oldest generation.  (Suggested by Martin von Löwis and "
"implemented by Antoine Pitrou; :issue:`4074`.)"
msgstr ""
"Збирач сміття тепер працює краще для одного загального шаблону використання:"
" коли багато об’єктів виділяється без відміни жодного з них. Раніше це "
"займало квадратичний час для збирання сміття, але тепер кількість повних "
"збирань сміття зменшується, оскільки кількість об’єктів у купі зростає. Нова"
" логіка виконує повне збирання сміття лише тоді, коли середнє покоління було"
" зібрано 10 разів і коли кількість уцілілих об’єктів із середнього покоління"
" перевищує 10% від кількості об’єктів у найстарішому поколінні. "
"(Запропоновано Мартіном фон Льовісом і реалізовано Антуаном Пітру; "
":issue:`4074`.)"

#: ../../whatsnew/2.7.rst:947
msgid ""
"The garbage collector tries to avoid tracking simple containers which can't "
"be part of a cycle. In Python 2.7, this is now true for tuples and dicts "
"containing atomic types (such as ints, strings, etc.). Transitively, a dict "
"containing tuples of atomic types won't be tracked either. This helps reduce"
" the cost of each garbage collection by decreasing the number of objects to "
"be considered and traversed by the collector. (Contributed by Antoine "
"Pitrou; :issue:`4688`.)"
msgstr ""
"Збирач сміття намагається уникати відстеження простих контейнерів, які не "
"можуть бути частиною циклу. У Python 2.7 це тепер вірно для кортежів і "
"dicts, що містять атомарні типи (такі як int, strings тощо). Транзитивно, "
"dict, що містить кортежі атомарних типів, також не відстежуватиметься. Це "
"допомагає зменшити вартість кожного збору сміття за рахунок зменшення "
"кількості об’єктів, які розглядаються та обходяться збирачем. (Надав Антуан "
"Пітру; :issue:`4688`.)"

#: ../../whatsnew/2.7.rst:956
msgid ""
"Long integers are now stored internally either in base ``2**15`` or in base "
"``2**30``, the base being determined at build time.  Previously, they were "
"always stored in base ``2**15``.  Using base ``2**30`` gives significant "
"performance improvements on 64-bit machines, but benchmark results on 32-bit"
" machines have been mixed.  Therefore, the default is to use base ``2**30`` "
"on 64-bit machines and base ``2**15`` on 32-bit machines; on Unix, there's a"
" new configure option :option:`!--enable-big-digits` that can be used to "
"override this default."
msgstr ""
"Довгі цілі числа тепер зберігаються внутрішньо або в основі ``2**15``, або в"
" базі ``2**30``, причому база визначається під час створення. Раніше вони "
"завжди зберігалися в базі ``2**15``. Використання бази ``2**30`` дає значне "
"покращення продуктивності на 64-розрядних машинах, але результати "
"порівняльного тестування на 32-розрядних машинах були неоднозначними. Тому "
"за замовчуванням на 64-розрядних машинах використовується основа ``2**30`` і"
" основа ``2**15`` на 32-розрядних машинах; в Unix є новий параметр "
"конфігурації :option:`!--enable-big-digits`, який можна використовувати для "
"заміни цього значення за замовчуванням."

#: ../../whatsnew/2.7.rst:965
msgid ""
"Apart from the performance improvements this change should be invisible to "
"end users, with one exception: for testing and debugging purposes there's a "
"new structseq :data:`sys.long_info` that provides information about the "
"internal format, giving the number of bits per digit and the size in bytes "
"of the C type used to store each digit::"
msgstr ""

#: ../../whatsnew/2.7.rst:976
msgid "(Contributed by Mark Dickinson; :issue:`4258`.)"
msgstr "（由 Mark Dickinson在 :issue:`4258` 贡献）"

#: ../../whatsnew/2.7.rst:978
msgid ""
"Another set of changes made long objects a few bytes smaller: 2 bytes "
"smaller on 32-bit systems and 6 bytes on 64-bit. (Contributed by Mark "
"Dickinson; :issue:`5260`.)"
msgstr ""
"Інший набір змін зробив довгі об’єкти на кілька байтів меншими: на 2 байти "
"менше в 32-бітних системах і на 6 байтів у 64-бітних. (Надав Марк Дікінсон; "
":issue:`5260`.)"

#: ../../whatsnew/2.7.rst:982
msgid ""
"The division algorithm for long integers has been made faster by tightening "
"the inner loop, doing shifts instead of multiplications, and fixing an "
"unnecessary extra iteration. Various benchmarks show speedups of between 50%"
" and 150% for long integer divisions and modulo operations. (Contributed by "
"Mark Dickinson; :issue:`5512`.) Bitwise operations are also significantly "
"faster (initial patch by Gregory Smith; :issue:`1087418`)."
msgstr ""
"Алгоритм ділення для довгих цілих чисел було зроблено швидшим завдяки "
"посиленню внутрішнього циклу, виконанню зсувів замість множень і виправленню"
" непотрібної додаткової ітерації. Різні контрольні тести показують "
"прискорення від 50% до 150% для довгих цілих ділень і операцій за модулем. "
"(Надано Марком Дікінсоном; :issue:`5512`.) Побітові операції також значно "
"швидші (початковий патч Грегорі Сміта; :issue:`1087418`)."

#: ../../whatsnew/2.7.rst:991
msgid ""
"The implementation of ``%`` checks for the left-side operand being a Python "
"string and special-cases it; this results in a 1--3% performance increase "
"for applications that frequently use ``%`` with strings, such as templating "
"libraries. (Implemented by Collin Winter; :issue:`5176`.)"
msgstr ""
"Реалізація ``%`` перевіряє, чи лівий операнд є рядком Python, і вводить його"
" в спеціальні регістри; це призводить до збільшення продуктивності на 1--3% "
"для програм, які часто використовують ``%`` з рядками, наприклад бібліотек "
"шаблонів. (Реалізовано Колліном Вінтером; :issue:`5176`.)"

#: ../../whatsnew/2.7.rst:997
msgid ""
"List comprehensions with an ``if`` condition are compiled into faster "
"bytecode.  (Patch by Antoine Pitrou, back-ported to 2.7 by Jeffrey Yasskin; "
":issue:`4715`.)"
msgstr ""
"Розуміння списків із умовою ``if`` компілюється у швидший байт-код. (Патч "
"Антуана Пітру, перенесено на 2.7 Джеффрі Яскіним; :issue:`4715`.)"

#: ../../whatsnew/2.7.rst:1001
msgid ""
"Converting an integer or long integer to a decimal string was made faster by"
" special-casing base 10 instead of using a generalized conversion function "
"that supports arbitrary bases. (Patch by Gawain Bolton; :issue:`6713`.)"
msgstr ""
"Перетворення цілого або довгого цілого числа в десятковий рядок стало "
"швидшим за допомогою спеціальної бази 10 замість використання узагальненої "
"функції перетворення, яка підтримує довільні основи. (Патч від Гавейна "
"Болтона; :issue:`6713`.)"

#: ../../whatsnew/2.7.rst:1006
msgid ""
"The :meth:`split`, :meth:`replace`, :meth:`rindex`, :meth:`rpartition`, and "
":meth:`rsplit` methods of string-like types (strings, Unicode strings, and "
":class:`bytearray` objects) now use a fast reverse-search algorithm instead "
"of a character-by-character scan.  This is sometimes faster by a factor of "
"10.  (Added by Florent Xicluna; :issue:`7462` and :issue:`7622`.)"
msgstr ""

#: ../../whatsnew/2.7.rst:1013
msgid ""
"The :mod:`pickle` and :mod:`cPickle` modules now automatically intern the "
"strings used for attribute names, reducing memory usage of the objects "
"resulting from unpickling.  (Contributed by Jake McGuire; :issue:`5084`.)"
msgstr ""

#: ../../whatsnew/2.7.rst:1018
msgid ""
"The :mod:`cPickle` module now special-cases dictionaries, nearly halving the"
" time required to pickle them. (Contributed by Collin Winter; "
":issue:`5670`.)"
msgstr ""

#: ../../whatsnew/2.7.rst:1025
msgid "New and Improved Modules"
msgstr "新增和改进的模块"

#: ../../whatsnew/2.7.rst:1027
msgid ""
"As in every release, Python's standard library received a number of "
"enhancements and bug fixes.  Here's a partial list of the most notable "
"changes, sorted alphabetically by module name. Consult the :file:`Misc/NEWS`"
" file in the source tree for a more complete list of changes, or look "
"through the Subversion logs for all the details."
msgstr ""
"Як і в кожному випуску, стандартна бібліотека Python отримала низку "
"вдосконалень і виправлень помилок. Ось неповний список найбільш помітних "
"змін, відсортованих за алфавітом назв модулів. Зверніться до файлу "
":file:`Misc/NEWS` у дереві вихідних кодів, щоб отримати більш повний список "
"змін, або перегляньте журнали Subversion, щоб отримати всі деталі."

#: ../../whatsnew/2.7.rst:1033
msgid ""
"The :mod:`bdb` module's base debugging class :class:`~bdb.Bdb` gained a "
"feature for skipping modules.  The constructor now takes an iterable "
"containing glob-style patterns such as ``django.*``; the debugger will not "
"step into stack frames from a module that matches one of these patterns. "
"(Contributed by Maru Newby after a suggestion by Senthil Kumaran; "
":issue:`5142`.)"
msgstr ""
"Базовий клас налагодження :class:`~bdb.Bdb` модуля :mod:`bdb` отримав "
"можливість пропускати модулі. Конструктор тепер приймає ітераційний елемент,"
" що містить шаблони у стилі glob, такі як ``django.*``; налагоджувач не "
"ввійде в кадри стека з модуля, який відповідає одному з цих шаблонів. "
"(Надано Maru Newby за пропозицією Senthil Kumaran; :issue:`5142`.)"

#: ../../whatsnew/2.7.rst:1041
msgid ""
"The :mod:`binascii` module now supports the buffer API, so it can be used "
"with :class:`memoryview` instances and other similar buffer objects. "
"(Backported from 3.x by Florent Xicluna; :issue:`7703`.)"
msgstr ""
"Модуль :mod:`binascii` тепер підтримує API буфера, тому його можна "
"використовувати з примірниками :class:`memoryview` та іншими подібними "
"об’єктами буфера. (Портпортовано з 3.x Флораном Ксіклюною; :issue:`7703`.)"

#: ../../whatsnew/2.7.rst:1045
msgid ""
"Updated module: the :mod:`bsddb` module has been updated from 4.7.2devel9 to"
" version 4.8.4 of `the pybsddb package "
"<https://www.jcea.es/programacion/pybsddb.htm>`__. The new version features "
"better Python 3.x compatibility, various bug fixes, and adds several new "
"BerkeleyDB flags and methods. (Updated by Jesús Cea Avión; :issue:`8156`.  "
"The pybsddb changelog can be read at "
"https://hg.jcea.es/pybsddb/file/tip/ChangeLog.)"
msgstr ""

#: ../../whatsnew/2.7.rst:1053
msgid ""
"The :mod:`bz2` module's :class:`~bz2.BZ2File` now supports the context "
"management protocol, so you can write ``with bz2.BZ2File(...) as f:``. "
"(Contributed by Hagen Fürstenau; :issue:`3860`.)"
msgstr ""
"Модуль :mod:`bz2` :class:`~bz2.BZ2File` тепер підтримує протокол керування "
"контекстом, тому ви можете писати ``with bz2.BZ2File(...) як f:``. (Надав "
"Hagen Fürstenau; :issue:`3860`.)"

#: ../../whatsnew/2.7.rst:1057
msgid ""
"New class: the :class:`~collections.Counter` class in the :mod:`collections`"
" module is useful for tallying data.  :class:`~collections.Counter` "
"instances behave mostly like dictionaries but return zero for missing keys "
"instead of raising a :exc:`KeyError`:"
msgstr ""
"Новий клас: клас :class:`~collections.Counter` у модулі :mod:`collections` "
"корисний для підрахунку даних. Екземпляри :class:`~collections.Counter` "
"поводяться здебільшого як словники, але повертають нуль за відсутні ключі "
"замість того, щоб викликати :exc:`KeyError`:"

#: ../../whatsnew/2.7.rst:1079
msgid ""
"There are three additional :class:`~collections.Counter` methods. "
":meth:`~collections.Counter.most_common` returns the N most common elements "
"and their counts.  :meth:`~collections.Counter.elements` returns an iterator"
" over the contained elements, repeating each element as many times as its "
"count. :meth:`~collections.Counter.subtract` takes an iterable and subtracts"
" one for each element instead of adding; if the argument is a dictionary or "
"another :class:`Counter`, the counts are subtracted. ::"
msgstr ""
"Є три додаткові методи :class:`~collections.Counter`. "
":meth:`~collections.Counter.most_common` повертає N найпоширеніших елементів"
" та їх кількість. :meth:`~collections.Counter.elements` повертає ітератор "
"над вмістом елементів, повторюючи кожен елемент стільки разів, скільки його "
"кількість. :meth:`~collections.Counter.subtract` приймає iterable і віднімає"
" один для кожного елемента замість додавання; якщо аргументом є словник або "
"інший :class:`Counter`, кількість віднімається. ::"

#: ../../whatsnew/2.7.rst:1102
msgid "Contributed by Raymond Hettinger; :issue:`1696199`."
msgstr "Kontribusi dari Raymond Hettinger; :issue:`1696199`."

#: ../../whatsnew/2.7.rst:1106
msgid ""
"New class: :class:`~collections.OrderedDict` is described in the earlier "
"section :ref:`pep-0372`."
msgstr ""
"Новий клас: :class:`~collections.OrderedDict` описано в попередньому розділі"
" :ref:`pep-0372`."

#: ../../whatsnew/2.7.rst:1109
msgid ""
"New method: The :class:`~collections.deque` data type now has a "
":meth:`~collections.deque.count` method that returns the number of contained"
" elements equal to the supplied argument *x*, and a "
":meth:`~collections.deque.reverse` method that reverses the elements of the "
"deque in-place.  :class:`~collections.deque` also exposes its maximum length"
" as the read-only :attr:`~collections.deque.maxlen` attribute. (Both "
"features added by Raymond Hettinger.)"
msgstr ""
"Новий метод: Тип даних :class:`~collections.deque` тепер має метод "
":meth:`~collections.deque.count`, який повертає кількість елементів, що "
"містяться, що дорівнює наданому аргументу *x*, і "
":meth:`~collections.deque.reverse` метод, який перевертає елементи deque на "
"місці. :class:`~collections.deque` також показує свою максимальну довжину як"
" атрибут :attr:`~collections.deque.maxlen` лише для читання. (Обидві функції"
" додав Реймонд Геттінгер.)"

#: ../../whatsnew/2.7.rst:1117
msgid ""
"The :class:`~collections.namedtuple` class now has an optional *rename* "
"parameter. If *rename* is true, field names that are invalid because they've"
" been repeated or aren't legal Python identifiers will be renamed to legal "
"names that are derived from the field's position within the list of fields:"
msgstr ""
"Клас :class:`~collections.namedtuple` тепер має додатковий параметр "
"*rename*. Якщо *rename* має значення true, назви полів, які є недійсними "
"через те, що вони повторювалися або не є допустимими ідентифікаторами "
"Python, буде перейменовано на офіційні імена, які походять від позиції поля "
"в списку полів:"

#: ../../whatsnew/2.7.rst:1128
msgid "(Added by Raymond Hettinger; :issue:`1818`.)"
msgstr "(Додав Раймонд Геттінгер; :issue:`1818`.)"

#: ../../whatsnew/2.7.rst:1130
msgid ""
"Finally, the :class:`~collections.Mapping` abstract base class now returns "
":const:`NotImplemented` if a mapping is compared to another type that isn't "
"a :class:`Mapping`. (Fixed by Daniel Stutzbach; :issue:`8729`.)"
msgstr ""

#: ../../whatsnew/2.7.rst:1135
msgid ""
"Constructors for the parsing classes in the :mod:`ConfigParser` module now "
"take an *allow_no_value* parameter, defaulting to false; if true, options "
"without values will be allowed.  For example::"
msgstr ""

#: ../../whatsnew/2.7.rst:1157
msgid "(Contributed by Mats Kindahl; :issue:`7005`.)"
msgstr "(Kontribusi dari Mats Kindahl; :issue:`7005`.)"

#: ../../whatsnew/2.7.rst:1159
msgid ""
"Deprecated function: :func:`contextlib.nested`, which allows handling more "
"than one context manager with a single :keyword:`with` statement, has been "
"deprecated, because the :keyword:`!with` statement now supports multiple "
"context managers."
msgstr ""

#: ../../whatsnew/2.7.rst:1164
msgid ""
"The :mod:`cookielib` module now ignores cookies that have an invalid version"
" field, one that doesn't contain an integer value.  (Fixed by John J. Lee; "
":issue:`3924`.)"
msgstr ""

#: ../../whatsnew/2.7.rst:1168
msgid ""
"The :mod:`copy` module's :func:`~copy.deepcopy` function will now correctly "
"copy bound instance methods.  (Implemented by Robert Collins; "
":issue:`1515`.)"
msgstr ""
"Функція :func:`~copy.deepcopy` модуля :mod:`copy` тепер правильно "
"копіюватиме зв’язані методи примірників. (Реалізовано Робертом Коллінзом; "
":issue:`1515`.)"

#: ../../whatsnew/2.7.rst:1172
msgid ""
"The :mod:`ctypes` module now always converts ``None`` to a C ``NULL`` "
"pointer for arguments declared as pointers.  (Changed by Thomas Heller; "
":issue:`4606`.)  The underlying `libffi library "
"<https://sourceware.org/libffi/>`__ has been updated to version 3.0.9, "
"containing various fixes for different platforms.  (Updated by Matthias "
"Klose; :issue:`8142`.)"
msgstr ""
"Модуль :mod:`ctypes` тепер завжди перетворює ``None`` на покажчик C ``NULL``"
" для аргументів, оголошених як покажчики. (Змінено Томасом Хеллером; "
":issue:`4606`.) Базову `бібліотеку libffi "
"<https://sourceware.org/libffi/>`__ було оновлено до версії 3.0.9, що "
"містить різні виправлення для різних платформ. (Оновлено Маттіасом Клозе; "
":issue:`8142`.)"

#: ../../whatsnew/2.7.rst:1179
msgid ""
"New method: the :mod:`datetime` module's :class:`~datetime.timedelta` class "
"gained a :meth:`~datetime.timedelta.total_seconds` method that returns the "
"number of seconds in the duration.  (Contributed by Brian Quinlan; "
":issue:`5788`.)"
msgstr ""
"Новий метод: клас :class:`~datetime.timedelta` модуля :mod:`datetime` "
"отримав метод :meth:`~datetime.timedelta.total_seconds`, який повертає "
"кількість секунд у тривалості. (Надав Браян Квінлан; :issue:`5788`.)"

#: ../../whatsnew/2.7.rst:1183
msgid ""
"New method: the :class:`~decimal.Decimal` class gained a "
":meth:`~decimal.Decimal.from_float` class method that performs an exact "
"conversion of a floating-point number to a :class:`~decimal.Decimal`. This "
"exact conversion strives for the closest decimal approximation to the "
"floating-point representation's value; the resulting decimal value will "
"therefore still include the inaccuracy, if any. For example, "
"``Decimal.from_float(0.1)`` returns "
"``Decimal('0.1000000000000000055511151231257827021181583404541015625')``. "
"(Implemented by Raymond Hettinger; :issue:`4796`.)"
msgstr ""

#: ../../whatsnew/2.7.rst:1194
msgid ""
"Comparing instances of :class:`~decimal.Decimal` with floating-point numbers"
" now produces sensible results based on the numeric values of the operands."
"  Previously such comparisons would fall back to Python's default rules for "
"comparing objects, which produced arbitrary results based on their type.  "
"Note that you still cannot combine :class:`Decimal` and floating-point in "
"other operations such as addition, since you should be explicitly choosing "
"how to convert between float and :class:`~decimal.Decimal`.  (Fixed by Mark "
"Dickinson; :issue:`2531`.)"
msgstr ""

#: ../../whatsnew/2.7.rst:1203
msgid ""
"The constructor for :class:`~decimal.Decimal` now accepts floating-point "
"numbers (added by Raymond Hettinger; :issue:`8257`) and non-European Unicode"
" characters such as Arabic-Indic digits (contributed by Mark Dickinson; "
":issue:`6595`)."
msgstr ""
"Конструктор для :class:`~decimal.Decimal` тепер приймає числа з плаваючою "
"комою (додано Raymond Hettinger; :issue:`8257`) і неєвропейські символи "
"Unicode, такі як арабсько-індійські цифри (надано Марком Дікінсоном; : "
"випуск: `6595`)."

#: ../../whatsnew/2.7.rst:1208
msgid ""
"Most of the methods of the :class:`~decimal.Context` class now accept "
"integers as well as :class:`~decimal.Decimal` instances; the only exceptions"
" are the :meth:`~decimal.Context.canonical` and "
":meth:`~decimal.Context.is_canonical` methods.  (Patch by Juan José Conti; "
":issue:`7633`.)"
msgstr ""
"Більшість методів класу :class:`~decimal.Context` тепер приймають цілі "
"числа, а також екземпляри :class:`~decimal.Decimal`; єдиним винятком є "
"методи :meth:`~decimal.Context.canonical` і "
":meth:`~decimal.Context.is_canonical`. (Патч від Хуана Хосе Конті; "
":issue:`7633`.)"

#: ../../whatsnew/2.7.rst:1213
msgid ""
"When using :class:`~decimal.Decimal` instances with a string's "
":meth:`~str.format` method, the default alignment was previously left-"
"alignment.  This has been changed to right-alignment, which is more sensible"
" for numeric types.  (Changed by Mark Dickinson; :issue:`6857`.)"
msgstr ""
"Під час використання екземплярів :class:`~decimal.Decimal` із методом "
":meth:`~str.format` рядка вирівнювання за замовчуванням раніше було лівим. "
"Це було змінено на вирівнювання по правому краю, що є більш розумним для "
"числових типів. (Змінено Марком Дікінсоном; :issue:`6857`.)"

#: ../../whatsnew/2.7.rst:1218
msgid ""
"Comparisons involving a signaling NaN value (or ``sNAN``) now signal "
":const:`InvalidOperation` instead of silently returning a true or false "
"value depending on the comparison operator.  Quiet NaN values (or ``NaN``) "
"are now hashable.  (Fixed by Mark Dickinson; :issue:`7279`.)"
msgstr ""

#: ../../whatsnew/2.7.rst:1224
msgid ""
"The :mod:`difflib` module now produces output that is more compatible with "
"modern :command:`diff`/:command:`patch` tools through one small change, "
"using a tab character instead of spaces as a separator in the header giving "
"the filename.  (Fixed by Anatoly Techtonik; :issue:`7585`.)"
msgstr ""
"Модуль :mod:`difflib` тепер створює вивід, який є більш сумісним із "
"сучасними інструментами :command:`diff`/:command:`patch` завдяки одній "
"невеликій зміні, використовуючи символ табуляції замість пробілів як "
"роздільник у заголовку, що дає ім'я файлу. (Виправлено Анатолієм Техтоніком;"
" :issue:`7585`.)"

#: ../../whatsnew/2.7.rst:1230
msgid ""
"The Distutils ``sdist`` command now always regenerates the :file:`MANIFEST` "
"file, since even if the :file:`MANIFEST.in` or :file:`setup.py` files "
"haven't been modified, the user might have created some new files that "
"should be included. (Fixed by Tarek Ziadé; :issue:`8688`.)"
msgstr ""
"Команда Distutils ``sdist`` тепер завжди повторно генерує файл "
":file:`MANIFEST`, оскільки навіть якщо файли :file:`MANIFEST.in` або "
":file:`setup.py` не були змінені, користувач міг створити кілька нових "
"файлів, які слід включити. (Виправлено Тареком Зіаде; :issue:`8688`.)"

#: ../../whatsnew/2.7.rst:1236
msgid ""
"The :mod:`doctest` module's :const:`IGNORE_EXCEPTION_DETAIL` flag will now "
"ignore the name of the module containing the exception being tested.  (Patch"
" by Lennart Regebro; :issue:`7490`.)"
msgstr ""

#: ../../whatsnew/2.7.rst:1240
msgid ""
"The :mod:`email` module's :class:`~email.message.Message` class will now "
"accept a Unicode-valued payload, automatically converting the payload to the"
" encoding specified by :attr:`output_charset`. (Added by R. David Murray; "
":issue:`1368247`.)"
msgstr ""

#: ../../whatsnew/2.7.rst:1245
msgid ""
"The :class:`~fractions.Fraction` class now accepts a single float or "
":class:`~decimal.Decimal` instance, or two rational numbers, as arguments to"
" its constructor.  (Implemented by Mark Dickinson; rationals added in "
":issue:`5812`, and float/decimal in :issue:`8294`.)"
msgstr ""
"Клас :class:`~fractions.Fraction` тепер приймає один екземпляр float або "
":class:`~decimal.Decimal`, або два раціональних числа, як аргументи свого "
"конструктора. (Реалізовано Марком Дікінсоном; раціональні числа додано в "
":issue:`5812`, а число з плаваючою точкою/десяткове число в :issue:`8294`.)"

#: ../../whatsnew/2.7.rst:1251
msgid ""
"Ordering comparisons (``<``, ``<=``, ``>``, ``>=``) between fractions and "
"complex numbers now raise a :exc:`TypeError`. This fixes an oversight, "
"making the :class:`~fractions.Fraction` match the other numeric types."
msgstr ""
"Порядок порівнянь (``<``, ``<=``, ``>``, ``>=``) між дробами та комплексними"
" числами тепер викликає :exc:`TypeError`. Це виправляє недогляд, завдяки "
"чому :class:`~fractions.Fraction` відповідає іншим числовим типам."

#: ../../whatsnew/2.7.rst:1258
msgid ""
"New class: :class:`~ftplib.FTP_TLS` in the :mod:`ftplib` module provides "
"secure FTP connections using TLS encapsulation of authentication as well as "
"subsequent control and data transfers. (Contributed by Giampaolo Rodola; "
":issue:`2054`.)"
msgstr ""
"Новий клас: :class:`~ftplib.FTP_TLS` у модулі :mod:`ftplib` забезпечує "
"безпечні FTP-з’єднання за допомогою інкапсуляції TLS для автентифікації, а "
"також подальший контроль і передачу даних. (Надав Джампаоло Родола; "
":issue:`2054`.)"

#: ../../whatsnew/2.7.rst:1264
msgid ""
"The :meth:`~ftplib.FTP.storbinary` method for binary uploads can now restart"
" uploads thanks to an added *rest* parameter (patch by Pablo Mouzo; "
":issue:`6845`.)"
msgstr ""
"Метод :meth:`~ftplib.FTP.storbinary` для двійкових завантажень тепер може "
"перезапускати завантаження завдяки доданому параметру *rest* (патч Пабло "
"Музо; :issue:`6845`.)"

#: ../../whatsnew/2.7.rst:1268
msgid ""
"New class decorator: :func:`~functools.total_ordering` in the "
":mod:`functools` module takes a class that defines an :meth:`__eq__` method "
"and one of :meth:`__lt__`, :meth:`__le__`, :meth:`__gt__`, or "
":meth:`__ge__`, and generates the missing comparison methods.  Since the "
":meth:`__cmp__` method is being deprecated in Python 3.x, this decorator "
"makes it easier to define ordered classes. (Added by Raymond Hettinger; "
":issue:`5479`.)"
msgstr ""

#: ../../whatsnew/2.7.rst:1276
msgid ""
"New function: :func:`~functools.cmp_to_key` will take an old-style "
"comparison function that expects two arguments and return a new callable "
"that can be used as the *key* parameter to functions such as :func:`sorted`,"
" :func:`min` and :func:`max`, etc.  The primary intended use is to help with"
" making code compatible with Python 3.x. (Added by Raymond Hettinger.)"
msgstr ""
"Нова функція: :func:`~functools.cmp_to_key` візьме функцію порівняння "
"старого стилю, яка очікує два аргументи, і поверне новий виклик, який можна "
"використовувати як параметр *key* для таких функцій, як :func:`sorted`, "
":func:`min` і :func:`max` і т. д. Основне призначення полягає в тому, щоб "
"допомогти зробити код сумісним з Python 3.x. (Додав Раймонд Геттінгер.)"

#: ../../whatsnew/2.7.rst:1283
msgid ""
"New function: the :mod:`gc` module's :func:`~gc.is_tracked` returns true if "
"a given instance is tracked by the garbage collector, false otherwise. "
"(Contributed by Antoine Pitrou; :issue:`4688`.)"
msgstr ""
"Нова функція: модуль :mod:`gc` :func:`~gc.is_tracked` повертає true, якщо "
"даний екземпляр відстежується збирачем сміття, і false в іншому випадку. "
"(Надав Антуан Пітру; :issue:`4688`.)"

#: ../../whatsnew/2.7.rst:1287
msgid ""
"The :mod:`gzip` module's :class:`~gzip.GzipFile` now supports the context "
"management protocol, so you can write ``with gzip.GzipFile(...) as f:`` "
"(contributed by Hagen Fürstenau; :issue:`3860`), and it now implements the "
":class:`io.BufferedIOBase` ABC, so you can wrap it with "
":class:`io.BufferedReader` for faster processing (contributed by Nir Aides; "
":issue:`7471`). It's also now possible to override the modification time "
"recorded in a gzipped file by providing an optional timestamp to the "
"constructor.  (Contributed by Jacques Frechet; :issue:`4272`.)"
msgstr ""
":class:`~gzip.GzipFile` модуля :mod:`gzip` тепер підтримує протокол "
"керування контекстом, тому ви можете писати ``with gzip.GzipFile(...) як "
"f:`` (надано Hagen Fürstenau; :issue:`3860`), і тепер він реалізує "
":class:`io.BufferedIOBase` ABC, тому ви можете обернути його "
":class:`io.BufferedReader` для швидшої обробки (надано Nir Aides; "
":issue:`7471`). Також тепер можна змінити час модифікації, записаний у "
"файлі, стиснутому gzip, шляхом надання конструктору додаткової позначки "
"часу. (Надав Жак Фреше; :issue:`4272`.)"

#: ../../whatsnew/2.7.rst:1297
msgid ""
"Files in gzip format can be padded with trailing zero bytes; the :mod:`gzip`"
" module will now consume these trailing bytes.  (Fixed by Tadek Pietraszek "
"and Brian Curtin; :issue:`2846`.)"
msgstr ""
"Файли у форматі gzip можуть бути доповнені нульовими байтами в кінці; модуль"
" :mod:`gzip` тепер споживатиме ці кінцеві байти. (Виправлено Tadek "
"Pietraszek і Brian Curtin; :issue:`2846`.)"

#: ../../whatsnew/2.7.rst:1301
msgid ""
"New attribute: the :mod:`hashlib` module now has an "
":attr:`~hashlib.hashlib.algorithms` attribute containing a tuple naming the "
"supported algorithms. In Python 2.7, ``hashlib.algorithms`` contains "
"``('md5', 'sha1', 'sha224', 'sha256', 'sha384', 'sha512')``. (Contributed by"
" Carl Chenet; :issue:`7418`.)"
msgstr ""

#: ../../whatsnew/2.7.rst:1307
msgid ""
"The default :class:`~httplib.HTTPResponse` class used by the :mod:`httplib` "
"module now supports buffering, resulting in much faster reading of HTTP "
"responses. (Contributed by Kristján Valur Jónsson; :issue:`4879`.)"
msgstr ""

#: ../../whatsnew/2.7.rst:1311
msgid ""
"The :class:`~httplib.HTTPConnection` and :class:`~httplib.HTTPSConnection` "
"classes now support a *source_address* parameter, a ``(host, port)`` 2-tuple"
" giving the source address that will be used for the connection. "
"(Contributed by Eldon Ziegler; :issue:`3972`.)"
msgstr ""

#: ../../whatsnew/2.7.rst:1316
msgid ""
"The :mod:`ihooks` module now supports relative imports.  Note that "
":mod:`ihooks` is an older module for customizing imports, superseded by the "
":mod:`imputil` module added in Python 2.0. (Relative import support added by"
" Neil Schemenauer.)"
msgstr ""

#: ../../whatsnew/2.7.rst:1323
msgid ""
"The :mod:`imaplib` module now supports IPv6 addresses. (Contributed by Derek"
" Morr; :issue:`1655`.)"
msgstr ""
"Модуль :mod:`imaplib` тепер підтримує адреси IPv6. (Надав Дерек Морр; "
":issue:`1655`.)"

#: ../../whatsnew/2.7.rst:1326
msgid ""
"New function: the :mod:`inspect` module's :func:`~inspect.getcallargs` takes"
" a callable and its positional and keyword arguments, and figures out which "
"of the callable's parameters will receive each argument, returning a "
"dictionary mapping argument names to their values.  For example::"
msgstr ""
"Нова функція: модуль :mod:`inspect` :func:`~inspect.getcallargs` приймає "
"виклик, його позиційні та ключові аргументи, а також визначає, який із "
"параметрів викликаного отримає кожен аргумент, повертаючи словник "
"зіставлення імен аргументів їхні цінності. Наприклад::"

#: ../../whatsnew/2.7.rst:1343
msgid "Contributed by George Sakkis; :issue:`3135`."
msgstr "由 Georg Sakkis 在 :issue:`3135` 中贡献。"

#: ../../whatsnew/2.7.rst:1345
msgid ""
"Updated module: The :mod:`io` library has been upgraded to the version "
"shipped with Python 3.1.  For 3.1, the I/O library was entirely rewritten in"
" C and is 2 to 20 times faster depending on the task being performed.  The "
"original Python version was renamed to the :mod:`_pyio` module."
msgstr ""

#: ../../whatsnew/2.7.rst:1350
msgid ""
"One minor resulting change: the :class:`io.TextIOBase` class now has an "
":attr:`errors` attribute giving the error setting used for encoding and "
"decoding errors (one of ``'strict'``, ``'replace'``, ``'ignore'``)."
msgstr ""

#: ../../whatsnew/2.7.rst:1355
msgid ""
"The :class:`io.FileIO` class now raises an :exc:`OSError` when passed an "
"invalid file descriptor.  (Implemented by Benjamin Peterson; :issue:`4991`.)"
"  The :meth:`~io.IOBase.truncate` method now preserves the file position; "
"previously it would change the file position to the end of the new file.  "
"(Fixed by Pascal Chambon; :issue:`6939`.)"
msgstr ""
"Клас :class:`io.FileIO` тепер викликає :exc:`OSError`, коли передається "
"недійсний дескриптор файлу. (Реалізовано Бенджаміном Петерсоном; "
":issue:`4991`.) Метод :meth:`~io.IOBase.truncate` тепер зберігає позицію "
"файлу; раніше він змінював позицію файлу на кінець нового файлу. (Виправлено"
" Паскалем Шамбоном; :issue:`6939`.)"

#: ../../whatsnew/2.7.rst:1361
msgid ""
"New function: ``itertools.compress(data, selectors)`` takes two iterators.  "
"Elements of *data* are returned if the corresponding value in *selectors* is"
" true::"
msgstr ""
"Нова функція: ``itertools.compress(data, selectors)`` використовує два "
"ітератори. Елементи *data* повертаються, якщо відповідне значення в "
"*selectors* має значення true::"

#: ../../whatsnew/2.7.rst:1370
msgid ""
"New function: ``itertools.combinations_with_replacement(iter, r)`` returns "
"all the possible *r*-length combinations of elements from the iterable "
"*iter*.  Unlike :func:`~itertools.combinations`, individual elements can be "
"repeated in the generated combinations::"
msgstr ""
"Нова функція: ``itertools.combinations_with_replacement(iter, r)`` повертає "
"всі можливі комбінації елементів довжини *r* з ітерованого *iter*. На "
"відміну від :func:`~itertools.combinations`, окремі елементи можуть "
"повторюватися у згенерованих комбінаціях:"

#: ../../whatsnew/2.7.rst:1379
msgid ""
"Note that elements are treated as unique depending on their position in the "
"input, not their actual values."
msgstr ""
"Зауважте, що елементи розглядаються як унікальні залежно від їхньої позиції "
"у вхідних даних, а не від фактичних значень."

#: ../../whatsnew/2.7.rst:1382
msgid ""
"The :func:`itertools.count` function now has a *step* argument that allows "
"incrementing by values other than 1.  :func:`~itertools.count` also now "
"allows keyword arguments, and using non-integer values such as floats or "
":class:`~decimal.Decimal` instances.  (Implemented by Raymond Hettinger; "
":issue:`5032`.)"
msgstr ""
"Функція :func:`itertools.count` тепер має аргумент *step*, який дозволяє "
"збільшувати значення, відмінні від 1. :func:`~itertools.count` також тепер "
"дозволяє використовувати ключові аргументи та використовувати нецілі "
"значення, наприклад числа з плаваючою точкою або :class:`~decimal.Decimal` "
"екземпляри. (Реалізовано Raymond Hettinger; :issue:`5032`.)"

#: ../../whatsnew/2.7.rst:1388
msgid ""
":func:`itertools.combinations` and :func:`itertools.product` previously "
"raised :exc:`ValueError` for values of *r* larger than the input iterable.  "
"This was deemed a specification error, so they now return an empty iterator."
"  (Fixed by Raymond Hettinger; :issue:`4816`.)"
msgstr ""
":func:`itertools.combinations` і :func:`itertools.product` раніше викликали "
":exc:`ValueError` для значень *r*, які перевищують ітерацію введення. Це "
"було визнано помилкою специфікації, тому тепер вони повертають порожній "
"ітератор. (Виправлено Раймондом Геттінгером; :issue:`4816`.)"

#: ../../whatsnew/2.7.rst:1393
msgid ""
"Updated module: The :mod:`json` module was upgraded to version 2.0.9 of the "
"simplejson package, which includes a C extension that makes encoding and "
"decoding faster. (Contributed by Bob Ippolito; :issue:`4136`.)"
msgstr ""
"Оновлений модуль: модуль :mod:`json` було оновлено до версії 2.0.9 пакета "
"simplejson, який включає розширення C, яке робить кодування та декодування "
"швидшим. (Надав Боб Іполіто; :issue:`4136`.)"

#: ../../whatsnew/2.7.rst:1398
msgid ""
"To support the new :class:`collections.OrderedDict` type, :func:`json.load` "
"now has an optional *object_pairs_hook* parameter that will be called with "
"any object literal that decodes to a list of pairs. (Contributed by Raymond "
"Hettinger; :issue:`5381`.)"
msgstr ""
"Щоб підтримувати новий тип :class:`collections.OrderedDict`, "
":func:`json.load` тепер має необов’язковий параметр *object_pairs_hook*, "
"який буде викликатися з будь-яким літералом об’єкта, який декодує список "
"пар. (Надав Реймонд Геттінгер; :issue:`5381`.)"

#: ../../whatsnew/2.7.rst:1403
msgid ""
"The :mod:`mailbox` module's :class:`~mailbox.Maildir` class now records the "
"timestamp on the directories it reads, and only re-reads them if the "
"modification time has subsequently changed.  This improves performance by "
"avoiding unneeded directory scans.  (Fixed by A.M. Kuchling and Antoine "
"Pitrou; :issue:`1607951`, :issue:`6896`.)"
msgstr ""
"Клас :class:`~mailbox.Maildir` модуля :mod:`mailbox` тепер записує мітку "
"часу в каталогах, які він читає, і перечитує їх, лише якщо час модифікації "
"згодом змінився. Це покращує продуктивність, уникаючи непотрібного "
"сканування каталогу. (Виправлено A.M. Kuchling і Antoine Pitrou; "
":issue:`1607951`, :issue:`6896`.)"

#: ../../whatsnew/2.7.rst:1409
msgid ""
"New functions: the :mod:`math` module gained :func:`~math.erf` and "
":func:`~math.erfc` for the error function and the complementary error "
"function, :func:`~math.expm1` which computes ``e**x - 1`` with more "
"precision than using :func:`~math.exp` and subtracting 1, "
":func:`~math.gamma` for the Gamma function, and :func:`~math.lgamma` for the"
" natural log of the Gamma function. (Contributed by Mark Dickinson and "
"nirinA raseliarison; :issue:`3366`.)"
msgstr ""
"Нові функції: модуль :mod:`math` отримав :func:`~math.erf` і "
":func:`~math.erfc` для функції помилки та додаткової функції помилки, "
":func:`~math.expm1` який обчислює ``e**x - 1`` з більшою точністю, ніж "
"використання :func:`~math.exp` і віднімання 1, :func:`~math.gamma` для "
"функції Gamma та :func:`~math.lgamma` для натурального логарифму функції "
"Гамма. (Надано Марком Дікінсоном і nirinA raseliarison; :issue:`3366`.)"

#: ../../whatsnew/2.7.rst:1417
msgid ""
"The :mod:`multiprocessing` module's :class:`Manager*` classes can now be "
"passed a callable that will be called whenever a subprocess is started, "
"along with a set of arguments that will be passed to the callable. "
"(Contributed by lekma; :issue:`5585`.)"
msgstr ""

#: ../../whatsnew/2.7.rst:1423
msgid ""
"The :class:`~multiprocessing.Pool` class, which controls a pool of worker "
"processes, now has an optional *maxtasksperchild* parameter.  Worker "
"processes will perform the specified number of tasks and then exit, causing "
"the :class:`~multiprocessing.Pool` to start a new worker.  This is useful if"
" tasks may leak memory or other resources, or if some tasks will cause the "
"worker to become very large. (Contributed by Charles Cazabon; "
":issue:`6963`.)"
msgstr ""

#: ../../whatsnew/2.7.rst:1431
msgid ""
"The :mod:`nntplib` module now supports IPv6 addresses. (Contributed by Derek"
" Morr; :issue:`1664`.)"
msgstr ""
"Модуль :mod:`nntplib` тепер підтримує адреси IPv6. (Надав Дерек Морр; "
":issue:`1664`.)"

#: ../../whatsnew/2.7.rst:1434
msgid ""
"New functions: the :mod:`os` module wraps the following POSIX system calls: "
":func:`~os.getresgid` and :func:`~os.getresuid`, which return the real, "
"effective, and saved GIDs and UIDs; :func:`~os.setresgid` and "
":func:`~os.setresuid`, which set real, effective, and saved GIDs and UIDs to"
" new values; :func:`~os.initgroups`, which initialize the group access list "
"for the current process.  (GID/UID functions contributed by Travis H.; "
":issue:`6508`.  Support for initgroups added by Jean-Paul Calderone; "
":issue:`7333`.)"
msgstr ""
"Нові функції: модуль :mod:`os` обгортає наступні системні виклики POSIX: "
":func:`~os.getresgid` і :func:`~os.getresuid`, які повертають справжні, "
"ефективні та збережені GID та UID. ; :func:`~os.setresgid` і "
":func:`~os.setresuid`, які встановлюють реальні, ефективні та збережені GID "
"та UID на нові значення; :func:`~os.initgroups`, які ініціалізують список "
"доступу групи для поточного процесу. (Функції GID/UID надав Тревіс Х.; "
":issue:`6508`. Підтримку початкових груп додав Жан-Поль Кальдероне; "
":issue:`7333`.)"

#: ../../whatsnew/2.7.rst:1444
msgid ""
"The :func:`os.fork` function now re-initializes the import lock in the child"
" process; this fixes problems on Solaris when :func:`~os.fork` is called "
"from a thread.  (Fixed by Zsolt Cserna; :issue:`7242`.)"
msgstr ""
"Функція :func:`os.fork` тепер повторно ініціалізує блокування імпорту в "
"дочірньому процесі; це вирішує проблеми в Solaris, коли :func:`~os.fork` "
"викликається з потоку. (Виправлено Жолтом Черною; :issue:`7242`.)"

#: ../../whatsnew/2.7.rst:1448
msgid ""
"In the :mod:`os.path` module, the :func:`~os.path.normpath` and "
":func:`~os.path.abspath` functions now preserve Unicode; if their input path"
" is a Unicode string, the return value is also a Unicode string. "
"(:meth:`~os.path.normpath` fixed by Matt Giuca in :issue:`5827`; "
":meth:`~os.path.abspath` fixed by Ezio Melotti in :issue:`3426`.)"
msgstr ""
"У модулі :mod:`os.path` функції :func:`~os.path.normpath` і "
":func:`~os.path.abspath` тепер зберігають Unicode; якщо їхній вхідний шлях є"
" рядком Unicode, значення, що повертається, також є рядком Unicode. "
"(:meth:`~os.path.normpath` виправлено Метом Джукою в :issue:`5827`; "
":meth:`~os.path.abspath` виправлено Еціо Мелотті в :issue:`3426`.)"

#: ../../whatsnew/2.7.rst:1454
msgid ""
"The :mod:`pydoc` module now has help for the various symbols that Python "
"uses.  You can now do ``help('<<')`` or ``help('@')``, for example. "
"(Contributed by David Laban; :issue:`4739`.)"
msgstr ""
"Модуль :mod:`pydoc` тепер має довідку для різних символів, які використовує "
"Python. Тепер ви можете, наприклад, виконати ``help('<<')`` або "
"``help('@')``. (Надав Девід Лабан; :issue:`4739`.)"

#: ../../whatsnew/2.7.rst:1458
msgid ""
"The :mod:`re` module's :func:`~re.split`, :func:`~re.sub`, and "
":func:`~re.subn` now accept an optional *flags* argument, for consistency "
"with the other functions in the module.  (Added by Gregory P. Smith.)"
msgstr ""
"Модулі :mod:`re` :func:`~re.split`, :func:`~re.sub` і :func:`~re.subn` тепер"
" приймають необов’язковий аргумент *flags* для узгодженості з інші функції в"
" модулі. (Додав Грегорі П. Сміт.)"

#: ../../whatsnew/2.7.rst:1462
msgid ""
"New function: :func:`~runpy.run_path` in the :mod:`runpy` module will "
"execute the code at a provided *path* argument.  *path* can be the path of a"
" Python source file (:file:`example.py`), a compiled bytecode file "
"(:file:`example.pyc`), a directory (:file:`./package/`), or a zip archive "
"(:file:`example.zip`).  If a directory or zip path is provided, it will be "
"added to the front of ``sys.path`` and the module :mod:`__main__` will be "
"imported.  It's expected that the directory or zip contains a "
":file:`__main__.py`; if it doesn't, some other :file:`__main__.py` might be "
"imported from a location later in ``sys.path``.  This makes more of the "
"machinery of :mod:`runpy` available to scripts that want to mimic the way "
"Python's command line processes an explicit path name. (Added by Nick "
"Coghlan; :issue:`6816`.)"
msgstr ""
"Нова функція: :func:`~runpy.run_path` у модулі :mod:`runpy` виконає код за "
"наданим аргументом *path*. *шлях* може бути шляхом до вихідного файлу Python"
" (:file:`example.py`), скомпільованого файлу байт-коду "
"(:file:`example.pyc`), каталогу (:file:`./package/` ), або архів zip "
"(:file:`example.zip`). Якщо вказано каталог або шлях до zip-архіву, його "
"буде додано на початку ``sys.path``, а модуль :mod:`__main__` буде "
"імпортовано. Очікується, що каталог або zip містить :file:`__main__.py`; "
"якщо цього не відбувається, якийсь інший :file:`__main__.py` може бути "
"імпортовано з розташування пізніше в ``sys.path``. Це робить більшу частину "
"механізму :mod:`runpy` доступною для сценаріїв, які хочуть імітувати те, як "
"командний рядок Python обробляє явне ім’я шляху. (Додав Нік Коглан; "
":issue:`6816`.)"

#: ../../whatsnew/2.7.rst:1476
msgid ""
"New function: in the :mod:`shutil` module, :func:`~shutil.make_archive` "
"takes a filename, archive type (zip or tar-format), and a directory path, "
"and creates an archive containing the directory's contents. (Added by Tarek "
"Ziadé.)"
msgstr ""
"Нова функція: у модулі :mod:`shutil` :func:`~shutil.make_archive` приймає "
"назву файлу, тип архіву (формат zip або tar) і шлях до каталогу та створює "
"архів із вмістом каталогу. (Додав Тарек Зіаде.)"

#: ../../whatsnew/2.7.rst:1481
msgid ""
":mod:`shutil`'s :func:`~shutil.copyfile` and :func:`~shutil.copytree` "
"functions now raise a :exc:`~shutil.SpecialFileError` exception when asked "
"to copy a named pipe.  Previously the code would treat named pipes like a "
"regular file by opening them for reading, and this would block indefinitely."
"  (Fixed by Antoine Pitrou; :issue:`3002`.)"
msgstr ""
"Функції :mod:`shutil` :func:`~shutil.copyfile` і :func:`~shutil.copytree` "
"тепер викликають виняток :exc:`~shutil.SpecialFileError`, коли запитують "
"скопіювати іменований канал. Раніше код розглядав іменовані канали як "
"звичайний файл, відкриваючи їх для читання, і це блокувало на невизначений "
"термін. (Виправлено Антуаном Пітру; :issue:`3002`.)"

#: ../../whatsnew/2.7.rst:1487
msgid ""
"The :mod:`signal` module no longer re-installs the signal handler unless "
"this is truly necessary, which fixes a bug that could make it impossible to "
"catch the EINTR signal robustly.  (Fixed by Charles-Francois Natali; "
":issue:`8354`.)"
msgstr ""
"Модуль :mod:`signal` більше не перевстановлює обробник сигналу, якщо це не "
"справді необхідно, що виправляє помилку, яка могла зробити неможливим "
"надійне перехоплення сигналу EINTR. (Виправлено Чарльзом-Франсуа Наталі; "
":issue:`8354`.)"

#: ../../whatsnew/2.7.rst:1492
msgid ""
"New functions: in the :mod:`site` module, three new functions return various"
" site- and user-specific paths. :func:`~site.getsitepackages` returns a list"
" containing all global site-packages directories, "
":func:`~site.getusersitepackages` returns the path of the user's site-"
"packages directory, and :func:`~site.getuserbase` returns the value of the "
":envvar:`USER_BASE` environment variable, giving the path to a directory "
"that can be used to store data. (Contributed by Tarek Ziadé; :issue:`6693`.)"
msgstr ""

#: ../../whatsnew/2.7.rst:1503
msgid ""
"The :mod:`site` module now reports exceptions occurring when the "
":mod:`sitecustomize` module is imported, and will no longer catch and "
"swallow the :exc:`KeyboardInterrupt` exception.  (Fixed by Victor Stinner; "
":issue:`3137`.)"
msgstr ""
"Модуль :mod:`site` тепер повідомляє про винятки, що виникають під час "
"імпорту модуля :mod:`sitecustomize`, і більше не буде перехоплювати та "
"ковтати виняток :exc:`KeyboardInterrupt`. (Виправлено Віктором Стіннером; "
":issue:`3137`.)"

#: ../../whatsnew/2.7.rst:1508
msgid ""
"The :func:`~socket.create_connection` function gained a *source_address* "
"parameter, a ``(host, port)`` 2-tuple giving the source address that will be"
" used for the connection. (Contributed by Eldon Ziegler; :issue:`3972`.)"
msgstr ""
"Функція :func:`~socket.create_connection` отримала параметр "
"*source_address*, двокортеж ``(хост, порт)``, що вказує адресу джерела, яка "
"використовуватиметься для підключення. (Надав Елдон Зіглер; :issue:`3972`.)"

#: ../../whatsnew/2.7.rst:1513
msgid ""
"The :meth:`~socket.socket.recv_into` and "
":meth:`~socket.socket.recvfrom_into` methods will now write into objects "
"that support the buffer API, most usefully the :class:`bytearray` and "
":class:`memoryview` objects.  (Implemented by Antoine Pitrou; "
":issue:`8104`.)"
msgstr ""
"Методи :meth:`~socket.socket.recv_into` і "
":meth:`~socket.socket.recvfrom_into` тепер записуватимуть в об’єкти, які "
"підтримують API буфера, найбільш корисні :class:`bytearray` і об'єкти  "
":class:`memoryview`. (Реалізовано Антуаном Пітру; :issue:`8104`.)"

#: ../../whatsnew/2.7.rst:1518
msgid ""
"The :mod:`SocketServer` module's :class:`~SocketServer.TCPServer` class now "
"supports socket timeouts and disabling the Nagle algorithm. The "
":attr:`~SocketServer.TCPServer.disable_nagle_algorithm` class attribute "
"defaults to ``False``; if overridden to be true, new request connections "
"will have the TCP_NODELAY option set to prevent buffering many small sends "
"into a single TCP packet. The :attr:`~SocketServer.BaseServer.timeout` class"
" attribute can hold a timeout in seconds that will be applied to the request"
" socket; if no request is received within that time, "
":meth:`~SocketServer.BaseServer.handle_timeout` will be called and "
":meth:`~SocketServer.BaseServer.handle_request` will return. (Contributed by"
" Kristján Valur Jónsson; :issue:`6192` and :issue:`6267`.)"
msgstr ""

#: ../../whatsnew/2.7.rst:1530
msgid ""
"Updated module: the :mod:`sqlite3` module has been updated to version 2.6.0 "
"of the `pysqlite package <https://github.com/ghaering/pysqlite>`__. Version "
"2.6.0 includes a number of bugfixes, and adds the ability to load SQLite "
"extensions from shared libraries. Call the ``enable_load_extension(True)`` "
"method to enable extensions, and then call "
":meth:`~sqlite3.Connection.load_extension` to load a particular shared "
"library. (Updated by Gerhard Häring.)"
msgstr ""
"Оновлений модуль: модуль :mod:`sqlite3` оновлено до версії 2.6.0 `пакета "
"pysqlite <https://github.com/ghaering/pysqlite>`__. Версія 2.6.0 містить "
"низку виправлень помилок і додає можливість завантажувати розширення SQLite "
"із спільних бібліотек. Викличте метод ``enable_load_extension(True)``, щоб "
"увімкнути розширення, а потім викличте "
":meth:`~sqlite3.Connection.load_extension`, щоб завантажити певну спільну "
"бібліотеку. (Оновлено Герхардом Херінгом.)"

#: ../../whatsnew/2.7.rst:1537
msgid ""
"The :mod:`ssl` module's :class:`~ssl.SSLSocket` objects now support the "
"buffer API, which fixed a test suite failure (fix by Antoine Pitrou; "
":issue:`7133`) and automatically set OpenSSL's "
":c:macro:`SSL_MODE_AUTO_RETRY`, which will prevent an error code being "
"returned from :meth:`recv` operations that trigger an SSL renegotiation (fix"
" by Antoine Pitrou; :issue:`8222`)."
msgstr ""

#: ../../whatsnew/2.7.rst:1544
msgid ""
"The :func:`ssl.wrap_socket` constructor function now takes a *ciphers* "
"argument that's a string listing the encryption algorithms to be allowed; "
"the format of the string is described `in the OpenSSL documentation "
"<https://www.openssl.org/docs/man1.0.2/man1/ciphers.html>`__. (Added by "
"Antoine Pitrou; :issue:`8322`.)"
msgstr ""

#: ../../whatsnew/2.7.rst:1551
msgid ""
"Another change makes the extension load all of OpenSSL's ciphers and digest "
"algorithms so that they're all available.  Some SSL certificates couldn't be"
" verified, reporting an \"unknown algorithm\" error.  (Reported by Beda "
"Kosata, and fixed by Antoine Pitrou; :issue:`8484`.)"
msgstr ""
"Інша зміна змушує розширення завантажувати всі шифри та алгоритми дайджесту "
"OpenSSL, щоб усі вони були доступними. Деякі сертифікати SSL не вдалося "
"перевірити, повідомляючи про помилку \"невідомий алгоритм\". (Повідомив Беда"
" Косата та виправив Антуан Пітру; :issue:`8484`.)"

#: ../../whatsnew/2.7.rst:1557
msgid ""
"The version of OpenSSL being used is now available as the module attributes "
":data:`ssl.OPENSSL_VERSION` (a string), :data:`ssl.OPENSSL_VERSION_INFO` (a "
"5-tuple), and :data:`ssl.OPENSSL_VERSION_NUMBER` (an integer).  (Added by "
"Antoine Pitrou; :issue:`8321`.)"
msgstr ""

#: ../../whatsnew/2.7.rst:1563
msgid ""
"The :mod:`struct` module will no longer silently ignore overflow errors when"
" a value is too large for a particular integer format code (one of "
"``bBhHiIlLqQ``); it now always raises a :exc:`struct.error` exception.  "
"(Changed by Mark Dickinson; :issue:`1523`.)  The :func:`~struct.pack` "
"function will also attempt to use :meth:`__index__` to convert and pack non-"
"integers before trying the :meth:`__int__` method or reporting an error. "
"(Changed by Mark Dickinson; :issue:`8300`.)"
msgstr ""

#: ../../whatsnew/2.7.rst:1572
msgid ""
"New function: the :mod:`subprocess` module's "
":func:`~subprocess.check_output` runs a command with a specified set of "
"arguments and returns the command's output as a string when the command runs"
" without error, or raises a :exc:`~subprocess.CalledProcessError` exception "
"otherwise."
msgstr ""
"Нова функція: модуль :mod:`subprocess` :func:`~subprocess.check_output` "
"виконує команду з указаним набором аргументів і повертає результат команди "
"як рядок, коли команда виконується без помилок, або викликає Виняток "
":exc:`~subprocess.CalledProcessError` інакше."

#: ../../whatsnew/2.7.rst:1587
msgid "(Contributed by Gregory P. Smith.)"
msgstr "（由 Gregory P. Smith 贡献）"

#: ../../whatsnew/2.7.rst:1589
msgid ""
"The :mod:`subprocess` module will now retry its internal system calls on "
"receiving an :const:`EINTR` signal.  (Reported by several people; final "
"patch by Gregory P. Smith in :issue:`1068268`.)"
msgstr ""

#: ../../whatsnew/2.7.rst:1593
msgid ""
"New function: :func:`~symtable.Symbol.is_declared_global` in the "
":mod:`symtable` module returns true for variables that are explicitly "
"declared to be global, false for ones that are implicitly global. "
"(Contributed by Jeremy Hylton.)"
msgstr ""
"Нова функція: :func:`~symtable.Symbol.is_declared_global` у модулі "
":mod:`symtable` повертає true для змінних, які явно оголошені як глобальні, "
"і false для змінних, які неявно є глобальними. (Надав Джеремі Гілтон.)"

#: ../../whatsnew/2.7.rst:1598 ../../whatsnew/2.7.rst:2496
msgid ""
"The :mod:`syslog` module will now use the value of ``sys.argv[0]`` as the "
"identifier instead of the previous default value of ``'python'``. (Changed "
"by Sean Reifschneider; :issue:`8451`.)"
msgstr ""
"Модуль :mod:`syslog` тепер використовуватиме значення ``sys.argv[0]`` як "
"ідентифікатор замість попереднього значення за замовчуванням ``'python'``. "
"(Змінено Шоном Райфшнайдером; :issue:`8451`.)"

#: ../../whatsnew/2.7.rst:1602
msgid ""
"The ``sys.version_info`` value is now a named tuple, with attributes named "
":attr:`major`, :attr:`minor`, :attr:`micro`, :attr:`releaselevel`, and "
":attr:`serial`.  (Contributed by Ross Light; :issue:`4285`.)"
msgstr ""

#: ../../whatsnew/2.7.rst:1607
msgid ""
":func:`sys.getwindowsversion` also returns a named tuple, with attributes "
"named :attr:`major`, :attr:`minor`, :attr:`build`, :attr:`platform`, "
":attr:`service_pack`, :attr:`service_pack_major`, "
":attr:`service_pack_minor`, :attr:`suite_mask`, and :attr:`product_type`.  "
"(Contributed by Brian Curtin; :issue:`7766`.)"
msgstr ""

#: ../../whatsnew/2.7.rst:1613 ../../whatsnew/2.7.rst:2500
msgid ""
"The :mod:`tarfile` module's default error handling has changed, to no longer"
" suppress fatal errors.  The default error level was previously 0, which "
"meant that errors would only result in a message being written to the debug "
"log, but because the debug log is not activated by default, these errors go "
"unnoticed.  The default error level is now 1, which raises an exception if "
"there's an error. (Changed by Lars Gustäbel; :issue:`7357`.)"
msgstr ""
"Стандартну обробку помилок модуля :mod:`tarfile` було змінено, і більше не "
"пригнічуються фатальні помилки. Раніше рівень помилок за замовчуванням був "
"0, що означало, що помилки призводили лише до запису повідомлення в журнал "
"налагодження, але оскільки журнал налагодження не активовано за "
"замовчуванням, ці помилки залишаються непоміченими. Рівень помилки за "
"замовчуванням тепер становить 1, що викликає виняток у разі виникнення "
"помилки. (Змінено Ларсом Густебелем; :issue:`7357`.)"

#: ../../whatsnew/2.7.rst:1621
msgid ""
":mod:`tarfile` now supports filtering the :class:`~tarfile.TarInfo` objects "
"being added to a tar file.  When you call :meth:`~tarfile.TarFile.add`, you "
"may supply an optional *filter* argument that's a callable.  The *filter* "
"callable will be passed the :class:`~tarfile.TarInfo` for every file being "
"added, and can modify and return it. If the callable returns ``None``, the "
"file will be excluded from the resulting archive.  This is more powerful "
"than the existing *exclude* argument, which has therefore been deprecated. "
"(Added by Lars Gustäbel; :issue:`6856`.) The :class:`~tarfile.TarFile` class"
" also now supports the context management protocol. (Added by Lars Gustäbel;"
" :issue:`7232`.)"
msgstr ""
":mod:`tarfile` тепер підтримує фільтрацію об’єктів "
":class:`~tarfile.TarInfo`, які додаються до файлу tar. Коли ви викликаєте "
":meth:`~tarfile.TarFile.add`, ви можете надати додатковий аргумент *filter*,"
" який можна викликати. Викликаний *filter* отримуватиме "
":class:`~tarfile.TarInfo` для кожного файлу, який додається, і зможе "
"змінювати та повертати його. Якщо виклик повертає ``None``, файл буде "
"виключено з отриманого архіву. Це потужніший аргумент, ніж існуючий аргумент"
" *exclude*, який, отже, застарів. (Додав Ларс Густебель; :issue:`6856`.) "
"Клас :class:`~tarfile.TarFile` тепер також підтримує протокол керування "
"контекстом. (Додав Ларс Густебель; :issue:`7232`.)"

#: ../../whatsnew/2.7.rst:1633
msgid ""
"The :meth:`~threading.Event.wait` method of the :class:`threading.Event` "
"class now returns the internal flag on exit.  This means the method will "
"usually return true because :meth:`~threading.Event.wait` is supposed to "
"block until the internal flag becomes true.  The return value will only be "
"false if a timeout was provided and the operation timed out. (Contributed by"
" Tim Lesher; :issue:`1674032`.)"
msgstr ""
"Метод :meth:`~threading.Event.wait` класу :class:`threading.Event` тепер "
"повертає внутрішній прапор під час виходу. Це означає, що метод зазвичай "
"повертатиме true, оскільки :meth:`~threading.Event.wait` має блокуватися, "
"доки внутрішній прапор не стане істинним. Повернене значення буде false, "
"лише якщо було надано тайм-аут і час очікування операції минув. (Надав Тім "
"Лешер; :issue:`1674032`.)"

#: ../../whatsnew/2.7.rst:1640
msgid ""
"The Unicode database provided by the :mod:`unicodedata` module is now used "
"internally to determine which characters are numeric, whitespace, or "
"represent line breaks.  The database also includes information from the "
":file:`Unihan.txt` data file (patch by Anders Chrigström and Amaury Forgeot "
"d'Arc; :issue:`1571184`) and has been updated to version 5.2.0 (updated by "
"Florent Xicluna; :issue:`8024`)."
msgstr ""
"База даних Юнікод, надана модулем :mod:`unicodedata`, тепер використовується"
" внутрішньо, щоб визначити, які символи є цифрами, пробілами чи "
"представляють розриви рядків. База даних також містить інформацію з файлу "
"даних :file:`Unihan.txt` (патч від Anders Chrigström і Amaury Forgeot d'Arc;"
" :issue:`1571184`) і була оновлена до версії 5.2.0 (оновлено Florent Xicluna"
" ; :issue:`8024`)."

#: ../../whatsnew/2.7.rst:1648 ../../whatsnew/2.7.rst:2508
msgid ""
"The :mod:`urlparse` module's :func:`~urlparse.urlsplit` now handles unknown "
"URL schemes in a fashion compliant with :rfc:`3986`: if the URL is of the "
"form ``\"<something>://...\"``, the text before the ``://`` is treated as "
"the scheme, even if it's a made-up scheme that the module doesn't know "
"about.  This change may break code that worked around the old behaviour.  "
"For example, Python 2.6.4 or 2.5 will return the following:"
msgstr ""

#: ../../whatsnew/2.7.rst:1663 ../../whatsnew/2.7.rst:2523
msgid "Python 2.7 (and Python 2.6.5) will return:"
msgstr "Python 2.7 (dan Python 2.6.5) akan mengembalikan:"

#: ../../whatsnew/2.7.rst:1672 ../../whatsnew/2.7.rst:2532
msgid ""
"(Python 2.7 actually produces slightly different output, since it returns a "
"named tuple instead of a standard tuple.)"
msgstr ""
"(Python 2.7 фактично створює дещо інший вихід, оскільки він повертає "
"іменований кортеж замість стандартного кортежу.)"

#: ../../whatsnew/2.7.rst:1675
msgid ""
"The :mod:`urlparse` module also supports IPv6 literal addresses as defined "
"by :rfc:`2732` (contributed by Senthil Kumaran; :issue:`2987`)."
msgstr ""

#: ../../whatsnew/2.7.rst:1685
msgid ""
"New class: the :class:`~weakref.WeakSet` class in the :mod:`weakref` module "
"is a set that only holds weak references to its elements; elements will be "
"removed once there are no references pointing to them. (Originally "
"implemented in Python 3.x by Raymond Hettinger, and backported to 2.7 by "
"Michael Foord.)"
msgstr ""
"Новий клас: клас :class:`~weakref.WeakSet` у модулі :mod:`weakref` — це "
"набір, який містить лише слабкі посилання на свої елементи; елементи буде "
"видалено, якщо на них не буде посилань. (Спочатку реалізовано в Python 3.x "
"Реймондом Геттінгером і перенесено до версії 2.7 Майклом Фордом.)"

#: ../../whatsnew/2.7.rst:1691 ../../whatsnew/2.7.rst:2486
msgid ""
"The ElementTree library, :mod:`xml.etree`, no longer escapes ampersands and "
"angle brackets when outputting an XML processing instruction (which looks "
"like ``<?xml-stylesheet href=\"#style1\"?>``) or comment (which looks like "
"``<!-- comment -->``). (Patch by Neil Muller; :issue:`2746`.)"
msgstr ""

#: ../../whatsnew/2.7.rst:1697
msgid ""
"The XML-RPC client and server, provided by the :mod:`xmlrpclib` and "
":mod:`SimpleXMLRPCServer` modules, have improved performance by supporting "
"HTTP/1.1 keep-alive and by optionally using gzip encoding to compress the "
"XML being exchanged.  The gzip compression is controlled by the "
":attr:`encode_threshold` attribute of :class:`SimpleXMLRPCRequestHandler`, "
"which contains a size in bytes; responses larger than this will be "
"compressed. (Contributed by Kristján Valur Jónsson; :issue:`6267`.)"
msgstr ""

#: ../../whatsnew/2.7.rst:1706
msgid ""
"The :mod:`zipfile` module's :class:`~zipfile.ZipFile` now supports the "
"context management protocol, so you can write ``with zipfile.ZipFile(...) as"
" f:``. (Contributed by Brian Curtin; :issue:`5511`.)"
msgstr ""
"Модуль :mod:`zipfile` :class:`~zipfile.ZipFile` тепер підтримує протокол "
"керування контекстом, тому ви можете писати ``with zipfile.ZipFile(...) як "
"f:``. (Надав Браян Кертін; :issue:`5511`.)"

#: ../../whatsnew/2.7.rst:1710
msgid ""
":mod:`zipfile` now also supports archiving empty directories and extracts "
"them correctly.  (Fixed by Kuba Wieczorek; :issue:`4710`.) Reading files out"
" of an archive is faster, and interleaving :meth:`~zipfile.ZipFile.read` and"
" :meth:`~zipfile.ZipFile.readline` now works correctly. (Contributed by Nir "
"Aides; :issue:`7610`.)"
msgstr ""

#: ../../whatsnew/2.7.rst:1716
msgid ""
"The :func:`~zipfile.is_zipfile` function now accepts a file object, in "
"addition to the path names accepted in earlier versions.  (Contributed by "
"Gabriel Genellina; :issue:`4756`.)"
msgstr ""
"Функція :func:`~zipfile.is_zipfile` тепер приймає об’єкт файлу на додаток до"
" імен шляхів, прийнятих у попередніх версіях. (Надав Габріель Генелліна; "
":issue:`4756`.)"

#: ../../whatsnew/2.7.rst:1720
msgid ""
"The :meth:`~zipfile.ZipFile.writestr` method now has an optional "
"*compress_type* parameter that lets you override the default compression "
"method specified in the :class:`~zipfile.ZipFile` constructor.  (Contributed"
" by Ronald Oussoren; :issue:`6003`.)"
msgstr ""
"Метод :meth:`~zipfile.ZipFile.writestr` тепер має необов’язковий параметр "
"*compress_type*, який дозволяє перевизначити метод стиснення за "
"замовчуванням, указаний у конструкторі :class:`~zipfile.ZipFile`. (Надав "
"Рональд Оуссорен; :issue:`6003`.)"

#: ../../whatsnew/2.7.rst:1733
msgid "New module: importlib"
msgstr "新模块：importlib"

#: ../../whatsnew/2.7.rst:1735
msgid ""
"Python 3.1 includes the :mod:`importlib` package, a re-implementation of the"
" logic underlying Python's :keyword:`import` statement. :mod:`importlib` is "
"useful for implementors of Python interpreters and to users who wish to "
"write new importers that can participate in the import process.  Python 2.7 "
"doesn't contain the complete :mod:`importlib` package, but instead has a "
"tiny subset that contains a single function, "
":func:`~importlib.import_module`."
msgstr ""
"Python 3.1 включає пакет :mod:`importlib`, повторну реалізацію логіки, що "
"лежить в основі оператора :keyword:`import` Python. :mod:`importlib` "
"корисний для розробників інтерпретаторів Python і для користувачів, які "
"хочуть написати нові імпортери, які можуть брати участь у процесі імпорту. "
"Python 2.7 не містить повного пакета :mod:`importlib`, натомість має "
"крихітну підмножину, яка містить одну функцію, "
":func:`~importlib.import_module`."

#: ../../whatsnew/2.7.rst:1743
msgid ""
"``import_module(name, package=None)`` imports a module.  *name* is a string "
"containing the module or package's name.  It's possible to do relative "
"imports by providing a string that begins with a ``.`` character, such as "
"``..utils.errors``.  For relative imports, the *package* argument must be "
"provided and is the name of the package that will be used as the anchor for "
"the relative import.  :func:`~importlib.import_module` both inserts the "
"imported module into ``sys.modules`` and returns the module object."
msgstr ""
"``import_module(name, package=None)`` імпортує модуль. *name* — це рядок, що"
" містить назву модуля або пакета. Можна виконати відносний імпорт, надавши "
"рядок, який починається із символу ``.``, наприклад ``..utils.errors``. Для "
"відносного імпорту потрібно вказати аргумент *package*, який є назвою "
"пакета, який використовуватиметься як прив’язка для відносного імпорту. "
":func:`~importlib.import_module` вставляє імпортований модуль у "
"``sys.modules`` і повертає об’єкт модуля."

#: ../../whatsnew/2.7.rst:1752
msgid "Here are some examples::"
msgstr "这是一些例子::"

#: ../../whatsnew/2.7.rst:1763
msgid ""
":mod:`importlib` was implemented by Brett Cannon and introduced in Python "
"3.1."
msgstr ""
":mod:`importlib` був реалізований Бреттом Кенноном і представлений у Python "
"3.1."

#: ../../whatsnew/2.7.rst:1768
msgid "New module: sysconfig"
msgstr "新模块：sysconfig"

#: ../../whatsnew/2.7.rst:1770
msgid ""
"The :mod:`sysconfig` module has been pulled out of the Distutils package, "
"becoming a new top-level module in its own right. :mod:`sysconfig` provides "
"functions for getting information about Python's build process: compiler "
"switches, installation paths, the platform name, and whether Python is "
"running from its source directory."
msgstr ""
"Модуль :mod:`sysconfig` було вилучено з пакета Distutils, ставши власним "
"новим модулем верхнього рівня. :mod:`sysconfig` надає функції для отримання "
"інформації про процес збирання Python: перемикачі компілятора, шляхи "
"встановлення, ім’я платформи та те, чи працює Python із вихідного каталогу."

#: ../../whatsnew/2.7.rst:1777
msgid "Some of the functions in the module are:"
msgstr "该模块中的部分函数:"

#: ../../whatsnew/2.7.rst:1779
msgid ""
":func:`~sysconfig.get_config_var` returns variables from Python's Makefile "
"and the :file:`pyconfig.h` file."
msgstr ""
":func:`~sysconfig.get_config_var` 返回来自 Python 的 Makefile 和 "
":file:`pyconfig.h` 文件的变量。"

#: ../../whatsnew/2.7.rst:1781
msgid ""
":func:`~sysconfig.get_config_vars` returns a dictionary containing all of "
"the configuration variables."
msgstr ":func:`~sysconfig.get_config_vars` 返回一个包含所有配置变量的字典。"

#: ../../whatsnew/2.7.rst:1783
msgid ""
":func:`~sysconfig.get_path` returns the configured path for a particular "
"type of module: the standard library, site-specific modules, platform-"
"specific modules, etc."
msgstr ":func:`~sysconfig.get_path` 返回特定模块类型的配置路径：标准库、站点专属模块、平台专属模块等等。"

#: ../../whatsnew/2.7.rst:1786
msgid ""
":func:`~sysconfig.is_python_build` returns true if you're running a binary "
"from a Python source tree, and false otherwise."
msgstr ""
":func:`~sysconfig.is_python_build` 会在你从 Python "
"源码树运行二进制可执行文件时返回真值，而在其他情况下返回假值。"

#: ../../whatsnew/2.7.rst:1789
msgid ""
"Consult the :mod:`sysconfig` documentation for more details and for a "
"complete list of functions."
msgstr ""
"Зверніться до документації :mod:`sysconfig`, щоб дізнатися більше та "
"отримати повний список функцій."

#: ../../whatsnew/2.7.rst:1792
msgid ""
"The Distutils package and :mod:`sysconfig` are now maintained by Tarek "
"Ziadé, who has also started a Distutils2 package (source repository at "
"https://hg.python.org/distutils2/) for developing a next-generation version "
"of Distutils."
msgstr ""
"Пакет Distutils і :mod:`sysconfig` тепер обслуговуються Тареком Зіаде, який "
"також запустив пакет Distutils2 (сховище вихідних кодів за адресою "
"https://hg.python.org/distutils2/) для розробки версії Distutils наступного "
"покоління. ."

#: ../../whatsnew/2.7.rst:1799
msgid "ttk: Themed Widgets for Tk"
msgstr "ttk：Tk 主题组件"

#: ../../whatsnew/2.7.rst:1801
msgid ""
"Tcl/Tk 8.5 includes a set of themed widgets that re-implement basic Tk "
"widgets but have a more customizable appearance and can therefore more "
"closely resemble the native platform's widgets.  This widget set was "
"originally called Tile, but was renamed to Ttk (for \"themed Tk\") on being "
"added to Tcl/Tck release 8.5."
msgstr ""
"Tcl/Tk 8.5 містить набір тематичних віджетів, які повторно реалізують "
"основні віджети Tk, але мають більш настроюваний вигляд і тому можуть більше"
" нагадувати віджети рідної платформи. Цей набір віджетів спочатку називався "
"Tile, але був перейменований на Ttk (для \"тематичних Tk\") після додавання "
"до випуску Tcl/Tck 8.5."

#: ../../whatsnew/2.7.rst:1807
msgid ""
"To learn more, read the :mod:`ttk` module documentation.  You may also wish "
"to read the Tcl/Tk manual page describing the Ttk theme engine, available at"
" https://www.tcl.tk/man/tcl8.5/TkCmd/ttk_intro.htm. Some screenshots of the "
"Python/Ttk code in use are at https://code.google.com/archive/p/python-"
"ttk/wikis/Screenshots.wiki."
msgstr ""

#: ../../whatsnew/2.7.rst:1814
msgid ""
"The :mod:`ttk` module was written by Guilherme Polo and added in "
":issue:`2983`.  An alternate version called ``Tile.py``, written by Martin "
"Franklin and maintained by Kevin Walzer, was proposed for inclusion in "
":issue:`2618`, but the authors argued that Guilherme Polo's work was more "
"comprehensive."
msgstr ""

#: ../../whatsnew/2.7.rst:1824
msgid "Updated module: unittest"
msgstr "更新的模块：unittest"

#: ../../whatsnew/2.7.rst:1826
msgid ""
"The :mod:`unittest` module was greatly enhanced; many new features were "
"added.  Most of these features were implemented by Michael Foord, unless "
"otherwise noted.  The enhanced version of the module is downloadable "
"separately for use with Python versions 2.4 to 2.6, packaged as the "
":mod:`unittest2` package, from https://pypi.org/project/unittest2."
msgstr ""

#: ../../whatsnew/2.7.rst:1833
msgid ""
"When used from the command line, the module can automatically discover "
"tests.  It's not as fancy as `py.test <https://pytest.org>`__ or `nose "
"<https://nose.readthedocs.io/>`__, but provides a simple way to run tests "
"kept within a set of package directories.  For example, the following "
"command will search the :file:`test/` subdirectory for any importable test "
"files named ``test*.py``::"
msgstr ""
"При использовании из командной строки модуль может автоматически "
"обнаруживать тесты. Это не так красиво, как `py.test <https://pytest.org>`__"
" или `nose <https://nose.readthedocs.io/>`__, но обеспечивает простой способ"
" запуска тестов, хранящихся в наборе. каталогов пакетов. Например, следующая"
" команда будет искать в подкаталоге :file:`test/` любые импортируемые "
"тестовые файлы с именем ``test*.py``::"

#: ../../whatsnew/2.7.rst:1842
msgid ""
"Consult the :mod:`unittest` module documentation for more details. "
"(Developed in :issue:`6001`.)"
msgstr ""
"Щоб дізнатися більше, зверніться до документації модуля :mod:`unittest`. "
"(Розроблено в :issue:`6001`.)"

#: ../../whatsnew/2.7.rst:1845
msgid "The :func:`~unittest.main` function supports some other new options:"
msgstr "Функція :func:`~unittest.main` підтримує деякі інші нові параметри:"

#: ../../whatsnew/2.7.rst:1847
msgid ""
":option:`-b <unittest -b>` or :option:`!--buffer` will buffer the standard "
"output and standard error streams during each test.  If the test passes, any"
" resulting output will be discarded; on failure, the buffered output will be"
" displayed."
msgstr ""
":option:`-b <unittest -b>` або :option:`!--buffer` буферизує стандартний "
"вихід і стандартні потоки помилок під час кожного тесту. Якщо тест пройдено,"
" будь-які отримані результати будуть відхилені; у разі помилки буде "
"відображено буферизований вихід."

#: ../../whatsnew/2.7.rst:1852
msgid ""
":option:`-c <unittest -c>` or :option:`!--catch` will cause the control-C "
"interrupt to be handled more gracefully.  Instead of interrupting the test "
"process immediately, the currently running test will be completed and then "
"the partial results up to the interruption will be reported. If you're "
"impatient, a second press of control-C will cause an immediate interruption."
msgstr ""
":option:`-c <unittest -c>` або :option:`!--catch` призведе до того, що "
"переривання control-C оброблятиметься більш витончено. Замість негайного "
"переривання процесу тестування поточний тест буде завершено, а потім буде "
"повідомлено про часткові результати до моменту переривання. Якщо ви "
"нетерплячі, повторне натискання Control-C призведе до негайної перерви."

#: ../../whatsnew/2.7.rst:1859
msgid ""
"This control-C handler tries to avoid causing problems when the code being "
"tested or the tests being run have defined a signal handler of their own, by"
" noticing that a signal handler was already set and calling it.  If this "
"doesn't work for you, there's a :func:`~unittest.removeHandler` decorator "
"that can be used to mark tests that should have the control-C handling "
"disabled."
msgstr ""
"Цей обробник control-C намагається уникнути проблем, коли код, що "
"тестується, або тести, що виконуються, визначили власний обробник сигналу, "
"помічаючи, що обробник сигналу вже встановлено, і викликає його. Якщо це не "
"працює для вас, є декоратор :func:`~unittest.removeHandler`, який можна "
"використовувати для позначення тестів, для яких слід вимкнено обробку "
"control-C."

#: ../../whatsnew/2.7.rst:1866
msgid ""
":option:`-f <unittest -f>` or :option:`!--failfast` makes test execution "
"stop immediately when a test fails instead of continuing to execute further "
"tests.  (Suggested by Cliff Dyer and implemented by Michael Foord; "
":issue:`8074`.)"
msgstr ""
":option:`-f <unittest -f>` або :option:`!--failfast` негайно припиняє "
"виконання тесту, коли тест не вдається, замість того, щоб продовжувати "
"виконання подальших тестів. (Запропоновано Кліффом Даєром і реалізовано "
"Майклом Фордом; :issue:`8074`.)"

#: ../../whatsnew/2.7.rst:1871
msgid ""
"The progress messages now show 'x' for expected failures and 'u' for "
"unexpected successes when run in verbose mode. (Contributed by Benjamin "
"Peterson.)"
msgstr ""
"Повідомлення про перебіг тепер показують \"x\" для очікуваних помилок і "
"\"u\" для неочікуваних успіхів під час запуску в докладному режимі. (Надав "
"Бенджамін Петерсон.)"

#: ../../whatsnew/2.7.rst:1875
msgid ""
"Test cases can raise the :exc:`~unittest.SkipTest` exception to skip a test "
"(:issue:`1034053`)."
msgstr ""
"Тестові випадки можуть викликати виключення :exc:`~unittest.SkipTest`, щоб "
"пропустити тест (:issue:`1034053`)."

#: ../../whatsnew/2.7.rst:1878
msgid ""
"The error messages for :meth:`~unittest.TestCase.assertEqual`, "
":meth:`~unittest.TestCase.assertTrue`, and "
":meth:`~unittest.TestCase.assertFalse` failures now provide more "
"information.  If you set the :attr:`~unittest.TestCase.longMessage` "
"attribute of your :class:`~unittest.TestCase` classes to true, both the "
"standard error message and any additional message you provide will be "
"printed for failures.  (Added by Michael Foord; :issue:`5663`.)"
msgstr ""
"Повідомлення про помилки для помилок :meth:`~unittest.TestCase.assertEqual`,"
" :meth:`~unittest.TestCase.assertTrue` і "
":meth:`~unittest.TestCase.assertFalse` тепер надають більше інформації. Якщо"
" ви встановите атрибут :attr:`~unittest.TestCase.longMessage` ваших класів "
":class:`~unittest.TestCase` як true, стандартне повідомлення про помилку та "
"будь-яке додаткове повідомлення, яке ви надасте, буде надруковано для "
"помилок. (Додав Майкл Форд; :issue:`5663`.)"

#: ../../whatsnew/2.7.rst:1885
msgid ""
"The :meth:`~unittest.TestCase.assertRaises` method now returns a context "
"handler when called without providing a callable object to run.  For "
"example, you can write this::"
msgstr ""
"Метод :meth:`~unittest.TestCase.assertRaises` тепер повертає обробник "
"контексту під час виклику без надання об’єкта для запуску. Наприклад, ви "
"можете написати це::"

#: ../../whatsnew/2.7.rst:1892
msgid "(Implemented by Antoine Pitrou; :issue:`4444`.)"
msgstr "(Реалізовано Антуаном Пітру; :issue:`4444`.)"

#: ../../whatsnew/2.7.rst:1896
msgid ""
"Module- and class-level setup and teardown fixtures are now supported. "
"Modules can contain :func:`~unittest.setUpModule` and "
":func:`~unittest.tearDownModule` functions.  Classes can have "
":meth:`~unittest.TestCase.setUpClass` and "
":meth:`~unittest.TestCase.tearDownClass` methods that must be defined as "
"class methods (using ``@classmethod`` or equivalent).  These functions and "
"methods are invoked when the test runner switches to a test case in a "
"different module or class."
msgstr ""
"Тепер підтримуються пристрої налаштування та демонтажу на рівні модуля та "
"класу. Модулі можуть містити функції :func:`~unittest.setUpModule` і "
":func:`~unittest.tearDownModule`. Класи можуть мати методи "
":meth:`~unittest.TestCase.setUpClass` і "
":meth:`~unittest.TestCase.tearDownClass`, які мають бути визначені як методи"
" класу (використовуючи ``@classmethod`` або еквівалент). Ці функції та "
"методи викликаються, коли виконавець тесту перемикається на тестовий приклад"
" в іншому модулі чи класі."

#: ../../whatsnew/2.7.rst:1904
msgid ""
"The methods :meth:`~unittest.TestCase.addCleanup` and "
":meth:`~unittest.TestCase.doCleanups` were added. "
":meth:`~unittest.TestCase.addCleanup` lets you add cleanup functions that "
"will be called unconditionally (after :meth:`~unittest.TestCase.setUp` if "
":meth:`~unittest.TestCase.setUp` fails, otherwise after "
":meth:`~unittest.TestCase.tearDown`). This allows for much simpler resource "
"allocation and deallocation during tests (:issue:`5679`)."
msgstr ""
"Додано методи :meth:`~unittest.TestCase.addCleanup` і "
":meth:`~unittest.TestCase.doCleanups`. :meth:`~unittest.TestCase.addCleanup`"
" дозволяє додавати функції очищення, які будуть викликані безумовно (після "
":meth:`~unittest.TestCase.setUp`, якщо :meth:`~unittest.TestCase.setUp` не "
"вдається, інакше після :meth:`~unittest.TestCase.tearDown`). Це дозволяє "
"набагато простіше розподіляти та звільняти ресурси під час тестування "
"(:issue:`5679`)."

#: ../../whatsnew/2.7.rst:1912
msgid ""
"A number of new methods were added that provide more specialized tests.  "
"Many of these methods were written by Google engineers for use in their test"
" suites; Gregory P. Smith, Michael Foord, and GvR worked on merging them "
"into Python's version of :mod:`unittest`."
msgstr ""
"Було додано ряд нових методів, які забезпечують більш спеціалізовані тести. "
"Багато з цих методів були написані інженерами Google для використання в "
"їхніх наборах тестів; Грегорі П. Сміт, Майкл Форд і GvR працювали над їх "
"об’єднанням у версію Python :mod:`unittest`."

#: ../../whatsnew/2.7.rst:1917
msgid ""
":meth:`~unittest.TestCase.assertIsNone` and "
":meth:`~unittest.TestCase.assertIsNotNone` take one expression and verify "
"that the result is or is not ``None``."
msgstr ""
":meth:`~unittest.TestCase.assertIsNone` і "
":meth:`~unittest.TestCase.assertIsNotNone` беруть один вираз і перевіряють, "
"чи є результат ``None``."

#: ../../whatsnew/2.7.rst:1920
msgid ""
":meth:`~unittest.TestCase.assertIs` and "
":meth:`~unittest.TestCase.assertIsNot` take two values and check whether the"
" two values evaluate to the same object or not. (Added by Michael Foord; "
":issue:`2578`.)"
msgstr ""
":meth:`~unittest.TestCase.assertIs` і :meth:`~unittest.TestCase.assertIsNot`"
" приймають два значення та перевіряють, чи обидва значення обчислюються для "
"одного об’єкта чи ні. (Додав Майкл Форд; :issue:`2578`.)"

#: ../../whatsnew/2.7.rst:1924
msgid ""
":meth:`~unittest.TestCase.assertIsInstance` and "
":meth:`~unittest.TestCase.assertNotIsInstance` check whether the resulting "
"object is an instance of a particular class, or of one of a tuple of "
"classes.  (Added by Georg Brandl; :issue:`7031`.)"
msgstr ""
":meth:`~unittest.TestCase.assertIsInstance` і "
":meth:`~unittest.TestCase.assertNotIsInstance` перевіряють, чи є отриманий "
"об’єкт екземпляром певного класу чи одного з кортежу класів. (Додав Георг "
"Брандл; :issue:`7031`.)"

#: ../../whatsnew/2.7.rst:1929
msgid ""
":meth:`~unittest.TestCase.assertGreater`, "
":meth:`~unittest.TestCase.assertGreaterEqual`, "
":meth:`~unittest.TestCase.assertLess`, and "
":meth:`~unittest.TestCase.assertLessEqual` compare two quantities."
msgstr ""
":meth:`~unittest.TestCase.assertGreater`, "
":meth:`~unittest.TestCase.assertGreaterEqual`, "
":meth:`~unittest.TestCase.assertLess`, and "
":meth:`~unittest.TestCase.assertLessEqual` порівнюють два значення."

#: ../../whatsnew/2.7.rst:1933
msgid ""
":meth:`~unittest.TestCase.assertMultiLineEqual` compares two strings, and if"
" they're not equal, displays a helpful comparison that highlights the "
"differences in the two strings.  This comparison is now used by default when"
" Unicode strings are compared with :meth:`~unittest.TestCase.assertEqual`."
msgstr ""
":meth:`~unittest.TestCase.assertMultiLineEqual` порівнює два рядки, і якщо "
"вони не рівні, відображає корисне порівняння, яке підкреслює відмінності в "
"двох рядках. Це порівняння тепер використовується за замовчуванням, коли "
"рядки Unicode порівнюються з :meth:`~unittest.TestCase.assertEqual`."

#: ../../whatsnew/2.7.rst:1938
msgid ""
":meth:`~unittest.TestCase.assertRegexpMatches` and "
":meth:`~unittest.TestCase.assertNotRegexpMatches` checks whether the first "
"argument is a string matching or not matching the regular expression "
"provided as the second argument (:issue:`8038`)."
msgstr ""

#: ../../whatsnew/2.7.rst:1943
msgid ""
":meth:`~unittest.TestCase.assertRaisesRegexp` checks whether a particular "
"exception is raised, and then also checks that the string representation of "
"the exception matches the provided regular expression."
msgstr ""

#: ../../whatsnew/2.7.rst:1947
msgid ""
":meth:`~unittest.TestCase.assertIn` and "
":meth:`~unittest.TestCase.assertNotIn` tests whether *first* is or is not in"
"  *second*."
msgstr ""
":meth:`~unittest.TestCase.assertIn` і :meth:`~unittest.TestCase.assertNotIn`"
" перевіряє, чи є *first* у *second* чи ні."

#: ../../whatsnew/2.7.rst:1950
msgid ""
":meth:`~unittest.TestCase.assertItemsEqual` tests whether two provided "
"sequences contain the same elements."
msgstr ""

#: ../../whatsnew/2.7.rst:1953
msgid ""
":meth:`~unittest.TestCase.assertSetEqual` compares whether two sets are "
"equal, and only reports the differences between the sets in case of error."
msgstr ""
":meth:`~unittest.TestCase.assertSetEqual` порівнює, чи рівні два набори, і "
"повідомляє про відмінності між наборами лише в разі помилки."

#: ../../whatsnew/2.7.rst:1956
msgid ""
"Similarly, :meth:`~unittest.TestCase.assertListEqual` and "
":meth:`~unittest.TestCase.assertTupleEqual` compare the specified types and "
"explain any differences without necessarily printing their full values; "
"these methods are now used by default when comparing lists and tuples using "
":meth:`~unittest.TestCase.assertEqual`. More generally, "
":meth:`~unittest.TestCase.assertSequenceEqual` compares two sequences and "
"can optionally check whether both sequences are of a particular type."
msgstr ""
"Подібним чином :meth:`~unittest.TestCase.assertListEqual` і "
":meth:`~unittest.TestCase.assertTupleEqual` порівнюють вказані типи та "
"пояснюють будь-які відмінності, не обов’язково друкуючи їхні повні значення;"
" ці методи тепер використовуються за замовчуванням під час порівняння "
"списків і кортежів за допомогою :meth:`~unittest.TestCase.assertEqual`. "
"Загалом, :meth:`~unittest.TestCase.assertSequenceEqual` порівнює дві "
"послідовності та за бажанням може перевірити, чи обидві послідовності "
"належать до певного типу."

#: ../../whatsnew/2.7.rst:1964
msgid ""
":meth:`~unittest.TestCase.assertDictEqual` compares two dictionaries and "
"reports the differences; it's now used by default when you compare two "
"dictionaries using :meth:`~unittest.TestCase.assertEqual`.  "
":meth:`~unittest.TestCase.assertDictContainsSubset` checks whether all of "
"the key/value pairs in *first* are found in *second*."
msgstr ""

#: ../../whatsnew/2.7.rst:1969
msgid ""
":meth:`~unittest.TestCase.assertAlmostEqual` and "
":meth:`~unittest.TestCase.assertNotAlmostEqual` test whether *first* and "
"*second* are approximately equal.  This method can either round their "
"difference to an optionally specified number of *places* (the default is 7) "
"and compare it to zero, or require the difference to be smaller than a "
"supplied *delta* value."
msgstr ""
":meth:`~unittest.TestCase.assertAlmostEqual` и "
":meth:`~unittest.TestCase.assertNotAlmostEqual` проверяют, примерно ли равны"
" *первый* и *секундный*. Этот метод может либо округлить разницу до "
"необязательно указанного количества *мест* (по умолчанию — 7) и сравнить ее "
"с нулем, либо потребовать, чтобы разница была меньше, чем предоставленное "
"значение *дельта*."

#: ../../whatsnew/2.7.rst:1975
msgid ""
":meth:`~unittest.TestLoader.loadTestsFromName` properly honors the "
":attr:`~unittest.TestLoader.suiteClass` attribute of the "
":class:`~unittest.TestLoader`. (Fixed by Mark Roddy; :issue:`6866`.)"
msgstr ""
":meth:`~unittest.TestLoader.loadTestsFromName` належним чином враховує "
"атрибут :attr:`~unittest.TestLoader.suiteClass` "
":class:`~unittest.TestLoader`. (Виправлено Марком Родді; :issue:`6866`.)"

#: ../../whatsnew/2.7.rst:1979
msgid ""
"A new hook lets you extend the :meth:`~unittest.TestCase.assertEqual` method"
" to handle new data types.  The "
":meth:`~unittest.TestCase.addTypeEqualityFunc` method takes a type object "
"and a function. The function will be used when both of the objects being "
"compared are of the specified type.  This function should compare the two "
"objects and raise an exception if they don't match; it's a good idea for the"
" function to provide additional information about why the two objects aren't"
" matching, much as the new sequence comparison methods do."
msgstr ""
"Новий хук дозволяє розширити метод :meth:`~unittest.TestCase.assertEqual` "
"для обробки нових типів даних. Метод "
":meth:`~unittest.TestCase.addTypeEqualityFunc` приймає об’єкт типу та "
"функцію. Функція буде використана, якщо обидва порівнювані об’єкти належать "
"до вказаного типу. Ця функція має порівняти два об’єкти та викликати "
"виключення, якщо вони не збігаються; доцільно, щоб функція надавала "
"додаткову інформацію про те, чому два об’єкти не збігаються, подібно до "
"нових методів порівняння послідовностей."

#: ../../whatsnew/2.7.rst:1988
msgid ""
":func:`unittest.main` now takes an optional ``exit`` argument.  If false, "
":func:`~unittest.main` doesn't call :func:`sys.exit`, allowing "
":func:`~unittest.main` to be used from the interactive interpreter. "
"(Contributed by J. Pablo Fernández; :issue:`3379`.)"
msgstr ""
":func:`unittest.main` тепер приймає додатковий аргумент ``вихід``. Якщо "
"false, :func:`~unittest.main` не викликає :func:`sys.exit`, що дозволяє "
"використовувати :func:`~unittest.main` з інтерактивного інтерпретатора. "
"(Надав Дж. Пабло Фернандес; :issue:`3379`.)"

#: ../../whatsnew/2.7.rst:1993
msgid ""
":class:`~unittest.TestResult` has new "
":meth:`~unittest.TestResult.startTestRun` and "
":meth:`~unittest.TestResult.stopTestRun` methods that are called immediately"
" before and after a test run.  (Contributed by Robert Collins; "
":issue:`5728`.)"
msgstr ""
":class:`~unittest.TestResult` має нові методи "
":meth:`~unittest.TestResult.startTestRun` і "
":meth:`~unittest.TestResult.stopTestRun`, які викликаються безпосередньо "
"перед і після виконання тесту. (Надав Роберт Коллінз; :issue:`5728`.)"

#: ../../whatsnew/2.7.rst:1997
msgid ""
"With all these changes, the :file:`unittest.py` was becoming awkwardly "
"large, so the module was turned into a package and the code split into "
"several files (by Benjamin Peterson).  This doesn't affect how the module is"
" imported or used."
msgstr ""
"З усіма цими змінами :file:`unittest.py` ставав незручно великим, тому "
"модуль перетворили на пакет, а код розділили на кілька файлів (автор "
"Бенджамін Петерсон). Це не впливає на імпорт або використання модуля."

#: ../../whatsnew/2.7.rst:2005
msgid ""
"https://web.archive.org/web/20210619163128/http://www.voidspace.org.uk/python/articles/unittest2.shtml"
msgstr ""
"https://web.archive.org/web/20210619163128/http://www.voidspace.org.uk/python/articles/unittest2.shtml"

#: ../../whatsnew/2.7.rst:2005
msgid ""
"Describes the new features, how to use them, and the rationale for various "
"design decisions.  (By Michael Foord.)"
msgstr ""
"Описує нові функції, способи їх використання та обґрунтування різних "
"дизайнерських рішень. (Автор: Майкл Форд.)"

#: ../../whatsnew/2.7.rst:2011
msgid "Updated module: ElementTree 1.3"
msgstr "更新的模块：ElementTree 1.3"

#: ../../whatsnew/2.7.rst:2013
msgid ""
"The version of the ElementTree library included with Python was updated to "
"version 1.3.  Some of the new features are:"
msgstr ""
"Версію бібліотеки ElementTree, яка входить до складу Python, оновлено до "
"версії 1.3. Деякі з нових функцій:"

#: ../../whatsnew/2.7.rst:2016
msgid ""
"The various parsing functions now take a *parser* keyword argument giving an"
" :class:`~xml.etree.ElementTree.XMLParser` instance that will be used.  This"
" makes it possible to override the file's internal encoding::"
msgstr ""
"Різні функції аналізу тепер приймають аргумент ключового слова *parser*, що "
"дає екземпляр :class:`~xml.etree.ElementTree.XMLParser`, який буде "
"використано. Це дає змогу змінити внутрішнє кодування файлу:"

#: ../../whatsnew/2.7.rst:2023
msgid ""
"Errors in parsing XML now raise a :exc:`ParseError` exception, whose "
"instances have a :attr:`position` attribute containing a (*line*, *column*) "
"tuple giving the location of the problem."
msgstr ""

#: ../../whatsnew/2.7.rst:2027
msgid ""
"ElementTree's code for converting trees to a string has been significantly "
"reworked, making it roughly twice as fast in many cases.  The "
":meth:`ElementTree.write() <xml.etree.ElementTree.ElementTree.write>` and "
":meth:`Element.write` methods now have a *method* parameter that can be "
"\"xml\" (the default), \"html\", or \"text\".  HTML mode will output empty "
"elements as ``<empty></empty>`` instead of ``<empty/>``, and text mode will "
"skip over elements and only output the text chunks.  If you set the "
":attr:`tag` attribute of an element to ``None`` but leave its children in "
"place, the element will be omitted when the tree is written out, so you "
"don't need to do more extensive rearrangement to remove a single element."
msgstr ""

#: ../../whatsnew/2.7.rst:2039
msgid ""
"Namespace handling has also been improved.  All ``xmlns:<whatever>`` "
"declarations are now output on the root element, not scattered throughout "
"the resulting XML.  You can set the default namespace for a tree by setting "
"the :attr:`default_namespace` attribute and can register new prefixes with "
":meth:`~xml.etree.ElementTree.register_namespace`.  In XML mode, you can use"
" the true/false *xml_declaration* parameter to suppress the XML declaration."
msgstr ""
"Також покращено обробку простору імен. Усі оголошення ``xmlns: <whatever>`` "
"тепер виводяться на кореневий елемент, а не розкидані по результуючому XML. "
"Ви можете встановити простір імен за замовчуванням для дерева, установивши "
"атрибут :attr:`default_namespace`, і можете зареєструвати нові префікси за "
"допомогою :meth:`~xml.etree.ElementTree.register_namespace`. У режимі XML ви"
" можете використовувати параметр *xml_declaration* true/false, щоб приховати"
" декларацію XML."

#: ../../whatsnew/2.7.rst:2047
msgid ""
"New :class:`~xml.etree.ElementTree.Element` method: "
":meth:`~xml.etree.ElementTree.Element.extend` appends the items from a "
"sequence to the element's children.  Elements themselves behave like "
"sequences, so it's easy to move children from one element to another::"
msgstr ""
"Новий метод :class:`~xml.etree.ElementTree.Element`: "
":meth:`~xml.etree.ElementTree.Element.extend` додає елементи з послідовності"
" до дочірніх елементів елемента. Самі елементи поводяться як послідовності, "
"тому легко переміщати дітей від одного елемента до іншого:"

#: ../../whatsnew/2.7.rst:2064
msgid ""
"New :class:`Element` method: :meth:`~xml.etree.ElementTree.Element.iter` "
"yields the children of the element as a generator.  It's also possible to "
"write ``for child in elem:`` to loop over an element's children.  The "
"existing method :meth:`getiterator` is now deprecated, as is "
":meth:`getchildren` which constructs and returns a list of children."
msgstr ""

#: ../../whatsnew/2.7.rst:2071
msgid ""
"New :class:`Element` method: :meth:`~xml.etree.ElementTree.Element.itertext`"
" yields all chunks of text that are descendants of the element.  For "
"example::"
msgstr ""

#: ../../whatsnew/2.7.rst:2082
msgid ""
"Deprecated: using an element as a Boolean (i.e., ``if elem:``) would return "
"true if the element had any children, or false if there were no children.  "
"This behaviour is confusing -- ``None`` is false, but so is a childless "
"element? -- so it will now trigger a :exc:`FutureWarning`.  In your code, "
"you should be explicit: write ``len(elem) != 0`` if you're interested in the"
" number of children, or ``elem is not None``."
msgstr ""
"Застаріле: використання елемента як логічного значення (тобто ``if elem:``) "
"повертатиме true, якщо елемент мав дочірніх елементів, або false, якщо "
"дочірніх елементів не було. Така поведінка збиває з пантелику – ``None`` є "
"хибним, але також і бездітний елемент? -- тож тепер ініціюватиме "
":exc:`FutureWarning`. У вашому коді ви повинні бути чіткими: напишіть "
"``len(elem) != 0``, якщо вас цікавить кількість дітей, або ``elem не є "
"None``."

#: ../../whatsnew/2.7.rst:2090
msgid ""
"Fredrik Lundh develops ElementTree and produced the 1.3 version; you can "
"read his article describing 1.3 at "
"https://web.archive.org/web/20200703234532/http://effbot.org/zone/elementtree-13-intro.htm."
" Florent Xicluna updated the version included with Python, after discussions"
" on python-dev and in :issue:`6472`.)"
msgstr ""
"Фредрік Лунд розробляє ElementTree і створив версію 1.3; ви можете прочитати"
" його статтю з описом 1.3 на "
"https://web.archive.org/web/20200703234532/http://effbot.org/zone/elementtree-13-intro.htm."
" Florent Xicluna оновив версію, включену в Python, після обговорень на "
"python-dev і в :issue:`6472`.)"

#: ../../whatsnew/2.7.rst:2100
msgid "Build and C API Changes"
msgstr "构建和 C API 的改变"

#: ../../whatsnew/2.7.rst:2102
msgid "Changes to Python's build process and to the C API include:"
msgstr "针对 Python 构建过程和 C API 的改变包括:"

#: ../../whatsnew/2.7.rst:2104
msgid ""
"The latest release of the GNU Debugger, GDB 7, can be `scripted using Python"
" <https://sourceware.org/gdb/current/onlinedocs/gdb/Python.html>`__. When "
"you begin debugging an executable program P, GDB will look for a file named "
"``P-gdb.py`` and automatically read it.  Dave Malcolm contributed a "
":file:`python-gdb.py` that adds a number of commands useful when debugging "
"Python itself.  For example, ``py-up`` and ``py-down`` go up or down one "
"Python stack frame, which usually corresponds to several C stack frames.  "
"``py-print`` prints the value of a Python variable, and ``py-bt`` prints the"
" Python stack trace.  (Added as a result of :issue:`8032`.)"
msgstr ""

#: ../../whatsnew/2.7.rst:2116
msgid ""
"If you use the :file:`.gdbinit` file provided with Python, the \"pyo\" macro"
" in the 2.7 version now works correctly when the thread being debugged "
"doesn't hold the GIL; the macro now acquires it before printing. "
"(Contributed by Victor Stinner; :issue:`3632`.)"
msgstr ""
"Якщо ви використовуєте файл :file:`.gdbinit`, що надається разом з Python, "
"макрос \"pyo\" у версії 2.7 тепер працює правильно, коли потік, який "
"налагоджується, не містить GIL; тепер макрос отримує його перед друком. "
"(Надав Віктор Стіннер; :issue:`3632`.)"

#: ../../whatsnew/2.7.rst:2121
msgid ""
":c:func:`Py_AddPendingCall` is now thread-safe, letting any worker thread "
"submit notifications to the main Python thread.  This is particularly useful"
" for asynchronous IO operations. (Contributed by Kristján Valur Jónsson; "
":issue:`4293`.)"
msgstr ""
":c:func:`Py_AddPendingCall` тепер потокобезпечний, дозволяючи будь-якому "
"робочому потоку надсилати сповіщення до основного потоку Python. Це особливо"
" корисно для асинхронних операцій введення-виведення. (Надав Крістіян Валур "
"Йонссон; :issue:`4293`.)"

#: ../../whatsnew/2.7.rst:2126
msgid ""
"New function: :c:func:`PyCode_NewEmpty` creates an empty code object; only "
"the filename, function name, and first line number are required. This is "
"useful for extension modules that are attempting to construct a more useful "
"traceback stack.  Previously such extensions needed to call "
":c:func:`PyCode_New`, which had many more arguments.  (Added by Jeffrey "
"Yasskin.)"
msgstr ""
"Нова функція: :c:func:`PyCode_NewEmpty` створює порожній об’єкт коду; "
"потрібні лише назва файлу, назва функції та номер першого рядка. Це корисно "
"для модулів розширення, які намагаються побудувати більш корисний стек "
"трасування. Раніше такі розширення потребували виклику :c:func:`PyCode_New`,"
" який мав набагато більше аргументів. (Додав Джеффрі Яскін.)"

#: ../../whatsnew/2.7.rst:2133
msgid ""
"New function: :c:func:`PyErr_NewExceptionWithDoc` creates a new exception "
"class, just as the existing :c:func:`PyErr_NewException` does, but takes an "
"extra ``char *`` argument containing the docstring for the new exception "
"class.  (Added by 'lekma' on the Python bug tracker; :issue:`7033`.)"
msgstr ""
"Нова функція: :c:func:`PyErr_NewExceptionWithDoc` створює новий клас "
"винятків, як і існуючий :c:func:`PyErr_NewException`, але приймає додатковий"
" аргумент ``char *``, що містить рядок документації для нового класу "
"винятків . (Додано \"lekma\" у системі відстеження помилок Python; "
":issue:`7033`.)"

#: ../../whatsnew/2.7.rst:2139
msgid ""
"New function: :c:func:`PyFrame_GetLineNumber` takes a frame object and "
"returns the line number that the frame is currently executing. Previously "
"code would need to get the index of the bytecode instruction currently "
"executing, and then look up the line number corresponding to that address.  "
"(Added by Jeffrey Yasskin.)"
msgstr ""
"Нова функція: :c:func:`PyFrame_GetLineNumber` приймає об’єкт фрейму та "
"повертає номер рядка, який кадр зараз виконує. Раніше коду потрібно було "
"отримати індекс інструкції байт-коду, яка зараз виконується, а потім знайти "
"номер рядка, що відповідає цій адресі. (Додав Джеффрі Яскін.)"

#: ../../whatsnew/2.7.rst:2145
msgid ""
"New functions: :c:func:`PyLong_AsLongAndOverflow` and "
":c:func:`PyLong_AsLongLongAndOverflow`  approximates a Python long integer "
"as a C :c:expr:`long` or :c:expr:`long long`. If the number is too large to "
"fit into the output type, an *overflow* flag is set and returned to the "
"caller. (Contributed by Case Van Horsen; :issue:`7528` and :issue:`7767`.)"
msgstr ""
"Новые функции: :c:func:`PyLong_AsLongAndOverflow` и "
":c:func:`PyLong_AsLongLongAndOverflow` аппроксимируют длинное целое число "
"Python как C :c:expr:`long` или :c:expr:`long long`. Если число слишком "
"велико, чтобы соответствовать типу вывода, устанавливается флаг *overflow*, "
"который возвращается вызывающей стороне. (Предоставлено Кейсом Ван Хорсеном;"
" :issue:`7528` и :issue:`7767`.)"

#: ../../whatsnew/2.7.rst:2152
msgid ""
"New function: stemming from the rewrite of string-to-float conversion, a new"
" :c:func:`PyOS_string_to_double` function was added.  The old "
":c:func:`PyOS_ascii_strtod` and :c:func:`PyOS_ascii_atof` functions are now "
"deprecated."
msgstr ""

#: ../../whatsnew/2.7.rst:2157
msgid ""
"New function: :c:func:`PySys_SetArgvEx` sets the value of ``sys.argv`` and "
"can optionally update ``sys.path`` to include the directory containing the "
"script named by ``sys.argv[0]`` depending on the value of an *updatepath* "
"parameter."
msgstr ""
"Нова функція: :c:func:`PySys_SetArgvEx` встановлює значення ``sys.argv`` і "
"може додатково оновлювати ``sys.path``, щоб включити каталог, що містить "
"сценарій, названий ``sys.argv[0]`` залежно від значення параметра "
"*updatepath*."

#: ../../whatsnew/2.7.rst:2162
msgid ""
"This function was added to close a security hole for applications that embed"
" Python.  The old function, :c:func:`PySys_SetArgv`, would always update "
"``sys.path``, and sometimes it would add the current directory.  This meant "
"that, if you ran an application embedding Python in a directory controlled "
"by someone else, attackers could put a Trojan-horse module in the directory "
"(say, a file named :file:`os.py`) that your application would then import "
"and run."
msgstr ""
"Цю функцію було додано, щоб закрити дірку в безпеці програм, які вбудовують "
"Python. Стара функція :c:func:`PySys_SetArgv` завжди оновлювала "
"``sys.path``, а іноді додавала поточний каталог. Це означало, що якщо ви "
"запускаєте програму, яка вбудовує Python, у каталог, який контролюється "
"кимось іншим, зловмисники можуть розмістити модуль троянського коня в цьому "
"каталозі (скажімо, файл із назвою :file:`os.py`), який потім зробить ваш "
"додаток імпортувати та запускати."

#: ../../whatsnew/2.7.rst:2170
msgid ""
"If you maintain a C/C++ application that embeds Python, check whether you're"
" calling :c:func:`PySys_SetArgv` and carefully consider whether the "
"application should be using :c:func:`PySys_SetArgvEx` with *updatepath* set "
"to false."
msgstr ""
"Якщо ви підтримуєте програму C/C++, у якій вбудовано Python, перевірте, чи "
"викликаєте ви :c:func:`PySys_SetArgv`, і уважно обміркуйте, чи має програма "
"використовувати :c:func:`PySys_SetArgvEx` з *updatepath*, встановленим на "
"false ."

#: ../../whatsnew/2.7.rst:2175
msgid ""
"Security issue reported as `CVE-2008-5983 <https://cve.mitre.org/cgi-"
"bin/cvename.cgi?name=CVE-2008-5983>`_; discussed in :issue:`5753`, and fixed"
" by Antoine Pitrou."
msgstr ""
"Про проблему безпеки повідомлено як `CVE-2008-5983 "
"<https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-5983>`_; обговорено"
" в :issue:`5753` та виправлено Антуаном Пітру."

#: ../../whatsnew/2.7.rst:2179
msgid ""
"New macros: the Python header files now define the following macros: "
":c:macro:`Py_ISALNUM`, :c:macro:`Py_ISALPHA`, :c:macro:`Py_ISDIGIT`, "
":c:macro:`Py_ISLOWER`, :c:macro:`Py_ISSPACE`, :c:macro:`Py_ISUPPER`, "
":c:macro:`Py_ISXDIGIT`, :c:macro:`Py_TOLOWER`, and :c:macro:`Py_TOUPPER`. "
"All of these functions are analogous to the C standard macros for "
"classifying characters, but ignore the current locale setting, because in "
"several places Python needs to analyze characters in a locale-independent "
"way.  (Added by Eric Smith; :issue:`5793`.)"
msgstr ""
"Нові макроси: файли заголовків Python тепер визначають такі макроси: "
":c:macro:`Py_ISALNUM`, :c:macro:`Py_ISALPHA`, :c:macro:`Py_ISDIGIT`, "
":c:macro:`Py_ISLOWER`,  :c:macro:`Py_ISSPACE`, :c:macro:`Py_ISUPPER`, "
":c:macro:`Py_ISXDIGIT`, :c:macro:`Py_TOLOWER` і :c:macro:`Py_TOUPPER`. Усі "
"ці функції є аналогічними стандартним макросам C для класифікації символів, "
"але ігнорують поточні параметри локалі, оскільки в деяких місцях Python "
"потребує аналізу символів у спосіб, незалежний від локалі. (Додав Ерік Сміт;"
" :issue:`5793`.)"

#: ../../whatsnew/2.7.rst:2197
msgid ""
"Removed function: :c:macro:`PyEval_CallObject` is now only available as a "
"macro.  A function version was being kept around to preserve ABI linking "
"compatibility, but that was in 1997; it can certainly be deleted by now.  "
"(Removed by Antoine Pitrou; :issue:`8276`.)"
msgstr ""

#: ../../whatsnew/2.7.rst:2202
msgid ""
"New format codes: the :c:func:`PyFormat_FromString`, "
":c:func:`PyFormat_FromStringV`, and :c:func:`PyErr_Format` functions now "
"accept ``%lld`` and ``%llu`` format codes for displaying C's :c:expr:`long "
"long` types. (Contributed by Mark Dickinson; :issue:`7228`.)"
msgstr ""

#: ../../whatsnew/2.7.rst:2208
msgid ""
"The complicated interaction between threads and process forking has been "
"changed.  Previously, the child process created by :func:`os.fork` might "
"fail because the child is created with only a single thread running, the "
"thread performing the :func:`os.fork`. If other threads were holding a lock,"
" such as Python's import lock, when the fork was performed, the lock would "
"still be marked as \"held\" in the new process.  But in the child process "
"nothing would ever release the lock, since the other threads weren't "
"replicated, and the child process would no longer be able to perform "
"imports."
msgstr ""
"Змінено складну взаємодію між потоками та розгалуженням процесу. Раніше "
"дочірній процес, створений :func:`os.fork`, міг вийти з ладу, оскільки "
"дочірній процес створюється лише з одним запущеним потоком, потік, який "
"виконує :func:`os.fork`. Якби інші потоки утримували блокування, наприклад "
"блокування імпорту Python, під час виконання розгалуження блокування все "
"одно було б позначено як \"утримано\" в новому процесі. Але в дочірньому "
"процесі ніщо ніколи не зніме блокування, оскільки інші потоки не були "
"репліковані, і дочірній процес більше не зможе виконувати імпорт."

#: ../../whatsnew/2.7.rst:2218
msgid ""
"Python 2.7 acquires the import lock before performing an :func:`os.fork`, "
"and will also clean up any locks created using the :mod:`threading` module."
"  C extension modules that have internal locks, or that call "
":c:func:`fork()` themselves, will not benefit from this clean-up."
msgstr ""
"Python 2.7 отримує блокування імпорту перед виконанням :func:`os.fork`, а "
"також очищає будь-які блокування, створені за допомогою модуля "
":mod:`threading`. Модулі розширення C, які мають внутрішні блокування або "
"самі викликають :c:func:`fork()`, не матимуть користі від цього очищення."

#: ../../whatsnew/2.7.rst:2224
msgid "(Fixed by Thomas Wouters; :issue:`1590864`.)"
msgstr "(Виправлено Томасом Воутерсом; :issue:`1590864`.)"

#: ../../whatsnew/2.7.rst:2226
msgid ""
"The :c:func:`Py_Finalize` function now calls the internal "
":func:`threading._shutdown` function; this prevents some exceptions from "
"being raised when an interpreter shuts down. (Patch by Adam Olsen; "
":issue:`1722344`.)"
msgstr ""

#: ../../whatsnew/2.7.rst:2231
msgid ""
"When using the :c:type:`PyMemberDef` structure to define attributes of a "
"type, Python will no longer let you try to delete or set a "
":const:`T_STRING_INPLACE` attribute."
msgstr ""

#: ../../whatsnew/2.7.rst:2237
msgid ""
"Global symbols defined by the :mod:`ctypes` module are now prefixed with "
"``Py``, or with ``_ctypes``.  (Implemented by Thomas Heller; :issue:`3102`.)"
msgstr ""
"Глобальні символи, визначені модулем :mod:`ctypes`, тепер мають префікс "
"``Py`` або ``_ctypes``. (Реалізовано Томасом Геллером; :issue:`3102`.)"

#: ../../whatsnew/2.7.rst:2241
msgid ""
"New configure option: the :option:`!--with-system-expat` switch allows "
"building the :mod:`pyexpat` module to use the system Expat library. "
"(Contributed by Arfrever Frehtes Taifersar Arahesis; :issue:`7609`.)"
msgstr ""

#: ../../whatsnew/2.7.rst:2245
msgid ""
"New configure option: the :option:`!--with-valgrind` option will now disable"
" the pymalloc allocator, which is difficult for the Valgrind memory-error "
"detector to analyze correctly. Valgrind will therefore be better at "
"detecting memory leaks and overruns. (Contributed by James Henstridge; "
":issue:`2422`.)"
msgstr ""
"Новий параметр конфігурації: параметр :option:`!--with-valgrind` тепер "
"вимикає розподільник pymalloc, який важко правильно аналізувати детектору "
"помилок пам’яті Valgrind. Таким чином, Valgrind буде краще виявляти витоки "
"пам’яті та перевантаження. (Надав Джеймс Хенстрідж; :issue:`2422`.)"

#: ../../whatsnew/2.7.rst:2252
msgid ""
"New configure option: you can now supply an empty string to :option:`!--"
"with-dbmliborder=` in order to disable all of the various DBM modules.  "
"(Added by Arfrever Frehtes Taifersar Arahesis; :issue:`6491`.)"
msgstr ""
"Новий параметр конфігурації: тепер ви можете надати порожній рядок "
":option:`!--with-dbmliborder=`, щоб вимкнути всі різні модулі DBM. (Додано "
"Arfrever Frehtes Taifersar Arahesis; :issue:`6491`.)"

#: ../../whatsnew/2.7.rst:2257
msgid ""
"The :program:`configure` script now checks for floating-point rounding bugs "
"on certain 32-bit Intel chips and defines a :c:macro:`X87_DOUBLE_ROUNDING` "
"preprocessor definition.  No code currently uses this definition, but it's "
"available if anyone wishes to use it. (Added by Mark Dickinson; "
":issue:`2937`.)"
msgstr ""
"Сценарій :program:`configure` тепер перевіряє помилки округлення з плаваючою"
" комою на певних 32-розрядних мікросхемах Intel і визначає визначення "
"препроцесора :c:macro:`X87_DOUBLE_ROUNDING`. Жоден код наразі не "
"використовує це визначення, але воно доступне, якщо хтось захоче його "
"використати. (Додав Марк Дікінсон; :issue:`2937`.)"

#: ../../whatsnew/2.7.rst:2263
msgid ""
":program:`configure` also now sets a :envvar:`LDCXXSHARED` Makefile variable"
" for supporting C++ linking.  (Contributed by Arfrever Frehtes Taifersar "
"Arahesis; :issue:`1222585`.)"
msgstr ""
":program:`configure` також тепер встановлює змінну :envvar:`LDCXXSHARED` "
"Makefile для підтримки зв’язування C++. (Надано Arfrever Frehtes Taifersar "
"Arahesis; :issue:`1222585`.)"

#: ../../whatsnew/2.7.rst:2267
msgid ""
"The build process now creates the necessary files for pkg-config support.  "
"(Contributed by Clinton Roy; :issue:`3585`.)"
msgstr ""
"Тепер у процесі збирання створюються необхідні файли для підтримки pkg-"
"config. (Надав Клінтон Рой; :issue:`3585`.)"

#: ../../whatsnew/2.7.rst:2270
msgid ""
"The build process now supports Subversion 1.7.  (Contributed by Arfrever "
"Frehtes Taifersar Arahesis; :issue:`6094`.)"
msgstr ""
"Процес збирання тепер підтримує Subversion 1.7. (Надано Arfrever Frehtes "
"Taifersar Arahesis; :issue:`6094`.)"

#: ../../whatsnew/2.7.rst:2277
msgid "Capsules"
msgstr "Capsule 对象"

#: ../../whatsnew/2.7.rst:2279
msgid ""
"Python 3.1 adds a new C datatype, :c:type:`PyCapsule`, for providing a C API"
" to an extension module.  A capsule is essentially the holder of a C ``void "
"*`` pointer, and is made available as a module attribute; for example, the "
":mod:`socket` module's API is exposed as ``socket.CAPI``, and "
":mod:`unicodedata` exposes ``ucnhash_CAPI``.  Other extensions can import "
"the module, access its dictionary to get the capsule object, and then get "
"the ``void *`` pointer, which will usually point to an array of pointers to "
"the module's various API functions."
msgstr ""
"Python 3.1 додає новий тип даних C, :c:type:`PyCapsule`, для надання C API "
"до модуля розширення. Капсула, по суті, є власником покажчика C ``void *`` і"
" доступна як атрибут модуля; наприклад, API модуля :mod:`socket` "
"представлено як ``socket.CAPI``, а :mod:`unicodedata` — ``ucnhash_CAPI``. "
"Інші розширення можуть імпортувати модуль, отримати доступ до його словника,"
" щоб отримати об’єкт капсули, а потім отримати покажчик ``void *``, який "
"зазвичай вказує на масив покажчиків на різні функції API модуля."

#: ../../whatsnew/2.7.rst:2288
msgid ""
"There is an existing data type already used for this, :c:type:`PyCObject`, "
"but it doesn't provide type safety.  Evil code written in pure Python could "
"cause a segmentation fault by taking a :c:type:`PyCObject` from module A and"
" somehow substituting it for the :c:type:`PyCObject` in module B.   Capsules"
" know their own name, and getting the pointer requires providing the name:"
msgstr ""

#: ../../whatsnew/2.7.rst:2306
msgid ""
"You are assured that ``vtable`` points to whatever you're expecting. If a "
"different capsule was passed in, :c:func:`PyCapsule_IsValid` would detect "
"the mismatched name and return false.  Refer to :ref:`using-capsules` for "
"more information on using these objects."
msgstr ""
"Ви впевнені, що ``vtable`` вказує на те, що ви очікуєте. Якщо було передано "
"іншу капсулу, :c:func:`PyCapsule_IsValid` виявить невідповідне ім’я та "
"поверне false. Зверніться до :ref:`using-capsules` для отримання додаткової "
"інформації про використання цих об’єктів."

#: ../../whatsnew/2.7.rst:2311
msgid ""
"Python 2.7 now uses capsules internally to provide various extension-module "
"APIs, but the :c:func:`PyCObject_AsVoidPtr` was modified to handle capsules,"
" preserving compile-time compatibility with the :c:type:`CObject` interface."
"  Use of :c:func:`PyCObject_AsVoidPtr` will signal a "
":exc:`PendingDeprecationWarning`, which is silent by default."
msgstr ""

#: ../../whatsnew/2.7.rst:2318
msgid ""
"Implemented in Python 3.1 and backported to 2.7 by Larry Hastings; discussed"
" in :issue:`5630`."
msgstr ""
"Реалізовано в Python 3.1 і перенесено до 2.7 Ларрі Гастінгсом; обговорено в "
":issue:`5630`."

#: ../../whatsnew/2.7.rst:2325
msgid "Port-Specific Changes: Windows"
msgstr "特定于 Windows 的更改："

#: ../../whatsnew/2.7.rst:2327
msgid ""
"The :mod:`msvcrt` module now contains some constants from the "
":file:`crtassem.h` header file: :data:`CRT_ASSEMBLY_VERSION`, "
":data:`VC_ASSEMBLY_PUBLICKEYTOKEN`, and "
":data:`LIBRARIES_ASSEMBLY_NAME_PREFIX`. (Contributed by David Cournapeau; "
":issue:`4365`.)"
msgstr ""

#: ../../whatsnew/2.7.rst:2334
msgid ""
"The :mod:`_winreg` module for accessing the registry now implements the "
":func:`~_winreg.CreateKeyEx` and :func:`~_winreg.DeleteKeyEx` functions, "
"extended versions of previously supported functions that take several extra "
"arguments.  The :func:`~_winreg.DisableReflectionKey`, "
":func:`~_winreg.EnableReflectionKey`, and "
":func:`~_winreg.QueryReflectionKey` were also tested and documented. "
"(Implemented by Brian Curtin: :issue:`7347`.)"
msgstr ""

#: ../../whatsnew/2.7.rst:2342
msgid ""
"The new :c:func:`_beginthreadex` API is used to start threads, and the "
"native thread-local storage functions are now used. (Contributed by Kristján"
" Valur Jónsson; :issue:`3582`.)"
msgstr ""

#: ../../whatsnew/2.7.rst:2346
msgid ""
"The :func:`os.kill` function now works on Windows.  The signal value can be "
"the constants :const:`CTRL_C_EVENT`, :const:`CTRL_BREAK_EVENT`, or any "
"integer.  The first two constants will send :kbd:`Control-C` and "
":kbd:`Control-Break` keystroke events to subprocesses; any other value will "
"use the :c:func:`TerminateProcess` API.  (Contributed by Miki Tebeka; "
":issue:`1220212`.)"
msgstr ""

#: ../../whatsnew/2.7.rst:2353
msgid ""
"The :func:`os.listdir` function now correctly fails for an empty path.  "
"(Fixed by Hirokazu Yamamoto; :issue:`5913`.)"
msgstr ""
"Функція :func:`os.listdir` тепер правильно не працює для порожнього шляху. "
"(Виправлено Хірокадзу Ямамото; :issue:`5913`.)"

#: ../../whatsnew/2.7.rst:2356
msgid ""
"The :mod:`mimelib` module will now read the MIME database from the Windows "
"registry when initializing. (Patch by Gabriel Genellina; :issue:`4969`.)"
msgstr ""

#: ../../whatsnew/2.7.rst:2363
msgid "Port-Specific Changes: Mac OS X"
msgstr "特定于 Mac OS X 的更改："

#: ../../whatsnew/2.7.rst:2365
msgid ""
"The path ``/Library/Python/2.7/site-packages`` is now appended to "
"``sys.path``, in order to share added packages between the system "
"installation and a user-installed copy of the same version. (Changed by "
"Ronald Oussoren; :issue:`4865`.)"
msgstr ""
"Шлях ``/Library/Python/2.7/site-packages`` тепер додається до ``sys.path``, "
"щоб спільно використовувати додані пакети між інсталяцією системи та копією "
"тієї самої версії, встановленою користувачем. (Змінено Рональдом Оуссореном;"
" :issue:`4865`.)"

#: ../../whatsnew/2.7.rst:2372
msgid ""
"As of 2.7.13, this change was removed. ``/Library/Python/2.7/site-"
"packages``, the site-packages directory used by the Apple-supplied system "
"Python 2.7 is no longer appended to ``sys.path`` for user-installed Pythons "
"such as from the python.org installers.  As of macOS 10.12, Apple changed "
"how the system site-packages directory is configured, which could cause "
"installation of pip components, like setuptools, to fail.  Packages "
"installed for the system Python will no longer be shared with user-installed"
" Pythons. (:issue:`28440`)"
msgstr ""
"Станом на 2.7.13 цю зміну було видалено. ``/Library/Python/2.7/site-"
"packages``, каталог site-packages, який використовується системою Python "
"2.7, що надається Apple, більше не додається до ``sys.path`` для Python, "
"встановлених користувачем, наприклад із інсталятори python.org. Починаючи з "
"macOS 10.12, Apple змінила конфігурацію системного каталогу site-packages, "
"що могло призвести до збою встановлення компонентів pip, як-от setuptools. "
"Пакети, встановлені для системного Python, більше не будуть надані іншим "
"Python, встановленим користувачами. (:issue:`28440`)"

#: ../../whatsnew/2.7.rst:2383
msgid "Port-Specific Changes: FreeBSD"
msgstr "特定于 FreeBSD 的更改："

#: ../../whatsnew/2.7.rst:2385
msgid ""
"FreeBSD 7.1's :const:`SO_SETFIB` constant, used with "
":func:`~socket.getsockopt`/:func:`~socket.setsockopt` to select an alternate"
" routing table, is now available in the :mod:`socket` module.  (Added by "
"Kyle VanderBeek; :issue:`8235`.)"
msgstr ""

#: ../../whatsnew/2.7.rst:2391
msgid "Other Changes and Fixes"
msgstr "其他的改变和修正"

#: ../../whatsnew/2.7.rst:2393
msgid ""
"Two benchmark scripts, :file:`iobench` and :file:`ccbench`, were added to "
"the :file:`Tools` directory.  :file:`iobench` measures the speed of the "
"built-in file I/O objects returned by :func:`open` while performing various "
"operations, and :file:`ccbench` is a concurrency benchmark that tries to "
"measure computing throughput, thread switching latency, and IO processing "
"bandwidth when performing several tasks using a varying number of threads."
msgstr ""
"Два сценарії тестування, :file:`iobench` і :file:`ccbench`, було додано до "
"каталогу :file:`Tools`. :file:`iobench` вимірює швидкість вбудованих "
"файлових об’єктів вводу/виводу, які повертає :func:`open` під час виконання "
"різних операцій, а :file:`ccbench` є тестом паралелізму, який намагається "
"виміряти пропускну здатність обчислень, затримка перемикання потоків і "
"пропускна здатність обробки вводу/виводу під час виконання кількох завдань "
"із використанням різної кількості потоків."

#: ../../whatsnew/2.7.rst:2401
msgid ""
"The :file:`Tools/i18n/msgfmt.py` script now understands plural forms in "
":file:`.po` files.  (Fixed by Martin von Löwis; :issue:`5464`.)"
msgstr ""
"Сценарій :file:`Tools/i18n/msgfmt.py` тепер розуміє форми множини у файлах "
":file:`.po`. (Виправлено Мартіном фон Льовісом; :issue:`5464`.)"

#: ../../whatsnew/2.7.rst:2405
msgid ""
"When importing a module from a :file:`.pyc` or :file:`.pyo` file with an "
"existing :file:`.py` counterpart, the :attr:`co_filename` attributes of the "
"resulting code objects are overwritten when the original filename is "
"obsolete.  This can happen if the file has been renamed, moved, or is "
"accessed through different paths.  (Patch by Ziga Seilnacht and Jean-Paul "
"Calderone; :issue:`1180193`.)"
msgstr ""

#: ../../whatsnew/2.7.rst:2412
msgid ""
"The :file:`regrtest.py` script now takes a :option:`!--randseed=` switch "
"that takes an integer that will be used as the random seed for the "
":option:`!-r` option that executes tests in random order. The :option:`!-r` "
"option also reports the seed that was used (Added by Collin Winter.)"
msgstr ""
"Сценарій :file:`regrtest.py` тепер приймає перемикач :option:`!--randseed=`,"
" який приймає ціле число, яке використовуватиметься як випадкове початкове "
"значення для параметра :option:`!-r`, який виконує тести у довільному "
"порядку. Параметр :option:`!-r` також повідомляє про використане насіння "
"(додано Колліном Вінтером)."

#: ../../whatsnew/2.7.rst:2418
msgid ""
"Another :file:`regrtest.py` switch is :option:`!-j`, which takes an integer "
"specifying how many tests run in parallel. This allows reducing the total "
"runtime on multi-core machines. This option is compatible with several other"
" options, including the :option:`!-R` switch which is known to produce long "
"runtimes. (Added by Antoine Pitrou, :issue:`6152`.)  This can also be used "
"with a new :option:`!-F` switch that runs selected tests in a loop until "
"they fail.  (Added by Antoine Pitrou; :issue:`7312`.)"
msgstr ""
"Інший перемикач :file:`regrtest.py` — це :option:`!-j`, який приймає ціле "
"число, що вказує, скільки тестів виконується паралельно. Це дозволяє "
"зменшити загальний час роботи на багатоядерних машинах. Ця опція сумісна з "
"кількома іншими опціями, включаючи перемикач :option:`!-R`, який, як відомо,"
" забезпечує тривалий час роботи. (Додано Антуаном Пітру, :issue:`6152`.) Це "
"також можна використовувати з новим перемикачем :option:`!-F`, який запускає"
" вибрані тести в циклі, доки вони не завершаться. (Додав Антуан Пітру; "
":issue:`7312`.)"

#: ../../whatsnew/2.7.rst:2427
msgid ""
"When executed as a script, the :file:`py_compile.py` module now accepts "
"``'-'`` as an argument, which will read standard input for the list of "
"filenames to be compiled.  (Contributed by Piotr Ożarowski; :issue:`8233`.)"
msgstr ""
"Коли модуль :file:`py_compile.py` виконується як сценарій, тепер приймає "
"``'-'`` як аргумент, який читатиме стандартний вхід для списку імен файлів, "
"які потрібно скомпілювати. (Надав Пьотр Ожаровський; :issue:`8233`.)"

#: ../../whatsnew/2.7.rst:2435
msgid "Porting to Python 2.7"
msgstr "移植到 Python 2.7"

#: ../../whatsnew/2.7.rst:2437
msgid ""
"This section lists previously described changes and other bugfixes that may "
"require changes to your code:"
msgstr "本节列出了先前描述的改变以及可能需要修改你的代码的其他问题修正:"

#: ../../whatsnew/2.7.rst:2440
msgid ""
"The :func:`range` function processes its arguments more consistently; it "
"will now call :meth:`__int__` on non-float, non-integer arguments that are "
"supplied to it.  (Fixed by Alexander Belopolsky; :issue:`1533`.)"
msgstr ""

#: ../../whatsnew/2.7.rst:2445
msgid ""
"The string :meth:`format` method changed the default precision used for "
"floating-point and complex numbers from 6 decimal places to 12, which "
"matches the precision used by :func:`str`. (Changed by Eric Smith; "
":issue:`5920`.)"
msgstr ""
"Метод string :meth:`format` змінив стандартну точність, що використовується "
"для чисел з плаваючою комою та комплексних чисел, з 6 знаків після коми на "
"12, що відповідає точності, яку використовує :func:`str`. (Змінено Еріком "
"Смітом; :issue:`5920`.)"

#: ../../whatsnew/2.7.rst:2450
msgid ""
"Because of an optimization for the :keyword:`with` statement, the special "
"methods :meth:`__enter__` and :meth:`__exit__` must belong to the object's "
"type, and cannot be directly attached to the object's instance.  This "
"affects new-style classes (derived from :class:`object`) and C extension "
"types.  (:issue:`6101`.)"
msgstr ""

#: ../../whatsnew/2.7.rst:2456
msgid ""
"Due to a bug in Python 2.6, the *exc_value* parameter to :meth:`__exit__` "
"methods was often the string representation of the exception, not an "
"instance.  This was fixed in 2.7, so *exc_value* will be an instance as "
"expected.  (Fixed by Florent Xicluna; :issue:`7853`.)"
msgstr ""

#: ../../whatsnew/2.7.rst:2466
msgid "In the standard library:"
msgstr "在标准库中:"

#: ../../whatsnew/2.7.rst:2468
msgid ""
"Operations with :class:`~datetime.datetime` instances that resulted in a "
"year falling outside the supported range didn't always raise "
":exc:`OverflowError`.  Such errors are now checked more carefully and will "
"now raise the exception. (Reported by Mark Leander, patch by Anand B. Pillai"
" and Alexander Belopolsky; :issue:`7150`.)"
msgstr ""
"Операції з екземплярами :class:`~datetime.datetime`, які призвели до того, "
"що рік вийшов за межі підтримуваного діапазону, не завжди викликали "
":exc:`OverflowError`. Такі помилки тепер перевіряються більш ретельно, і "
"тепер вони створюють винятки. (Повідомив Марк Леандер, виправлення Ананд Б. "
"Піллаї та Олександр Белопольський; :issue:`7150`.)"

#: ../../whatsnew/2.7.rst:2474
msgid ""
"When using :class:`~decimal.Decimal` instances with a string's "
":meth:`format` method, the default alignment was previously left-alignment."
"  This has been changed to right-alignment, which might change the output of"
" your programs. (Changed by Mark Dickinson; :issue:`6857`.)"
msgstr ""
"Під час використання екземплярів :class:`~decimal.Decimal` із методом "
":meth:`format` рядка раніше вирівнювання за замовчуванням було лівим. Це "
"було змінено на вирівнювання за правим краєм, що може змінити вивід ваших "
"програм. (Змінено Марком Дікінсоном; :issue:`6857`.)"

#: ../../whatsnew/2.7.rst:2480
msgid ""
"Comparisons involving a signaling NaN value (or ``sNAN``) now signal "
":const:`~decimal.InvalidOperation` instead of silently returning a true or "
"false value depending on the comparison operator.  Quiet NaN values (or "
"``NaN``) are now hashable.  (Fixed by Mark Dickinson; :issue:`7279`.)"
msgstr ""
"Порівняння, що включають сигнальне значення NaN (або ``sNAN``), тепер "
"сигналізують :const:`~decimal.InvalidOperation` замість мовчки повертати "
"значення true або false залежно від оператора порівняння. Тихі значення NaN "
"(або ``NaN``) тепер можна хешувати. (Виправлено Марком Дікінсоном; "
":issue:`7279`.)"

#: ../../whatsnew/2.7.rst:2492
msgid ""
"The :meth:`~StringIO.StringIO.readline` method of "
":class:`~StringIO.StringIO` objects now does nothing when a negative length "
"is requested, as other file-like objects do.  (:issue:`7348`)."
msgstr ""

#: ../../whatsnew/2.7.rst:2535
msgid "For C extensions:"
msgstr "对于C 扩展模块："

#: ../../whatsnew/2.7.rst:2537
msgid ""
"C extensions that use integer format codes with the ``PyArg_Parse*`` family "
"of functions will now raise a :exc:`TypeError` exception instead of "
"triggering a :exc:`DeprecationWarning` (:issue:`5080`)."
msgstr ""
"Розширення C, які використовують коди цілочисельного формату з сімейством "
"функцій ``PyArg_Parse*``, тепер викликатимуть виняток :exc:`TypeError` "
"замість того, щоб запускати :exc:`DeprecationWarning` (:issue:`5080`)."

#: ../../whatsnew/2.7.rst:2541
msgid ""
"Use the new :c:func:`PyOS_string_to_double` function instead of the old "
":c:func:`PyOS_ascii_strtod` and :c:func:`PyOS_ascii_atof` functions, which "
"are now deprecated."
msgstr ""

#: ../../whatsnew/2.7.rst:2545
msgid "For applications that embed Python:"
msgstr "对于嵌入Python的应用程序："

#: ../../whatsnew/2.7.rst:2547
msgid ""
"The :c:func:`PySys_SetArgvEx` function was added, letting applications close"
" a security hole when the existing :c:func:`PySys_SetArgv` function was "
"used.  Check whether you're calling :c:func:`PySys_SetArgv` and carefully "
"consider whether the application should be using :c:func:`PySys_SetArgvEx` "
"with *updatepath* set to false."
msgstr ""
"Було додано функцію :c:func:`PySys_SetArgvEx`, яка дозволяє програмам "
"закрити дірку в безпеці, коли використовується існуюча функція "
":c:func:`PySys_SetArgv`. Перевірте, чи викликаєте ви "
":c:func:`PySys_SetArgv`, і уважно обміркуйте, чи має програма "
"використовувати :c:func:`PySys_SetArgvEx` зі значенням false для "
"*updatepath*."

#: ../../whatsnew/2.7.rst:2560
msgid "New Features Added to Python 2.7 Maintenance Releases"
msgstr "Нові функції, додані до випусків обслуговування Python 2.7"

#: ../../whatsnew/2.7.rst:2562
msgid ""
"New features may be added to Python 2.7 maintenance releases when the "
"situation genuinely calls for it. Any such additions must go through the "
"Python Enhancement Proposal process, and make a compelling case for why they"
" can't be adequately addressed by either adding the new feature solely to "
"Python 3, or else by publishing it on the Python Package Index."
msgstr ""
"Нові функції можуть бути додані до технічних версій Python 2.7, коли цього "
"справді вимагає ситуація. Будь-які такі доповнення повинні пройти через "
"процес Python Enhancement Proposal і надати переконливий аргумент, чому їх "
"не можна належним чином вирішити, додавши нову функцію виключно до Python 3,"
" або опублікувавши її в індексі пакетів Python."

#: ../../whatsnew/2.7.rst:2568
msgid ""
"In addition to the specific proposals listed below, there is a general "
"exemption allowing new ``-3`` warnings to be added in any Python 2.7 "
"maintenance release."
msgstr ""
"На додаток до конкретних пропозицій, перелічених нижче, існує загальний "
"виняток, який дозволяє додавати нові попередження ``-3`` до будь-якої версії"
" обслуговування Python 2.7."

#: ../../whatsnew/2.7.rst:2574
msgid "Two new environment variables for debug mode"
msgstr "Дві нові змінні середовища для режиму налагодження"

#: ../../whatsnew/2.7.rst:2576
msgid ""
"In debug mode, the ``[xxx refs]`` statistic is not written by default, the "
":envvar:`PYTHONSHOWREFCOUNT` environment variable now must also be set. "
"(Contributed by Victor Stinner; :issue:`31733`.)"
msgstr ""

#: ../../whatsnew/2.7.rst:2580
msgid ""
"When Python is compiled with ``COUNT_ALLOC`` defined, allocation counts are "
"no longer dumped by default anymore: the :envvar:`PYTHONSHOWALLOCCOUNT` "
"environment variable must now also be set. Moreover, allocation counts are "
"now dumped into stderr, rather than stdout. (Contributed by Victor Stinner; "
":issue:`31692`.)"
msgstr ""

#: ../../whatsnew/2.7.rst:2589
msgid "PEP 434: IDLE Enhancement Exception for All Branches"
msgstr "PEP 434: Виняток із покращення IDLE для всіх гілок"

#: ../../whatsnew/2.7.rst:2591
msgid ""
":pep:`434` describes a general exemption for changes made to the IDLE "
"development environment shipped along with Python. This exemption makes it "
"possible for the IDLE developers to provide a more consistent user "
"experience across all supported versions of Python 2 and 3."
msgstr ""
":pep:`434` описує загальний виняток для змін, внесених у середовище розробки"
" IDLE, яке постачається разом із Python. Цей виняток дає змогу розробникам "
"IDLE забезпечувати більш послідовний досвід роботи з усіма підтримуваними "
"версіями Python 2 і 3."

#: ../../whatsnew/2.7.rst:2596
msgid ""
"For details of any IDLE changes, refer to the NEWS file for the specific "
"release."
msgstr ""
"Щоб дізнатися більше про будь-які зміни IDLE, зверніться до файлу NEWS для "
"конкретного випуску."

#: ../../whatsnew/2.7.rst:2601
msgid "PEP 466: Network Security Enhancements for Python 2.7"
msgstr "PEP 466: 针对 Python 2.7 的网络安全加固"

#: ../../whatsnew/2.7.rst:2603
msgid ""
":pep:`466` describes a number of network security enhancement proposals that"
" have been approved for inclusion in Python 2.7 maintenance releases, with "
"the first of those changes appearing in the Python 2.7.7 release."
msgstr ""
":pep:`466` описує низку пропозицій щодо покращення безпеки мережі, які було "
"схвалено для включення до випусків обслуговування Python 2.7, причому перші "
"зміни з’явилися у випуску Python 2.7.7."

#: ../../whatsnew/2.7.rst:2607
msgid ":pep:`466` related features added in Python 2.7.7:"
msgstr ":pep:`466` Python 2.7.7 中添加的相关功能："

#: ../../whatsnew/2.7.rst:2609
msgid ""
":func:`hmac.compare_digest` was backported from Python 3 to make a timing "
"attack resistant comparison operation available to Python 2 applications. "
"(Contributed by Alex Gaynor; :issue:`21306`.)"
msgstr ""
":func:`hmac.compare_digest` було перенесено з Python 3, щоб зробити операцію"
" порівняння, стійку до атак, доступною для програм Python 2. (Надав Алекс "
"Гейнор; :issue:`21306`.)"

#: ../../whatsnew/2.7.rst:2613
msgid ""
"OpenSSL 1.0.1g was upgraded in the official Windows installers published on "
"python.org. (Contributed by Zachary Ware; :issue:`21462`.)"
msgstr ""
"OpenSSL 1.0.1g було оновлено в офіційних інсталяторах Windows, опублікованих"
" на python.org. (Надав Zachary Ware; :issue:`21462`.)"

#: ../../whatsnew/2.7.rst:2616
msgid ":pep:`466` related features added in Python 2.7.8:"
msgstr ":pep:`466` Python 2.7.8 中添加的相关功能："

#: ../../whatsnew/2.7.rst:2618
msgid ""
":func:`hashlib.pbkdf2_hmac` was backported from Python 3 to make a hashing "
"algorithm suitable for secure password storage broadly available to Python 2"
" applications. (Contributed by Alex Gaynor; :issue:`21304`.)"
msgstr ""
":func:`hashlib.pbkdf2_hmac` було перенесено з Python 3, щоб зробити алгоритм"
" хешування, придатним для безпечного зберігання паролів, загальнодоступним "
"для програм Python 2. (Надав Алекс Гейнор; :issue:`21304`.)"

#: ../../whatsnew/2.7.rst:2622
msgid ""
"OpenSSL 1.0.1h was upgraded for the official Windows installers published on"
" python.org. (contributed by Zachary Ware in :issue:`21671` for "
"CVE-2014-0224)"
msgstr ""
"OpenSSL 1.0.1h було оновлено для офіційних інсталяторів Windows, "
"опублікованих на python.org. (надано Zachary Ware у :issue:`21671` для "
"CVE-2014-0224)"

#: ../../whatsnew/2.7.rst:2625
msgid ":pep:`466` related features added in Python 2.7.9:"
msgstr ":pep:`466` Python 2.7.9 中添加的相关功能："

#: ../../whatsnew/2.7.rst:2627
msgid ""
"Most of Python 3.4's :mod:`ssl` module was backported. This means :mod:`ssl`"
" now supports Server Name Indication, TLS1.x settings, access to the "
"platform certificate store, the :class:`~ssl.SSLContext` class, and other "
"features. (Contributed by Alex Gaynor and David Reid; :issue:`21308`.)"
msgstr ""
"Більшість модулів :mod:`ssl` Python 3.4 було перенесено назад. Це означає, "
"що :mod:`ssl` тепер підтримує індикацію імені сервера, налаштування TLS1.x, "
"доступ до сховища сертифікатів платформи, клас :class:`~ssl.SSLContext` та "
"інші функції. (Надано Алексом Гейнором і Девідом Рейдом; :issue:`21308`.)"

#: ../../whatsnew/2.7.rst:2632
msgid ""
"Refer to the \"Version added: 2.7.9\" notes in the module documentation for "
"specific details."
msgstr ""
"Зверніться до приміток \"Додана версія: 2.7.9\" у документації модуля, щоб "
"дізнатися більше."

#: ../../whatsnew/2.7.rst:2635
msgid ""
":func:`os.urandom` was changed to cache a file descriptor to "
"``/dev/urandom`` instead of reopening ``/dev/urandom`` on every call. "
"(Contributed by Alex Gaynor; :issue:`21305`.)"
msgstr ""
":func:`os.urandom` було змінено, щоб кешувати дескриптор файлу на "
"``/dev/urandom`` замість повторного відкриття ``/dev/urandom`` під час "
"кожного виклику. (Надав Алекс Гейнор; :issue:`21305`.)"

#: ../../whatsnew/2.7.rst:2639
msgid ""
":data:`hashlib.algorithms_guaranteed` and "
":data:`hashlib.algorithms_available` were backported from Python 3 to make "
"it easier for Python 2 applications to select the strongest available hash "
"algorithm. (Contributed by Alex Gaynor in :issue:`21307`)"
msgstr ""
":data:`hashlib.algorithms_guaranteed` і :data:`hashlib.algorithms_available`"
" було перенесено з Python 3, щоб полегшити програмам Python 2 вибір "
"найнадійнішого доступного алгоритму хешування. (Надав Алекс Гейнор у "
":issue:`21307`)"

#: ../../whatsnew/2.7.rst:2646
msgid "PEP 477: Backport ensurepip (PEP 453) to Python 2.7"
msgstr "PEP 477: 将 ensurepip (PEP 453) 向下移植到 Python 2.7"

#: ../../whatsnew/2.7.rst:2648
msgid ""
":pep:`477` approves the inclusion of the :pep:`453` ensurepip module and the"
" improved documentation that was enabled by it in the Python 2.7 maintenance"
" releases, appearing first in the Python 2.7.9 release."
msgstr ""
":pep:`477` схвалює включення модуля :pep:`453` securepip і покращеної "
"документації, яку він увімкнув, у випуски обслуговування Python 2.7, які "
"вперше з’явилися у випуску Python 2.7.9."

#: ../../whatsnew/2.7.rst:2654
msgid "Bootstrapping pip By Default"
msgstr "默认对 pip 进行初始设置"

#: ../../whatsnew/2.7.rst:2656
msgid ""
"The new :mod:`ensurepip` module (defined in :pep:`453`) provides a standard "
"cross-platform mechanism to bootstrap the pip installer into Python "
"installations. The version of ``pip`` included with Python 2.7.9 is ``pip`` "
"1.5.6, and future 2.7.x maintenance releases will update the bundled version"
" to the latest version of ``pip`` that is available at the time of creating "
"the release candidate."
msgstr ""
"Новий модуль :mod:`ensurepip` (визначений у :pep:`453`) надає стандартний "
"міжплатформний механізм для завантаження інсталятора pip у інсталяції "
"Python. Версія ``pip``, яка входить до Python 2.7.9, є ``pip`` 1.5.6, і в "
"майбутніх випусках технічного обслуговування 2.7.x оновлюватиметься пакетна "
"версія до останньої версії ``pip``, доступної за адресою час створення "
"реліз-кандидата."

#: ../../whatsnew/2.7.rst:2663
msgid ""
"By default, the commands ``pip``, ``pipX`` and ``pipX.Y`` will be installed "
"on all platforms (where X.Y stands for the version of the Python "
"installation), along with the ``pip`` Python package and its dependencies."
msgstr ""
"За замовчуванням команди ``pip``, ``pipX`` і ``pipX.Y`` будуть встановлені "
"на всіх платформах (де X.Y означає версію інсталяції Python), а також "
"``pip`` Пакет Python і його залежності."

#: ../../whatsnew/2.7.rst:2667
msgid ""
"For CPython :ref:`source builds on POSIX systems <building-python-on-unix>`,"
" the ``make install`` and ``make altinstall`` commands do not bootstrap "
"``pip`` by default.  This behaviour can be controlled through configure "
"options, and overridden through Makefile options."
msgstr ""
"Для CPython :ref:`source збірок на системах POSIX <building-python-on-"
"unix>`, команди ``make install`` і ``make altinstall`` не завантажують "
"``pip`` за замовчуванням. Цю поведінку можна контролювати за допомогою "
"параметрів конфігурації та перевизначати за допомогою параметрів Makefile."

#: ../../whatsnew/2.7.rst:2672
msgid ""
"On Windows and Mac OS X, the CPython installers now default to installing "
"``pip`` along with CPython itself (users may opt out of installing it during"
" the installation process). Window users will need to opt in to the "
"automatic ``PATH`` modifications to have ``pip`` available from the command "
"line by default, otherwise it can still be accessed through the Python "
"launcher for Windows as ``py -m pip``."
msgstr ""
"在 Windows 和 Mac OS X 上，现在 CPython 安装程序默认会将 ``pip`` 与 CPython "
"本身一同安装（用户可以在安装过程中选择不安装它）。 Window 用户需要选择执行 ``PATH`` 修改以使 ``pip`` "
"在命令行中默认可用，在其他情况下它仍然可以通过 Windows 版 Python 启动器以 ``py -m pip`` 的方式使用。"

#: ../../whatsnew/2.7.rst:2679
msgid ""
"As `discussed in the PEP`__, platform packagers may choose not to install "
"these commands by default, as long as, when invoked, they provide clear and "
"simple directions on how to install them on that platform (usually using the"
" system package manager)."
msgstr ""
"正如 `在 PEP "
"中已讨论的`__，平台打包者可以选择默认不安装这些命令，只需要在它们被发起调用时，能够提供有关如何在该平台上安装它们的简单清晰的指引（通常是使用系统包管理器）。"

#: ../../whatsnew/2.7.rst:2688
msgid "Documentation Changes"
msgstr "文档更改"

#: ../../whatsnew/2.7.rst:2690
msgid ""
"As part of this change, the :ref:`installing-index` and :ref:`distributing-"
"index` sections of the documentation have been completely redesigned as "
"short getting started and FAQ documents. Most packaging documentation has "
"now been moved out to the Python Packaging Authority maintained `Python "
"Packaging User Guide <https://packaging.python.org>`__ and the documentation"
" of the individual projects."
msgstr ""
"作为此项更改的一部分，文档的 :ref:`installing-index` 和 :ref:`distributing-index` "
"章节已经完全重新设计，快速入门和 FAQ 文档也是如此。 大部分打包指南文档现在都已被移至由 Python Packaging Authority "
"维护的 `Python Packaging User Guide <https://packaging.python.org>`__ "
"以及相应的独立项目文档。"

#: ../../whatsnew/2.7.rst:2698
msgid ""
"However, as this migration is currently still incomplete, the legacy "
"versions of those guides remaining available as :ref:`install-index` and "
":ref:`distutils-index`."
msgstr ""

#: ../../whatsnew/2.7.rst:2705
msgid ":pep:`453` -- Explicit bootstrapping of pip in Python installations"
msgstr ":pep:`453` -- Python 安装版中对 pip 的显式初始设置"

#: ../../whatsnew/2.7.rst:2705
msgid ""
"PEP written by Donald Stufft and Nick Coghlan, implemented by Donald Stufft,"
" Nick Coghlan, Martin von Löwis and Ned Deily."
msgstr ""
"PEP 由Donald Stufft 和 Nick Coghlan 撰写，由 Donald Stufft，Nick Coghlan，Martin von"
" Löwis 和 Ned Deily 实现。"

#: ../../whatsnew/2.7.rst:2709
msgid ""
"PEP 476: Enabling certificate verification by default for stdlib http "
"clients"
msgstr "PEP 476: 默认为 stdlib http 客户端启用证书验证"

#: ../../whatsnew/2.7.rst:2711
msgid ""
":pep:`476` updated :mod:`httplib` and modules which use it, such as "
":mod:`urllib2` and :mod:`xmlrpclib`, to now verify that the server presents "
"a certificate which is signed by a Certificate Authority in the platform "
"trust store and whose hostname matches the hostname being requested by "
"default, significantly improving security for many applications. This change"
" was made in the Python 2.7.9 release."
msgstr ""

#: ../../whatsnew/2.7.rst:2718
msgid ""
"For applications which require the old previous behavior, they can pass an "
"alternate context::"
msgstr "对于需要之前版本的旧有行为的应用程序，可以传入一个替代的上下文::"

#: ../../whatsnew/2.7.rst:2735
msgid "PEP 493: HTTPS verification migration tools for Python 2.7"
msgstr "PEP 493：适用于Python 2.7 的 HTTPS 验证迁移工具"

#: ../../whatsnew/2.7.rst:2737
msgid ""
":pep:`493` provides additional migration tools to support a more incremental"
" infrastructure upgrade process for environments containing applications and"
" services relying on the historically permissive processing of server "
"certificates when establishing client HTTPS connections.  These additions "
"were made in the Python 2.7.12 release."
msgstr ""
":pep:`493` надає додаткові інструменти міграції для підтримки більш "
"поступового процесу оновлення інфраструктури для середовищ, які містять "
"програми та служби, які покладаються на історично дозволену обробку "
"сертифікатів сервера під час встановлення клієнтських з’єднань HTTPS. Ці "
"доповнення були зроблені у випуску Python 2.7.12."

#: ../../whatsnew/2.7.rst:2743
msgid ""
"These tools are intended for use in cases where affected applications and "
"services can't be modified to explicitly pass a more permissive SSL context "
"when establishing the connection."
msgstr ""
"Ці інструменти призначені для використання у випадках, коли програми та "
"служби, які постраждали, не можна змінити, щоб явно передавати більш "
"дозволений контекст SSL під час встановлення з’єднання."

#: ../../whatsnew/2.7.rst:2747
msgid ""
"For applications and services which can't be modified at all, the new "
"``PYTHONHTTPSVERIFY`` environment variable may be set to ``0`` to revert an "
"entire Python process back to the default permissive behaviour of Python "
"2.7.8 and earlier."
msgstr ""
"Для програм і служб, які взагалі неможливо змінити, нова змінна середовища "
"``PYTHONHTTPSVERIFY`` може бути встановлена на ``0``, щоб повернути весь "
"процес Python назад до дозволеної поведінки за замовчуванням Python 2.7.8 і "
"попередніх версій. ."

#: ../../whatsnew/2.7.rst:2752
msgid ""
"For cases where the connection establishment code can't be modified, but the"
" overall application can be, the new :func:`ssl._https_verify_certificates` "
"function can be used to adjust the default behaviour at runtime."
msgstr ""

#: ../../whatsnew/2.7.rst:2758
msgid "New ``make regen-all`` build target"
msgstr "新增 ``make regen-all`` 构建目标"

#: ../../whatsnew/2.7.rst:2760
msgid ""
"To simplify cross-compilation, and to ensure that CPython can reliably be "
"compiled without requiring an existing version of Python to already be "
"available, the autotools-based build system no longer attempts to implicitly"
" recompile generated files based on file modification times."
msgstr ""
"为了简化交叉编译，并确保 CPython 能够可靠地编译而不需要已存在可用的 Python 版本，基于 autotools "
"的构建系统将不再尝试根据文件修改时间隐式地重新编译已生成的文件。"

#: ../../whatsnew/2.7.rst:2765
msgid ""
"Instead, a new ``make regen-all`` command has been added to force "
"regeneration of these files when desired (e.g. after an initial version of "
"Python has already been built based on the pregenerated versions)."
msgstr ""
"取而代之的是，新增了一个 ``make regen-all`` 命令以便在需要时强制重新生成这些文件（例如在基于预生成版本构建了 Python "
"的初始版本之后）。"

#: ../../whatsnew/2.7.rst:2769
msgid ""
"More selective regeneration targets are also defined - see "
":source:`Makefile.pre.in` for details."
msgstr "还定义了其他一些更具选择性的重生成目标 —— 详情参见 :source:`Makefile.pre.in`。"

#: ../../whatsnew/2.7.rst:2772 ../../whatsnew/2.7.rst:2785
msgid "(Contributed by Victor Stinner in :issue:`23404`.)"
msgstr "（由 Victor Stinner 在 :issue:`23404` 中贡献。）"

#: ../../whatsnew/2.7.rst:2778
msgid "Removal of ``make touch`` build target"
msgstr "移除了 ``make touch`` 构建目标"

#: ../../whatsnew/2.7.rst:2780
msgid ""
"The ``make touch`` build target previously used to request implicit "
"regeneration of generated files by updating their modification times has "
"been removed."
msgstr "之前用于通过更新生成文件的修改时间来请求隐式的重新生成这些文件的 ``make touch`` 构建目标已被移除。"

#: ../../whatsnew/2.7.rst:2783
msgid "It has been replaced by the new ``make regen-all`` target."
msgstr "它已被新的 ``make regen-all`` 目标所替代。"

#: ../../whatsnew/2.7.rst:2794
msgid "Acknowledgements"
msgstr "致谢"

#: ../../whatsnew/2.7.rst:2796
msgid ""
"The author would like to thank the following people for offering "
"suggestions, corrections and assistance with various drafts of this article:"
" Nick Coghlan, Philip Jenvey, Ryan Lovett, R. David Murray, Hugh Secker-"
"Walker."
msgstr ""
"作者要感谢以下人员为本文的各种草案提供建议，更正和帮助： Nick Coghlan, Philip Jenvey, Ryan Lovett, R. "
"David Murray, Hugh Secker-Walker."
