# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Nyuan Zhang, 2025
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-07-25 16:48+0000\n"
"PO-Revision-Date: 2025-07-18 20:06+0000\n"
"Last-Translator: Nyuan Zhang, 2025\n"
"Language-Team: Chinese (China) (https://app.transifex.com/python-doc/teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../reference/grammar.rst:4
msgid "Full Grammar specification"
msgstr "完整的语法规范"

#: ../../reference/grammar.rst:6
msgid ""
"This is the full Python grammar, derived directly from the grammar used to "
"generate the CPython parser (see :source:`Grammar/python.gram`). The version"
" here omits details related to code generation and error recovery."
msgstr ""
"这是完整的 Python 语法规范，直接提取自用于生成 CPython 解析器的语法 (参见 "
":source:`Grammar/python.gram`)。 这里显示的版本省略了有关代码生成和错误恢复的细节。"

#: ../../reference/grammar.rst:11
msgid ""
"The notation is a mixture of `EBNF "
"<https://en.wikipedia.org/wiki/Extended_Backus%E2%80%93Naur_form>`_ and `PEG"
" <https://en.wikipedia.org/wiki/Parsing_expression_grammar>`_. In "
"particular, ``&`` followed by a symbol, token or parenthesized group "
"indicates a positive lookahead (i.e., is required to match but not "
"consumed), while ``!`` indicates a negative lookahead (i.e., is required "
"*not* to match).  We use the ``|`` separator to mean PEG's \"ordered "
"choice\" (written as ``/`` in traditional PEG grammars). See :pep:`617` for "
"more details on the grammar's syntax."
msgstr ""
