# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2025
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.9\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-07-25 19:10+0000\n"
"PO-Revision-Date: 2025-07-18 19:17+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2025\n"
"Language-Team: Chinese (China) (https://app.transifex.com/python-doc/teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../c-api/iter.rst:6
msgid "Iterator Protocol"
msgstr "迭代器协议"

#: ../../c-api/iter.rst:8
msgid "There are two functions specifically for working with iterators."
msgstr "迭代器有两个函数。"

#: ../../c-api/iter.rst:12
msgid ""
"Return true if the object *o* supports the iterator protocol.  This function"
" always succeeds."
msgstr "如果对象 *o* 支持迭代器协议则返回真值。 此函数总是会成功执行。"

#: ../../c-api/iter.rst:18
msgid ""
"Return the next value from the iteration *o*.  The object must be an "
"iterator (it is up to the caller to check this).  If there are no remaining "
"values, returns ``NULL`` with no exception set.  If an error occurs while "
"retrieving the item, returns ``NULL`` and passes along the exception."
msgstr ""
"返回迭代 *o* 的下一个值。 对象必须是一个迭代器（这应由调用者来判断）。 如果没有余下的值，则返回 ``NULL`` 并且不设置异常。 "
"如果在获取条目时发生了错误，则返回 ``NULL`` 并且传递异常。"

#: ../../c-api/iter.rst:23
msgid ""
"To write a loop which iterates over an iterator, the C code should look "
"something like this::"
msgstr "要为迭代器编写一个一个循环，C代码应该看起来像这样 ::"
