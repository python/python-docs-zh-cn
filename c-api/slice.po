# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2025
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-07-25 18:10+0000\n"
"PO-Revision-Date: 2025-07-18 20:08+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2025\n"
"Language-Team: Chinese (China) (https://app.transifex.com/python-doc/teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../c-api/slice.rst:6
msgid "Slice Objects"
msgstr "切片对象"

#: ../../c-api/slice.rst:11
msgid ""
"The type object for slice objects.  This is the same as :class:`slice` in "
"the Python layer."
msgstr "切片对象的类型对象。 它与 Python 层面的 :class:`slice` 是相同的对象。"

#: ../../c-api/slice.rst:17
msgid ""
"Return true if *ob* is a slice object; *ob* must not be ``NULL``.  This "
"function always succeeds."
msgstr "如果 *ob* 是一个 slice 对象则返回真值；*ob* 必须不为 ``NULL``。 此函数总是会成功执行。"

#: ../../c-api/slice.rst:23
msgid ""
"Return a new slice object with the given values.  The *start*, *stop*, and "
"*step* parameters are used as the values of the slice object attributes of "
"the same names.  Any of the values may be ``NULL``, in which case the "
"``None`` will be used for the corresponding attribute.  Return ``NULL`` if "
"the new object could not be allocated."
msgstr ""
"返回一个具有给定值的新切片对象。 *start*, *stop* 和 *step* 形参会被用作 slice 对象相应名称的属性的值。 "
"这些值中的任何一个都可以为 ``NULL``，在这种情况下将使用 ``None`` 作为对应属性的值。 如果新对象无法被分配则返回 ``NULL``。"

#: ../../c-api/slice.rst:32
msgid ""
"Retrieve the start, stop and step indices from the slice object *slice*, "
"assuming a sequence of length *length*. Treats indices greater than *length*"
" as errors."
msgstr ""
"从切片对象 *slice* 提取 start, stop 和 step 索引号，将序列长度视为 *length*。 大于 *length* "
"的序列号将被当作错误。"

#: ../../c-api/slice.rst:36
msgid ""
"Returns ``0`` on success and ``-1`` on error with no exception set (unless "
"one of the indices was not :const:`None` and failed to be converted to an "
"integer, in which case ``-1`` is returned with an exception set)."
msgstr ""
"成功时返回 ``0``，出错时返回 ``-1`` 并且不设置异常（除非某个序列号不为 :const:`None` 且无法被转换为整数，在这种情况下会返回"
" ``-1`` 并且设置一个异常）。"

#: ../../c-api/slice.rst:40
msgid "You probably do not want to use this function."
msgstr "你可能不会打算使用此函数。"

#: ../../c-api/slice.rst:42 ../../c-api/slice.rst:73
msgid ""
"The parameter type for the *slice* parameter was ``PySliceObject*`` before."
msgstr "之前 *slice* 形参的形参类型是 ``PySliceObject*``。"

#: ../../c-api/slice.rst:49
msgid ""
"Usable replacement for :c:func:`PySlice_GetIndices`.  Retrieve the start, "
"stop, and step indices from the slice object *slice* assuming a sequence of "
"length *length*, and store the length of the slice in *slicelength*.  Out of"
" bounds indices are clipped in a manner consistent with the handling of "
"normal slices."
msgstr ""
":c:func:`PySlice_GetIndices` 的可用替代。 从切片对象 *slice* 提取 start, stop 和 step "
"索引号，将序列长度视为 *length*，并将切片的长度保存在 *slicelength* 中，超出范围的索引号会以与普通切片一致的方式进行剪切。"

#: ../../c-api/slice.rst:55
msgid "Returns ``0`` on success and ``-1`` on error with exception set."
msgstr "成功时返回 ``0``，出错时返回 ``-1`` 并且不设置异常。"

#: ../../c-api/slice.rst:58
msgid ""
"This function is considered not safe for resizable sequences. Its invocation"
" should be replaced by a combination of :c:func:`PySlice_Unpack` and "
":c:func:`PySlice_AdjustIndices` where ::"
msgstr ""
"此函数对于可变大小序列来说是不安全的。 对它的调用应被替换为 :c:func:`PySlice_Unpack` 和 "
":c:func:`PySlice_AdjustIndices` 的组合，其中 ::"

#: ../../c-api/slice.rst:66
msgid "is replaced by ::"
msgstr "会被替换为 ::"

#: ../../c-api/slice.rst:77
msgid ""
"If ``Py_LIMITED_API`` is not set or set to the value between ``0x03050400`` "
"and ``0x03060000`` (not including) or ``0x03060100`` or higher "
":c:func:`!PySlice_GetIndicesEx` is implemented as a macro using "
":c:func:`!PySlice_Unpack` and :c:func:`!PySlice_AdjustIndices`. Arguments "
"*start*, *stop* and *step* are evaluated more than once."
msgstr ""
"如果 ``Py_LIMITED_API`` 未设置或设置为 ``0x03050400`` 与 ``0x03060000`` 之间的值（不包括边界）或 "
"``0x03060100`` 或更大则 :c:func:`!PySlice_GetIndicesEx` 会被实现为一个使用 "
":c:func:`!PySlice_Unpack` 和 :c:func:`!PySlice_AdjustIndices` 的宏。 参数 *start*,"
" *stop* 和 *step* 会被多被求值。"

#: ../../c-api/slice.rst:84
msgid ""
"If ``Py_LIMITED_API`` is set to the value less than ``0x03050400`` or "
"between ``0x03060000`` and ``0x03060100`` (not including) "
":c:func:`!PySlice_GetIndicesEx` is a deprecated function."
msgstr ""
"如果 ``Py_LIMITED_API`` 设置为小于 ``0x03050400`` 或 ``0x03060000`` 与 ``0x03060100``"
" 之间的值（不包括边界）则 :c:func:`!PySlice_GetIndicesEx` 为已弃用的函数。"

#: ../../c-api/slice.rst:92
msgid ""
"Extract the start, stop and step data members from a slice object as C "
"integers.  Silently reduce values larger than ``PY_SSIZE_T_MAX`` to "
"``PY_SSIZE_T_MAX``, silently boost the start and stop values less than "
"``PY_SSIZE_T_MIN`` to ``PY_SSIZE_T_MIN``, and silently boost the step values"
" less than ``-PY_SSIZE_T_MAX`` to ``-PY_SSIZE_T_MAX``."
msgstr ""
"从切片对象中将 start, stop 和 step 数据成员提取为 C 整数。 会静默地将大于 ``PY_SSIZE_T_MAX`` 的值减小为 "
"``PY_SSIZE_T_MAX``，静默地将小于 ``PY_SSIZE_T_MIN`` 的 start 和 stop 值增大为 "
"``PY_SSIZE_T_MIN``，并静默地将小于 ``-PY_SSIZE_T_MAX`` 的 step 值增大为 "
"``-PY_SSIZE_T_MAX``。"

#: ../../c-api/slice.rst:98
msgid "Return ``-1`` on error, ``0`` on success."
msgstr "出错时返回 ``-1``，成功时返回 ``0``。"

#: ../../c-api/slice.rst:105
msgid ""
"Adjust start/end slice indices assuming a sequence of the specified length. "
"Out of bounds indices are clipped in a manner consistent with the handling "
"of normal slices."
msgstr "将 start/end 切片索引号根据指定的序列长度进行调整。 超出范围的索引号会以与普通切片一致的方式进行剪切。"

#: ../../c-api/slice.rst:109
msgid ""
"Return the length of the slice.  Always successful.  Doesn't call Python "
"code."
msgstr "返回切片的长度。 此操作总是会成功。 不会调用 Python 代码。"

#: ../../c-api/slice.rst:116
msgid "Ellipsis Object"
msgstr "Ellipsis 对象"

#: ../../c-api/slice.rst:121
msgid ""
"The Python ``Ellipsis`` object.  This object has no methods.  It needs to be"
" treated just like any other object with respect to reference counts.  Like "
":c:data:`Py_None` it is a singleton object."
msgstr ""
"Python 的 ``Ellipsis`` 对象。 该对象没有任何方法。 它必须以与任何其他对象一样的方式遵循引用计数。 它与 "
":c:data:`Py_None` 一样属于单例对象。"
