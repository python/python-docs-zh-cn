# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Nyuan Zhang, 2025
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-07-25 16:48+0000\n"
"PO-Revision-Date: 2025-07-18 20:04+0000\n"
"Last-Translator: Nyuan Zhang, 2025\n"
"Language-Team: Chinese (China) (https://app.transifex.com/python-doc/teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../c-api/code.rst:8
msgid "Code Objects"
msgstr "代码对象"

#: ../../c-api/code.rst:12
msgid ""
"Code objects are a low-level detail of the CPython implementation. Each one "
"represents a chunk of executable code that hasn't yet been bound into a "
"function."
msgstr "代码对象是 CPython 实现的低层级细节。 每个代表一块尚未绑定到函数中的可执行代码。"

#: ../../c-api/code.rst:18
msgid ""
"The C structure of the objects used to describe code objects.  The fields of"
" this type are subject to change at any time."
msgstr "用于描述代码对象的对象的 C 结构。 此类型字段可随时更改。"

#: ../../c-api/code.rst:24
msgid ""
"This is an instance of :c:type:`PyTypeObject` representing the Python "
":ref:`code object <code-objects>`."
msgstr "这一个代表 Python :ref:`代码对象 <code-objects>` 的 :c:type:`PyTypeObject` 实例。"

#: ../../c-api/code.rst:30
msgid ""
"Return true if *co* is a :ref:`code object <code-objects>`. This function "
"always succeeds."
msgstr "如果 *co* 是一个 :ref:`代码对象 <code-objects>` 则返回真值。 此函数总是会成功执行。"

#: ../../c-api/code.rst:35
msgid "Return the number of free variables in *co*."
msgstr "返回 *co* 中的自由变量数。"

#: ../../c-api/code.rst:39
msgid ""
"Return a new code object.  If you need a dummy code object to create a "
"frame, use :c:func:`PyCode_NewEmpty` instead.  Calling :c:func:`PyCode_New` "
"directly will bind you to a precise Python version since the definition of "
"the bytecode changes often. The many arguments of this function are inter-"
"dependent in complex ways, meaning that subtle changes to values are likely "
"to result in incorrect execution or VM crashes. Use this function only with "
"extreme care."
msgstr ""
"返回一个新的代码对象。 如果你需要用一个空白代码对象来创建帧，请改用 :c:func:`PyCode_NewEmpty`。 直接调用 "
":c:func:`PyCode_New` 将会绑定一个具体 Python 版本，因为字节码经常会变动。 "
"此函数的各种参数存在复杂的相互依赖，这意味着对值的细微改变可能会导致不正确的执行或 VM 的崩溃。 必须非常小心地使用这个函数。"

#: ../../c-api/code.rst:46
msgid "Added ``qualname`` and ``exceptiontable`` parameters."
msgstr "添加了 ``qualname`` 和 ``exceptiontable`` 形参。"

#: ../../c-api/code.rst:51
msgid ""
"Similar to :c:func:`PyCode_New`, but with an extra \"posonlyargcount\" for "
"positional-only arguments. The same caveats that apply to ``PyCode_New`` "
"also apply to this function."
msgstr ""
"与 :c:func:`PyCode_New` 类似，但还有一个针对仅限位置参数的额外的 \"posonlyargcount\"。 适用于 "
"``PyCode_New`` 的注意事项同样适用于这个函数。"

#: ../../c-api/code.rst:56
msgid "Added ``qualname`` and  ``exceptiontable`` parameters."
msgstr "增加了 ``qualname`` 和  ``exceptiontable`` 形参。"

#: ../../c-api/code.rst:61
msgid ""
"Return a new empty code object with the specified filename, function name, "
"and first line number. The resulting code object will raise an ``Exception``"
" if executed."
msgstr "返回一个具有指定用户名、函数名和首行行号的空代码对象。 结果代码对象如果被执行则将引发一个 ``Exception``。"

#: ../../c-api/code.rst:67
msgid ""
"Return the line number of the instruction that occurs on or before "
"``byte_offset`` and ends after it. If you just need the line number of a "
"frame, use :c:func:`PyFrame_GetLineNumber` instead."
msgstr ""
"返回在 ``byte_offset`` 位置或之前以及之后发生的指令的行号。 如果你只需要一个帧的行号，请改用 "
":c:func:`PyFrame_GetLineNumber`。"

#: ../../c-api/code.rst:70
msgid ""
"For efficiently iterating over the line numbers in a code object, use `the "
"API described in PEP 626 <https://peps.python.org/pep-0626/#out-of-process-"
"debuggers-and-profilers>`_."
msgstr ""
"要高效地对代码对象中的行号进行迭代，请使用 `在 PEP 626 中描述的 API "
"<https://peps.python.org/pep-0626/#out-of-process-debuggers-and-"
"profilers>`_。"

#: ../../c-api/code.rst:75
msgid ""
"Sets the passed ``int`` pointers to the source code line and column numbers "
"for the instruction at ``byte_offset``. Sets the value to ``0`` when "
"information is not available for any particular element."
msgstr ""
"将传入的 ``int`` 指针设为 ``byte_offset`` 处的指令的源代码行编号和列编号。 当没有任何特定元素的信息时则将值设为 ``0``。"

#: ../../c-api/code.rst:79
msgid "Returns ``1`` if the function succeeds and 0 otherwise."
msgstr "如果函数执行成功则返回 ``1`` 否则返回 0。"

#: ../../c-api/code.rst:85
msgid ""
"Equivalent to the Python code ``getattr(co, 'co_code')``. Returns a strong "
"reference to a :c:type:`PyBytesObject` representing the bytecode in a code "
"object. On error, ``NULL`` is returned and an exception is raised."
msgstr ""
"等价于 Python 代码 ``getattr(co, 'co_code')``。 返回一个指向表示代码对象中的字节码的 "
":c:type:`PyBytesObject` 的强引用。 当出错时，将返回 ``NULL`` 并引发一个异常。"

#: ../../c-api/code.rst:90
msgid ""
"This ``PyBytesObject`` may be created on-demand by the interpreter and does "
"not necessarily represent the bytecode actually executed by CPython. The "
"primary use case for this function is debuggers and profilers."
msgstr ""
"这个 ``PyBytesObject`` 可以由解释器按需创建并且不必代表 CPython 所实际执行的字节码。 "
"此函数的主要用途是调试器和性能分析工具。"

#: ../../c-api/code.rst:98
msgid ""
"Equivalent to the Python code ``getattr(co, 'co_varnames')``. Returns a new "
"reference to a :c:type:`PyTupleObject` containing the names of the local "
"variables. On error, ``NULL`` is returned and an exception is raised."
msgstr ""
"等价于 Python 代码 ``getattr(co, 'co_varnames')``。 返回一个指向包含局部变量名称的 "
":c:type:`PyTupleObject` 的新引用。 当出错时，将返回 ``NULL`` 并引发一个异常。"

#: ../../c-api/code.rst:107
msgid ""
"Equivalent to the Python code ``getattr(co, 'co_cellvars')``. Returns a new "
"reference to a :c:type:`PyTupleObject` containing the names of the local "
"variables that are referenced by nested functions. On error, ``NULL`` is "
"returned and an exception is raised."
msgstr ""
"等价于 Python 代码 ``getattr(co, 'co_cellvars')``。 返回一个包含被嵌套的函数所引用的局部变量名称的 "
":c:type:`PyTupleObject` 的新引用。 当出错时，将返回 ``NULL`` 并引发一个异常。"

#: ../../c-api/code.rst:116
msgid ""
"Equivalent to the Python code ``getattr(co, 'co_freevars')``. Returns a new "
"reference to a :c:type:`PyTupleObject` containing the names of the free "
"variables. On error, ``NULL`` is returned and an exception is raised."
msgstr ""
"等价于 Python 代码 ``getattr(co, 'co_freevars')``。 返回一个指向包含自由变量名称的 "
":c:type:`PyTupleObject` 的新引用。 当出错时，将返回 ``NULL`` 并引发一个异常。"

#: ../../c-api/code.rst:3
msgid "object"
msgstr "object -- 对象"

#: ../../c-api/code.rst:3
msgid "code"
msgstr "code"

#: ../../c-api/code.rst:3
msgid "code object"
msgstr "代码对象"
