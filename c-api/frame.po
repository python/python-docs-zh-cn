# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2025
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.13\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-07-25 15:00+0000\n"
"PO-Revision-Date: 2025-07-18 19:20+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2025\n"
"Language-Team: Chinese (China) (https://app.transifex.com/python-doc/teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../c-api/frame.rst:4
msgid "Frame Objects"
msgstr "帧对象"

#: ../../c-api/frame.rst:8
msgid "The C structure of the objects used to describe frame objects."
msgstr "用于描述帧对象的对象C结构体。"

#: ../../c-api/frame.rst:10
msgid "There are no public members in this structure."
msgstr "此结构体中无公有成员。"

#: ../../c-api/frame.rst:12
msgid ""
"The members of this structure were removed from the public C API. Refer to "
"the :ref:`What's New entry <pyframeobject-3.11-hiding>` for details."
msgstr ""
"此结构体的成员已从公有 C API 中移除。 请参阅 :ref:`What's New entry "
"<pyframeobject-3.11-hiding>` 了解详情。"

#: ../../c-api/frame.rst:17
msgid ""
"The :c:func:`PyEval_GetFrame` and :c:func:`PyThreadState_GetFrame` functions"
" can be used to get a frame object."
msgstr ""
"可以使用函数 :c:func:`PyEval_GetFrame` 与 :c:func:`PyThreadState_GetFrame` "
"去获取一个帧对象。"

#: ../../c-api/frame.rst:20
msgid "See also :ref:`Reflection <reflection>`."
msgstr "可参考：:ref:`Reflection 1<reflection>`"

#: ../../c-api/frame.rst:24
msgid ""
"The type of frame objects. It is the same object as "
":py:class:`types.FrameType` in the Python layer."
msgstr "帧对象的类型。 它与 Python 层中的 :py:class:`types.FrameType` 是同一对象。"

#: ../../c-api/frame.rst:29
msgid ""
"Previously, this type was only available after including "
"``<frameobject.h>``."
msgstr "在之前版本中，此类型仅在包括 ``<frameobject.h>`` 之后可用。"

#: ../../c-api/frame.rst:34
msgid "Return non-zero if *obj* is a frame object."
msgstr "如果 *obj* 是一个帧对象则返回非零值。"

#: ../../c-api/frame.rst:38
msgid ""
"Previously, this function was only available after including "
"``<frameobject.h>``."
msgstr "在之前版本中，只函数仅在包括 ``<frameobject.h>`` 之后可用。"

#: ../../c-api/frame.rst:43
msgid "Get the *frame* next outer frame."
msgstr "获取 *frame* 为下一个外部帧。"

#: ../../c-api/frame.rst:45
msgid ""
"Return a :term:`strong reference`, or ``NULL`` if *frame* has no outer "
"frame."
msgstr "返回一个 :term:`strong reference`，或者如果  *frame* 没有外部帧则返回 ``NULL``。"

#: ../../c-api/frame.rst:53
msgid "Get the *frame*'s :attr:`~frame.f_builtins` attribute."
msgstr "获取 *frame* 的 :attr:`~frame.f_builtins` 属性。"

#: ../../c-api/frame.rst:55 ../../c-api/frame.rst:86
msgid "Return a :term:`strong reference`. The result cannot be ``NULL``."
msgstr "返回一个 :term:`strong reference`。 此结果不可为 ``NULL``。"

#: ../../c-api/frame.rst:62
msgid "Get the *frame* code."
msgstr "获取 *frame* 的代码。"

#: ../../c-api/frame.rst:64 ../../c-api/frame.rst:130
msgid "Return a :term:`strong reference`."
msgstr "返回一个 :term:`strong reference`。"

#: ../../c-api/frame.rst:66
msgid "The result (frame code) cannot be ``NULL``."
msgstr "结果（帧代码）不可为 ``NULL``。"

#: ../../c-api/frame.rst:73
msgid ""
"Get the generator, coroutine, or async generator that owns this frame, or "
"``NULL`` if this frame is not owned by a generator. Does not raise an "
"exception, even if the return value is ``NULL``."
msgstr ""
"获取拥有该帧的生成器、协程或异步生成器，或者如果该帧不被某个生成器所拥有则为 ``NULL``。 不会引发异常，即使其返回值为 ``NULL``。"

#: ../../c-api/frame.rst:77
msgid "Return a :term:`strong reference`, or ``NULL``."
msgstr "返回一个 :term:`strong reference`，或者 ``NULL``。"

#: ../../c-api/frame.rst:84
msgid "Get the *frame*'s :attr:`~frame.f_globals` attribute."
msgstr "获取 *frame* 的 :attr:`~frame.f_globals` 属性。"

#: ../../c-api/frame.rst:93
msgid "Get the *frame*'s :attr:`~frame.f_lasti` attribute."
msgstr "获取 *frame* 的 :attr:`~frame.f_lasti` 属性。"

#: ../../c-api/frame.rst:95
msgid "Returns -1 if ``frame.f_lasti`` is ``None``."
msgstr "如果 ``frame.f_lasti`` 为 ``None`` 则返回 -1。"

#: ../../c-api/frame.rst:102
msgid "Get the variable *name* of *frame*."
msgstr "获取 *frame* 的变量 *name*。"

#: ../../c-api/frame.rst:104
msgid "Return a :term:`strong reference` to the variable value on success."
msgstr "成功时返回一个指向变量值的 :term:`strong reference`。"

#: ../../c-api/frame.rst:105
msgid ""
"Raise :exc:`NameError` and return ``NULL`` if the variable does not exist."
msgstr "引发 :exc:`NameError` 并返回 ``NULL`` 如果该变量不存在。"

#: ../../c-api/frame.rst:106
msgid "Raise an exception and return ``NULL`` on error."
msgstr "引发异常并返回``NULL``错误。"

#: ../../c-api/frame.rst:108
msgid "*name* type must be a :class:`str`."
msgstr "*name* 必须是 :class:`str` 类型的。"

#: ../../c-api/frame.rst:115
msgid ""
"Similar to :c:func:`PyFrame_GetVar`, but the variable name is a C string "
"encoded in UTF-8."
msgstr "和 :c:func:`PyFrame_GetVar` 相似，但该变量名是一个使用 UTF-8 编码的 C 字符串。"

#: ../../c-api/frame.rst:123
msgid ""
"Get the *frame*'s :attr:`~frame.f_locals` attribute. If the frame refers to "
"an :term:`optimized scope`, this returns a write-through proxy object that "
"allows modifying the locals. In all other cases (classes, modules, "
":func:`exec`, :func:`eval`) it returns the mapping representing the frame "
"locals directly (as described for :func:`locals`)."
msgstr ""
"获取 *frame* 的 :attr:`~frame.f_locals` 属性。 如果该帧指向一个 :term:`optimized "
"scope`，这将返回一个允许修改 locals 的直通写入代理对象。 在所有其他情况下 "
"(类、模块、:func:`exec`、:func:`eval`) 它将直接返回代表该帧的 locals 的映射 (如为 :func:`locals` "
"所描述的)。"

#: ../../c-api/frame.rst:134
msgid ""
"As part of :pep:`667`, return an instance of "
":c:var:`PyFrameLocalsProxy_Type`."
msgstr "作为 :pep:`667` 的组成部分，返回一个 :c:var:`PyFrameLocalsProxy_Type` 的实例。"

#: ../../c-api/frame.rst:140
msgid "Return the line number that *frame* is currently executing."
msgstr "返回 *frame* 当前正在执行的行号。"

#: ../../c-api/frame.rst:144
msgid "Frame Locals Proxies"
msgstr "帧 locals 代理"

#: ../../c-api/frame.rst:148
msgid ""
"The :attr:`~frame.f_locals` attribute on a :ref:`frame object <frame-"
"objects>` is an instance of a \"frame-locals proxy\". The proxy object "
"exposes a write-through view of the underlying locals dictionary for the "
"frame. This ensures that the variables exposed by ``f_locals`` are always up"
" to date with the live local variables in the frame itself."
msgstr ""
":ref:`帧对象 <frame-objects>` 的 :attr:`~frame.f_locals` 属性是“帧 locals 代理”的一个实例。 "
"该代理对象将对外公开一个下层帧 locals 字典的直写视图。 这确保了由 ``f_locals`` 暴露的变量总是与帧本身的现有局部变量内容一致。"

#: ../../c-api/frame.rst:154
msgid "See :pep:`667` for more information."
msgstr "请参阅 :pep:`667` 了解详情。"

#: ../../c-api/frame.rst:158
msgid "The type of frame :func:`locals` proxy objects."
msgstr "帧 :func:`locals` 代理对象的类型。"

#: ../../c-api/frame.rst:162
msgid "Return non-zero if *obj* is a frame :func:`locals` proxy."
msgstr "如果 *obj* 是一个帧 :func:`locals` 代理则返回非零值。"

#: ../../c-api/frame.rst:165
msgid "Internal Frames"
msgstr "内部帧"

#: ../../c-api/frame.rst:167
msgid "Unless using :pep:`523`, you will not need this."
msgstr "除非使用:pep:`523`，否则你不会需要它。"

#: ../../c-api/frame.rst:171
msgid "The interpreter's internal frame representation."
msgstr "解释器的内部帧表示。"

#: ../../c-api/frame.rst:177
msgid "Return a :term:`strong reference` to the code object for the frame."
msgstr "返回一个指向帧的代码对象的 :term:`strong reference`。"

#: ../../c-api/frame.rst:184
msgid "Return the byte offset into the last executed instruction."
msgstr "将字节偏移量返回到最后执行的指令中。"

#: ../../c-api/frame.rst:191
msgid ""
"Return the currently executing line number, or -1 if there is no line "
"number."
msgstr "返回正在执行的指令的行数，如果没有行数，则返回-1。"
