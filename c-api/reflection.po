# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2025
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.9\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-07-25 19:10+0000\n"
"PO-Revision-Date: 2025-07-18 19:17+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2025\n"
"Language-Team: Chinese (China) (https://app.transifex.com/python-doc/teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../c-api/reflection.rst:6
msgid "Reflection"
msgstr "反射"

#: ../../c-api/reflection.rst:10
msgid ""
"Return a dictionary of the builtins in the current execution frame, or the "
"interpreter of the thread state if no frame is currently executing."
msgstr "返回当前执行帧中内置函数的字典，如果当前没有帧正在执行，则返回线程状态的解释器。"

#: ../../c-api/reflection.rst:16
msgid ""
"Return a dictionary of the local variables in the current execution frame, "
"or ``NULL`` if no frame is currently executing."
msgstr "返回当前执行帧中局部变量的字典，如果没有当前执行的帧则返回 ``NULL``。"

#: ../../c-api/reflection.rst:22
msgid ""
"Return a dictionary of the global variables in the current execution frame, "
"or ``NULL`` if no frame is currently executing."
msgstr "返回当前执行帧中全局变量的字典，如果没有当前执行的帧则返回 ``NULL``。"

#: ../../c-api/reflection.rst:28
msgid ""
"Return the current thread state's frame, which is ``NULL`` if no frame is "
"currently executing."
msgstr "返回当前线程状态的帧，如果没有当前执行的帧则返回 ``NULL``。"

#: ../../c-api/reflection.rst:31
msgid "See also :c:func:`PyThreadState_GetFrame`."
msgstr "另请参阅 :c:func:`PyThreadState_GetFrame`。"

#: ../../c-api/reflection.rst:36
msgid "Get the *frame* next outer frame."
msgstr "获取 *frame* 为下一个外部帧。"

#: ../../c-api/reflection.rst:38
msgid "Return a strong reference, or ``NULL`` if *frame* has no outer frame."
msgstr "返回一个强引用，如果 *frame* 没有外部帧则返回 ``NULL``。"

#: ../../c-api/reflection.rst:40 ../../c-api/reflection.rst:60
msgid "*frame* must not be ``NULL``."
msgstr "*frame* 必须不为 ``NULL``。"

#: ../../c-api/reflection.rst:47
msgid "Get the *frame* code."
msgstr "获取 *frame* 的代码。"

#: ../../c-api/reflection.rst:49
msgid "Return a strong reference."
msgstr "返回一个强引用。"

#: ../../c-api/reflection.rst:51
msgid ""
"*frame* must not be ``NULL``. The result (frame code) cannot be ``NULL``."
msgstr "*frame* 必须不为 ``NULL``。 结果（帧的代码）不能为 ``NULL``。"

#: ../../c-api/reflection.rst:58
msgid "Return the line number that *frame* is currently executing."
msgstr "返回 *frame* 当前正在执行的行号。"

#: ../../c-api/reflection.rst:65
msgid ""
"Return the name of *func* if it is a function, class or instance object, "
"else the name of *func*\\s type."
msgstr "如果 *func* 是函数、类或实例对象，则返回它的名称，否则返回 *func* 的类型的名称。"

#: ../../c-api/reflection.rst:71
msgid ""
"Return a description string, depending on the type of *func*. Return values "
"include \"()\" for functions and methods, \" constructor\", \" instance\", "
"and \" object\".  Concatenated with the result of "
":c:func:`PyEval_GetFuncName`, the result will be a description of *func*."
msgstr ""
"根据 *func* 的类型返回描述字符串。 返回值包括函数和方法的 \"()\", \" constructor\", \" instance\" 和 "
"\" object\"。 与 :c:func:`PyEval_GetFuncName` 的结果连接，结果将是 *func* 的描述。"
