# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001 Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Alpha Du <alphanow@gmail.com>, 2021
# Freesand Leo <yuqinju@163.com>, 2024
# 汇民 王 <whuim@qq.com>, 2025
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-05-08 02:53-0300\n"
"PO-Revision-Date: 2021-06-28 00:50+0000\n"
"Last-Translator: 汇民 王 <whuim@qq.com>, 2025\n"
"Language-Team: Chinese (China) (https://app.transifex.com/python-doc/teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../c-api/reflection.rst:6
msgid "Reflection"
msgstr "反射"

#: ../../c-api/reflection.rst:12
msgid "Use :c:func:`PyEval_GetFrameBuiltins` instead."
msgstr "使用 :c:func:`PyEval_GetFrameBuiltins` 代替。"

#: ../../c-api/reflection.rst:14 ../../c-api/reflection.rst:66
msgid ""
"Return a dictionary of the builtins in the current execution frame, or the "
"interpreter of the thread state if no frame is currently executing."
msgstr "返回当前执行帧中内置函数的字典，如果当前没有帧正在执行，则返回线程状态的解释器。"

#: ../../c-api/reflection.rst:22
msgid ""
"Use either :c:func:`PyEval_GetFrameLocals` to obtain the same behaviour as "
"calling :func:`locals` in Python code, or else call "
":c:func:`PyFrame_GetLocals` on the result of :c:func:`PyEval_GetFrame` to "
"access the :attr:`~frame.f_locals` attribute of the currently executing "
"frame."
msgstr ""
"使用 :c:func:`PyEval_GetFrameLocals` 来获取与在 Python 代码中调用 :func:`locals` "
"相同的行为，或者是在 :c:func:`PyEval_GetFrame` 的结果上调用 :c:func:`PyFrame_GetLocals` "
"来访问当前执行帧的 :attr:`~frame.f_locals` 属性。"

#: ../../c-api/reflection.rst:27
msgid ""
"Return a mapping providing access to the local variables in the current "
"execution frame, or ``NULL`` if no frame is currently executing."
msgstr "返回一个提供对当前执行帧中局部变量访问的映射，或者如果没有当前执行帧则返回 ``NULL``。"

#: ../../c-api/reflection.rst:30
msgid ""
"Refer to :func:`locals` for details of the mapping returned at different "
"scopes."
msgstr "请参考 :func:`locals` 了解在不同作用域下返回的映射的详情。"

#: ../../c-api/reflection.rst:32
msgid ""
"As this function returns a :term:`borrowed reference`, the dictionary "
"returned for :term:`optimized scopes <optimized scope>` is cached on the "
"frame object and will remain alive as long as the frame object does. Unlike "
":c:func:`PyEval_GetFrameLocals` and :func:`locals`, subsequent calls to this"
" function in the same frame will update the contents of the cached "
"dictionary to reflect changes in the state of the local variables rather "
"than returning a new snapshot."
msgstr ""
"由于此函数会返回一个 :term:`borrowed reference`，为 :term:`已优化作用域 <optimized scope>` "
"返回的字典将缓存在帧对象上因此会在帧对象存活期间保持存活。 不同于 :c:func:`PyEval_GetFrameLocals` 和 "
":func:`locals`，在相同帧中对该函数的后续调用将会更新已缓存字典的内容以反映局部变量状态的变化而不是返回一个新的快照。"

#: ../../c-api/reflection.rst:39
msgid ""
"As part of :pep:`667`, :c:func:`PyFrame_GetLocals`, :func:`locals`, and "
":attr:`FrameType.f_locals <frame.f_locals>` no longer make use of the shared"
" cache dictionary. Refer to the :ref:`What's New entry <whatsnew313-locals-"
"semantics>` for additional details."
msgstr ""
"作为 :pep:`667` 的一部分，:c:func:`PyFrame_GetLocals`, :func:`locals` 和 "
":attr:`FrameType.f_locals <frame.f_locals>` 将不再使用共享的缓存字典。 请参阅 :ref:`有什么新变化条目"
" <whatsnew313-locals-semantics>` 了解详情。"

#: ../../c-api/reflection.rst:50
msgid "Use :c:func:`PyEval_GetFrameGlobals` instead."
msgstr "使用 :c:func:`PyEval_GetFrameGlobals` 代替。"

#: ../../c-api/reflection.rst:52
msgid ""
"Return a dictionary of the global variables in the current execution frame, "
"or ``NULL`` if no frame is currently executing."
msgstr "返回当前执行帧中全局变量的字典，如果没有当前执行的帧则返回 ``NULL``。"

#: ../../c-api/reflection.rst:58
msgid ""
"Return the :term:`attached thread state`'s frame, which is ``NULL`` if no "
"frame is currently executing."
msgstr "返回已附加的线程状态 :term:`attached thread state` 的帧，如果当前没有帧正在执行则为``NULL``。 "

#: ../../c-api/reflection.rst:61
msgid "See also :c:func:`PyThreadState_GetFrame`."
msgstr "另请参阅 :c:func:`PyThreadState_GetFrame`。"

#: ../../c-api/reflection.rst:74
msgid ""
"Return a dictionary of the local variables in the current execution frame, "
"or ``NULL`` if no frame is currently executing. Equivalent to calling "
":func:`locals` in Python code."
msgstr ""
"返回当前执行帧中局部变量的字典，或者如果没有当前执行帧则返回 ``NULL``。 等价于在 Python 代码中调用 :func:`locals`。"

#: ../../c-api/reflection.rst:78
msgid ""
"To access :attr:`~frame.f_locals` on the current frame without making an "
"independent snapshot in :term:`optimized scopes <optimized scope>`, call "
":c:func:`PyFrame_GetLocals` on the result of :c:func:`PyEval_GetFrame`."
msgstr ""
"要访问当前帧上的 :attr:`~frame.f_locals` 而不会在 :term:`已优化作用域 <optimized scope>` "
"中生成独立的快照，可以在 :c:func:`PyEval_GetFrame` 的结果上调用 :c:func:`PyFrame_GetLocals`。"

#: ../../c-api/reflection.rst:87
msgid ""
"Return a dictionary of the global variables in the current execution frame, "
"or ``NULL`` if no frame is currently executing. Equivalent to calling "
":func:`globals` in Python code."
msgstr ""
"返回当前执行帧中局部变量的字典，或者如果没有当前执行帧则返回 ``NULL``。 等价于在 Python 代码中调用 :func:`globals`。"

#: ../../c-api/reflection.rst:96
msgid ""
"Return the name of *func* if it is a function, class or instance object, "
"else the name of *func*\\s type."
msgstr "如果 *func* 是函数、类或实例对象，则返回它的名称，否则返回 *func* 的类型的名称。"

#: ../../c-api/reflection.rst:102
msgid ""
"Return a description string, depending on the type of *func*. Return values "
"include \"()\" for functions and methods, \" constructor\", \" instance\", "
"and \" object\".  Concatenated with the result of "
":c:func:`PyEval_GetFuncName`, the result will be a description of *func*."
msgstr ""
"根据 *func* 的类型返回描述字符串。 返回值包括函数和方法的 \"()\", \" constructor\", \" instance\" 和 "
"\" object\"。 与 :c:func:`PyEval_GetFuncName` 的结果连接，结果将是 *func* 的描述。"
