# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2025
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.12\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-07-25 16:03+0000\n"
"PO-Revision-Date: 2025-07-18 19:57+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2025\n"
"Language-Team: Chinese (China) (https://app.transifex.com/python-doc/teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../c-api/none.rst:6
msgid "The ``None`` Object"
msgstr "``None`` 对象"

#: ../../c-api/none.rst:10
msgid ""
"Note that the :c:type:`PyTypeObject` for ``None`` is not directly exposed in"
" the Python/C API.  Since ``None`` is a singleton, testing for object "
"identity (using ``==`` in C) is sufficient. There is no "
":c:func:`!PyNone_Check` function for the same reason."
msgstr ""
"请注意，Python/C API 中并没有直接公开 ``None`` 的 :c:type:`PyTypeObject`。 由于 ``None`` "
"是一个单例，测试对象标识号（在 C 语言中使用 ``==`` 运算符）就足够了。 出于同样的原因也没有 :c:func:`!PyNone_Check` "
"函数。"

#: ../../c-api/none.rst:18
msgid ""
"The Python ``None`` object, denoting lack of value.  This object has no "
"methods and is `immortal <https://peps.python.org/pep-0683/>`_."
msgstr ""
"Python ``None`` 对象，表示空值。 该对象没有任何方法并且是 `永久性对象 "
"<https://peps.python.org/pep-0683/>`_。"

#: ../../c-api/none.rst:21
msgid ":c:data:`Py_None` is immortal."
msgstr ":c:data:`Py_None` 是永久性对象。"

#: ../../c-api/none.rst:26
msgid "Return :c:data:`Py_None` from a function."
msgstr "从一个函数返回 :c:data:`Py_None`。"

#: ../../c-api/none.rst:8
msgid "object"
msgstr "object -- 对象"

#: ../../c-api/none.rst:8
msgid "None"
msgstr "None"
