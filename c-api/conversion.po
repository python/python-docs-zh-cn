# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2025
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-07-25 18:10+0000\n"
"PO-Revision-Date: 2025-07-18 20:08+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2025\n"
"Language-Team: Chinese (China) (https://app.transifex.com/python-doc/teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../c-api/conversion.rst:6
msgid "String conversion and formatting"
msgstr "字符串转换与格式化"

#: ../../c-api/conversion.rst:8
msgid "Functions for number conversion and formatted string output."
msgstr "用于数字转换和格式化字符串输出的函数"

#: ../../c-api/conversion.rst:13
msgid ""
"Output not more than *size* bytes to *str* according to the format string "
"*format* and the extra arguments. See the Unix man page "
":manpage:`snprintf(3)`."
msgstr ""
"根据格式字符串 *format* 和额外参数，输出不超过 *size* 个字节到 *str*。 参见 Unix 手册页面 "
":manpage:`snprintf(3)`。"

#: ../../c-api/conversion.rst:19
msgid ""
"Output not more than *size* bytes to *str* according to the format string "
"*format* and the variable argument list *va*. Unix man page "
":manpage:`vsnprintf(3)`."
msgstr ""
"根据格式字符串 *format* 和变量参数列表 *va*，输出不超过 *size* 个字节到 *str*。 参见 Unix 手册页面 "
":manpage:`vsnprintf(3)`。"

#: ../../c-api/conversion.rst:23
msgid ""
":c:func:`PyOS_snprintf` and :c:func:`PyOS_vsnprintf` wrap the Standard C "
"library functions :c:func:`snprintf` and :c:func:`vsnprintf`. Their purpose "
"is to guarantee consistent behavior in corner cases, which the Standard C "
"functions do not."
msgstr ""
":c:func:`PyOS_snprintf` 和 :c:func:`PyOS_vsnprintf` 包装 C 标准库函数 "
":c:func:`snprintf` 和 :c:func:`vsnprintf` 。它们的目的是保证在极端情况下的一致行为，而标准 C 的函数则不然。"

#: ../../c-api/conversion.rst:28
msgid ""
"The wrappers ensure that ``str[size-1]`` is always ``'\\0'`` upon return. "
"They never write more than *size* bytes (including the trailing ``'\\0'``) "
"into str. Both functions require that ``str != NULL``, ``size > 0``, "
"``format != NULL`` and ``size < INT_MAX``. Note that this means there is no "
"equivalent to the C99 ``n = snprintf(NULL, 0, ...)`` which would determine "
"the necessary buffer size."
msgstr ""
"此包装器会确保 ``str[size-1]`` 在返回时始终为 ``'\\0'``。 它们从不写入超过 *size* 字节 (包括末尾的 "
"``'\\0'``) 到 str。 两个函数都要求 ``str != NULL``, ``size > 0``, ``format != NULL`` "
"且 ``size < INT_MAX``。 请注意这意味着不存在可确定所需缓冲区大小的 C99 ``n = snprintf(NULL, 0, "
"...)`` 的等价物。"

#: ../../c-api/conversion.rst:34
msgid ""
"The return value (*rv*) for these functions should be interpreted as "
"follows:"
msgstr "这些函数的返回值（ *rv* ）应按照以下规则被解释："

#: ../../c-api/conversion.rst:36
msgid ""
"When ``0 <= rv < size``, the output conversion was successful and *rv* "
"characters were written to *str* (excluding the trailing ``'\\0'`` byte at "
"``str[rv]``)."
msgstr ""
"当 ``0 <= rv < size`` 时，输出转换即成功并将 *rv* 个字符写入到 *str* (不包括末尾 ``str[rv]`` 位置的 "
"``'\\0'`` 字节)。"

#: ../../c-api/conversion.rst:40
msgid ""
"When ``rv >= size``, the output conversion was truncated and a buffer with "
"``rv + 1`` bytes would have been needed to succeed. ``str[size-1]`` is "
"``'\\0'`` in this case."
msgstr ""
"当 ``rv >= size`` 时，输出转换会被截断并且需要一个具有 ``rv + 1`` 字节的缓冲区才能成功执行。 在此情况下 "
"``str[size-1]`` 为 ``'\\0'``。"

#: ../../c-api/conversion.rst:44
msgid ""
"When ``rv < 0``, \"something bad happened.\" ``str[size-1]`` is ``'\\0'`` in"
" this case too, but the rest of *str* is undefined. The exact cause of the "
"error depends on the underlying platform."
msgstr ""
"当 ``rv < 0`` 时，\"会发生不好的事情。\" 在此情况下 ``str[size-1]`` 也为 ``'\\0'``，但 *str* "
"的其余部分是未定义的。 错误的确切原因取决于底层平台。"

#: ../../c-api/conversion.rst:49
msgid ""
"The following functions provide locale-independent string to number "
"conversions."
msgstr "以下函数提供与语言环境无关的字符串到数字转换。"

#: ../../c-api/conversion.rst:53
msgid ""
"Convert a string ``s`` to a :c:expr:`double`, raising a Python exception on "
"failure.  The set of accepted strings corresponds to the set of strings "
"accepted by Python's :func:`float` constructor, except that ``s`` must not "
"have leading or trailing whitespace. The conversion is independent of the "
"current locale."
msgstr ""
"将字符串 ``s`` 转换为 :c:expr:`double` 类型，失败时会引发 Python 异常。 接受的字符串集合对应于可被 Python 的 "
":func:`float` 构造器所接受的字符集集合，除了 ``s`` 必须没有前导或尾随空格。 转换必须独立于当前的语言区域。"

#: ../../c-api/conversion.rst:59
msgid ""
"If ``endptr`` is ``NULL``, convert the whole string.  Raise "
":exc:`ValueError` and return ``-1.0`` if the string is not a valid "
"representation of a floating-point number."
msgstr ""
"如果 ``endptr`` 是 ``NULL`` ，转换整个字符串。引发 :exc:`ValueError` 并且 返回 ``-1.0`` "
"如果字符串不是浮点数的有效的表达方式。"

#: ../../c-api/conversion.rst:63
msgid ""
"If endptr is not ``NULL``, convert as much of the string as possible and set"
" ``*endptr`` to point to the first unconverted character.  If no initial "
"segment of the string is the valid representation of a floating-point "
"number, set ``*endptr`` to point to the beginning of the string, raise "
"ValueError, and return ``-1.0``."
msgstr ""
"如果 ``endptr`` 不是 ``NULL`` ，尽可能多的转换字符串并将 ``*endptr`` "
"设置为指向第一个未转换的字符。如果字符串的初始段不是浮点数的有效的表达方式，将 ``*endptr`` 设置为指向字符串的开头，引发 "
"ValueError 异常，并且返回 ``-1.0`` 。"

#: ../../c-api/conversion.rst:70
msgid ""
"If ``s`` represents a value that is too large to store in a float (for "
"example, ``\"1e500\"`` is such a string on many platforms) then if "
"``overflow_exception`` is ``NULL`` return ``Py_HUGE_VAL`` (with an "
"appropriate sign) and don't set any exception.  Otherwise, "
"``overflow_exception`` must point to a Python exception object; raise that "
"exception and return ``-1.0``.  In both cases, set ``*endptr`` to point to "
"the first character after the converted value."
msgstr ""
"如果 ``s`` 表示一个太大而不能存储在一个浮点数中的值（比方说， ``\"1e500\"`` 在许多平台上是一个字符串）然后如果 "
"``overflow_exception`` 是 ``NULL`` 返回 ``Py_HUGE_VAL`` （用适当的符号）并且不设置任何异常。 "
"在其他方面， ``overflow_exception`` 必须指向一个 Python 异常对象；引发异常并返回 ``-1.0`` "
"。在这两种情况下，设置 ``*endptr`` 指向转换值之后的第一个字符。"

#: ../../c-api/conversion.rst:78
msgid ""
"If any other error occurs during the conversion (for example an out-of-"
"memory error), set the appropriate Python exception and return ``-1.0``."
msgstr "如果在转换期间发生任何其他错误（比如一个内存不足的错误），设置适当的 Python 异常并且返回 ``-1.0`` 。"

#: ../../c-api/conversion.rst:87
msgid ""
"Convert a :c:expr:`double` *val* to a string using supplied *format_code*, "
"*precision*, and *flags*."
msgstr ""
"将 :c:expr:`double` *val* 转换为一个使用给定的 *format_code*, *precision* 和 *flags* "
"的字符串。"

#: ../../c-api/conversion.rst:90
msgid ""
"*format_code* must be one of ``'e'``, ``'E'``, ``'f'``, ``'F'``, ``'g'``, "
"``'G'`` or ``'r'``.  For ``'r'``, the supplied *precision* must be 0 and is "
"ignored.  The ``'r'`` format code specifies the standard :func:`repr` "
"format."
msgstr ""
"*格式码* 必须是以下其中之一, ``'e'``, ``'E'``, ``'f'``, ``'F'``, ``'g'``, ``'G'`` 或者 "
"``'r'``。对于 ``'r'`` , 提供的 *精度* 必须是0。``'r'`` 格式码指定了标准函数 :func:`repr` 格式。"

#: ../../c-api/conversion.rst:95
msgid ""
"*flags* can be zero or more of the values ``Py_DTSF_SIGN``, "
"``Py_DTSF_ADD_DOT_0``, or ``Py_DTSF_ALT``, or-ed together:"
msgstr ""
"*flags* 可以为零或者其他值 ``Py_DTSF_SIGN``, ``Py_DTSF_ADD_DOT_0`` 或 ``Py_DTSF_ALT`` "
"或其组合："

#: ../../c-api/conversion.rst:98
msgid ""
"``Py_DTSF_SIGN`` means to always precede the returned string with a sign "
"character, even if *val* is non-negative."
msgstr "``Py_DTSF_SIGN`` 表示总是在返回的字符串前附加一个符号字符，即使 *val* 为非负数。"

#: ../../c-api/conversion.rst:101
msgid ""
"``Py_DTSF_ADD_DOT_0`` means to ensure that the returned string will not look"
" like an integer."
msgstr "``Py_DTSF_ADD_DOT_0`` 表示确保返回的字符串看起来不像是一个整数。"

#: ../../c-api/conversion.rst:104
msgid ""
"``Py_DTSF_ALT`` means to apply \"alternate\" formatting rules.  See the "
"documentation for the :c:func:`PyOS_snprintf` ``'#'`` specifier for details."
msgstr ""
"``Py_DTSF_ALT`` 表示应用 \"替代的\" 格式化规则。 相关细节请参阅 :c:func:`PyOS_snprintf` ``'#'`` "
"定义文档。"

#: ../../c-api/conversion.rst:108
msgid ""
"If *ptype* is non-``NULL``, then the value it points to will be set to one "
"of ``Py_DTST_FINITE``, ``Py_DTST_INFINITE``, or ``Py_DTST_NAN``, signifying "
"that *val* is a finite number, an infinite number, or not a number, "
"respectively."
msgstr ""
"如果 *ptype* 不为 ``NULL``，则它指向的值将被设为 ``Py_DTST_FINITE``, ``Py_DTST_INFINITE`` 或"
" ``Py_DTST_NAN`` 中的一个，分别表示 *val* 是一个有限数字、无限数字或非数字。"

#: ../../c-api/conversion.rst:112
msgid ""
"The return value is a pointer to *buffer* with the converted string or "
"``NULL`` if the conversion failed. The caller is responsible for freeing the"
" returned string by calling :c:func:`PyMem_Free`."
msgstr ""
"返回值是一个指向包含转换后字符串的 *buffer* 的指针，如果转换失败则为 ``NULL``。 调用方要负责调用 "
":c:func:`PyMem_Free` 来释放返回的字符串。"

#: ../../c-api/conversion.rst:121
msgid ""
"Case insensitive comparison of strings. The function works almost "
"identically to :c:func:`strcmp` except that it ignores the case."
msgstr "字符串不区分大小写。该函数几乎与 :c:func:`strcmp` 的工作方式相同，只是它忽略了大小写。"

#: ../../c-api/conversion.rst:127
msgid ""
"Case insensitive comparison of strings. The function works almost "
"identically to :c:func:`strncmp` except that it ignores the case."
msgstr "字符串不区分大小写。该函数几乎与 :c:func:`strncmp` 的工作方式相同，只是它忽略了大小写。"
