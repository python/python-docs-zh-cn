# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2025
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.13\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-07-25 15:00+0000\n"
"PO-Revision-Date: 2025-07-18 19:20+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2025\n"
"Language-Team: Chinese (China) (https://app.transifex.com/python-doc/teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../c-api/hash.rst:4
msgid "PyHash API"
msgstr "PyHash API"

#: ../../c-api/hash.rst:6
msgid ""
"See also the :c:member:`PyTypeObject.tp_hash` member and :ref:`numeric-"
"hash`."
msgstr "另请参阅 :c:member:`PyTypeObject.tp_hash` 成员和 :ref:`numeric-hash`。"

#: ../../c-api/hash.rst:10
msgid "Hash value type: signed integer."
msgstr "哈希值类型：有符号整数。"

#: ../../c-api/hash.rst:16
msgid "Hash value type: unsigned integer."
msgstr "哈希值类型：无符号整数。"

#: ../../c-api/hash.rst:22
msgid ""
"The `Mersenne prime <https://en.wikipedia.org/wiki/Mersenne_prime>`_ ``P = "
"2**n -1``, used for numeric hash scheme."
msgstr ""
"`梅森素数 <https://en.wikipedia.org/wiki/Mersenne_prime>`_ ``P = 2**n "
"-1``，用于数字哈希方案。"

#: ../../c-api/hash.rst:28
msgid "The exponent ``n`` of ``P`` in :c:macro:`PyHASH_MODULUS`."
msgstr "``P`` 在 :c:macro:`PyHASH_MODULUS` 中的 ``n`` 次幂。"

#: ../../c-api/hash.rst:34
msgid "Prime multiplier used in string and various other hashes."
msgstr "质因数被用于字符串和多种其他哈希算法中。"

#: ../../c-api/hash.rst:40
msgid "The hash value returned for a positive infinity."
msgstr "针对正无穷大返回的哈希值。"

#: ../../c-api/hash.rst:46
msgid "The multiplier used for the imaginary part of a complex number."
msgstr "用于复数虚部的乘数。"

#: ../../c-api/hash.rst:52
msgid "Hash function definition used by :c:func:`PyHash_GetFuncDef`."
msgstr ":c:func:`PyHash_GetFuncDef` 使用的哈希函数定义。"

#: ../../c-api/hash.rst:60
msgid "Hash function name (UTF-8 encoded string)."
msgstr "哈希函数名称（UTF-8 编码的字符串）。"

#: ../../c-api/hash.rst:64
msgid "Internal size of the hash value in bits."
msgstr "以比特位表示的哈希值内部大小。"

#: ../../c-api/hash.rst:68
msgid "Size of seed input in bits."
msgstr "以比特位表示的输入种子值大小。"

#: ../../c-api/hash.rst:75
msgid "Get the hash function definition."
msgstr "获取哈希函数定义。"

#: ../../c-api/hash.rst:78
msgid ":pep:`456` \"Secure and interchangeable hash algorithm\"."
msgstr ":pep:`456` \"安全且可互换的哈希算法\"。"

#: ../../c-api/hash.rst:85
msgid ""
"Hash a pointer value: process the pointer value as an integer (cast it to "
"``uintptr_t`` internally). The pointer is not dereferenced."
msgstr "对指针值执行哈希运算：将指针值作为整数来处理（在内部将其转换为 ``uintptr_t`` 类型）。 指针不会被撤销引用。"

#: ../../c-api/hash.rst:88
msgid "The function cannot fail: it cannot return ``-1``."
msgstr "此函数不会失败：它不可能返回 ``-1``。"

#: ../../c-api/hash.rst:94
msgid ""
"Generic hashing function that is meant to be put into a type object's "
"``tp_hash`` slot. Its result only depends on the object's identity."
msgstr "将会被放入类型对象的 ``tp_hash`` 槽位的泛型哈希函数。 其结果值仅取决于对象的标识号。"

#: ../../c-api/hash.rst:99
msgid "In CPython, it is equivalent to :c:func:`Py_HashPointer`."
msgstr "在 CPython 中，它等价于 :c:func:`Py_HashPointer`。"
