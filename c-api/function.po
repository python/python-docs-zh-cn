# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Nyuan Zhang, 2025
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-07-25 16:48+0000\n"
"PO-Revision-Date: 2025-07-18 20:04+0000\n"
"Last-Translator: Nyuan Zhang, 2025\n"
"Language-Team: Chinese (China) (https://app.transifex.com/python-doc/teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../c-api/function.rst:6
msgid "Function Objects"
msgstr "Function 对象"

#: ../../c-api/function.rst:10
msgid "There are a few functions specific to Python functions."
msgstr "有一些特定于 Python 函数的函数。"

#: ../../c-api/function.rst:15
msgid "The C structure used for functions."
msgstr "用于函数的 C 结构体。"

#: ../../c-api/function.rst:22
msgid ""
"This is an instance of :c:type:`PyTypeObject` and represents the Python "
"function type.  It is exposed to Python programmers as "
"``types.FunctionType``."
msgstr ""
"这是一个 :c:type:`PyTypeObject` 实例并表示 Python 函数类型。 它作为 ``types.FunctionType`` 向 "
"Python 程序员公开。"

#: ../../c-api/function.rst:28
msgid ""
"Return true if *o* is a function object (has type "
":c:data:`PyFunction_Type`). The parameter must not be ``NULL``.  This "
"function always succeeds."
msgstr ""
"如果 *o* 是一个函数对象 (类型为 :c:data:`PyFunction_Type`) 则返回真值。 形参必须不为 ``NULL``。 "
"此函数总是会成功执行。"

#: ../../c-api/function.rst:34
msgid ""
"Return a new function object associated with the code object *code*. "
"*globals* must be a dictionary with the global variables accessible to the "
"function."
msgstr "返回与代码对象 *code* 关联的新函数对象。 *globals* 必须是一个字典，该函数可以访问全局变量。"

#: ../../c-api/function.rst:37
msgid ""
"The function's docstring and name are retrieved from the code object. "
":attr:`~function.__module__` is retrieved from *globals*. The argument "
"defaults, annotations and closure are set to ``NULL``. "
":attr:`~function.__qualname__` is set to the same value as the code object's"
" :attr:`~codeobject.co_qualname` field."
msgstr ""
"函数的文档字符串和名称是从代码对象中提取的。 :attr:`~function.__module__` 是从 *globals* 中提取的。 参数 "
"defaults, annotations 和 closure 被设为 ``NULL``。 :attr:`~function.__qualname__`"
" 被设为与代码对象的 :attr:`~codeobject.co_qualname` 字段相同的值。"

#: ../../c-api/function.rst:46
msgid ""
"As :c:func:`PyFunction_New`, but also allows setting the function object's "
":attr:`~function.__qualname__` attribute. *qualname* should be a unicode "
"object or ``NULL``; if ``NULL``, the :attr:`!__qualname__` attribute is set "
"to the same value as the code object's :attr:`~codeobject.co_qualname` "
"field."
msgstr ""
"类似 :c:func:`PyFunction_New`，但还允许设置函数对象的 :attr:`~function.__qualname__` 属性。 "
"*qualname* 应当是一个 unicode 对象或为 ``NULL``；如为 ``NULL``，则 :attr:`!__qualname__` "
"属性会被设为与代码对象的 :attr:`~codeobject.co_qualname` 字段相同的值。"

#: ../../c-api/function.rst:57
msgid "Return the code object associated with the function object *op*."
msgstr "返回与函数对象 *op* 关联的代码对象。"

#: ../../c-api/function.rst:62
msgid ""
"Return the globals dictionary associated with the function object *op*."
msgstr "返回与函数对象*op*相关联的全局字典。"

#: ../../c-api/function.rst:67
msgid ""
"Return a :term:`borrowed reference` to the :attr:`~function.__module__` "
"attribute of the :ref:`function object <user-defined-funcs>` *op*. It can be"
" *NULL*."
msgstr ""
"向 :ref:`函数对象 <user-defined-funcs>` *op* 的 :attr:`~function.__module__` "
"属性返回一个 :term:`borrowed reference`。 该值可以为 *NULL*。"

#: ../../c-api/function.rst:71
msgid ""
"This is normally a :class:`string <str>` containing the module name, but can"
" be set to any other object by Python code."
msgstr "这通常为一个包含模块名称的 :class:`字符串 <str>`，但可以通过 Python 代码设为任何其他对象。"

#: ../../c-api/function.rst:77
msgid ""
"Return the argument default values of the function object *op*. This can be "
"a tuple of arguments or ``NULL``."
msgstr "返回函数对象 *op* 的参数默认值。 这可以是一个参数元组或 ``NULL``。"

#: ../../c-api/function.rst:83
msgid ""
"Set the argument default values for the function object *op*. *defaults* "
"must be ``Py_None`` or a tuple."
msgstr "为函数对象 *op* 设置参数默认值。 *defaults* 必须为 ``Py_None`` 或一个元组。"

#: ../../c-api/function.rst:86 ../../c-api/function.rst:100
#: ../../c-api/function.rst:114
msgid "Raises :exc:`SystemError` and returns ``-1`` on failure."
msgstr "失败时引发 :exc:`SystemError` 异常并返回 ``-1`` 。"

#: ../../c-api/function.rst:91
msgid ""
"Return the closure associated with the function object *op*. This can be "
"``NULL`` or a tuple of cell objects."
msgstr "返回关联到函数对象 *op* 的闭包。 这可以是 ``NULL`` 或 cell 对象的元组。"

#: ../../c-api/function.rst:97
msgid ""
"Set the closure associated with the function object *op*. *closure* must be "
"``Py_None`` or a tuple of cell objects."
msgstr "设置关联到函数对象 *op* 的闭包。 *closure* 必须为 ``Py_None`` 或 cell 对象的元组。"

#: ../../c-api/function.rst:105
msgid ""
"Return the annotations of the function object *op*. This can be a mutable "
"dictionary or ``NULL``."
msgstr "返回函数对象 *op* 的标注。 这可以是一个可变字典或 ``NULL``。"

#: ../../c-api/function.rst:111
msgid ""
"Set the annotations for the function object *op*. *annotations* must be a "
"dictionary or ``Py_None``."
msgstr "设置函数对象 *op* 的标注。 *annotations* 必须为一个字典或 ``Py_None``。"

#: ../../c-api/function.rst:8
msgid "object"
msgstr "object -- 对象"

#: ../../c-api/function.rst:8
msgid "function"
msgstr "function -- 函数"

#: ../../c-api/function.rst:20
msgid "MethodType (in module types)"
msgstr "MethodType (types 模块)"
