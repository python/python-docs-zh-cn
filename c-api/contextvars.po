# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-07-25 16:48+0000\n"
"PO-Revision-Date: 2025-07-18 20:04+0000\n"
"Language-Team: Chinese (China) (https://app.transifex.com/python-doc/teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../c-api/contextvars.rst:6
msgid "Context Variables Objects"
msgstr ""

#: ../../c-api/contextvars.rst:15
msgid ""
"In Python 3.7.1 the signatures of all context variables C APIs were "
"**changed** to use :c:type:`PyObject` pointers instead of "
":c:type:`PyContext`, :c:type:`PyContextVar`, and :c:type:`PyContextToken`, "
"e.g.::"
msgstr ""

#: ../../c-api/contextvars.rst:26
msgid "See :issue:`34762` for more details."
msgstr ""

#: ../../c-api/contextvars.rst:29
msgid ""
"This section details the public C API for the :mod:`contextvars` module."
msgstr ""

#: ../../c-api/contextvars.rst:33
msgid ""
"The C structure used to represent a :class:`contextvars.Context` object."
msgstr ""

#: ../../c-api/contextvars.rst:38
msgid ""
"The C structure used to represent a :class:`contextvars.ContextVar` object."
msgstr ""

#: ../../c-api/contextvars.rst:43
msgid "The C structure used to represent a :class:`contextvars.Token` object."
msgstr ""

#: ../../c-api/contextvars.rst:47
msgid "The type object representing the *context* type."
msgstr ""

#: ../../c-api/contextvars.rst:51
msgid "The type object representing the *context variable* type."
msgstr ""

#: ../../c-api/contextvars.rst:55
msgid "The type object representing the *context variable token* type."
msgstr ""

#: ../../c-api/contextvars.rst:58
msgid "Type-check macros:"
msgstr ""

#: ../../c-api/contextvars.rst:62
msgid ""
"Return true if *o* is of type :c:data:`PyContext_Type`. *o* must not be "
"``NULL``.  This function always succeeds."
msgstr ""

#: ../../c-api/contextvars.rst:67
msgid ""
"Return true if *o* is of type :c:data:`PyContextVar_Type`. *o* must not be "
"``NULL``.  This function always succeeds."
msgstr ""

#: ../../c-api/contextvars.rst:72
msgid ""
"Return true if *o* is of type :c:data:`PyContextToken_Type`. *o* must not be"
" ``NULL``.  This function always succeeds."
msgstr ""

#: ../../c-api/contextvars.rst:76
msgid "Context object management functions:"
msgstr ""

#: ../../c-api/contextvars.rst:80
msgid ""
"Create a new empty context object.  Returns ``NULL`` if an error has "
"occurred."
msgstr ""

#: ../../c-api/contextvars.rst:85
msgid ""
"Create a shallow copy of the passed *ctx* context object. Returns ``NULL`` "
"if an error has occurred."
msgstr ""

#: ../../c-api/contextvars.rst:90
msgid ""
"Create a shallow copy of the current thread context. Returns ``NULL`` if an "
"error has occurred."
msgstr ""

#: ../../c-api/contextvars.rst:95
msgid ""
"Set *ctx* as the current context for the current thread. Returns ``0`` on "
"success, and ``-1`` on error."
msgstr ""

#: ../../c-api/contextvars.rst:100
msgid ""
"Deactivate the *ctx* context and restore the previous context as the current"
" context for the current thread.  Returns ``0`` on success, and ``-1`` on "
"error."
msgstr ""

#: ../../c-api/contextvars.rst:105
msgid "Context variable functions:"
msgstr ""

#: ../../c-api/contextvars.rst:109
msgid ""
"Create a new ``ContextVar`` object.  The *name* parameter is used for "
"introspection and debug purposes.  The *def* parameter specifies a default "
"value for the context variable, or ``NULL`` for no default. If an error has "
"occurred, this function returns ``NULL``."
msgstr ""

#: ../../c-api/contextvars.rst:116
msgid ""
"Get the value of a context variable.  Returns ``-1`` if an error has "
"occurred during lookup, and ``0`` if no error occurred, whether or not a "
"value was found."
msgstr ""

#: ../../c-api/contextvars.rst:120
msgid ""
"If the context variable was found, *value* will be a pointer to it. If the "
"context variable was *not* found, *value* will point to:"
msgstr ""

#: ../../c-api/contextvars.rst:123
msgid "*default_value*, if not ``NULL``;"
msgstr ""

#: ../../c-api/contextvars.rst:124
msgid "the default value of *var*, if not ``NULL``;"
msgstr ""

#: ../../c-api/contextvars.rst:125
msgid "``NULL``"
msgstr ""

#: ../../c-api/contextvars.rst:127
msgid "Except for ``NULL``, the function returns a new reference."
msgstr ""

#: ../../c-api/contextvars.rst:131
msgid ""
"Set the value of *var* to *value* in the current context.  Returns a new "
"token object for this change, or ``NULL`` if an error has occurred."
msgstr ""

#: ../../c-api/contextvars.rst:136
msgid ""
"Reset the state of the *var* context variable to that it was in before "
":c:func:`PyContextVar_Set` that returned the *token* was called. This "
"function returns ``0`` on success and ``-1`` on error."
msgstr ""
