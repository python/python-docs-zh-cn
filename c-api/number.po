# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2025
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.9\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-07-25 19:10+0000\n"
"PO-Revision-Date: 2025-07-18 19:17+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2025\n"
"Language-Team: Chinese (China) (https://app.transifex.com/python-doc/teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../c-api/number.rst:6
msgid "Number Protocol"
msgstr "数字协议"

#: ../../c-api/number.rst:11
msgid ""
"Returns ``1`` if the object *o* provides numeric protocols, and false "
"otherwise. This function always succeeds."
msgstr "如果对象 *o* 提供数字的协议，返回真 ``1``，否则返回假。这个函数不会调用失败。"

#: ../../c-api/number.rst:14
msgid "Returns ``1`` if *o* is an index integer."
msgstr "如果 *o* 是一个索引整数则返回 ``1``。"

#: ../../c-api/number.rst:20
msgid ""
"Returns the result of adding *o1* and *o2*, or ``NULL`` on failure.  This is"
" the equivalent of the Python expression ``o1 + o2``."
msgstr "返回 *o1* 、*o2* 相加的结果，如果失败，返回 ``NULL``。等价于 Python 表达式 ``o1 + o2``。"

#: ../../c-api/number.rst:26
msgid ""
"Returns the result of subtracting *o2* from *o1*, or ``NULL`` on failure.  "
"This is the equivalent of the Python expression ``o1 - o2``."
msgstr "返回 *o1* 减去 *o2* 的结果，如果失败，返回 ``NULL``。等价于 Python 表达式 ``o1 - o2``。"

#: ../../c-api/number.rst:32
msgid ""
"Returns the result of multiplying *o1* and *o2*, or ``NULL`` on failure.  "
"This is the equivalent of the Python expression ``o1 * o2``."
msgstr "返回 *o1*  、 *o2* 相乘的结果，如果失败，返回 ``NULL``。等价于 Python 表达式 ``o1 * o2``。"

#: ../../c-api/number.rst:38
msgid ""
"Returns the result of matrix multiplication on *o1* and *o2*, or ``NULL`` on"
" failure.  This is the equivalent of the Python expression ``o1 @ o2``."
msgstr "返回 *o1* 、*o2* 做矩阵乘法的结果，如果失败，返回 ``NULL``。等价于 Python 表达式 ``o1 @ o2``。"

#: ../../c-api/number.rst:46
msgid ""
"Return the floor of *o1* divided by *o2*, or ``NULL`` on failure.  This is "
"the equivalent of the Python expression ``o1 // o2``."
msgstr "返回 *o1* 除以 *o2* 向下取整的值，失败时返回 ``NULL``。 这等价于 Python 表达式 ``o1 // o2``。"

#: ../../c-api/number.rst:52
msgid ""
"Return a reasonable approximation for the mathematical value of *o1* divided"
" by *o2*, or ``NULL`` on failure.  The return value is \"approximate\" "
"because binary floating point numbers are approximate; it is not possible to"
" represent all real numbers in base two.  This function can return a "
"floating point value when passed two integers.  This is the equivalent of "
"the Python expression ``o1 / o2``."
msgstr ""
"返回 *o1* 除以 *o2* 的数学值的合理近似值，或失败时返回 ``NULL``。 返回的是 \"近似值\" "
"因为二进制浮点数本身就是近似值；不可能以二进制精确表示所有实数。 此函数可以在传入两个整数时返回一个浮点值。 此函数等价于 Python 表达式 "
"``o1 / o2``。"

#: ../../c-api/number.rst:61
msgid ""
"Returns the remainder of dividing *o1* by *o2*, or ``NULL`` on failure.  "
"This is the equivalent of the Python expression ``o1 % o2``."
msgstr "返回 *o1* 除以 *o2* 得到的余数，如果失败，返回 ``NULL``。等价于 Python 表达式 ``o1 % o2``。"

#: ../../c-api/number.rst:69
msgid ""
"See the built-in function :func:`divmod`. Returns ``NULL`` on failure.  This"
" is the equivalent of the Python expression ``divmod(o1, o2)``."
msgstr ""
"参考内置函数 :func:`divmod`。如果失败，返回 ``NULL``。等价于 Python 表达式 ``divmod(o1, o2)``。"

#: ../../c-api/number.rst:77
msgid ""
"See the built-in function :func:`pow`. Returns ``NULL`` on failure.  This is"
" the equivalent of the Python expression ``pow(o1, o2, o3)``, where *o3* is "
"optional. If *o3* is to be ignored, pass :c:data:`Py_None` in its place "
"(passing ``NULL`` for *o3* would cause an illegal memory access)."
msgstr ""
"请参阅内置函数 :func:`pow`。 如果失败，返回 ``NULL``。 等价于 Python 中的表达式 ``pow(o1, o2, "
"o3)``，其中 *o3* 是可选的。如果要忽略 *o3*，则需传入 :c:data:`Py_None` 作为代替（如果传入 ``NULL`` "
"会导致非法内存访问）。"

#: ../../c-api/number.rst:85
msgid ""
"Returns the negation of *o* on success, or ``NULL`` on failure. This is the "
"equivalent of the Python expression ``-o``."
msgstr "返回 *o* 的负值，如果失败，返回 ``NULL`` 。等价于 Python 表达式 ``-o``。"

#: ../../c-api/number.rst:91
msgid ""
"Returns *o* on success, or ``NULL`` on failure.  This is the equivalent of "
"the Python expression ``+o``."
msgstr "返回 *o*，如果失败，返回 ``NULL`` 。等价于 Python 表达式 ``+o``。"

#: ../../c-api/number.rst:99
msgid ""
"Returns the absolute value of *o*, or ``NULL`` on failure.  This is the "
"equivalent of the Python expression ``abs(o)``."
msgstr "返回 *o* 的绝对值，如果失败，返回 ``NULL``。等价于 Python 表达式 ``abs(o)``。"

#: ../../c-api/number.rst:105
msgid ""
"Returns the bitwise negation of *o* on success, or ``NULL`` on failure.  "
"This is the equivalent of the Python expression ``~o``."
msgstr "返回 *o* 的按位取反后的结果，如果失败，返回 ``NULL``。等价于 Python 表达式 ``~o``。"

#: ../../c-api/number.rst:111
msgid ""
"Returns the result of left shifting *o1* by *o2* on success, or ``NULL`` on "
"failure.  This is the equivalent of the Python expression ``o1 << o2``."
msgstr "返回 *o1* 左移 *o2* 个比特后的结果，如果失败，返回 ``NULL``。等价于 Python 表达式 ``o1 << o2``。"

#: ../../c-api/number.rst:117
msgid ""
"Returns the result of right shifting *o1* by *o2* on success, or ``NULL`` on"
" failure.  This is the equivalent of the Python expression ``o1 >> o2``."
msgstr ""
"返回 *o1* 右移 *o2* 个比特后的结果，如果失败，返回  ``NULL`` 。等价于 Python 表达式 ``o1 >> o2``。"

#: ../../c-api/number.rst:123
msgid ""
"Returns the \"bitwise and\" of *o1* and *o2* on success and ``NULL`` on "
"failure. This is the equivalent of the Python expression ``o1 & o2``."
msgstr "返回 *o1* 和 *o2* “按位与”的结果，如果失败，返回 ``NULL`` 。等价于 Python 表达式 ``o1 & o2``。"

#: ../../c-api/number.rst:129
msgid ""
"Returns the \"bitwise exclusive or\" of *o1* by *o2* on success, or ``NULL``"
" on failure.  This is the equivalent of the Python expression ``o1 ^ o2``."
msgstr ""
"返回 *o1* 和 *o2* “按位异或”的结果，如果失败，返回 ``NULL`` 。等价于 Python 表达式 ``o1 ^ o2``。"

#: ../../c-api/number.rst:135
msgid ""
"Returns the \"bitwise or\" of *o1* and *o2* on success, or ``NULL`` on "
"failure. This is the equivalent of the Python expression ``o1 | o2``."
msgstr "返回 *o1* 和 *o2* “按位或”的结果，如果失败，返回 ``NULL`` 。等价于 Python 表达式 ``o1 | o2``。"

#: ../../c-api/number.rst:141
msgid ""
"Returns the result of adding *o1* and *o2*, or ``NULL`` on failure.  The "
"operation is done *in-place* when *o1* supports it.  This is the equivalent "
"of the Python statement ``o1 += o2``."
msgstr ""
"返回 *o1* 、*o2* 相加的结果，如果失败，返回 ``NULL``。当 *o1* 支持时，这个运算直接使用它储存结果。 等价于 Python 语句"
" ``o1 += o2``。"

#: ../../c-api/number.rst:148
msgid ""
"Returns the result of subtracting *o2* from *o1*, or ``NULL`` on failure.  "
"The operation is done *in-place* when *o1* supports it.  This is the "
"equivalent of the Python statement ``o1 -= o2``."
msgstr ""
"返回 *o1* 、*o2* 相减的结果，如果失败，返回 ``NULL`` 。当 *o1* 支持时，这个运算直接使用它储存结果。 等价于 Python "
"语句 ``o1 -= o2``。"

#: ../../c-api/number.rst:155
msgid ""
"Returns the result of multiplying *o1* and *o2*, or ``NULL`` on failure.  "
"The operation is done *in-place* when *o1* supports it.  This is the "
"equivalent of the Python statement ``o1 *= o2``."
msgstr ""
"返回 *o1* 、*o2*相乘的结果，如果失败，返回 ``NULL`` 。当 *o1* 支持时，这个运算直接使用它储存结果。 等价于 Python 语句"
" ``o1 *= o2``。"

#: ../../c-api/number.rst:162
msgid ""
"Returns the result of matrix multiplication on *o1* and *o2*, or ``NULL`` on"
" failure.  The operation is done *in-place* when *o1* supports it.  This is "
"the equivalent of the Python statement ``o1 @= o2``."
msgstr ""
"返回 *o1* 、*o2* 做矩阵乘法后的结果，如果失败，返回 ``NULL`` 。当 *o1* 支持时，这个运算直接使用它储存结果。 等价于 "
"Python 语句 ``o1 @= o2``。"

#: ../../c-api/number.rst:171
msgid ""
"Returns the mathematical floor of dividing *o1* by *o2*, or ``NULL`` on "
"failure. The operation is done *in-place* when *o1* supports it.  This is "
"the equivalent of the Python statement ``o1 //= o2``."
msgstr ""
"返回 *o1* 除以 *o2* 后向下取整的结果，如果失败，返回 ``NULL``。当 *o1* 支持时，这个运算直接使用它储存结果。 等价于 "
"Python 语句 ``o1 //= o2``。"

#: ../../c-api/number.rst:178
msgid ""
"Return a reasonable approximation for the mathematical value of *o1* divided"
" by *o2*, or ``NULL`` on failure.  The return value is \"approximate\" "
"because binary floating point numbers are approximate; it is not possible to"
" represent all real numbers in base two.  This function can return a "
"floating point value when passed two integers.  The operation is done *in-"
"place* when *o1* supports it. This is the equivalent of the Python statement"
" ``o1 /= o2``."
msgstr ""
"返回 *o1* 除以 *o2* 的数学值的合理近似值，或失败时返回 ``NULL``。 返回的是 \"近似值\" "
"因为二进制浮点数本身就是近似值；不可能以二进制精确表示所有实数。 此函数可以在传入两个整数时返回一个浮点数。 此运算在 *o1* 支持的时候会 *原地*"
" 执行。此函数等价于 Python 语句 ``o1 /= o2``。"

#: ../../c-api/number.rst:188
msgid ""
"Returns the remainder of dividing *o1* by *o2*, or ``NULL`` on failure.  The"
" operation is done *in-place* when *o1* supports it.  This is the equivalent"
" of the Python statement ``o1 %= o2``."
msgstr ""
"返回 *o1* 除以 *o2* 得到的余数，如果失败，返回 ``NULL``。当 *o1* 支持时，这个运算直接使用它储存结果。 等价于 Python "
"语句 ``o1 %= o2``。"

#: ../../c-api/number.rst:197
msgid ""
"See the built-in function :func:`pow`. Returns ``NULL`` on failure.  The "
"operation is done *in-place* when *o1* supports it.  This is the equivalent "
"of the Python statement ``o1 **= o2`` when o3 is :c:data:`Py_None`, or an "
"in-place variant of ``pow(o1, o2, o3)`` otherwise. If *o3* is to be ignored,"
" pass :c:data:`Py_None` in its place (passing ``NULL`` for *o3* would cause "
"an illegal memory access)."
msgstr ""
"请参阅内置函数 :func:`pow`。 如果失败，返回 ``NULL``。当 *o1* 支持时，这个运算直接使用它储存结果。当 *o3* 是 "
":c:data:`Py_None` 时，等价于 Python 语句  ``o1 **= o2``；否则等价于在原来位置储存结果的 ``pow(o1, "
"o2, o3)`` 。如果要忽略 *o3*，则需传入 :c:data:`Py_None`  （传入 ``NULL`` 会导致非法内存访问）。"

#: ../../c-api/number.rst:206
msgid ""
"Returns the result of left shifting *o1* by *o2* on success, or ``NULL`` on "
"failure.  The operation is done *in-place* when *o1* supports it.  This is "
"the equivalent of the Python statement ``o1 <<= o2``."
msgstr ""
"返回 *o1* 左移 *o2* 个比特后的结果，如果失败，返回 ``NULL``。当 *o1* 支持时，这个运算直接使用它储存结果。 等价于 "
"Python 语句 ``o1 <<= o2``。"

#: ../../c-api/number.rst:213
msgid ""
"Returns the result of right shifting *o1* by *o2* on success, or ``NULL`` on"
" failure.  The operation is done *in-place* when *o1* supports it.  This is "
"the equivalent of the Python statement ``o1 >>= o2``."
msgstr ""
"返回 *o1* 右移 *o2* 个比特后的结果，如果失败，返回 ``NULL``。当 *o1* 支持时，这个运算直接使用它储存结果。 等价于 "
"Python 语句 ``o1 >>= o2``。"

#: ../../c-api/number.rst:220
msgid ""
"Returns the \"bitwise and\" of *o1* and *o2* on success and ``NULL`` on "
"failure. The operation is done *in-place* when *o1* supports it.  This is "
"the equivalent of the Python statement ``o1 &= o2``."
msgstr ""
"成功时返回 *o1* 和 *o2* \"按位与\" 的结果，失败时返回 ``NULL``。 在 *o1* 支持的前提下该操作将 *原地* 执行。 等价与"
" Python 语句 ``o1 &= o2``。"

#: ../../c-api/number.rst:227
msgid ""
"Returns the \"bitwise exclusive or\" of *o1* by *o2* on success, or ``NULL``"
" on failure.  The operation is done *in-place* when *o1* supports it.  This "
"is the equivalent of the Python statement ``o1 ^= o2``."
msgstr ""
"成功时返回 *o1* 和 *o2* \"按位异或的结果，失败时返回 ``NULL``。 在 *o1* 支持的前提下该操作将 *原地* 执行。 等价与 "
"Python 语句 ``o1 ^= o2``。"

#: ../../c-api/number.rst:234
msgid ""
"Returns the \"bitwise or\" of *o1* and *o2* on success, or ``NULL`` on "
"failure.  The operation is done *in-place* when *o1* supports it.  This is "
"the equivalent of the Python statement ``o1 |= o2``."
msgstr ""
"成功时返回 *o1* 和 *o2* \"按位或\" 的结果，失败时返回 ``NULL``。 在 *o1* 支持的前提下该操作将 *原地* 执行。 等价于"
" Python 语句 ``o1 |= o2``。"

#: ../../c-api/number.rst:243
msgid ""
"Returns the *o* converted to an integer object on success, or ``NULL`` on "
"failure.  This is the equivalent of the Python expression ``int(o)``."
msgstr "成功时返回 *o* 转换为整数对象后的结果，失败时返回 ``NULL``。 等价于 Python 表达式 ``int(o)``。"

#: ../../c-api/number.rst:251
msgid ""
"Returns the *o* converted to a float object on success, or ``NULL`` on "
"failure. This is the equivalent of the Python expression ``float(o)``."
msgstr "成功时返回 *o* 转换为浮点对象后的结果，失败时返回 ``NULL``。 等价于 Python 表达式 ``float(o)``。"

#: ../../c-api/number.rst:257
msgid ""
"Returns the *o* converted to a Python int on success or ``NULL`` with a "
":exc:`TypeError` exception raised on failure."
msgstr ""
"成功时返回 *o* 转换为 Python int 类型后的结果，失败时返回 ``NULL`` 并引发 :exc:`TypeError` 异常。"

#: ../../c-api/number.rst:263
msgid ""
"Returns the integer *n* converted to base *base* as a string.  The *base* "
"argument must be one of 2, 8, 10, or 16.  For base 2, 8, or 16, the returned"
" string is prefixed with a base marker of ``'0b'``, ``'0o'``, or ``'0x'``, "
"respectively.  If *n* is not a Python int, it is converted with "
":c:func:`PyNumber_Index` first."
msgstr ""
"返回整数 *n* 转换成以 *base* 为基数的字符串后的结果。这个 *base* 参数必须是 2，8，10 或者 16 。对于基数 2，8，或 16"
" ，返回的字符串将分别加上基数标识 ``'0b'``, ``'0o'``, or ``'0x'``。如果 *n* 不是 Python 中的整数 "
"*int* 类型，就先通过 :c:func:`PyNumber_Index` 将它转换成整数类型。"

#: ../../c-api/number.rst:272
msgid ""
"Returns *o* converted to a :c:type:`Py_ssize_t` value if *o* can be "
"interpreted as an integer.  If the call fails, an exception is raised and "
"``-1`` is returned."
msgstr ""
"如果 *o* 可以被解读为一个整数则返回 *o* 转换成的 :c:type:`Py_ssize_t` 值。 如果调用失败，则会引发一个异常并返回 "
"``-1``。"

#: ../../c-api/number.rst:275
msgid ""
"If *o* can be converted to a Python int but the attempt to convert to a "
":c:type:`Py_ssize_t` value would raise an :exc:`OverflowError`, then the "
"*exc* argument is the type of exception that will be raised (usually "
":exc:`IndexError` or :exc:`OverflowError`).  If *exc* is ``NULL``, then the "
"exception is cleared and the value is clipped to ``PY_SSIZE_T_MIN`` for a "
"negative integer or ``PY_SSIZE_T_MAX`` for a positive integer."
msgstr ""
"如果 *o* 可以被转换为 Python 的 int 值但尝试转换为 :c:type:`Py_ssize_t` 值则会引发 "
":exc:`OverflowError`，则 *exc* 参数将为所引发的异常类型 (通常为 :exc:`IndexError` 或 "
":exc:`OverflowError`)。 如果 *exc* 为 ``NULL``，则异常会被清除并且值会在为负整数时被裁剪为 "
"``PY_SSIZE_T_MIN`` 而在为正整数时被裁剪为 ``PY_SSIZE_T_MAX``。"

#: ../../c-api/number.rst:285
msgid ""
"Returns ``1`` if *o* is an index integer (has the ``nb_index`` slot of the "
"``tp_as_number`` structure filled in), and ``0`` otherwise. This function "
"always succeeds."
msgstr ""
"返回 ``1`` 如果 *o* 是一个索引整数（将 ``nb_index`` 槽位填充到 ``tp_as_number`` "
"结构体），或者在其他情况下返回 ``0``。 此函数总是会成功执行。"
