# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Rafael Fontenelle <rffontenelle@gmail.com>, 2025
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-07-25 18:10+0000\n"
"PO-Revision-Date: 2025-07-18 20:08+0000\n"
"Last-Translator: Rafael Fontenelle <rffontenelle@gmail.com>, 2025\n"
"Language-Team: Chinese (China) (https://app.transifex.com/python-doc/teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../c-api/mapping.rst:6
msgid "Mapping Protocol"
msgstr "映射协议"

#: ../../c-api/mapping.rst:8
msgid ""
"See also :c:func:`PyObject_GetItem`, :c:func:`PyObject_SetItem` and "
":c:func:`PyObject_DelItem`."
msgstr ""
"参见 :c:func:`PyObject_GetItem`、:c:func:`PyObject_SetItem` 与 "
":c:func:`PyObject_DelItem`。"

#: ../../c-api/mapping.rst:14
msgid ""
"Return ``1`` if the object provides the mapping protocol or supports "
"slicing, and ``0`` otherwise.  Note that it returns ``1`` for Python classes"
" with a :meth:`__getitem__` method, since in general it is impossible to "
"determine what type of keys the class supports. This function always "
"succeeds."
msgstr ""
"如果对象提供了映射协议或是支持切片则返回 ``1``，否则返回 ``0``。 请注意它将为具有 :meth:`__getitem__` 方法的 "
"Python 类返回 ``1``，因为在通常情况下无法确定该类所支持的键类型。 此函数总是会成功执行。"

#: ../../c-api/mapping.rst:25
msgid ""
"Returns the number of keys in object *o* on success, and ``-1`` on failure. "
"This is equivalent to the Python expression ``len(o)``."
msgstr "成功时返回对象 *o* 中键的数量，失败时返回 ``-1``。 这相当于 Python 表达式 ``len(o)``。"

#: ../../c-api/mapping.rst:31
msgid ""
"Return element of *o* corresponding to the string *key* or ``NULL`` on "
"failure. This is the equivalent of the Python expression ``o[key]``. See "
"also :c:func:`PyObject_GetItem`."
msgstr ""
"返回 *o* 中对应于字符串 *key* 的元素，或者失败时返回 ``NULL``。 这相当于 Python 表达式 ``o[key]``。 另请参见 "
"also :c:func:`PyObject_GetItem`。"

#: ../../c-api/mapping.rst:38
msgid ""
"Map the string *key* to the value *v* in object *o*.  Returns ``-1`` on "
"failure.  This is the equivalent of the Python statement ``o[key] = v``. See"
" also :c:func:`PyObject_SetItem`.  This function *does not* steal a "
"reference to *v*."
msgstr ""
"在对象 *o* 中将字符串 *key* 映射到值 *v*。 失败时返回 ``-1``。 这相当于 Python 语句 ``o[key] = v``。 "
"另请参见 :c:func:`PyObject_SetItem`。 此函数 *不会* 增加对 *v* 的引用。"

#: ../../c-api/mapping.rst:46
msgid ""
"Remove the mapping for the object *key* from the object *o*.  Return ``-1`` "
"on failure.  This is equivalent to the Python statement ``del o[key]``. This"
" is an alias of :c:func:`PyObject_DelItem`."
msgstr ""
"从对象 *o* 中移除对象 *key* 的映射。 失败时返回 ``-1``。 这相当于 Python 语句 ``del o[key]``。 这是 "
":c:func:`PyObject_DelItem` 的一个别名。"

#: ../../c-api/mapping.rst:53
msgid ""
"Remove the mapping for the string *key* from the object *o*.  Return ``-1`` "
"on failure.  This is equivalent to the Python statement ``del o[key]``."
msgstr ""
"从对象 *o* 中移除字符串 *key* 的映射。 失败时返回 ``-1``。 这相当于 Python 语句 ``del o[key]``。"

#: ../../c-api/mapping.rst:59 ../../c-api/mapping.rst:70
msgid ""
"Return ``1`` if the mapping object has the key *key* and ``0`` otherwise. "
"This is equivalent to the Python expression ``key in o``. This function "
"always succeeds."
msgstr ""
"如果映射对象具有键 *key* 则返回 ``1``，否则返回 ``0``。 这相当于 Python 表达式 ``key in o``。 "
"此函数总是会成功执行。"

#: ../../c-api/mapping.rst:63
msgid ""
"Note that exceptions which occur while calling the :meth:`__getitem__` "
"method will get suppressed. To get error reporting use "
":c:func:`PyObject_GetItem()` instead."
msgstr ""
"请注意在调用 :meth:`__getitem__` 方法期间发生的异常将会被屏蔽。 要获取错误报告请改用 "
":c:func:`PyObject_GetItem()`。"

#: ../../c-api/mapping.rst:74
msgid ""
"Note that exceptions which occur while calling the :meth:`__getitem__` "
"method and creating a temporary string object will get suppressed. To get "
"error reporting use :c:func:`PyMapping_GetItemString()` instead."
msgstr ""
"请注意在调用 :meth:`__getitem__` 方法期间发生的异常将会被屏蔽。 要获取错误报告请改用 "
":c:func:`PyMapping_GetItemString()`。"

#: ../../c-api/mapping.rst:81
msgid ""
"On success, return a list of the keys in object *o*.  On failure, return "
"``NULL``."
msgstr "成功时，返回对象 *o* 中的键的列表。 失败时，返回 ``NULL``。"

#: ../../c-api/mapping.rst:84 ../../c-api/mapping.rst:93
#: ../../c-api/mapping.rst:102
msgid "Previously, the function returned a list or a tuple."
msgstr "在之前版本中，此函数返回一个列表或元组。"

#: ../../c-api/mapping.rst:90
msgid ""
"On success, return a list of the values in object *o*.  On failure, return "
"``NULL``."
msgstr "成功时，返回对象 *o* 中的值的列表。 失败时，返回 ``NULL``。"

#: ../../c-api/mapping.rst:99
msgid ""
"On success, return a list of the items in object *o*, where each item is a "
"tuple containing a key-value pair.  On failure, return ``NULL``."
msgstr "成功时，返回对象 *o* 中条目的列表，其中每个条目是一个包含键值对的元组。 失败时，返回 ``NULL``。"
