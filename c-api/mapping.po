# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2025, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-07-25 16:48+0000\n"
"PO-Revision-Date: 2025-07-18 20:04+0000\n"
"Language-Team: Chinese (China) (https://app.transifex.com/python-doc/teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../c-api/mapping.rst:6
msgid "Mapping Protocol"
msgstr ""

#: ../../c-api/mapping.rst:8
msgid ""
"See also :c:func:`PyObject_GetItem`, :c:func:`PyObject_SetItem` and "
":c:func:`PyObject_DelItem`."
msgstr ""

#: ../../c-api/mapping.rst:14
msgid ""
"Return ``1`` if the object provides the mapping protocol or supports "
"slicing, and ``0`` otherwise.  Note that it returns ``1`` for Python classes"
" with a :meth:`~object.__getitem__` method, since in general it is "
"impossible to determine what type of keys the class supports. This function "
"always succeeds."
msgstr ""

#: ../../c-api/mapping.rst:25
msgid ""
"Returns the number of keys in object *o* on success, and ``-1`` on failure. "
"This is equivalent to the Python expression ``len(o)``."
msgstr ""

#: ../../c-api/mapping.rst:31
msgid ""
"This is the same as :c:func:`PyObject_GetItem`, but *key* is specified as a "
":c:expr:`const char*` UTF-8 encoded bytes string, rather than a "
":c:expr:`PyObject*`."
msgstr ""

#: ../../c-api/mapping.rst:38
msgid ""
"This is the same as :c:func:`PyObject_SetItem`, but *key* is specified as a "
":c:expr:`const char*` UTF-8 encoded bytes string, rather than a "
":c:expr:`PyObject*`."
msgstr ""

#: ../../c-api/mapping.rst:45
msgid "This is an alias of :c:func:`PyObject_DelItem`."
msgstr ""

#: ../../c-api/mapping.rst:50
msgid ""
"This is the same as :c:func:`PyObject_DelItem`, but *key* is specified as a "
":c:expr:`const char*` UTF-8 encoded bytes string, rather than a "
":c:expr:`PyObject*`."
msgstr ""

#: ../../c-api/mapping.rst:57
msgid ""
"Return ``1`` if the mapping object has the key *key* and ``0`` otherwise. "
"This is equivalent to the Python expression ``key in o``. This function "
"always succeeds."
msgstr ""

#: ../../c-api/mapping.rst:63
msgid ""
"Exceptions which occur when this calls :meth:`~object.__getitem__` method "
"are silently ignored. For proper error handling, use "
":c:func:`PyObject_GetItem()` instead."
msgstr ""

#: ../../c-api/mapping.rst:70
msgid ""
"This is the same as :c:func:`PyMapping_HasKey`, but *key* is specified as a "
":c:expr:`const char*` UTF-8 encoded bytes string, rather than a "
":c:expr:`PyObject*`."
msgstr ""

#: ../../c-api/mapping.rst:76
msgid ""
"Exceptions that occur when this calls :meth:`~object.__getitem__` method or "
"while creating the temporary :class:`str` object are silently ignored. For "
"proper error handling, use :c:func:`PyMapping_GetItemString` instead."
msgstr ""

#: ../../c-api/mapping.rst:84
msgid ""
"On success, return a list of the keys in object *o*.  On failure, return "
"``NULL``."
msgstr ""

#: ../../c-api/mapping.rst:87 ../../c-api/mapping.rst:96
#: ../../c-api/mapping.rst:105
msgid "Previously, the function returned a list or a tuple."
msgstr ""

#: ../../c-api/mapping.rst:93
msgid ""
"On success, return a list of the values in object *o*.  On failure, return "
"``NULL``."
msgstr ""

#: ../../c-api/mapping.rst:102
msgid ""
"On success, return a list of the items in object *o*, where each item is a "
"tuple containing a key-value pair.  On failure, return ``NULL``."
msgstr ""

#: ../../c-api/mapping.rst:23
msgid "built-in function"
msgstr ""

#: ../../c-api/mapping.rst:23
msgid "len"
msgstr ""
